%..string = type {i8*, i64} ; Basic_string
%..rawptr = type i8* ; Basic_rawptr
%..complex64 = type {float, float} ; Basic_complex64
%..complex128 = type {double, double} ; Basic_complex128
%..quaternion128 = type {float, float, float, float} ; Basic_quaternion128
%..quaternion256 = type {double, double, double, double} ; Basic_quaternion256
%..any = type {%..rawptr, %Type_Info*} ; Basic_any
declare void @llvm.dbg.declare(metadata, metadata, metadata) nounwind readnone 
%Type_Info_Record = type {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}, {i1*, i64, i64}, i1, i1, i1}
%Type_Info = type {[0 x <8 x i8>], i64, i64, [120 x i8], i64}
%Type_Info.Named = type {i64, i64, %..string, %Type_Info*}
%Type_Info.Integer = type {i64, i64, i1}
%Type_Info.Float = type {i64, i64}
%Type_Info.Complex = type {i64, i64}
%Type_Info.Quaternion = type {i64, i64}
%Type_Info.String = type {i64, i64}
%Type_Info.Boolean = type {i64, i64}
%Type_Info.Any = type {i64, i64}
%Type_Info.Pointer = type {i64, i64, %Type_Info*}
%Type_Info.Atomic = type {i64, i64, %Type_Info*}
%Type_Info.Procedure = type {i64, i64, %Type_Info*, %Type_Info*, i1, i64}
%Type_Info.Array = type {i64, i64, %Type_Info*, i64, i64}
%Type_Info.Dynamic_Array = type {i64, i64, %Type_Info*, i64}
%Type_Info.Slice = type {i64, i64, %Type_Info*, i64}
%Type_Info.Vector = type {i64, i64, %Type_Info*, i64, i64}
%Type_Info.Tuple = type {i64, i64, %Type_Info_Record}
%Type_Info.Struct = type {i64, i64, %Type_Info_Record}
%Type_Info.Raw_Union = type {i64, i64, %Type_Info_Record}
%Type_Info.Union = type {i64, i64, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {%..string*, i64, i64}, {%Type_Info**, i64, i64}}
%Type_Info.Enum = type {i64, i64, %Type_Info*, {%..string*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}}
%Type_Info.Map = type {i64, i64, %Type_Info*, %Type_Info*, %Type_Info*, i64}
%Allocator = type {%..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr}
%Context = type {i64, %Allocator, %..rawptr, i64}
%__Map_Key = type {i64, %..string}
%__Map_Find_Result = type {i64, i64, i64}
%__Map_Entry_Header = type {%__Map_Key, i64}
%__Map_Header = type {%raw-6.Dynamic_Map*, i1, i64, i64, i64, i64}
%fmt-4.String_Buffer = type {{i8*, i64, i64,%Allocator}, {i8*, i64, i64}, i1}
%fmt-4.Fmt_Info = type {%..any, i64, i64, %fmt-4.String_Buffer*, i1, i1, i1, i1, i1, i1, i1, i1, i1}
%utf8-5.Accept_Range = type {i8, i8}
%raw-6.Slice = type {%..rawptr, i64, i64}
%raw-6.Dynamic_Array = type {%..rawptr, i64, i64, %Allocator}
%raw-6.Dynamic_Map = type {{i64*, i64, i64,%Allocator}, %raw-6.Dynamic_Array}
%imgui-9.GuiTextEditCallbackData = type {i32, i32, %..rawptr, i1, i16, i32, i8*, i32, i32, i1, i32, i32, i32}
%imgui-9.DrawCmd = type {i32, %imgui-9.Vec4, %..rawptr, void (%imgui-9.DrawList*, %imgui-9.DrawCmd*)*, %..rawptr}
%imgui-9.Vec2 = type {float, float}
%imgui-9.Vec4 = type {float, float, float, float}
%imgui-9.DrawVert = type {%imgui-9.Vec2, %imgui-9.Vec2, i32}
%imgui-9.DrawData = type {i1, %imgui-9.DrawList**, i32, i32, i32}
%imgui-9.FontAtlas = type {}
%imgui-9.DrawList = type {}
%imgui-9.GuiStyle = type {float, %imgui-9.Vec2, %imgui-9.Vec2, float, i32, float, %imgui-9.Vec2, float, %imgui-9.Vec2, %imgui-9.Vec2, %imgui-9.Vec2, float, float, float, float, float, float, %imgui-9.Vec2, %imgui-9.Vec2, i1, i1, float, [43 x %imgui-9.Vec4]}
%imgui-9.GuiIO = type {%imgui-9.Vec2, float, float, i8*, i8*, float, float, float, [19 x i32], float, float, %..rawptr, %imgui-9.FontAtlas*, float, i1, %imgui-9.Vec2, %imgui-9.Vec2, %imgui-9.Vec2, i1, i1, i1, i1, void (%imgui-9.DrawData*)*, i8* ()*, void (i8*)*, %..rawptr (i64)*, void (%..rawptr)*, void (i32, i32)*, %..rawptr, %imgui-9.Vec2, [5 x i1], float, i1, i1, i1, i1, i1, [512 x i1], [17 x i16], i1, i1, i1, float, i32, i32, i32, i32, %imgui-9.Vec2, %imgui-9.Vec2, [5 x i1], [5 x %imgui-9.Vec2], [5 x float], [5 x i1], [5 x i1], [5 x i1], [5 x float], [5 x float], [5 x float], [512 x float], [512 x float]}
%gl-10.Program = type {{{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}, i32, i32, i32}
%gl-10.OpenGLVars_t = type {{%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}, %..string, %..string, %..string, %..string, %..rawptr, i32, i32, i32, i32, i32, i32, i32}
%gl-10.DebugFunctionLoadStatus = type {%..string, i64, %Type_Info*, i1}
%gl-10.DebugInfo_t = type {{%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}, i64, i32, i32}
%jimgui-12.State_t = type {%gl-10.Program, i32, i32, i32, i32, i32}
%xinput-13.BatteryInformation = type {i8, i8}
%xinput-13.Capabilities = type {i8, i8, i16, %xinput-13.GamepadState, %xinput-13.VibrationState}
%xinput-13.State = type {i32, %xinput-13.GamepadState}
%xinput-13.GamepadState = type {i16, i8, i8, i16, i16, i16, i16}
%xinput-13.VibrationState = type {i16, i16}
%xinput-13.KeyStroke = type {i16, i16, i16, i8, i8}
%xinput-13.DebugFunctionLoadStatus = type {%..string, i64, %Type_Info*, i1}
%xinput-13.DebugInfo_t = type {{%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}, i64, i32, i32}
%render-14.Camera_t = type {{[0 x <8 x i8>], [3 x float]}, float, float, float, float}
%render-14.DrawRegion = type {i32, i32, i32, i32}
%render-14.VirtualScreen_t = type {{[0 x <8 x i8>], [2 x float]}, float}
%time-15.Data_t = type {double, double, double, double, i64, i64, i64}
%catalog-16.Catalog = type {{{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}, {%..string*, i64, i64,%Allocator}, %..string, %..string, i64, i64, i64, i64}
%catalog-16.DebugInfo_t = type {{%..string*, i64, i64,%Allocator}, {%catalog-16.Catalog**, i64, i64,%Allocator}, i64}
%console-17.LogData = type {{{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}, {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}, %..string, i64, [256 x i8], i1}
%console-17.LogItem = type {%..string, %windows-35.Systemtime}
%entity-18.Entity = type {[0 x <8 x i8>], i64, %..string, [96 x i8], i64}
%entity-18.Entity.Tower = type {i64, %..string, %entity-18.Tower}
%entity-18.Entity.Enemy = type {i64, %..string, %entity-18.Transform_t}
%entity-18.Transform_t = type {{[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}, float}
%entity-18.Tower = type {[0 x <8 x i8>], %entity-18.Transform_t, i64, float, %asset-25.Asset.Texture*, [8 x i8], i64}
%entity-18.Tower.Basic = type {%entity-18.Transform_t, i64, float, %asset-25.Asset.Texture*}
%entity-18.Tower.Slow = type {%entity-18.Transform_t, i64, float, %asset-25.Asset.Texture*, float}
%entity-18.ListItem = type {%entity-18.Entity*, %entity-18.ListItem*}
%entity-18.List = type {%entity-18.ListItem*, %entity-18.ListItem*, i64}
%input-19.Binding = type {%..string, i32, i16}
%input-19.Input_t = type {[256 x i64], [256 x i64], {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}, {[0 x <8 x i8>], [2 x float]}, [4 x %xinput-13.GamepadState], [4 x %xinput-13.GamepadState], i1}
%engine-20.Context_t = type {%engine-20.Setting_t*, %input-19.Input_t*, %render-14.VirtualScreen_t*, %platform_win32-28.Data_t*, %jimgui-12.State_t*, %time-15.Data_t*, %renderer-24.State_t*, {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}, %render-14.DrawRegion, i1}
%engine-20.Setting_t = type {i1, i1, i1}
%game-21.Context_t = type {%entity-18.List*, %jmap-22.Data_t*, %renderer-24.Camera_t*}
%jmap-22.Tile = type {[0 x <8 x i8>], {[0 x <8 x i8>], [3 x float]}, [0 x i8], i64}
%jmap-22.Tile.Build = type {{[0 x <8 x i8>], [3 x float]}}
%jmap-22.Tile.Walk = type {{[0 x <8 x i8>], [3 x float]}}
%jmap-22.Data_t = type {{{%jmap-22.Tile*, i64, i64}*, i64, i64}, i64, i64, %asset-25.Asset.Texture*, %asset-25.Asset.Texture*}
%render_queue-23.QueueNode = type {%renderer-24.Command, %render_queue-23.QueueNode*}
%render_queue-23.Queue = type {i64, %render_queue-23.QueueNode*, %render_queue-23.QueueNode*}
%renderer-24.Command = type {[0 x <8 x i8>], {[0 x <8 x i8>], [3 x float]}, float, {[0 x <8 x i8>], [3 x float]}, [8 x i8], i64}
%renderer-24.Command.Bitmap = type {{[0 x <8 x i8>], [3 x float]}, float, {[0 x <8 x i8>], [3 x float]}, %asset-25.Asset.Texture*}
%renderer-24.Command.Rect = type {{[0 x <8 x i8>], [3 x float]}, float, {[0 x <8 x i8>], [3 x float]}}
%renderer-24.Command.Circle = type {{[0 x <8 x i8>], [3 x float]}, float, {[0 x <8 x i8>], [3 x float]}, float}
%renderer-24.State_t = type {%gl-10.Program, %gl-10.Program, i32, i32, i32}
%renderer-24.Camera_t = type {{[0 x <8 x i8>], [3 x float]}, float, float, float, float}
%asset-25.FileInfo_t = type {%..string, %..string, %..string, i64}
%asset-25.Asset = type {[0 x <8 x i8>], %asset-25.FileInfo_t, i1, [359 x i8], i64}
%asset-25.Asset.Texture = type {%asset-25.FileInfo_t, i1, i32, i32, i32, i32, i8*}
%asset-25.Asset.Shader = type {%asset-25.FileInfo_t, i1, i32, i32, %..string, {i8*, i64, i64}}
%asset-25.Asset.Sound = type {%asset-25.FileInfo_t, i1}
%asset-25.Asset.ShaderProgram = type {%asset-25.FileInfo_t, i1, %gl-10.Program, %asset-25.Asset.Shader*, %asset-25.Asset.Shader*, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}}
%jwgl-26.Attrib = type {i32, i32}
%jwgl-26.TryGetExtensionList = type {{{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}}
%platform_win32-28.Data_t = type {%gl-10.OpenGLVars_t, %..rawptr, %..rawptr, %..rawptr, %windows-35.Window_Placement}
%strconv-34.Decimal_Slice = type {{i8*, i64, i64}, i64, i64, i1}
%strconv-34.Float_Info = type {i64, i64, i64}
%windows-35.Point = type {i32, i32}
%windows-35.WndClassExA = type {i32, i32, i64 (%..rawptr, i32, i64, i64)*, i32, i32, %..rawptr, %..rawptr, %..rawptr, %..rawptr, i8*, i8*, %..rawptr}
%windows-35.Msg = type {%..rawptr, i32, i64, i64, i32, %windows-35.Point}
%windows-35.Rect = type {i32, i32, i32, i32}
%windows-35.Filetime = type {i32, i32}
%windows-35.Systemtime = type {i16, i16, i16, i16, i16, i16, i16, i16}
%windows-35.Security_Attributes = type {i32, %..rawptr, i32}
%windows-35.Monitor_Info = type {i32, %windows-35.Rect, %windows-35.Rect, i32}
%windows-35.Window_Placement = type {i32, i32, i32, %windows-35.Point, %windows-35.Point, %windows-35.Rect}
%windows-35.PIXELFORMATDESCRIPTOR = type {i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32}
%jwin32-38.FindData = type {i32, %windows-35.Filetime, %windows-35.Filetime, %windows-35.Filetime, i32, i32, i32, i32, [260 x i8], [14 x i8]}
%decimal-42.Decimal = type {i64, i64, [384 x i8], i1, i1}

declare ccc void @llvm.assume(i1) 
declare ccc void @llvm.debugtrap() 
declare ccc void @llvm.trap() 
declare ccc i64 @llvm.readcyclecounter() 
declare ccc float @llvm.sqrt.f32(float) 
declare ccc double @llvm.sqrt.f64(double) 
declare ccc float @llvm.sin.f32(float) 
declare ccc float @llvm.cos.f32(float) 
declare ccc %imgui-9.GuiIO* @igGetIO() 
declare ccc %imgui-9.GuiStyle* @igGetStyle() 
declare ccc %imgui-9.DrawData* @igGetDrawData() 
declare ccc void @igNewFrame() 
declare ccc void @igRender() 
declare ccc void @igShowTestWindow(i1*) 
declare ccc void @igEnd() 
declare ccc void @igEndChild() 
declare ccc void @igGetWindowSize(%imgui-9.Vec2*) 
declare ccc void @igSetNextWindowPos(i64, i32) 
declare ccc void @igSetScrollHere(float) 
declare ccc void @igSetKeyboardFocusHere(i32) 
declare ccc void @igPushStyleColor(i32, %imgui-9.Vec4*) 
declare ccc void @igPopStyleColor(i32) 
declare ccc void @igSeparator() 
declare ccc void @igSameLine(float, float) 
declare ccc void @igIndent(float) 
declare ccc void @igUnindent(float) 
declare ccc void @igColumns(i32, i8*, i1) 
declare ccc void @igNextColumn() 
declare ccc void @igImage(%..rawptr, i64, i64, i64, %imgui-9.Vec4*, %imgui-9.Vec4*) 
declare ccc void @igBeginTooltip() 
declare ccc void @igEndTooltip() 
declare ccc i1 @igBeginMainMenuBar() 
declare ccc void @igEndMainMenuBar() 
declare ccc i1 @igBeginMenuBar() 
declare ccc void @igEndMenuBar() 
declare ccc void @igEndMenu() 
declare ccc i1 @igIsItemHovered() 
declare ccc i1 @igIsItemClicked(i32) 
declare ccc void @ImGuiIO_AddInputCharacter(i16) 
declare ccc void @ImFontAtlas_GetTexDataAsRGBA32(%imgui-9.FontAtlas*, i8**, i32*, i32*, i32*) 
declare ccc void @ImFontAtlas_SetTexID(%imgui-9.FontAtlas*, %..rawptr) 
declare ccc i32 @ImDrawList_GetVertexBufferSize(%imgui-9.DrawList*) 
declare ccc %imgui-9.DrawVert* @ImDrawList_GetVertexPtr(%imgui-9.DrawList*, i32) 
declare ccc i32 @ImDrawList_GetIndexBufferSize(%imgui-9.DrawList*) 
declare ccc i16* @ImDrawList_GetIndexPtr(%imgui-9.DrawList*, i32) 
declare ccc i32 @ImDrawList_GetCmdSize(%imgui-9.DrawList*) 
declare ccc %imgui-9.DrawCmd* @ImDrawList_GetCmdPtr(%imgui-9.DrawList*, i32) 
declare ccc void @glGetIntegerv(i32, i32*) 
declare ccc void @glViewport(i32, i32, i32, i32) 
declare ccc void @glClearColor(float, float, float, float) 
declare ccc void @glScissor(i32, i32, i32, i32) 
declare ccc i32 @GetLastError() 
declare ccc i32 @GetCursorPos(%windows-35.Point*) 
declare ccc i32 @ScreenToClient(%..rawptr, %windows-35.Point*) 
declare ccc %..rawptr @GetModuleHandleA(i8*) 
declare ccc void @PostQuitMessage(i32) 
declare ccc i32 @SetWindowTextA(%..rawptr, i8*) 
declare ccc i32 @QueryPerformanceFrequency(i64*) 
declare ccc i32 @QueryPerformanceCounter(i64*) 
declare ccc i16 @RegisterClassExA(%windows-35.WndClassExA*) 
declare ccc %..rawptr @CreateWindowExA(i32, i8*, i8*, i32, i32, i32, i32, i32, %..rawptr, %..rawptr, %..rawptr, %..rawptr) 
declare ccc i32 @TranslateMessage(%windows-35.Msg*) 
declare ccc i64 @DispatchMessageA(%windows-35.Msg*) 
declare ccc i32 @PeekMessageA(%windows-35.Msg*, %..rawptr, i32, i32, i32) 
declare ccc i64 @DefWindowProcA(%..rawptr, i32, i64, i64) 
declare ccc i32 @AdjustWindowRect(%windows-35.Rect*, i32, i32) 
declare ccc %..rawptr @GetActiveWindow() 
declare ccc i32 @DestroyWindow(%..rawptr) 
declare ccc i32 @DescribePixelFormat(%..rawptr, i32, i32, %windows-35.PIXELFORMATDESCRIPTOR*) 
declare ccc i32 @GetCurrentThreadId() 
declare ccc void @GetSystemTimeAsFileTime(%windows-35.Filetime*) 
declare ccc i32 @FileTimeToSystemTime(%windows-35.Filetime*, %windows-35.Systemtime*) 
declare ccc i32 @CloseHandle(%..rawptr) 
declare ccc %..rawptr @GetStdHandle(i32) 
declare ccc %..rawptr @CreateFileA(i8*, i32, i32, %..rawptr, i32, i32, %..rawptr) 
declare ccc i32 @ReadFile(%..rawptr, %..rawptr, i32, i32*, %..rawptr) 
declare ccc i32 @WriteFile(%..rawptr, %..rawptr, i32, i32*, %..rawptr) 
declare ccc i32 @GetFileSizeEx(%..rawptr, i64*) 
declare ccc i32 @SetHandleInformation(%..rawptr, i32, i32) 
declare ccc %..rawptr @HeapAlloc(%..rawptr, i32, i64) 
declare ccc %..rawptr @HeapReAlloc(%..rawptr, i32, %..rawptr, i64) 
declare ccc i32 @HeapFree(%..rawptr, i32, %..rawptr) 
declare ccc %..rawptr @GetProcessHeap() 
declare ccc i32 @GetMonitorInfoA(%..rawptr, %windows-35.Monitor_Info*) 
declare ccc %..rawptr @MonitorFromWindow(%..rawptr, i32) 
declare ccc void @SetWindowPos(%..rawptr, %..rawptr, i32, i32, i32, i32, i32) 
declare ccc i32 @GetWindowPlacement(%..rawptr, %windows-35.Window_Placement*) 
declare ccc i32 @SetWindowPlacement(%..rawptr, %windows-35.Window_Placement*) 
declare ccc i64 @GetWindowLongPtrA(%..rawptr, i32) 
declare ccc i64 @SetWindowLongPtrA(%..rawptr, i32, i64) 
declare ccc %..rawptr @LoadLibraryA(i8*) 
declare ccc void @FreeLibrary(%..rawptr) 
declare ccc void ()* @GetProcAddress(%..rawptr, i8*) 
declare ccc i32 @GetClientRect(%..rawptr, %windows-35.Rect*) 
declare ccc %..rawptr @GetDC(%..rawptr) 
declare ccc i32 @SetPixelFormat(%..rawptr, i32, %windows-35.PIXELFORMATDESCRIPTOR*) 
declare ccc i32 @ChoosePixelFormat(%..rawptr, %windows-35.PIXELFORMATDESCRIPTOR*) 
declare ccc i32 @SwapBuffers(%..rawptr) 
declare ccc i32 @ReleaseDC(%..rawptr, %..rawptr) 
declare ccc i16 @GetKeyState(i32) 
declare ccc i16 @GetAsyncKeyState(i32) 
declare ccc %..rawptr @wglCreateContext(%..rawptr) 
declare ccc i32 @wglMakeCurrent(%..rawptr, %..rawptr) 
declare ccc void ()* @wglGetProcAddress(i8*) 
declare ccc i32 @wglDeleteContext(%..rawptr) 
declare ccc void @ShowCursor(i32) 
declare ccc i32 @GetFileAttributesA(i8*) 
declare ccc %..rawptr @FindFirstFileA(i8*, %jwin32-38.FindData*) 
declare ccc i32 @FindNextFileA(%..rawptr, %jwin32-38.FindData*) 
declare ccc i8* @stbi_load(i8*, i32*, i32*, i32*, i32) 
declare ccc void @stbi_image_free(%..rawptr) 
declare ccc i32 @stbi_info(i8*, i32*, i32*, i32*) 
declare ccc void @llvm.memset.p0i8.i64(%..rawptr, i8, i64, i32, i1) 
declare ccc void @llvm.memmove.p0i8.p0i8.i64(%..rawptr, %..rawptr, i64, i32, i1) 
declare ccc void @llvm.memcpy.p0i8.p0i8.i64(%..rawptr, %..rawptr, i64, i32, i1) 
declare ccc i1 @igBegin(i8*, i1*, i32) 
declare ccc i1 @igBeginChild(i8*, i64, i1, i32) 
declare ccc void @igText(i8*) 
declare ccc void @igTextColored(%imgui-9.Vec4*, i8*) 
declare ccc void @igTextWrapped(i8*) 
declare ccc i1 @igButton(i8*, i64) 
declare ccc i1 @igSmallButton(i8*) 
declare ccc i1 @igCheckbox(i8*, i1*) 
declare ccc i1 @igCombo(i8*, i32*, i8**, i32, i32) 
declare ccc void @igDragFloat(i8*, float*, float, float, float, i8*, float) 
declare ccc i1 @igInputText(i8*, i8*, i64, i32, i32 (%imgui-9.GuiTextEditCallbackData*)*, %..rawptr) 
declare ccc i1 @igCollapsingHeader(i8*, i32) 
declare ccc i1 @igBeginMenu(i8*, i1) 
declare ccc i1 @igMenuItem(i8*, i8*, i1, i1) 

define %Type_Info* @type_info_base(%Type_Info* %info) {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info.Named*, align 8
	store %Type_Info* zeroinitializer, %Type_Info** %0
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%3 = load %Type_Info*, %Type_Info** %0, align 8
	%4 = icmp eq %Type_Info* %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %Type_Info* zeroinitializer

if.done-2:
	; base
	store %Type_Info* zeroinitializer, %Type_Info** %1
		%5 = load %Type_Info*, %Type_Info** %0, align 8
	store %Type_Info* %5, %Type_Info** %1
	; TypeMatchStmt
	%6 = load %Type_Info*, %Type_Info** %1, align 8
	; get union's tag
	%7 = getelementptr inbounds %Type_Info, %Type_Info* %6, i64 0, i32 4 ; UnionTagPtr
	%8 = load i64, i64* %7, align 8
	%9 = bitcast %Type_Info* %6 to %..rawptr
	%10 = icmp eq i64 %8, 1
	br i1 %10, label %typematch.body-4, label %typematch.next-3

typematch.next-3:
	br label %typematch.done-5

typematch.body-4:
	%11 = bitcast %..rawptr %9 to %Type_Info.Named*
	store %Type_Info.Named* zeroinitializer, %Type_Info.Named** %2
	store %Type_Info.Named* %11, %Type_Info.Named** %2
	; AssignStmt
	; SelectorExpr
	%12 = load %Type_Info.Named*, %Type_Info.Named** %2, align 8
	%13 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %12, i64 0
	%14 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %13, i64 0, i32 3
	%15 = load %Type_Info*, %Type_Info** %14, align 8
	store %Type_Info* %15, %Type_Info** %1
	br label %typematch.done-5

typematch.done-5:
	; ReturnStmt
	%16 = load %Type_Info*, %Type_Info** %1, align 8
	ret %Type_Info* %16
}

define %Type_Info* @type_info_base_without_enum(%Type_Info* %info) {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info.Named*, align 8
	%3 = alloca %Type_Info.Enum*, align 8
	store %Type_Info* zeroinitializer, %Type_Info** %0
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%4 = load %Type_Info*, %Type_Info** %0, align 8
	%5 = icmp eq %Type_Info* %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %Type_Info* zeroinitializer

if.done-2:
	; base
	store %Type_Info* zeroinitializer, %Type_Info** %1
		%6 = load %Type_Info*, %Type_Info** %0, align 8
	store %Type_Info* %6, %Type_Info** %1
	; TypeMatchStmt
	%7 = load %Type_Info*, %Type_Info** %1, align 8
	; get union's tag
	%8 = getelementptr inbounds %Type_Info, %Type_Info* %7, i64 0, i32 4 ; UnionTagPtr
	%9 = load i64, i64* %8, align 8
	%10 = bitcast %Type_Info* %7 to %..rawptr
	%11 = icmp eq i64 %9, 1
	br i1 %11, label %typematch.body-4, label %typematch.next-3

typematch.next-3:
	%12 = icmp eq i64 %9, 20
	br i1 %12, label %typematch.body-6, label %typematch.next-5

typematch.body-4:
	%13 = bitcast %..rawptr %10 to %Type_Info.Named*
	store %Type_Info.Named* zeroinitializer, %Type_Info.Named** %2
	store %Type_Info.Named* %13, %Type_Info.Named** %2
	; AssignStmt
	; SelectorExpr
	%14 = load %Type_Info.Named*, %Type_Info.Named** %2, align 8
	%15 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %14, i64 0
	%16 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %15, i64 0, i32 3
	%17 = load %Type_Info*, %Type_Info** %16, align 8
	store %Type_Info* %17, %Type_Info** %1
	br label %typematch.done-7

typematch.next-5:
	br label %typematch.done-7

typematch.body-6:
	%18 = bitcast %..rawptr %10 to %Type_Info.Enum*
	store %Type_Info.Enum* zeroinitializer, %Type_Info.Enum** %3
	store %Type_Info.Enum* %18, %Type_Info.Enum** %3
	; AssignStmt
	; SelectorExpr
	%19 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%20 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %19, i64 0
	%21 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %20, i64 0, i32 2
	%22 = load %Type_Info*, %Type_Info** %21, align 8
	store %Type_Info* %22, %Type_Info** %1
	br label %typematch.done-7

typematch.done-7:
	; ReturnStmt
	%23 = load %Type_Info*, %Type_Info** %1, align 8
	ret %Type_Info* %23
}

define void @__check_context() {
decls-0:
	%0 = alloca %Context*, align 8
	; c
	store %Context* zeroinitializer, %Context** %0
		%1 = getelementptr inbounds %Context, %Context* @__context, i64 0
	store %Context* %1, %Context** %0
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%2 = load %Context*, %Context** %0, align 8
	%3 = getelementptr inbounds %Context, %Context* %2, i64 0
	%4 = getelementptr inbounds %Context, %Context* %3, i64 0, i32 1
	%5 = getelementptr inbounds %Allocator, %Allocator* %4, i64 0, i32 0
	%6 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %5, align 8
	%7 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%8 = load %Context*, %Context** %0, align 8
	%9 = getelementptr inbounds %Context, %Context* %8, i64 0
	%10 = getelementptr inbounds %Context, %Context* %9, i64 0, i32 1
	%11 = call %Allocator @default_allocator()
	store %Allocator %11, %Allocator* %10
	br label %if.done-2

if.done-2:
	; IfStmt
	; SelectorExpr
	%12 = load %Context*, %Context** %0, align 8
	%13 = getelementptr inbounds %Context, %Context* %12, i64 0
	%14 = getelementptr inbounds %Context, %Context* %13, i64 0, i32 0
	%15 = load i64, i64* %14, align 8
	%16 = icmp eq i64 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%17 = load %Context*, %Context** %0, align 8
	%18 = getelementptr inbounds %Context, %Context* %17, i64 0
	%19 = getelementptr inbounds %Context, %Context* %18, i64 0, i32 0
	; SelectorExpr
	%20 = call i64 @os_windows-29.current_thread_id()
	store i64 %20, i64* %19
	br label %if.done-4

if.done-4:
	ret void
}

define %..rawptr @alloc(i64 %size) alwaysinline {
decls-0:
	%0 = alloca i64, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %size, i64* %0
	; ReturnStmt
	%1 = load i64, i64* %0, align 8
	%2 = call %..rawptr @alloc_align(i64 %1, i64 16)
	ret %..rawptr %2
}

define %..rawptr @alloc_align(i64 %size, i64 %alignment) alwaysinline {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %Allocator, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %size, i64* %0
	store i64 zeroinitializer, i64* %1
		store i64 %alignment, i64* %1
	call void @__check_context()
	; a
	store %Allocator zeroinitializer, %Allocator* %2
		; SelectorExpr
	%3 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%4 = load %Allocator, %Allocator* %3, align 8
	store %Allocator %4, %Allocator* %2
	; ReturnStmt
	; SelectorExpr
	%5 = getelementptr inbounds %Allocator, %Allocator* %2, i64 0, i32 0
	%6 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %5, align 8
	; SelectorExpr
	%7 = getelementptr inbounds %Allocator, %Allocator* %2, i64 0, i32 1
	%8 = load %..rawptr, %..rawptr* %7, align 8
	%9 = load i64, i64* %0, align 8
	%10 = load i64, i64* %1, align 8
	%11 = call %..rawptr %6(%..rawptr %8, i8 0, i64 %9, i64 %10, %..rawptr zeroinitializer, i64 0, i64 0)
	ret %..rawptr %11
}

define void @free_ptr_with_allocator(%Allocator* %a, %..rawptr %ptr) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = load %Allocator, %Allocator* %a, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	; IfStmt
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = icmp eq %..rawptr %2, zeroinitializer
	br i1 %3, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; IfStmt
	; SelectorExpr
	%4 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 0
	%5 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %4, align 8
	%6 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* %5, zeroinitializer
	br i1 %6, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret void

if.done-4:
	; SelectorExpr
	%7 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 0
	%8 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %7, align 8
	; SelectorExpr
	%9 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 1
	%10 = load %..rawptr, %..rawptr* %9, align 8
	%11 = load %..rawptr, %..rawptr* %0, align 8
	%12 = call %..rawptr %8(%..rawptr %10, i8 1, i64 0, i64 0, %..rawptr %11, i64 0, i64 0)
	ret void
}

define void @free_ptr(%..rawptr %ptr) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %Allocator, align 16
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	call void @__check_context()
	; SelectorExpr
	%2 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%3 = load %Allocator, %Allocator* %2, align 8
	%4 = load %..rawptr, %..rawptr* %0, align 8
	store %Allocator zeroinitializer, %Allocator* %1
	store %Allocator %3, %Allocator* %1
	call void @free_ptr_with_allocator(%Allocator* %1, %..rawptr %4)
	ret void
}

define void @free_all() alwaysinline {
decls-0:
	%0 = alloca %Allocator, align 8
	call void @__check_context()
	; a
	store %Allocator zeroinitializer, %Allocator* %0
		; SelectorExpr
	%1 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%2 = load %Allocator, %Allocator* %1, align 8
	store %Allocator %2, %Allocator* %0
	; SelectorExpr
	%3 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 0
	%4 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %3, align 8
	; SelectorExpr
	%5 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 1
	%6 = load %..rawptr, %..rawptr* %5, align 8
	%7 = call %..rawptr %4(%..rawptr %6, i8 2, i64 0, i64 0, %..rawptr zeroinitializer, i64 0, i64 0)
	ret void
}

define %..rawptr @resize(%..rawptr %ptr, i64 %old_size, i64 %new_size) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %old_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %new_size, i64* %2
	; ReturnStmt
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load i64, i64* %1, align 8
	%5 = load i64, i64* %2, align 8
	%6 = call %..rawptr @resize_align(%..rawptr %3, i64 %4, i64 %5, i64 16)
	ret %..rawptr %6
}

define %..rawptr @resize_align(%..rawptr %ptr, i64 %old_size, i64 %new_size, i64 %alignment) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %Allocator, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %old_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %new_size, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %alignment, i64* %3
	call void @__check_context()
	; a
	store %Allocator zeroinitializer, %Allocator* %4
		; SelectorExpr
	%5 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%6 = load %Allocator, %Allocator* %5, align 8
	store %Allocator %6, %Allocator* %4
	; ReturnStmt
	; SelectorExpr
	%7 = getelementptr inbounds %Allocator, %Allocator* %4, i64 0, i32 0
	%8 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %7, align 8
	; SelectorExpr
	%9 = getelementptr inbounds %Allocator, %Allocator* %4, i64 0, i32 1
	%10 = load %..rawptr, %..rawptr* %9, align 8
	%11 = load i64, i64* %2, align 8
	%12 = load i64, i64* %3, align 8
	%13 = load %..rawptr, %..rawptr* %0, align 8
	%14 = load i64, i64* %1, align 8
	%15 = call %..rawptr %8(%..rawptr %10, i8 3, i64 %11, i64 %12, %..rawptr %13, i64 %14, i64 0)
	ret %..rawptr %15
}

define %..rawptr @default_resize_align(%..rawptr %old_memory, i64 %old_size, i64 %new_size, i64 %alignment) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %old_memory, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %old_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %new_size, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %alignment, i64* %3
	; IfStmt
	%5 = load %..rawptr, %..rawptr* %0, align 8
	%6 = icmp eq %..rawptr %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	%7 = load i64, i64* %2, align 8
	%8 = load i64, i64* %3, align 8
	%9 = call %..rawptr @alloc_align(i64 %7, i64 %8)
	ret %..rawptr %9

if.done-2:
	; IfStmt
	%10 = load i64, i64* %2, align 8
	%11 = icmp eq i64 %10, 0
	br i1 %11, label %if.then-3, label %if.done-4

if.then-3:
	; free
	%12 = load %..rawptr, %..rawptr* %0, align 8
	call void @free_ptr(%..rawptr %12)
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-4:
	; IfStmt
	%13 = load i64, i64* %2, align 8
	%14 = load i64, i64* %1, align 8
	%15 = icmp eq i64 %13, %14
	br i1 %15, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	%16 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %16

if.done-6:
	; new_memory
	store %..rawptr zeroinitializer, %..rawptr* %4
		%17 = load i64, i64* %2, align 8
	%18 = load i64, i64* %3, align 8
	%19 = call %..rawptr @alloc_align(i64 %17, i64 %18)
	store %..rawptr %19, %..rawptr* %4
	; IfStmt
	%20 = load %..rawptr, %..rawptr* %4, align 8
	%21 = icmp eq %..rawptr %20, zeroinitializer
	br i1 %21, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-8:
	%22 = load %..rawptr, %..rawptr* %4, align 8
	%23 = load %..rawptr, %..rawptr* %0, align 8
	; min
	%24 = load i64, i64* %1, align 8
	%25 = load i64, i64* %2, align 8
	%26 = icmp slt i64 %24, %25
	%27 = select i1 %26, i64 %24, i64 %25
	%28 = call %..rawptr @__mem_copy(%..rawptr %22, %..rawptr %23, i64 %27)
	; free
	%29 = load %..rawptr, %..rawptr* %0, align 8
	call void @free_ptr(%..rawptr %29)
	; ReturnStmt
	%30 = load %..rawptr, %..rawptr* %4, align 8
	ret %..rawptr %30
}

define %..rawptr @default_allocator_proc(%..rawptr %allocator_data, i8 %mode, i64 %size, i64 %alignment, %..rawptr %old_memory, i64 %old_size, i64 %flags) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..rawptr, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %allocator_data, %..rawptr* %0
	store i8 zeroinitializer, i8* %1
		store i8 %mode, i8* %1
	store i64 zeroinitializer, i64* %2
		store i64 %size, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %alignment, i64* %3
	store %..rawptr zeroinitializer, %..rawptr* %4
		store %..rawptr %old_memory, %..rawptr* %4
	store i64 zeroinitializer, i64* %5
		store i64 %old_size, i64* %5
	store i64 zeroinitializer, i64* %6
		store i64 %flags, i64* %6
	; MatchStmt
	%8 = load i8, i8* %1, align 1
	%9 = icmp eq i8 %8, 0
	br i1 %9, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%10 = icmp eq i8 %8, 1
	br i1 %10, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	; ReturnStmt
	; SelectorExpr
	%11 = load i64, i64* %2, align 8
	%12 = call %..rawptr @os_windows-29.heap_alloc(i64 %11)
	ret %..rawptr %12

match.case.next-3:
	%13 = icmp eq i8 %8, 2
	br i1 %13, label %match.fall.body-6, label %match.case.next-5

match.fall.body-4:
	; SelectorExpr
	%14 = load %..rawptr, %..rawptr* %4, align 8
	call void @os_windows-29.heap_free(%..rawptr %14)
	; ReturnStmt
	ret %..rawptr zeroinitializer

match.case.next-5:
	%15 = icmp eq i8 %8, 3
	br i1 %15, label %match.fall.body-8, label %match.case.next-7

match.fall.body-6:
	br label %match.done-11

match.case.next-7:
	br label %match.done-11

match.fall.body-8:
	; ptr
	store %..rawptr zeroinitializer, %..rawptr* %7
		; SelectorExpr
	%16 = load %..rawptr, %..rawptr* %4, align 8
	%17 = load i64, i64* %2, align 8
	%18 = call %..rawptr @os_windows-29.heap_resize(%..rawptr %16, i64 %17)
	store %..rawptr %18, %..rawptr* %7
	; assert
	%19 = load %..rawptr, %..rawptr* %7, align 8
	%20 = icmp ne %..rawptr %19, zeroinitializer
	%21 = icmp eq i1 %20, false
	br i1 %21, label %builtin.assert.err-9, label %builtin.assert.done-10

builtin.assert.err-9:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$0, i64 0, i32 0), i64 26}, i64 261, i64 10, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$1, i64 0, i32 0), i64 10})
	br label %builtin.assert.done-10

builtin.assert.done-10:
	; ReturnStmt
	%22 = load %..rawptr, %..rawptr* %7, align 8
	ret %..rawptr %22

match.done-11:
	; ReturnStmt
	ret %..rawptr zeroinitializer
}

define %Allocator @default_allocator() {
decls-0:
	%0 = alloca %Allocator, align 8
	; ReturnStmt
	; CompoundLit
	store %Allocator zeroinitializer, %Allocator* %0
	store %Allocator {%..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* zeroinitializer, %..rawptr zeroinitializer}, %Allocator* %0
	%1 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 0
	store %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* @default_allocator_proc, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %1
	%2 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 1
	store %..rawptr zeroinitializer, %..rawptr* %2
	%3 = load %Allocator, %Allocator* %0, align 8
	ret %Allocator %3
}

define i1 @__string_eq(%..string %a, %..string %b) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; IfStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = extractvalue %..string %2, 1
	%4 = load %..string, %..string* %1, align 8
	%5 = extractvalue %..string %4, 1
	%6 = icmp ne i64 %3, %5
	br i1 %6, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; IfStmt
	%7 = load %..string, %..string* %0, align 8
	%8 = extractvalue %..string %7, 1
	%9 = icmp eq i64 %8, 0
	br i1 %9, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; IfStmt
	; IndexExpr
	%10 = load %..string, %..string* %0, align 8
	%11 = extractvalue %..string %10, 0
	%12 = extractvalue %..string %10, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$2, i64 0, i32 0), i64 26}, i64 290, i64 8, i64 0, i64 %12)
	%13 = getelementptr inbounds i8, i8* %11, i64 0
	%14 = getelementptr inbounds i8, i8* %13, i64 0
	; IndexExpr
	%15 = load %..string, %..string* %1, align 8
	%16 = extractvalue %..string %15, 0
	%17 = extractvalue %..string %15, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3, i64 0, i32 0), i64 26}, i64 290, i64 17, i64 0, i64 %17)
	%18 = getelementptr inbounds i8, i8* %16, i64 0
	%19 = getelementptr inbounds i8, i8* %18, i64 0
	%20 = icmp eq i8* %14, %19
	br i1 %20, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	ret i1 true

if.done-6:
	; ReturnStmt
	%21 = load %..string, %..string* %0, align 8
	%22 = load %..string, %..string* %1, align 8
	%23 = call i64 @__string_cmp(%..string %21, %..string %22)
	%24 = icmp eq i64 %23, 0
	ret i1 %24
}

define i64 @__string_cmp(%..string %a, %..string %b) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	; IndexExpr
	%2 = load %..string, %..string* %0, align 8
	%3 = extractvalue %..string %2, 0
	%4 = extractvalue %..string %2, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$4, i64 0, i32 0), i64 26}, i64 297, i64 26, i64 0, i64 %4)
	%5 = getelementptr inbounds i8, i8* %3, i64 0
	%6 = getelementptr inbounds i8, i8* %5, i64 0
	; IndexExpr
	%7 = load %..string, %..string* %1, align 8
	%8 = extractvalue %..string %7, 0
	%9 = extractvalue %..string %7, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$5, i64 0, i32 0), i64 26}, i64 297, i64 33, i64 0, i64 %9)
	%10 = getelementptr inbounds i8, i8* %8, i64 0
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	; min
	%12 = load %..string, %..string* %0, align 8
	%13 = extractvalue %..string %12, 1
	%14 = load %..string, %..string* %1, align 8
	%15 = extractvalue %..string %14, 1
	%16 = icmp slt i64 %13, %15
	%17 = select i1 %16, i64 %13, i64 %15
	%18 = call i64 @__mem_compare(i8* %6, i8* %11, i64 %17)
	ret i64 %18
}

define i1 @__string_ne(%..string %a, %..string %b) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i1 @__string_eq(%..string %2, %..string %3)
	%5 = xor i1 -1, %4
	ret i1 %5
}

define i1 @__string_lt(%..string %a, %..string %b) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp slt i64 %4, 0
	ret i1 %5
}

define i1 @__string_gt(%..string %a, %..string %b) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sgt i64 %4, 0
	ret i1 %5
}

define i1 @__string_le(%..string %a, %..string %b) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sle i64 %4, 0
	ret i1 %5
}

define i1 @__string_ge(%..string %a, %..string %b) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %a, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sge i64 %4, 0
	ret i1 %5
}

define i1 @__complex64_eq(%..complex64 %a, %..complex64 %b) alwaysinline {
decls-0:
	%0 = alloca %..complex64, align 8
	%1 = alloca %..complex64, align 8
	store %..complex64 zeroinitializer, %..complex64* %0
		store %..complex64 %a, %..complex64* %0
	store %..complex64 zeroinitializer, %..complex64* %1
		store %..complex64 %b, %..complex64* %1
	; ReturnStmt
	; real
	%2 = load %..complex64, %..complex64* %0, align 8
	%3 = extractvalue %..complex64 %2, 0
	; real
	%4 = load %..complex64, %..complex64* %1, align 8
	%5 = extractvalue %..complex64 %4, 0
	%6 = fcmp oeq float %3, %5
	; real
	%7 = load %..complex64, %..complex64* %0, align 8
	%8 = extractvalue %..complex64 %7, 0
	; real
	%9 = load %..complex64, %..complex64* %1, align 8
	%10 = extractvalue %..complex64 %9, 0
	%11 = fcmp oeq float %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex64, %..complex64* %0, align 8
	%13 = extractvalue %..complex64 %12, 1
	; imag
	%14 = load %..complex64, %..complex64* %1, align 8
	%15 = extractvalue %..complex64 %14, 1
	%16 = fcmp oeq float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex64_ne(%..complex64 %a, %..complex64 %b) alwaysinline {
decls-0:
	%0 = alloca %..complex64, align 8
	%1 = alloca %..complex64, align 8
	store %..complex64 zeroinitializer, %..complex64* %0
		store %..complex64 %a, %..complex64* %0
	store %..complex64 zeroinitializer, %..complex64* %1
		store %..complex64 %b, %..complex64* %1
	; ReturnStmt
	; real
	%2 = load %..complex64, %..complex64* %0, align 8
	%3 = extractvalue %..complex64 %2, 0
	; real
	%4 = load %..complex64, %..complex64* %1, align 8
	%5 = extractvalue %..complex64 %4, 0
	%6 = fcmp one float %3, %5
	; real
	%7 = load %..complex64, %..complex64* %0, align 8
	%8 = extractvalue %..complex64 %7, 0
	; real
	%9 = load %..complex64, %..complex64* %1, align 8
	%10 = extractvalue %..complex64 %9, 0
	%11 = fcmp one float %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex64, %..complex64* %0, align 8
	%13 = extractvalue %..complex64 %12, 1
	; imag
	%14 = load %..complex64, %..complex64* %1, align 8
	%15 = extractvalue %..complex64 %14, 1
	%16 = fcmp one float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex128_eq(%..complex128 %a, %..complex128 %b) alwaysinline {
decls-0:
	%0 = alloca %..complex128, align 8
	%1 = alloca %..complex128, align 8
	store %..complex128 zeroinitializer, %..complex128* %0
		store %..complex128 %a, %..complex128* %0
	store %..complex128 zeroinitializer, %..complex128* %1
		store %..complex128 %b, %..complex128* %1
	; ReturnStmt
	; real
	%2 = load %..complex128, %..complex128* %0, align 8
	%3 = extractvalue %..complex128 %2, 0
	; real
	%4 = load %..complex128, %..complex128* %1, align 8
	%5 = extractvalue %..complex128 %4, 0
	%6 = fcmp oeq double %3, %5
	; real
	%7 = load %..complex128, %..complex128* %0, align 8
	%8 = extractvalue %..complex128 %7, 0
	; real
	%9 = load %..complex128, %..complex128* %1, align 8
	%10 = extractvalue %..complex128 %9, 0
	%11 = fcmp oeq double %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex128, %..complex128* %0, align 8
	%13 = extractvalue %..complex128 %12, 1
	; imag
	%14 = load %..complex128, %..complex128* %1, align 8
	%15 = extractvalue %..complex128 %14, 1
	%16 = fcmp oeq double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex128_ne(%..complex128 %a, %..complex128 %b) alwaysinline {
decls-0:
	%0 = alloca %..complex128, align 8
	%1 = alloca %..complex128, align 8
	store %..complex128 zeroinitializer, %..complex128* %0
		store %..complex128 %a, %..complex128* %0
	store %..complex128 zeroinitializer, %..complex128* %1
		store %..complex128 %b, %..complex128* %1
	; ReturnStmt
	; real
	%2 = load %..complex128, %..complex128* %0, align 8
	%3 = extractvalue %..complex128 %2, 0
	; real
	%4 = load %..complex128, %..complex128* %1, align 8
	%5 = extractvalue %..complex128 %4, 0
	%6 = fcmp one double %3, %5
	; real
	%7 = load %..complex128, %..complex128* %0, align 8
	%8 = extractvalue %..complex128 %7, 0
	; real
	%9 = load %..complex128, %..complex128* %1, align 8
	%10 = extractvalue %..complex128 %9, 0
	%11 = fcmp one double %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex128, %..complex128* %0, align 8
	%13 = extractvalue %..complex128 %12, 1
	; imag
	%14 = load %..complex128, %..complex128* %1, align 8
	%15 = extractvalue %..complex128 %14, 1
	%16 = fcmp one double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__quaternion128_eq(%..quaternion128 %a, %..quaternion128 %b) alwaysinline {
decls-0:
	%0 = alloca %..quaternion128, align 8
	%1 = alloca %..quaternion128, align 8
	store %..quaternion128 zeroinitializer, %..quaternion128* %0
		store %..quaternion128 %a, %..quaternion128* %0
	store %..quaternion128 zeroinitializer, %..quaternion128* %1
		store %..quaternion128 %b, %..quaternion128* %1
	; ReturnStmt
	; real
	%2 = load %..quaternion128, %..quaternion128* %0, align 8
	%3 = extractvalue %..quaternion128 %2, 0
	; real
	%4 = load %..quaternion128, %..quaternion128* %1, align 8
	%5 = extractvalue %..quaternion128 %4, 0
	%6 = fcmp oeq float %3, %5
	; real
	%7 = load %..quaternion128, %..quaternion128* %0, align 8
	%8 = extractvalue %..quaternion128 %7, 0
	; real
	%9 = load %..quaternion128, %..quaternion128* %1, align 8
	%10 = extractvalue %..quaternion128 %9, 0
	%11 = fcmp oeq float %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..quaternion128, %..quaternion128* %0, align 8
	%13 = extractvalue %..quaternion128 %12, 1
	; imag
	%14 = load %..quaternion128, %..quaternion128* %1, align 8
	%15 = extractvalue %..quaternion128 %14, 1
	%16 = fcmp oeq float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	; real
	%18 = load %..quaternion128, %..quaternion128* %0, align 8
	%19 = extractvalue %..quaternion128 %18, 0
	; real
	%20 = load %..quaternion128, %..quaternion128* %1, align 8
	%21 = extractvalue %..quaternion128 %20, 0
	%22 = fcmp oeq float %19, %21
	br i1 %22, label %cmp.and-3, label %logical.cmp.done-5

cmp.and-3:
	; imag
	%23 = load %..quaternion128, %..quaternion128* %0, align 8
	%24 = extractvalue %..quaternion128 %23, 1
	; imag
	%25 = load %..quaternion128, %..quaternion128* %1, align 8
	%26 = extractvalue %..quaternion128 %25, 1
	%27 = fcmp oeq float %24, %26
	br i1 %27, label %logical.cmp.rhs-4, label %logical.cmp.done-5

logical.cmp.rhs-4:
	; jmag
	%28 = load %..quaternion128, %..quaternion128* %0, align 8
	%29 = extractvalue %..quaternion128 %28, 2
	; jmag
	%30 = load %..quaternion128, %..quaternion128* %1, align 8
	%31 = extractvalue %..quaternion128 %30, 2
	%32 = fcmp oeq float %29, %31
	br label %logical.cmp.done-5

logical.cmp.done-5:
	%33 = phi i1 [ false, %logical.cmp.done-2 ], [ false, %cmp.and-3 ], [ %32, %logical.cmp.rhs-4 ]
	; real
	%34 = load %..quaternion128, %..quaternion128* %0, align 8
	%35 = extractvalue %..quaternion128 %34, 0
	; real
	%36 = load %..quaternion128, %..quaternion128* %1, align 8
	%37 = extractvalue %..quaternion128 %36, 0
	%38 = fcmp oeq float %35, %37
	br i1 %38, label %cmp.and-6, label %logical.cmp.done-9

cmp.and-6:
	; imag
	%39 = load %..quaternion128, %..quaternion128* %0, align 8
	%40 = extractvalue %..quaternion128 %39, 1
	; imag
	%41 = load %..quaternion128, %..quaternion128* %1, align 8
	%42 = extractvalue %..quaternion128 %41, 1
	%43 = fcmp oeq float %40, %42
	br i1 %43, label %cmp.and-7, label %logical.cmp.done-9

cmp.and-7:
	; jmag
	%44 = load %..quaternion128, %..quaternion128* %0, align 8
	%45 = extractvalue %..quaternion128 %44, 2
	; jmag
	%46 = load %..quaternion128, %..quaternion128* %1, align 8
	%47 = extractvalue %..quaternion128 %46, 2
	%48 = fcmp oeq float %45, %47
	br i1 %48, label %logical.cmp.rhs-8, label %logical.cmp.done-9

logical.cmp.rhs-8:
	; kmag
	%49 = load %..quaternion128, %..quaternion128* %0, align 8
	%50 = extractvalue %..quaternion128 %49, 3
	; kmag
	%51 = load %..quaternion128, %..quaternion128* %1, align 8
	%52 = extractvalue %..quaternion128 %51, 3
	%53 = fcmp oeq float %50, %52
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%54 = phi i1 [ false, %logical.cmp.done-5 ], [ false, %cmp.and-6 ], [ false, %cmp.and-7 ], [ %53, %logical.cmp.rhs-8 ]
	ret i1 %54
}

define i1 @__quaternion128_ne(%..quaternion128 %a, %..quaternion128 %b) alwaysinline {
decls-0:
	%0 = alloca %..quaternion128, align 8
	%1 = alloca %..quaternion128, align 8
	store %..quaternion128 zeroinitializer, %..quaternion128* %0
		store %..quaternion128 %a, %..quaternion128* %0
	store %..quaternion128 zeroinitializer, %..quaternion128* %1
		store %..quaternion128 %b, %..quaternion128* %1
	; ReturnStmt
	; real
	%2 = load %..quaternion128, %..quaternion128* %0, align 8
	%3 = extractvalue %..quaternion128 %2, 0
	; real
	%4 = load %..quaternion128, %..quaternion128* %1, align 8
	%5 = extractvalue %..quaternion128 %4, 0
	%6 = fcmp one float %3, %5
	; real
	%7 = load %..quaternion128, %..quaternion128* %0, align 8
	%8 = extractvalue %..quaternion128 %7, 0
	; real
	%9 = load %..quaternion128, %..quaternion128* %1, align 8
	%10 = extractvalue %..quaternion128 %9, 0
	%11 = fcmp one float %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..quaternion128, %..quaternion128* %0, align 8
	%13 = extractvalue %..quaternion128 %12, 1
	; imag
	%14 = load %..quaternion128, %..quaternion128* %1, align 8
	%15 = extractvalue %..quaternion128 %14, 1
	%16 = fcmp one float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	; real
	%18 = load %..quaternion128, %..quaternion128* %0, align 8
	%19 = extractvalue %..quaternion128 %18, 0
	; real
	%20 = load %..quaternion128, %..quaternion128* %1, align 8
	%21 = extractvalue %..quaternion128 %20, 0
	%22 = fcmp one float %19, %21
	br i1 %22, label %logical.cmp.done-5, label %cmp.or-3

cmp.or-3:
	; imag
	%23 = load %..quaternion128, %..quaternion128* %0, align 8
	%24 = extractvalue %..quaternion128 %23, 1
	; imag
	%25 = load %..quaternion128, %..quaternion128* %1, align 8
	%26 = extractvalue %..quaternion128 %25, 1
	%27 = fcmp one float %24, %26
	br i1 %27, label %logical.cmp.done-5, label %logical.cmp.rhs-4

logical.cmp.rhs-4:
	; jmag
	%28 = load %..quaternion128, %..quaternion128* %0, align 8
	%29 = extractvalue %..quaternion128 %28, 2
	; jmag
	%30 = load %..quaternion128, %..quaternion128* %1, align 8
	%31 = extractvalue %..quaternion128 %30, 2
	%32 = fcmp one float %29, %31
	br label %logical.cmp.done-5

logical.cmp.done-5:
	%33 = phi i1 [ true, %logical.cmp.done-2 ], [ true, %cmp.or-3 ], [ %32, %logical.cmp.rhs-4 ]
	; real
	%34 = load %..quaternion128, %..quaternion128* %0, align 8
	%35 = extractvalue %..quaternion128 %34, 0
	; real
	%36 = load %..quaternion128, %..quaternion128* %1, align 8
	%37 = extractvalue %..quaternion128 %36, 0
	%38 = fcmp one float %35, %37
	br i1 %38, label %logical.cmp.done-9, label %cmp.or-6

cmp.or-6:
	; imag
	%39 = load %..quaternion128, %..quaternion128* %0, align 8
	%40 = extractvalue %..quaternion128 %39, 1
	; imag
	%41 = load %..quaternion128, %..quaternion128* %1, align 8
	%42 = extractvalue %..quaternion128 %41, 1
	%43 = fcmp one float %40, %42
	br i1 %43, label %logical.cmp.done-9, label %cmp.or-7

cmp.or-7:
	; jmag
	%44 = load %..quaternion128, %..quaternion128* %0, align 8
	%45 = extractvalue %..quaternion128 %44, 2
	; jmag
	%46 = load %..quaternion128, %..quaternion128* %1, align 8
	%47 = extractvalue %..quaternion128 %46, 2
	%48 = fcmp one float %45, %47
	br i1 %48, label %logical.cmp.done-9, label %logical.cmp.rhs-8

logical.cmp.rhs-8:
	; kmag
	%49 = load %..quaternion128, %..quaternion128* %0, align 8
	%50 = extractvalue %..quaternion128 %49, 3
	; kmag
	%51 = load %..quaternion128, %..quaternion128* %1, align 8
	%52 = extractvalue %..quaternion128 %51, 3
	%53 = fcmp one float %50, %52
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%54 = phi i1 [ true, %logical.cmp.done-5 ], [ true, %cmp.or-6 ], [ true, %cmp.or-7 ], [ %53, %logical.cmp.rhs-8 ]
	ret i1 %54
}

define i1 @__quaternion256_eq(%..quaternion256 %a, %..quaternion256 %b) alwaysinline {
decls-0:
	%0 = alloca %..quaternion256, align 8
	%1 = alloca %..quaternion256, align 8
	store %..quaternion256 zeroinitializer, %..quaternion256* %0
		store %..quaternion256 %a, %..quaternion256* %0
	store %..quaternion256 zeroinitializer, %..quaternion256* %1
		store %..quaternion256 %b, %..quaternion256* %1
	; ReturnStmt
	; real
	%2 = load %..quaternion256, %..quaternion256* %0, align 8
	%3 = extractvalue %..quaternion256 %2, 0
	; real
	%4 = load %..quaternion256, %..quaternion256* %1, align 8
	%5 = extractvalue %..quaternion256 %4, 0
	%6 = fcmp oeq double %3, %5
	; real
	%7 = load %..quaternion256, %..quaternion256* %0, align 8
	%8 = extractvalue %..quaternion256 %7, 0
	; real
	%9 = load %..quaternion256, %..quaternion256* %1, align 8
	%10 = extractvalue %..quaternion256 %9, 0
	%11 = fcmp oeq double %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..quaternion256, %..quaternion256* %0, align 8
	%13 = extractvalue %..quaternion256 %12, 1
	; imag
	%14 = load %..quaternion256, %..quaternion256* %1, align 8
	%15 = extractvalue %..quaternion256 %14, 1
	%16 = fcmp oeq double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	; real
	%18 = load %..quaternion256, %..quaternion256* %0, align 8
	%19 = extractvalue %..quaternion256 %18, 0
	; real
	%20 = load %..quaternion256, %..quaternion256* %1, align 8
	%21 = extractvalue %..quaternion256 %20, 0
	%22 = fcmp oeq double %19, %21
	br i1 %22, label %cmp.and-3, label %logical.cmp.done-5

cmp.and-3:
	; imag
	%23 = load %..quaternion256, %..quaternion256* %0, align 8
	%24 = extractvalue %..quaternion256 %23, 1
	; imag
	%25 = load %..quaternion256, %..quaternion256* %1, align 8
	%26 = extractvalue %..quaternion256 %25, 1
	%27 = fcmp oeq double %24, %26
	br i1 %27, label %logical.cmp.rhs-4, label %logical.cmp.done-5

logical.cmp.rhs-4:
	; jmag
	%28 = load %..quaternion256, %..quaternion256* %0, align 8
	%29 = extractvalue %..quaternion256 %28, 2
	; jmag
	%30 = load %..quaternion256, %..quaternion256* %1, align 8
	%31 = extractvalue %..quaternion256 %30, 2
	%32 = fcmp oeq double %29, %31
	br label %logical.cmp.done-5

logical.cmp.done-5:
	%33 = phi i1 [ false, %logical.cmp.done-2 ], [ false, %cmp.and-3 ], [ %32, %logical.cmp.rhs-4 ]
	; real
	%34 = load %..quaternion256, %..quaternion256* %0, align 8
	%35 = extractvalue %..quaternion256 %34, 0
	; real
	%36 = load %..quaternion256, %..quaternion256* %1, align 8
	%37 = extractvalue %..quaternion256 %36, 0
	%38 = fcmp oeq double %35, %37
	br i1 %38, label %cmp.and-6, label %logical.cmp.done-9

cmp.and-6:
	; imag
	%39 = load %..quaternion256, %..quaternion256* %0, align 8
	%40 = extractvalue %..quaternion256 %39, 1
	; imag
	%41 = load %..quaternion256, %..quaternion256* %1, align 8
	%42 = extractvalue %..quaternion256 %41, 1
	%43 = fcmp oeq double %40, %42
	br i1 %43, label %cmp.and-7, label %logical.cmp.done-9

cmp.and-7:
	; jmag
	%44 = load %..quaternion256, %..quaternion256* %0, align 8
	%45 = extractvalue %..quaternion256 %44, 2
	; jmag
	%46 = load %..quaternion256, %..quaternion256* %1, align 8
	%47 = extractvalue %..quaternion256 %46, 2
	%48 = fcmp oeq double %45, %47
	br i1 %48, label %logical.cmp.rhs-8, label %logical.cmp.done-9

logical.cmp.rhs-8:
	; kmag
	%49 = load %..quaternion256, %..quaternion256* %0, align 8
	%50 = extractvalue %..quaternion256 %49, 3
	; kmag
	%51 = load %..quaternion256, %..quaternion256* %1, align 8
	%52 = extractvalue %..quaternion256 %51, 3
	%53 = fcmp oeq double %50, %52
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%54 = phi i1 [ false, %logical.cmp.done-5 ], [ false, %cmp.and-6 ], [ false, %cmp.and-7 ], [ %53, %logical.cmp.rhs-8 ]
	ret i1 %54
}

define i1 @__quaternion256_ne(%..quaternion256 %a, %..quaternion256 %b) alwaysinline {
decls-0:
	%0 = alloca %..quaternion256, align 8
	%1 = alloca %..quaternion256, align 8
	store %..quaternion256 zeroinitializer, %..quaternion256* %0
		store %..quaternion256 %a, %..quaternion256* %0
	store %..quaternion256 zeroinitializer, %..quaternion256* %1
		store %..quaternion256 %b, %..quaternion256* %1
	; ReturnStmt
	; real
	%2 = load %..quaternion256, %..quaternion256* %0, align 8
	%3 = extractvalue %..quaternion256 %2, 0
	; real
	%4 = load %..quaternion256, %..quaternion256* %1, align 8
	%5 = extractvalue %..quaternion256 %4, 0
	%6 = fcmp one double %3, %5
	; real
	%7 = load %..quaternion256, %..quaternion256* %0, align 8
	%8 = extractvalue %..quaternion256 %7, 0
	; real
	%9 = load %..quaternion256, %..quaternion256* %1, align 8
	%10 = extractvalue %..quaternion256 %9, 0
	%11 = fcmp one double %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..quaternion256, %..quaternion256* %0, align 8
	%13 = extractvalue %..quaternion256 %12, 1
	; imag
	%14 = load %..quaternion256, %..quaternion256* %1, align 8
	%15 = extractvalue %..quaternion256 %14, 1
	%16 = fcmp one double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	; real
	%18 = load %..quaternion256, %..quaternion256* %0, align 8
	%19 = extractvalue %..quaternion256 %18, 0
	; real
	%20 = load %..quaternion256, %..quaternion256* %1, align 8
	%21 = extractvalue %..quaternion256 %20, 0
	%22 = fcmp one double %19, %21
	br i1 %22, label %logical.cmp.done-5, label %cmp.or-3

cmp.or-3:
	; imag
	%23 = load %..quaternion256, %..quaternion256* %0, align 8
	%24 = extractvalue %..quaternion256 %23, 1
	; imag
	%25 = load %..quaternion256, %..quaternion256* %1, align 8
	%26 = extractvalue %..quaternion256 %25, 1
	%27 = fcmp one double %24, %26
	br i1 %27, label %logical.cmp.done-5, label %logical.cmp.rhs-4

logical.cmp.rhs-4:
	; jmag
	%28 = load %..quaternion256, %..quaternion256* %0, align 8
	%29 = extractvalue %..quaternion256 %28, 2
	; jmag
	%30 = load %..quaternion256, %..quaternion256* %1, align 8
	%31 = extractvalue %..quaternion256 %30, 2
	%32 = fcmp one double %29, %31
	br label %logical.cmp.done-5

logical.cmp.done-5:
	%33 = phi i1 [ true, %logical.cmp.done-2 ], [ true, %cmp.or-3 ], [ %32, %logical.cmp.rhs-4 ]
	; real
	%34 = load %..quaternion256, %..quaternion256* %0, align 8
	%35 = extractvalue %..quaternion256 %34, 0
	; real
	%36 = load %..quaternion256, %..quaternion256* %1, align 8
	%37 = extractvalue %..quaternion256 %36, 0
	%38 = fcmp one double %35, %37
	br i1 %38, label %logical.cmp.done-9, label %cmp.or-6

cmp.or-6:
	; imag
	%39 = load %..quaternion256, %..quaternion256* %0, align 8
	%40 = extractvalue %..quaternion256 %39, 1
	; imag
	%41 = load %..quaternion256, %..quaternion256* %1, align 8
	%42 = extractvalue %..quaternion256 %41, 1
	%43 = fcmp one double %40, %42
	br i1 %43, label %logical.cmp.done-9, label %cmp.or-7

cmp.or-7:
	; jmag
	%44 = load %..quaternion256, %..quaternion256* %0, align 8
	%45 = extractvalue %..quaternion256 %44, 2
	; jmag
	%46 = load %..quaternion256, %..quaternion256* %1, align 8
	%47 = extractvalue %..quaternion256 %46, 2
	%48 = fcmp one double %45, %47
	br i1 %48, label %logical.cmp.done-9, label %logical.cmp.rhs-8

logical.cmp.rhs-8:
	; kmag
	%49 = load %..quaternion256, %..quaternion256* %0, align 8
	%50 = extractvalue %..quaternion256 %49, 3
	; kmag
	%51 = load %..quaternion256, %..quaternion256* %1, align 8
	%52 = extractvalue %..quaternion256 %51, 3
	%53 = fcmp one double %50, %52
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%54 = phi i1 [ true, %logical.cmp.done-5 ], [ true, %cmp.or-6 ], [ true, %cmp.or-7 ], [ %53, %logical.cmp.rhs-8 ]
	ret i1 %54
}

define void @__assert(%..string %file, i64 %line, i64 %column, %..string %msg) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [4 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %file, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %line, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %column, i64* %2
	store %..string zeroinitializer, %..string* %3
		store %..string %msg, %..string* %3
	; SelectorExpr
	; SelectorExpr
	%10 = load i64, i64* @os_windows-29.stderr, align 8
	%11 = load %..string, %..string* %0, align 8
	%12 = load i64, i64* %1, align 8
	%13 = load i64, i64* %2, align 8
	%14 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%15 = bitcast %..string* %0 to %..rawptr
	%16 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%17 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %15, %..rawptr* %17
	%18 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %16, %Type_Info** %18
	%19 = load %..any, %..any* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%20 = bitcast i64* %1 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%22 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%25 = bitcast i64* %2 to %..rawptr
	%26 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%30 = bitcast %..string* %3 to %..rawptr
	%31 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%32 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [4 x %..any] zeroinitializer, [4 x %..any]* %9
	%35 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 0
	store %..any %19, %..any* %35
	%36 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 1
	store %..any %24, %..any* %36
	%37 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 2
	store %..any %29, %..any* %37
	%38 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 3
	store %..any %34, %..any* %38
	%39 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 0
	%40 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %39, %..any** %40
	%41 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 4, i64* %41
	%42 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 4, i64* %42
	%43 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	%44 = call i64 @fmt-4.fprintf(i64 %10, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$6, i64 0, i32 0), i64 32}, {%..any*, i64, i64} %43)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__panic(%..string %file, i64 %line, i64 %column, %..string %msg) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [4 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %file, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %line, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %column, i64* %2
	store %..string zeroinitializer, %..string* %3
		store %..string %msg, %..string* %3
	; SelectorExpr
	; SelectorExpr
	%10 = load i64, i64* @os_windows-29.stderr, align 8
	%11 = load %..string, %..string* %0, align 8
	%12 = load i64, i64* %1, align 8
	%13 = load i64, i64* %2, align 8
	%14 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%15 = bitcast %..string* %0 to %..rawptr
	%16 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%17 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %15, %..rawptr* %17
	%18 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %16, %Type_Info** %18
	%19 = load %..any, %..any* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%20 = bitcast i64* %1 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%22 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%25 = bitcast i64* %2 to %..rawptr
	%26 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%30 = bitcast %..string* %3 to %..rawptr
	%31 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%32 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [4 x %..any] zeroinitializer, [4 x %..any]* %9
	%35 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 0
	store %..any %19, %..any* %35
	%36 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 1
	store %..any %24, %..any* %36
	%37 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 2
	store %..any %29, %..any* %37
	%38 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 3
	store %..any %34, %..any* %38
	%39 = getelementptr inbounds [4 x %..any], [4 x %..any]* %9, i64 0, i32 0
	%40 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %39, %..any** %40
	%41 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 4, i64* %41
	%42 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 4, i64* %42
	%43 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	%44 = call i64 @fmt-4.fprintf(i64 %10, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$7, i64 0, i32 0), i64 20}, {%..any*, i64, i64} %43)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__bounds_check_error(%..string %file, i64 %line, i64 %column, i64 %index, i64 %count) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %file, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %line, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %column, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %index, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %count, i64* %4
	; IfStmt
	%12 = load i64, i64* %3, align 8
	%13 = icmp sle i64 0, %12
	br i1 %13, label %cmp.and-1, label %if.done-3

cmp.and-1:
	%14 = load i64, i64* %3, align 8
	%15 = load i64, i64* %4, align 8
	%16 = icmp slt i64 %14, %15
	br i1 %16, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%17 = load i64, i64* @os_windows-29.stderr, align 8
	%18 = load %..string, %..string* %0, align 8
	%19 = load i64, i64* %1, align 8
	%20 = load i64, i64* %2, align 8
	%21 = load i64, i64* %3, align 8
	%22 = load i64, i64* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%23 = bitcast %..string* %0 to %..rawptr
	%24 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%25 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %23, %..rawptr* %25
	%26 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %24, %Type_Info** %26
	%27 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%28 = bitcast i64* %1 to %..rawptr
	%29 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%30 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %28, %..rawptr* %30
	%31 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %29, %Type_Info** %31
	%32 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%33 = bitcast i64* %2 to %..rawptr
	%34 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%35 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %33, %..rawptr* %35
	%36 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %34, %Type_Info** %36
	%37 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%38 = bitcast i64* %3 to %..rawptr
	%39 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%40 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %38, %..rawptr* %40
	%41 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %39, %Type_Info** %41
	%42 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%43 = bitcast i64* %4 to %..rawptr
	%44 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%45 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %43, %..rawptr* %45
	%46 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %44, %Type_Info** %46
	%47 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%48 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %27, %..any* %48
	%49 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %32, %..any* %49
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %37, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %42, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %47, %..any* %52
	%53 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%54 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %53, %..any** %54
	%55 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 5, i64* %55
	%56 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 5, i64* %56
	%57 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	%58 = call i64 @fmt-4.fprintf(i64 %17, %..string {i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__str$8, i64 0, i32 0), i64 49}, {%..any*, i64, i64} %57)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__slice_expr_error(%..string %file, i64 %line, i64 %column, i64 %low, i64 %high, i64 %max) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca %..any, align 8
	%12 = alloca {%..any*, i64, i64}, align 8
	%13 = alloca [6 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %file, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %line, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %column, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %low, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %high, i64* %4
	store i64 zeroinitializer, i64* %5
		store i64 %max, i64* %5
	; IfStmt
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 0, %14
	br i1 %15, label %cmp.and-1, label %if.done-4

cmp.and-1:
	%16 = load i64, i64* %3, align 8
	%17 = load i64, i64* %4, align 8
	%18 = icmp sle i64 %16, %17
	br i1 %18, label %cmp.and-2, label %if.done-4

cmp.and-2:
	%19 = load i64, i64* %4, align 8
	%20 = load i64, i64* %5, align 8
	%21 = icmp sle i64 %19, %20
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret void

if.done-4:
	; SelectorExpr
	; SelectorExpr
	%22 = load i64, i64* @os_windows-29.stderr, align 8
	%23 = load %..string, %..string* %0, align 8
	%24 = load i64, i64* %1, align 8
	%25 = load i64, i64* %2, align 8
	%26 = load i64, i64* %3, align 8
	%27 = load i64, i64* %4, align 8
	%28 = load i64, i64* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%29 = bitcast %..string* %0 to %..rawptr
	%30 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%31 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %29, %..rawptr* %31
	%32 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %30, %Type_Info** %32
	%33 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%34 = bitcast i64* %1 to %..rawptr
	%35 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%36 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %34, %..rawptr* %36
	%37 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %35, %Type_Info** %37
	%38 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%39 = bitcast i64* %2 to %..rawptr
	%40 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%41 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %39, %..rawptr* %41
	%42 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %40, %Type_Info** %42
	%43 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%44 = bitcast i64* %3 to %..rawptr
	%45 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%46 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %44, %..rawptr* %46
	%47 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %45, %Type_Info** %47
	%48 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%49 = bitcast i64* %4 to %..rawptr
	%50 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%51 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %49, %..rawptr* %51
	%52 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %50, %Type_Info** %52
	%53 = load %..any, %..any* %10, align 8
	store %..any zeroinitializer, %..any* %11
	%54 = bitcast i64* %5 to %..rawptr
	%55 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%56 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %54, %..rawptr* %56
	%57 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %55, %Type_Info** %57
	%58 = load %..any, %..any* %11, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %12
	store [6 x %..any] zeroinitializer, [6 x %..any]* %13
	%59 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 0
	store %..any %33, %..any* %59
	%60 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 1
	store %..any %38, %..any* %60
	%61 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 2
	store %..any %43, %..any* %61
	%62 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 3
	store %..any %48, %..any* %62
	%63 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 4
	store %..any %53, %..any* %63
	%64 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 5
	store %..any %58, %..any* %64
	%65 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 0
	%66 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 0
	store %..any* %65, %..any** %66
	%67 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 1
	store i64 6, i64* %67
	%68 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 2
	store i64 6, i64* %68
	%69 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %12, align 8
	%70 = call i64 @fmt-4.fprintf(i64 %22, %..string {i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__str$9, i64 0, i32 0), i64 48}, {%..any*, i64, i64} %69)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__substring_expr_error(%..string %file, i64 %line, i64 %column, i64 %low, i64 %high) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %file, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %line, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %column, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %low, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %high, i64* %4
	; IfStmt
	%12 = load i64, i64* %3, align 8
	%13 = icmp sle i64 0, %12
	br i1 %13, label %cmp.and-1, label %if.done-3

cmp.and-1:
	%14 = load i64, i64* %3, align 8
	%15 = load i64, i64* %4, align 8
	%16 = icmp sle i64 %14, %15
	br i1 %16, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%17 = load i64, i64* @os_windows-29.stderr, align 8
	%18 = load %..string, %..string* %0, align 8
	%19 = load i64, i64* %1, align 8
	%20 = load i64, i64* %2, align 8
	%21 = load i64, i64* %3, align 8
	%22 = load i64, i64* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%23 = bitcast %..string* %0 to %..rawptr
	%24 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%25 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %23, %..rawptr* %25
	%26 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %24, %Type_Info** %26
	%27 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%28 = bitcast i64* %1 to %..rawptr
	%29 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%30 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %28, %..rawptr* %30
	%31 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %29, %Type_Info** %31
	%32 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%33 = bitcast i64* %2 to %..rawptr
	%34 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%35 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %33, %..rawptr* %35
	%36 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %34, %Type_Info** %36
	%37 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%38 = bitcast i64* %3 to %..rawptr
	%39 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%40 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %38, %..rawptr* %40
	%41 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %39, %Type_Info** %41
	%42 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%43 = bitcast i64* %4 to %..rawptr
	%44 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%45 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %43, %..rawptr* %45
	%46 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %44, %Type_Info** %46
	%47 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%48 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %27, %..any* %48
	%49 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %32, %..any* %49
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %37, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %42, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %47, %..any* %52
	%53 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%54 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %53, %..any** %54
	%55 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 5, i64* %55
	%56 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 5, i64* %56
	%57 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	%58 = call i64 @fmt-4.fprintf(i64 %17, %..string {i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__str$a, i64 0, i32 0), i64 47}, {%..any*, i64, i64} %57)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__type_assertion_check(i1 %ok, %..string %file, i64 %line, i64 %column, %Type_Info* %from, %Type_Info* %to) {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %Type_Info*, align 8
	%5 = alloca %Type_Info*, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca [5 x %..any], align 8
	store i1 zeroinitializer, i1* %0
		store i1 %ok, i1* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %file, %..string* %1
	store i64 zeroinitializer, i64* %2
		store i64 %line, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %column, i64* %3
	store %Type_Info* zeroinitializer, %Type_Info** %4
		store %Type_Info* %from, %Type_Info** %4
	store %Type_Info* zeroinitializer, %Type_Info** %5
		store %Type_Info* %to, %Type_Info** %5
	; IfStmt
	%13 = load i1, i1* %0, align 1
	br i1 %13, label %if.done-2, label %if.then-1

if.then-1:
	; SelectorExpr
	; SelectorExpr
	%14 = load i64, i64* @os_windows-29.stderr, align 8
	%15 = load %..string, %..string* %1, align 8
	%16 = load i64, i64* %2, align 8
	%17 = load i64, i64* %3, align 8
	%18 = load %Type_Info*, %Type_Info** %4, align 8
	%19 = load %Type_Info*, %Type_Info** %5, align 8
	store %..any zeroinitializer, %..any* %6
	%20 = bitcast %..string* %1 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%22 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%25 = bitcast i64* %2 to %..rawptr
	%26 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%30 = bitcast i64* %3 to %..rawptr
	%31 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%32 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%35 = bitcast %Type_Info** %4 to %..rawptr
	%36 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%37 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %35, %..rawptr* %37
	%38 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %36, %Type_Info** %38
	%39 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%40 = bitcast %Type_Info** %5 to %..rawptr
	%41 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%42 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %40, %..rawptr* %42
	%43 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %43
	%44 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	store [5 x %..any] zeroinitializer, [5 x %..any]* %12
	%45 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 0
	store %..any %24, %..any* %45
	%46 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 1
	store %..any %29, %..any* %46
	%47 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 2
	store %..any %34, %..any* %47
	%48 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 3
	store %..any %39, %..any* %48
	%49 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 4
	store %..any %44, %..any* %49
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 0
	%51 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 0
	store %..any* %50, %..any** %51
	%52 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 1
	store i64 5, i64* %52
	%53 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 2
	store i64 5, i64* %53
	%54 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	%55 = call i64 @fmt-4.fprintf(i64 %14, %..string {i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__str$b, i64 0, i32 0), i64 47}, {%..any*, i64, i64} %54)
	call ccc void @llvm.debugtrap()
	br label %if.done-2

if.done-2:
	ret void
}

define {i32, i64} @__string_decode_rune(%..string %s) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i32, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; ReturnStmt
	; SelectorExpr
	%2 = load %..string, %..string* %0, align 8
	%3 = call {i32, i64} @utf8-5.decode_rune-252(%..string %2)
	%4 = extractvalue {i32, i64} %3, 0
	%5 = extractvalue {i32, i64} %3, 1
	store {i32, i64} zeroinitializer, {i32, i64}* %1
	%6 = getelementptr inbounds {i32, i64}, {i32, i64}* %1, i64 0, i32 0
	store i32 %4, i32* %6
	%7 = getelementptr inbounds {i32, i64}, {i32, i64}* %1, i64 0, i32 1
	store i64 %5, i64* %7
	%8 = load {i32, i64}, {i32, i64}* %1, align 8
	ret {i32, i64} %8
}

define %..rawptr @__mem_set(%..rawptr %data, i32 %value, i64 %len) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %data, %..rawptr* %0
	store i32 zeroinitializer, i32* %1
		store i32 %value, i32* %1
	store i64 zeroinitializer, i64* %2
		store i64 %len, i64* %2
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load i32, i32* %1, align 4
	%5 = trunc i32 %4 to i8
	%6 = load i64, i64* %2, align 8
	call ccc void @llvm.memset.p0i8.i64(%..rawptr %3, i8 %5, i64 %6, i32 1, i1 false)
	; ReturnStmt
	%7 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %7
}

define %..rawptr @__mem_zero(%..rawptr %data, i64 %len) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %data, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %len, i64* %1
	; ReturnStmt
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = load i64, i64* %1, align 8
	%4 = call %..rawptr @__mem_set(%..rawptr %2, i32 0, i64 %3)
	ret %..rawptr %4
}

define %..rawptr @__mem_copy(%..rawptr %dst, %..rawptr %src, i64 %len) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %dst, %..rawptr* %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %src, %..rawptr* %1
	store i64 zeroinitializer, i64* %2
		store i64 %len, i64* %2
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load %..rawptr, %..rawptr* %1, align 8
	%5 = load i64, i64* %2, align 8
	call ccc void @llvm.memmove.p0i8.p0i8.i64(%..rawptr %3, %..rawptr %4, i64 %5, i32 1, i1 false)
	; ReturnStmt
	%6 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %6
}

define %..rawptr @__mem_copy_non_overlapping(%..rawptr %dst, %..rawptr %src, i64 %len) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %dst, %..rawptr* %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %src, %..rawptr* %1
	store i64 zeroinitializer, i64* %2
		store i64 %len, i64* %2
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load %..rawptr, %..rawptr* %1, align 8
	%5 = load i64, i64* %2, align 8
	call ccc void @llvm.memcpy.p0i8.p0i8.i64(%..rawptr %3, %..rawptr %4, i64 %5, i32 1, i1 false)
	; ReturnStmt
	%6 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %6
}

define i64 @__mem_compare(i8* %a, i8* %b, i64 %n) {
decls-0:
	%0 = alloca i8*, align 8
	%1 = alloca i8*, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	store i8* zeroinitializer, i8** %0
		store i8* %a, i8** %0
	store i8* zeroinitializer, i8** %1
		store i8* %b, i8** %1
	store i64 zeroinitializer, i64* %2
		store i64 %n, i64* %2
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %3
		store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	br label %for.interval.loop-1

for.interval.loop-1:
	%6 = load i64, i64* %2, align 8
	%7 = load i64, i64* %4, align 8
	%8 = icmp slt i64 %7, %6
	br i1 %8, label %for.interval.body-2, label %for.interval.done-8

for.interval.body-2:
	%9 = load i64, i64* %4, align 8
	%10 = load i64, i64* %5, align 8
	%11 = load i64, i64* %4, align 8
	%12 = add i64 %11, 1
	store i64 %12, i64* %4
	%13 = load i64, i64* %5, align 8
	%14 = add i64 %13, 1
	store i64 %14, i64* %5
	store i64 %9, i64* %3
	; MatchStmt
	%15 = load i8*, i8** %0, align 8
	%16 = load i64, i64* %3, align 8
	%17 = getelementptr inbounds i8, i8* %15, i64 %16
	%18 = getelementptr inbounds i8, i8* %17, i64 0
	%19 = load i8, i8* %18, align 1
	%20 = load i8*, i8** %1, align 8
	%21 = load i64, i64* %3, align 8
	%22 = getelementptr inbounds i8, i8* %20, i64 %21
	%23 = getelementptr inbounds i8, i8* %22, i64 0
	%24 = load i8, i8* %23, align 1
	%25 = icmp ult i8 %19, %24
	%26 = icmp eq i1 true, %25
	br i1 %26, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%27 = load i8*, i8** %0, align 8
	%28 = load i64, i64* %3, align 8
	%29 = getelementptr inbounds i8, i8* %27, i64 %28
	%30 = getelementptr inbounds i8, i8* %29, i64 0
	%31 = load i8, i8* %30, align 1
	%32 = load i8*, i8** %1, align 8
	%33 = load i64, i64* %3, align 8
	%34 = getelementptr inbounds i8, i8* %32, i64 %33
	%35 = getelementptr inbounds i8, i8* %34, i64 0
	%36 = load i8, i8* %35, align 1
	%37 = icmp ugt i8 %31, %36
	%38 = icmp eq i1 true, %37
	br i1 %38, label %match.fall.body-6, label %match.case.next-5

match.case.body-4:
	; ReturnStmt
	ret i64 -1

match.case.next-5:
	br label %match.done-7

match.fall.body-6:
	; ReturnStmt
	ret i64 1

match.done-7:
	br label %for.interval.loop-1

for.interval.done-8:
	; ReturnStmt
	ret i64 0
}

define float @__abs_complex64(%..complex64 %x) alwaysinline {
decls-0:
	%0 = alloca %..complex64, align 8
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	store %..complex64 zeroinitializer, %..complex64* %0
		store %..complex64 %x, %..complex64* %0
	; r
	store float zeroinitializer, float* %1
		; i
	store float zeroinitializer, float* %2
		; real
	%3 = load %..complex64, %..complex64* %0, align 8
	%4 = extractvalue %..complex64 %3, 0
	; imag
	%5 = load %..complex64, %..complex64* %0, align 8
	%6 = extractvalue %..complex64 %5, 1
	store float %4, float* %1
	store float %6, float* %2
	; ReturnStmt
	%7 = load float, float* %1, align 4
	%8 = load float, float* %1, align 4
	%9 = fmul float %7, %8
	%10 = load float, float* %2, align 4
	%11 = load float, float* %2, align 4
	%12 = fmul float %10, %11
	%13 = fadd float %9, %12
	%14 = call ccc float @llvm.sqrt.f32(float %13)
	ret float %14
}

define double @__abs_complex128(%..complex128 %x) alwaysinline {
decls-0:
	%0 = alloca %..complex128, align 8
	%1 = alloca double, align 8
	%2 = alloca double, align 8
	store %..complex128 zeroinitializer, %..complex128* %0
		store %..complex128 %x, %..complex128* %0
	; r
	store double zeroinitializer, double* %1
		; i
	store double zeroinitializer, double* %2
		; real
	%3 = load %..complex128, %..complex128* %0, align 8
	%4 = extractvalue %..complex128 %3, 0
	; imag
	%5 = load %..complex128, %..complex128* %0, align 8
	%6 = extractvalue %..complex128 %5, 1
	store double %4, double* %1
	store double %6, double* %2
	; ReturnStmt
	%7 = load double, double* %1, align 8
	%8 = load double, double* %1, align 8
	%9 = fmul double %7, %8
	%10 = load double, double* %2, align 8
	%11 = load double, double* %2, align 8
	%12 = fmul double %10, %11
	%13 = fadd double %9, %12
	%14 = call ccc double @llvm.sqrt.f64(double %13)
	ret double %14
}

define float @__abs_quaternion128(%..quaternion128 %x) alwaysinline {
decls-0:
	%0 = alloca %..quaternion128, align 8
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	store %..quaternion128 zeroinitializer, %..quaternion128* %0
		store %..quaternion128 %x, %..quaternion128* %0
	; r
	store float zeroinitializer, float* %1
		; i
	store float zeroinitializer, float* %2
		; j
	store float zeroinitializer, float* %3
		; k
	store float zeroinitializer, float* %4
		; real
	%5 = load %..quaternion128, %..quaternion128* %0, align 8
	%6 = extractvalue %..quaternion128 %5, 0
	; imag
	%7 = load %..quaternion128, %..quaternion128* %0, align 8
	%8 = extractvalue %..quaternion128 %7, 1
	; jmag
	%9 = load %..quaternion128, %..quaternion128* %0, align 8
	%10 = extractvalue %..quaternion128 %9, 2
	; kmag
	%11 = load %..quaternion128, %..quaternion128* %0, align 8
	%12 = extractvalue %..quaternion128 %11, 3
	store float %6, float* %1
	store float %8, float* %2
	store float %10, float* %3
	store float %12, float* %4
	; ReturnStmt
	%13 = load float, float* %1, align 4
	%14 = load float, float* %1, align 4
	%15 = fmul float %13, %14
	%16 = load float, float* %2, align 4
	%17 = load float, float* %2, align 4
	%18 = fmul float %16, %17
	%19 = fadd float %15, %18
	%20 = load float, float* %3, align 4
	%21 = load float, float* %3, align 4
	%22 = fmul float %20, %21
	%23 = fadd float %19, %22
	%24 = load float, float* %4, align 4
	%25 = load float, float* %4, align 4
	%26 = fmul float %24, %25
	%27 = fadd float %23, %26
	%28 = call ccc float @llvm.sqrt.f32(float %27)
	ret float %28
}

define double @__abs_quaternion256(%..quaternion256 %x) alwaysinline {
decls-0:
	%0 = alloca %..quaternion256, align 8
	%1 = alloca double, align 8
	%2 = alloca double, align 8
	%3 = alloca double, align 8
	%4 = alloca double, align 8
	store %..quaternion256 zeroinitializer, %..quaternion256* %0
		store %..quaternion256 %x, %..quaternion256* %0
	; r
	store double zeroinitializer, double* %1
		; i
	store double zeroinitializer, double* %2
		; j
	store double zeroinitializer, double* %3
		; k
	store double zeroinitializer, double* %4
		; real
	%5 = load %..quaternion256, %..quaternion256* %0, align 8
	%6 = extractvalue %..quaternion256 %5, 0
	; imag
	%7 = load %..quaternion256, %..quaternion256* %0, align 8
	%8 = extractvalue %..quaternion256 %7, 1
	; jmag
	%9 = load %..quaternion256, %..quaternion256* %0, align 8
	%10 = extractvalue %..quaternion256 %9, 2
	; kmag
	%11 = load %..quaternion256, %..quaternion256* %0, align 8
	%12 = extractvalue %..quaternion256 %11, 3
	store double %6, double* %1
	store double %8, double* %2
	store double %10, double* %3
	store double %12, double* %4
	; ReturnStmt
	%13 = load double, double* %1, align 8
	%14 = load double, double* %1, align 8
	%15 = fmul double %13, %14
	%16 = load double, double* %2, align 8
	%17 = load double, double* %2, align 8
	%18 = fmul double %16, %17
	%19 = fadd double %15, %18
	%20 = load double, double* %3, align 8
	%21 = load double, double* %3, align 8
	%22 = fmul double %20, %21
	%23 = fadd double %19, %22
	%24 = load double, double* %4, align 8
	%25 = load double, double* %4, align 8
	%26 = fmul double %24, %25
	%27 = fadd double %23, %26
	%28 = call ccc double @llvm.sqrt.f64(double %27)
	ret double %28
}

define void @__dynamic_array_make(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %len, i64 %cap) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %raw-6.Dynamic_Array*, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %array_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %len, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %cap, i64* %4
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %5
		%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = bitcast %..rawptr %6 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %7, %raw-6.Dynamic_Array** %5
	call void @__check_context()
	; AssignStmt
	; SelectorExpr
	%8 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%9 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %8, i64 0
	%10 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %9, i64 0, i32 3
	; SelectorExpr
	%11 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%12 = load %Allocator, %Allocator* %11, align 8
	store %Allocator %12, %Allocator* %10
	; assert
	; SelectorExpr
	; SelectorExpr
	%13 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0
	%15 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %14, i64 0, i32 3
	%16 = getelementptr inbounds %Allocator, %Allocator* %15, i64 0, i32 0
	%17 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %16, align 8
	%18 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* %17, zeroinitializer
	%19 = icmp eq i1 %18, false
	br i1 %19, label %builtin.assert.err-1, label %builtin.assert.done-2

builtin.assert.err-1:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$c, i64 0, i32 0), i64 26}, i64 435, i64 25, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$d, i64 0, i32 0), i64 32})
	br label %builtin.assert.done-2

builtin.assert.done-2:
	; IfStmt
	%20 = load i64, i64* %4, align 8
	%21 = icmp sgt i64 %20, 0
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	%22 = load %..rawptr, %..rawptr* %0, align 8
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %2, align 8
	%25 = load i64, i64* %4, align 8
	%26 = call i1 @__dynamic_array_reserve(%..rawptr %22, i64 %23, i64 %24, i64 %25)
	; AssignStmt
	; SelectorExpr
	%27 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%28 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %27, i64 0
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0, i32 1
	%30 = load i64, i64* %3, align 8
	store i64 %30, i64* %29
	br label %if.done-4

if.done-4:
	ret void
}

define i1 @__dynamic_array_reserve(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %cap) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %Allocator, align 8
	%8 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %array_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %cap, i64* %3
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %4
		%9 = load %..rawptr, %..rawptr* %0, align 8
	%10 = bitcast %..rawptr %9 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %10, %raw-6.Dynamic_Array** %4
	; IfStmt
	%11 = load i64, i64* %3, align 8
	; SelectorExpr
	%12 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%13 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %12, i64 0
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0, i32 2
	%15 = load i64, i64* %14, align 8
	%16 = icmp sle i64 %11, %15
	br i1 %16, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 true

if.done-2:
	call void @__check_context()
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 3
	%20 = getelementptr inbounds %Allocator, %Allocator* %19, i64 0, i32 0
	%21 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %20, align 8
	%22 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* %21, zeroinitializer
	br i1 %22, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%23 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0
	%25 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %24, i64 0, i32 3
	; SelectorExpr
	%26 = getelementptr inbounds %Context, %Context* @__context, i64 0, i32 1
	%27 = load %Allocator, %Allocator* %26, align 8
	store %Allocator %27, %Allocator* %25
	br label %if.done-4

if.done-4:
	; assert
	; SelectorExpr
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	%31 = getelementptr inbounds %Allocator, %Allocator* %30, i64 0, i32 0
	%32 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %31, align 8
	%33 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)* %32, zeroinitializer
	%34 = icmp eq i1 %33, false
	br i1 %34, label %builtin.assert.err-5, label %builtin.assert.done-6

builtin.assert.err-5:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$e, i64 0, i32 0), i64 26}, i64 454, i64 25, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$f, i64 0, i32 0), i64 32})
	br label %builtin.assert.done-6

builtin.assert.done-6:
	; old_size
	store i64 zeroinitializer, i64* %5
		; SelectorExpr
	%35 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%36 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %35, i64 0
	%37 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %36, i64 0, i32 2
	%38 = load i64, i64* %37, align 8
	%39 = load i64, i64* %1, align 8
	%40 = mul i64 %38, %39
	store i64 %40, i64* %5
	; new_size
	store i64 zeroinitializer, i64* %6
		%41 = load i64, i64* %3, align 8
	%42 = load i64, i64* %1, align 8
	%43 = mul i64 %41, %42
	store i64 %43, i64* %6
	; allocator
	store %Allocator zeroinitializer, %Allocator* %7
		; SelectorExpr
	%44 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%45 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %44, i64 0
	%46 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %45, i64 0, i32 3
	%47 = load %Allocator, %Allocator* %46, align 8
	store %Allocator %47, %Allocator* %7
	; new_data
	store %..rawptr zeroinitializer, %..rawptr* %8
		; SelectorExpr
	%48 = getelementptr inbounds %Allocator, %Allocator* %7, i64 0, i32 0
	%49 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64)** %48, align 8
	; SelectorExpr
	%50 = getelementptr inbounds %Allocator, %Allocator* %7, i64 0, i32 1
	%51 = load %..rawptr, %..rawptr* %50, align 8
	%52 = load i64, i64* %6, align 8
	%53 = load i64, i64* %2, align 8
	; SelectorExpr
	%54 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%55 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %54, i64 0
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0, i32 0
	%57 = load %..rawptr, %..rawptr* %56, align 8
	%58 = load i64, i64* %5, align 8
	%59 = call %..rawptr %49(%..rawptr %51, i8 3, i64 %52, i64 %53, %..rawptr %57, i64 %58, i64 0)
	store %..rawptr %59, %..rawptr* %8
	; IfStmt
	%60 = load %..rawptr, %..rawptr* %8, align 8
	%61 = icmp eq %..rawptr %60, zeroinitializer
	br i1 %61, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret i1 false

if.done-8:
	; AssignStmt
	; SelectorExpr
	%62 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%63 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %62, i64 0
	%64 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %63, i64 0, i32 0
	%65 = load %..rawptr, %..rawptr* %8, align 8
	store %..rawptr %65, %..rawptr* %64
	; AssignStmt
	; SelectorExpr
	%66 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0, i32 2
	%69 = load i64, i64* %3, align 8
	store i64 %69, i64* %68
	; ReturnStmt
	ret i1 true
}

define i1 @__dynamic_array_resize(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %len) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca i1, align 1
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %array_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %len, i64* %3
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %4
		%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = bitcast %..rawptr %6 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %7, %raw-6.Dynamic_Array** %4
	; ok
	store i1 zeroinitializer, i1* %5
		%8 = load %..rawptr, %..rawptr* %0, align 8
	%9 = load i64, i64* %1, align 8
	%10 = load i64, i64* %2, align 8
	%11 = load i64, i64* %3, align 8
	%12 = call i1 @__dynamic_array_reserve(%..rawptr %8, i64 %9, i64 %10, i64 %11)
	store i1 %12, i1* %5
	; IfStmt
	%13 = load i1, i1* %5, align 1
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%14 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%15 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %14, i64 0
	%16 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %15, i64 0, i32 1
	%17 = load i64, i64* %3, align 8
	store i64 %17, i64* %16
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%18 = load i1, i1* %5, align 1
	ret i1 %18
}

define i64 @__dynamic_array_append(%..rawptr %array_, i64 %elem_size, i64 %elem_align, %..rawptr %items, i64 %item_count) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..rawptr, align 8
	%4 = alloca i64, align 8
	%5 = alloca %raw-6.Dynamic_Array*, align 8
	%6 = alloca i1, align 1
	%7 = alloca i64, align 8
	%8 = alloca i8*, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %array_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	store %..rawptr zeroinitializer, %..rawptr* %3
		store %..rawptr %items, %..rawptr* %3
	store i64 zeroinitializer, i64* %4
		store i64 %item_count, i64* %4
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %5
		%9 = load %..rawptr, %..rawptr* %0, align 8
	%10 = bitcast %..rawptr %9 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %10, %raw-6.Dynamic_Array** %5
	; IfStmt
	%11 = load i64, i64* %4, align 8
	%12 = icmp sle i64 %11, 0
	br i1 %12, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%13 = load %..rawptr, %..rawptr* %3, align 8
	%14 = icmp eq %..rawptr %13, zeroinitializer
	br i1 %14, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	; SelectorExpr
	%15 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%16 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %15, i64 0
	%17 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %16, i64 0, i32 1
	%18 = load i64, i64* %17, align 8
	ret i64 %18

if.done-3:
	; ok
	store i1 zeroinitializer, i1* %6
		store i1 true, i1* %6
	; IfStmt
	; SelectorExpr
	%19 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%20 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %19, i64 0
	%21 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %20, i64 0, i32 2
	%22 = load i64, i64* %21, align 8
	; SelectorExpr
	%23 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0
	%25 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %24, i64 0, i32 1
	%26 = load i64, i64* %25, align 8
	%27 = load i64, i64* %4, align 8
	%28 = add i64 %26, %27
	%29 = icmp sle i64 %22, %28
	br i1 %29, label %if.then-4, label %if.done-5

if.then-4:
	; cap
	store i64 zeroinitializer, i64* %7
		; SelectorExpr
	%30 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%31 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %30, i64 0
	%32 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %31, i64 0, i32 2
	%33 = load i64, i64* %32, align 8
	%34 = mul i64 2, %33
	; max
	%35 = load i64, i64* %4, align 8
	%36 = icmp sgt i64 8, %35
	%37 = select i1 %36, i64 8, i64 %35
	%38 = add i64 %34, %37
	store i64 %38, i64* %7
	; AssignStmt
	%39 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%40 = load i64, i64* %1, align 8
	%41 = load i64, i64* %2, align 8
	%42 = load i64, i64* %7, align 8
	%43 = bitcast %raw-6.Dynamic_Array* %39 to %..rawptr
	%44 = call i1 @__dynamic_array_reserve(%..rawptr %43, i64 %40, i64 %41, i64 %42)
	store i1 %44, i1* %6
	br label %if.done-5

if.done-5:
	; IfStmt
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %if.done-7, label %if.then-6

if.then-6:
	; ReturnStmt
	; SelectorExpr
	%46 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%47 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %46, i64 0
	%48 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %47, i64 0, i32 1
	%49 = load i64, i64* %48, align 8
	ret i64 %49

if.done-7:
	; data
	store i8* zeroinitializer, i8** %8
		; SelectorExpr
	%50 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%51 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %50, i64 0
	%52 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %51, i64 0, i32 0
	%53 = load %..rawptr, %..rawptr* %52, align 8
	%54 = bitcast %..rawptr %53 to i8*
	store i8* %54, i8** %8
	; assert
	%55 = load i8*, i8** %8, align 8
	%56 = icmp ne i8* %55, zeroinitializer
	%57 = icmp eq i1 %56, false
	br i1 %57, label %builtin.assert.err-8, label %builtin.assert.done-9

builtin.assert.err-8:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$10, i64 0, i32 0), i64 26}, i64 500, i64 9, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$11, i64 0, i32 0), i64 11})
	br label %builtin.assert.done-9

builtin.assert.done-9:
	%58 = load i8*, i8** %8, align 8
	%59 = load i64, i64* %1, align 8
	; SelectorExpr
	%60 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%61 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %60, i64 0
	%62 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %61, i64 0, i32 1
	%63 = load i64, i64* %62, align 8
	%64 = mul i64 %59, %63
	%65 = getelementptr inbounds i8, i8* %58, i64 %64
	%66 = load %..rawptr, %..rawptr* %3, align 8
	%67 = load i64, i64* %1, align 8
	%68 = load i64, i64* %4, align 8
	%69 = mul i64 %67, %68
	%70 = bitcast i8* %65 to %..rawptr
	%71 = call %..rawptr @__mem_copy(%..rawptr %70, %..rawptr %66, i64 %69)
	; AssignStmt
	; SelectorExpr
	%72 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%73 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %72, i64 0
	%74 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %73, i64 0, i32 1
	%75 = load i64, i64* %4, align 8
	%76 = load i64, i64* %74, align 8
	%77 = add i64 %76, %75
	store i64 %77, i64* %74
	; ReturnStmt
	; SelectorExpr
	%78 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%79 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %78, i64 0
	%80 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %79, i64 0, i32 1
	%81 = load i64, i64* %80, align 8
	ret i64 %81
}

define i64 @__dynamic_array_append_nothing(%..rawptr %array_, i64 %elem_size, i64 %elem_align) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %raw-6.Dynamic_Array*, align 8
	%4 = alloca i1, align 1
	%5 = alloca i64, align 8
	%6 = alloca i8*, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %array_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %3
		%7 = load %..rawptr, %..rawptr* %0, align 8
	%8 = bitcast %..rawptr %7 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %8, %raw-6.Dynamic_Array** %3
	; ok
	store i1 zeroinitializer, i1* %4
		store i1 true, i1* %4
	; IfStmt
	; SelectorExpr
	%9 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%10 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %9, i64 0
	%11 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %10, i64 0, i32 2
	%12 = load i64, i64* %11, align 8
	; SelectorExpr
	%13 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0
	%15 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %14, i64 0, i32 1
	%16 = load i64, i64* %15, align 8
	%17 = add i64 %16, 1
	%18 = icmp sle i64 %12, %17
	br i1 %18, label %if.then-1, label %if.done-2

if.then-1:
	; cap
	store i64 zeroinitializer, i64* %5
		; SelectorExpr
	%19 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%20 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %19, i64 0
	%21 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %20, i64 0, i32 2
	%22 = load i64, i64* %21, align 8
	%23 = mul i64 2, %22
	%24 = add i64 %23, 8
	store i64 %24, i64* %5
	; AssignStmt
	%25 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%26 = load i64, i64* %1, align 8
	%27 = load i64, i64* %2, align 8
	%28 = load i64, i64* %5, align 8
	%29 = bitcast %raw-6.Dynamic_Array* %25 to %..rawptr
	%30 = call i1 @__dynamic_array_reserve(%..rawptr %29, i64 %26, i64 %27, i64 %28)
	store i1 %30, i1* %4
	br label %if.done-2

if.done-2:
	; IfStmt
	%31 = load i1, i1* %4, align 1
	br i1 %31, label %if.done-4, label %if.then-3

if.then-3:
	; ReturnStmt
	; SelectorExpr
	%32 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%33 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %32, i64 0
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0, i32 1
	%35 = load i64, i64* %34, align 8
	ret i64 %35

if.done-4:
	; data
	store i8* zeroinitializer, i8** %6
		; SelectorExpr
	%36 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%37 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %36, i64 0
	%38 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %37, i64 0, i32 0
	%39 = load %..rawptr, %..rawptr* %38, align 8
	%40 = bitcast %..rawptr %39 to i8*
	store i8* %40, i8** %6
	; assert
	%41 = load i8*, i8** %6, align 8
	%42 = icmp ne i8* %41, zeroinitializer
	%43 = icmp eq i1 %42, false
	br i1 %43, label %builtin.assert.err-5, label %builtin.assert.done-6

builtin.assert.err-5:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$12, i64 0, i32 0), i64 26}, i64 519, i64 9, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$13, i64 0, i32 0), i64 11})
	br label %builtin.assert.done-6

builtin.assert.done-6:
	%44 = load i8*, i8** %6, align 8
	%45 = load i64, i64* %1, align 8
	; SelectorExpr
	%46 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%47 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %46, i64 0
	%48 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %47, i64 0, i32 1
	%49 = load i64, i64* %48, align 8
	%50 = mul i64 %45, %49
	%51 = getelementptr inbounds i8, i8* %44, i64 %50
	%52 = load i64, i64* %1, align 8
	%53 = bitcast i8* %51 to %..rawptr
	%54 = call %..rawptr @__mem_zero(%..rawptr %53, i64 %52)
	; SelectorExpr
	%55 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0, i32 1
	%58 = load i64, i64* %57, align 8
	%59 = add i64 %58, 1
	store i64 %59, i64* %57
	; ReturnStmt
	; SelectorExpr
	%60 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%61 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %60, i64 0
	%62 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %61, i64 0, i32 1
	%63 = load i64, i64* %62, align 8
	ret i64 %63
}

define i64 @__slice_append(%..rawptr %slice_, i64 %elem_size, i64 %elem_align, %..rawptr %items, i64 %item_count) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..rawptr, align 8
	%4 = alloca i64, align 8
	%5 = alloca %raw-6.Slice*, align 8
	%6 = alloca i8*, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %slice_, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %elem_size, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %elem_align, i64* %2
	store %..rawptr zeroinitializer, %..rawptr* %3
		store %..rawptr %items, %..rawptr* %3
	store i64 zeroinitializer, i64* %4
		store i64 %item_count, i64* %4
	; slice
	store %raw-6.Slice* zeroinitializer, %raw-6.Slice** %5
		%7 = load %..rawptr, %..rawptr* %0, align 8
	%8 = bitcast %..rawptr %7 to %raw-6.Slice*
	store %raw-6.Slice* %8, %raw-6.Slice** %5
	; IfStmt
	%9 = load i64, i64* %4, align 8
	%10 = icmp sle i64 %9, 0
	br i1 %10, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%11 = load %..rawptr, %..rawptr* %3, align 8
	%12 = icmp eq %..rawptr %11, zeroinitializer
	br i1 %12, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	; SelectorExpr
	%13 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%14 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %13, i64 0
	%15 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %14, i64 0, i32 1
	%16 = load i64, i64* %15, align 8
	ret i64 %16

if.done-3:
	; AssignStmt
	; min
	; SelectorExpr
	%17 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%18 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	; SelectorExpr
	%21 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%22 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %21, i64 0
	%23 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %22, i64 0, i32 1
	%24 = load i64, i64* %23, align 8
	%25 = sub i64 %20, %24
	%26 = load i64, i64* %4, align 8
	%27 = icmp slt i64 %25, %26
	%28 = select i1 %27, i64 %25, i64 %26
	store i64 %28, i64* %4
	; IfStmt
	%29 = load i64, i64* %4, align 8
	%30 = icmp sgt i64 %29, 0
	br i1 %30, label %if.then-4, label %if.done-7

if.then-4:
	; data
	store i8* zeroinitializer, i8** %6
		; SelectorExpr
	%31 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%32 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %31, i64 0
	%33 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %32, i64 0, i32 0
	%34 = load %..rawptr, %..rawptr* %33, align 8
	%35 = bitcast %..rawptr %34 to i8*
	store i8* %35, i8** %6
	; assert
	%36 = load i8*, i8** %6, align 8
	%37 = icmp ne i8* %36, zeroinitializer
	%38 = icmp eq i1 %37, false
	br i1 %38, label %builtin.assert.err-5, label %builtin.assert.done-6

builtin.assert.err-5:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$14, i64 0, i32 0), i64 26}, i64 536, i64 10, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$15, i64 0, i32 0), i64 11})
	br label %builtin.assert.done-6

builtin.assert.done-6:
	%39 = load i8*, i8** %6, align 8
	%40 = load i64, i64* %1, align 8
	; SelectorExpr
	%41 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%42 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %41, i64 0
	%43 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %42, i64 0, i32 1
	%44 = load i64, i64* %43, align 8
	%45 = mul i64 %40, %44
	%46 = getelementptr inbounds i8, i8* %39, i64 %45
	%47 = load %..rawptr, %..rawptr* %3, align 8
	%48 = load i64, i64* %1, align 8
	%49 = load i64, i64* %4, align 8
	%50 = mul i64 %48, %49
	%51 = bitcast i8* %46 to %..rawptr
	%52 = call %..rawptr @__mem_copy(%..rawptr %51, %..rawptr %47, i64 %50)
	; AssignStmt
	; SelectorExpr
	%53 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%54 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %53, i64 0
	%55 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %54, i64 0, i32 1
	%56 = load i64, i64* %4, align 8
	%57 = load i64, i64* %55, align 8
	%58 = add i64 %57, %56
	store i64 %58, i64* %55
	br label %if.done-7

if.done-7:
	; ReturnStmt
	; SelectorExpr
	%59 = load %raw-6.Slice*, %raw-6.Slice** %5, align 8
	%60 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %59, i64 0
	%61 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %60, i64 0, i32 1
	%62 = load i64, i64* %61, align 8
	ret i64 %62
}

define i64 @__default_hash({i8*, i64, i64} %data) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %data, {i8*, i64, i64}* %0
	; ReturnStmt
	%1 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%2 = call i64 @__default_hash.fnv64a-0({i8*, i64, i64} %1)
	ret i64 %2
}

define i64 @__default_hash.fnv64a-0({i8*, i64, i64} %data) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca i8, align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %data, {i8*, i64, i64}* %0
	; h
	store i64 zeroinitializer, i64* %1
		store i64 -3750763034362895579, i64* %1
	; RangeStmt
	; b
	store i8 zeroinitializer, i8* %2
		%5 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	store i64 zeroinitializer, i64* %3
	%6 = extractvalue {i8*, i64, i64} %5, 1
	store i64 %6, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-1

for.index.loop-1:
	%7 = load i64, i64* %4, align 8
	%8 = add i64 %7, 1
	store i64 %8, i64* %4
	%9 = load i64, i64* %3, align 8
	%10 = icmp slt i64 %8, %9
	br i1 %10, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%11 = load i64, i64* %4, align 8
	%12 = extractvalue {i8*, i64, i64} %5, 0
	%13 = getelementptr inbounds i8, i8* %12, i64 %11
	%14 = load i8, i8* %13, align 1
	store i8 %14, i8* %2
	; AssignStmt
	%15 = load i64, i64* %1, align 8
	%16 = load i8, i8* %2, align 1
	%17 = zext i8 %16 to i64
	%18 = xor i64 %15, %17
	%19 = mul i64 %18, 1099511628211
	store i64 %19, i64* %1
	br label %for.index.loop-1

for.index.done-3:
	; ReturnStmt
	%20 = load i64, i64* %1, align 8
	ret i64 %20
}

define i64 @__default_hash_string(%..string %s) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; ReturnStmt
	%3 = load %..string, %..string* %0, align 8
	%4 = extractvalue %..string %3, 0
	store i8* zeroinitializer, i8** %1
	store i8* %4, i8** %1
	%5 = extractvalue %..string %3, 1
	%6 = sub i64 %5, 0
	%7 = sub i64 %5, 0
	%8 = load i8*, i8** %1, align 8
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%10 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %9, i8** %10
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %6, i64* %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %7, i64* %12
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%14 = call i64 @__default_hash({i8*, i64, i64} %13)
	ret i64 %14
}

define void @__dynamic_map_reserve(%__Map_Header* %header, i64 %cap) {
decls-0:
	%0 = alloca i64, align 8
	%1 = load %__Map_Header, %__Map_Header* %header, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %cap, i64* %0
	; SelectorExpr
	%2 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%3 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %2, align 8
	%4 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %3, i64 0
	%5 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %4, i64 0, i32 0
	%6 = getelementptr inbounds {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %5, i64 0
	%7 = load i64, i64* %0, align 8
	%8 = bitcast {i64*, i64, i64,%Allocator}* %6 to %..rawptr
	%9 = call i1 @__dynamic_array_reserve(%..rawptr %8, i64 8, i64 8, i64 %7)
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%11 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %10, align 8
	%12 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %11, i64 0
	%13 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %12, i64 0, i32 1
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 2
	%16 = load i64, i64* %15, align 8
	%17 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 3
	%18 = load i64, i64* %17, align 8
	%19 = load i64, i64* %0, align 8
	%20 = bitcast %raw-6.Dynamic_Array* %14 to %..rawptr
	%21 = call i1 @__dynamic_array_reserve(%..rawptr %20, i64 %16, i64 %18, i64 %19)
	ret void
}

define void @__dynamic_map_rehash(%__Map_Header* %header, i64 %new_count) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 8
	%2 = alloca %raw-6.Dynamic_Map, align 8
	%3 = alloca %raw-6.Dynamic_Array*, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca %__Map_Header, align 16
	%10 = alloca %__Map_Entry_Header*, align 8
	%11 = alloca %__Map_Header, align 16
	%12 = alloca i8*, align 8
	%13 = alloca %__Map_Find_Result, align 8
	%14 = alloca %__Map_Header, align 16
	%15 = alloca %__Map_Key, align 16
	%16 = alloca i64, align 8
	%17 = alloca %__Map_Header, align 16
	%18 = alloca %__Map_Key, align 16
	%19 = alloca %__Map_Entry_Header*, align 8
	%20 = alloca %__Map_Header, align 16
	%21 = alloca %__Map_Entry_Header*, align 8
	%22 = alloca %__Map_Header, align 16
	%23 = alloca i8*, align 8
	%24 = alloca %__Map_Header, align 16
	%25 = alloca %__Map_Header, align 16
	%26 = alloca %Allocator, align 16
	%27 = alloca %Allocator, align 16
	%28 = load %__Map_Header, %__Map_Header* %header, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %new_count, i64* %0
	; new_header
	store %__Map_Header zeroinitializer, %__Map_Header* %1
		%29 = load %__Map_Header, %__Map_Header* %header, align 8
	store %__Map_Header %29, %__Map_Header* %1
	; nm
	store %raw-6.Dynamic_Map zeroinitializer, %raw-6.Dynamic_Map* %2
		; AssignStmt
	; SelectorExpr
	%30 = getelementptr inbounds %__Map_Header, %__Map_Header* %1, i64 0, i32 0
	%31 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0
	store %raw-6.Dynamic_Map* %31, %raw-6.Dynamic_Map** %30
	; header_hashes
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %3
		; SelectorExpr
	; SelectorExpr
	%32 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%33 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %32, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %34, i64 0, i32 0
	%36 = getelementptr inbounds {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %35, i64 0
	%37 = bitcast {i64*, i64, i64,%Allocator}* %36 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %37, %raw-6.Dynamic_Array** %3
	; nm_hashes
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %4
		; SelectorExpr
	%38 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0, i32 0
	%39 = getelementptr inbounds {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %38, i64 0
	%40 = bitcast {i64*, i64, i64,%Allocator}* %39 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %40, %raw-6.Dynamic_Array** %4
	%41 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%42 = load i64, i64* %0, align 8
	%43 = bitcast %raw-6.Dynamic_Array* %41 to %..rawptr
	%44 = call i1 @__dynamic_array_resize(%..rawptr %43, i64 8, i64 8, i64 %42)
	; SelectorExpr
	%45 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0, i32 1
	%46 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %45, i64 0
	%47 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 2
	%48 = load i64, i64* %47, align 8
	%49 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 3
	%50 = load i64, i64* %49, align 8
	; SelectorExpr
	; SelectorExpr
	%51 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%52 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %51, align 8
	%53 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %52, i64 0
	%54 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %53, i64 0, i32 1
	%55 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %54, i64 0, i32 1
	%56 = load i64, i64* %55, align 8
	%57 = bitcast %raw-6.Dynamic_Array* %46 to %..rawptr
	%58 = call i1 @__dynamic_array_reserve(%..rawptr %57, i64 %48, i64 %50, i64 %56)
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %5
		store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	store i64 zeroinitializer, i64* %7
	store i64 0, i64* %7
	br label %for.interval.loop-1

for.interval.loop-1:
	%59 = load i64, i64* %0, align 8
	%60 = load i64, i64* %6, align 8
	%61 = icmp slt i64 %60, %59
	br i1 %61, label %for.interval.body-2, label %for.interval.done-3

for.interval.body-2:
	%62 = load i64, i64* %6, align 8
	%63 = load i64, i64* %7, align 8
	%64 = load i64, i64* %6, align 8
	%65 = add i64 %64, 1
	store i64 %65, i64* %6
	%66 = load i64, i64* %7, align 8
	%67 = add i64 %66, 1
	store i64 %67, i64* %7
	store i64 %62, i64* %5
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%68 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0, i32 0
	%69 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %68, align 8
	%70 = extractvalue {i64*, i64, i64,%Allocator} %69, 0
	%71 = extractvalue {i64*, i64, i64,%Allocator} %69, 1
	%72 = load i64, i64* %5, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$16, i64 0, i32 0), i64 26}, i64 606, i64 13, i64 %72, i64 %71)
	%73 = getelementptr inbounds i64, i64* %70, i64 %72
	store i64 -1, i64* %73
	br label %for.interval.loop-1

for.interval.done-3:
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %8
		store i64 0, i64* %8
	br label %for.loop-4

for.loop-4:
	%74 = load i64, i64* %8, align 8
	; SelectorExpr
	; SelectorExpr
	%75 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%76 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %75, align 8
	%77 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %76, i64 0
	%78 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %77, i64 0, i32 1
	%79 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %78, i64 0, i32 1
	%80 = load i64, i64* %79, align 8
	%81 = icmp slt i64 %74, %80
	br i1 %81, label %for.body-5, label %for.done-13

for.body-5:
	; IfStmt
	; SelectorExpr
	%82 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0, i32 0
	%83 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %82, align 8
	%84 = extractvalue {i64*, i64, i64,%Allocator} %83, 1
	%85 = icmp eq i64 %84, 0
	br i1 %85, label %if.then-6, label %if.done-7

if.then-6:
	%86 = load %__Map_Header, %__Map_Header* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %9
	store %__Map_Header %86, %__Map_Header* %9
	call void @__dynamic_map_grow(%__Map_Header* %9)
	br label %if.done-7

if.done-7:
	; entry_header
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %10
		%87 = load %__Map_Header, %__Map_Header* %header, align 8
	%88 = load i64, i64* %8, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %11
	store %__Map_Header %87, %__Map_Header* %11
	%89 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %11, i64 %88)
	store %__Map_Entry_Header* %89, %__Map_Entry_Header** %10
	; data
	store i8* zeroinitializer, i8** %12
		%90 = load %__Map_Entry_Header*, %__Map_Entry_Header** %10, align 8
	%91 = bitcast %__Map_Entry_Header* %90 to i8*
	store i8* %91, i8** %12
	; fr
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %13
		%92 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%93 = load %__Map_Entry_Header*, %__Map_Entry_Header** %10, align 8
	%94 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %93, i64 0
	%95 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %94, i64 0, i32 0
	%96 = load %__Map_Key, %__Map_Key* %95, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %14
	store %__Map_Header %92, %__Map_Header* %14
	store %__Map_Key zeroinitializer, %__Map_Key* %15
	store %__Map_Key %96, %__Map_Key* %15
	%97 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %14, %__Map_Key* %15)
	store %__Map_Find_Result %97, %__Map_Find_Result* %13
	; j
	store i64 zeroinitializer, i64* %16
		%98 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%99 = load %__Map_Entry_Header*, %__Map_Entry_Header** %10, align 8
	%100 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %99, i64 0
	%101 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %100, i64 0, i32 0
	%102 = load %__Map_Key, %__Map_Key* %101, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %17
	store %__Map_Header %98, %__Map_Header* %17
	store %__Map_Key zeroinitializer, %__Map_Key* %18
	store %__Map_Key %102, %__Map_Key* %18
	%103 = call i64 @__dynamic_map_add_entry(%__Map_Header* %17, %__Map_Key* %18)
	store i64 %103, i64* %16
	; IfStmt
	; SelectorExpr
	%104 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %13, i64 0, i32 1
	%105 = load i64, i64* %104, align 8
	%106 = icmp slt i64 %105, 0
	br i1 %106, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%107 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0, i32 0
	%108 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %107, align 8
	%109 = extractvalue {i64*, i64, i64,%Allocator} %108, 0
	%110 = extractvalue {i64*, i64, i64,%Allocator} %108, 1
	; SelectorExpr
	%111 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %13, i64 0, i32 0
	%112 = load i64, i64* %111, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$17, i64 0, i32 0), i64 26}, i64 620, i64 17, i64 %112, i64 %110)
	%113 = getelementptr inbounds i64, i64* %109, i64 %112
	%114 = load i64, i64* %16, align 8
	store i64 %114, i64* %113
	br label %if.done-10

if.else-9:
	; e
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %19
		%115 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%116 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %13, i64 0, i32 1
	%117 = load i64, i64* %116, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %20
	store %__Map_Header %115, %__Map_Header* %20
	%118 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %20, i64 %117)
	store %__Map_Entry_Header* %118, %__Map_Entry_Header** %19
	; AssignStmt
	; SelectorExpr
	%119 = load %__Map_Entry_Header*, %__Map_Entry_Header** %19, align 8
	%120 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %119, i64 0
	%121 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %120, i64 0, i32 1
	%122 = load i64, i64* %16, align 8
	store i64 %122, i64* %121
	br label %if.done-10

if.done-10:
	; e
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %21
		%123 = load %__Map_Header, %__Map_Header* %1, align 8
	%124 = load i64, i64* %16, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %22
	store %__Map_Header %123, %__Map_Header* %22
	%125 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %22, i64 %124)
	store %__Map_Entry_Header* %125, %__Map_Entry_Header** %21
	; AssignStmt
	; SelectorExpr
	%126 = load %__Map_Entry_Header*, %__Map_Entry_Header** %21, align 8
	%127 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %126, i64 0
	%128 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %127, i64 0, i32 1
	; SelectorExpr
	%129 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %13, i64 0, i32 2
	%130 = load i64, i64* %129, align 8
	store i64 %130, i64* %128
	; ndata
	store i8* zeroinitializer, i8** %23
		%131 = load %__Map_Entry_Header*, %__Map_Entry_Header** %21, align 8
	%132 = bitcast %__Map_Entry_Header* %131 to i8*
	store i8* %132, i8** %23
	%133 = load i8*, i8** %23, align 8
	%134 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 4
	%135 = load i64, i64* %134, align 8
	%136 = getelementptr inbounds i8, i8* %133, i64 %135
	%137 = load i8*, i8** %12, align 8
	%138 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 4
	%139 = load i64, i64* %138, align 8
	%140 = getelementptr inbounds i8, i8* %137, i64 %139
	%141 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 5
	%142 = load i64, i64* %141, align 8
	%143 = bitcast i8* %136 to %..rawptr
	%144 = bitcast i8* %140 to %..rawptr
	%145 = call %..rawptr @__mem_copy(%..rawptr %143, %..rawptr %144, i64 %142)
	; IfStmt
	%146 = load %__Map_Header, %__Map_Header* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %24
	store %__Map_Header %146, %__Map_Header* %24
	%147 = call i1 @__dynamic_map_full(%__Map_Header* %24)
	br i1 %147, label %if.then-11, label %if.done-12

if.then-11:
	%148 = load %__Map_Header, %__Map_Header* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %25
	store %__Map_Header %148, %__Map_Header* %25
	call void @__dynamic_map_grow(%__Map_Header* %25)
	br label %if.done-12

if.done-12:
	%149 = load i64, i64* %8, align 8
	%150 = add i64 %149, 1
	store i64 %150, i64* %8
	br label %for.loop-4

for.done-13:
	; SelectorExpr
	%151 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%152 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %151, i64 0
	%153 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %152, i64 0, i32 3
	%154 = load %Allocator, %Allocator* %153, align 8
	; SelectorExpr
	%155 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%156 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %155, i64 0
	%157 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %156, i64 0, i32 0
	%158 = load %..rawptr, %..rawptr* %157, align 8
	store %Allocator zeroinitializer, %Allocator* %26
	store %Allocator %154, %Allocator* %26
	call void @free_ptr_with_allocator(%Allocator* %26, %..rawptr %158)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%159 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%160 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %159, align 8
	%161 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %160, i64 0
	%162 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %161, i64 0, i32 1
	%163 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %162, i64 0, i32 3
	%164 = load %Allocator, %Allocator* %163, align 8
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%165 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%166 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %165, align 8
	%167 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %166, i64 0
	%168 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %167, i64 0, i32 1
	%169 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %168, i64 0, i32 0
	%170 = load %..rawptr, %..rawptr* %169, align 8
	store %Allocator zeroinitializer, %Allocator* %27
	store %Allocator %164, %Allocator* %27
	call void @free_ptr_with_allocator(%Allocator* %27, %..rawptr %170)
	; AssignStmt
	; SelectorExpr
	%171 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%172 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %171, align 8
	%173 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %172, i64 0
	%174 = load %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, align 8
	store %raw-6.Dynamic_Map %174, %raw-6.Dynamic_Map* %173
	ret void
}

define %..rawptr @__dynamic_map_get(%__Map_Header* %h, %__Map_Key* %key) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = alloca %__Map_Key, align 16
	%3 = alloca %__Map_Find_Result, align 8
	%4 = alloca i8*, align 8
	%5 = alloca %__Map_Header, align 16
	%6 = alloca i8*, align 8
	%7 = load %__Map_Header, %__Map_Header* %h, align 8
	%8 = load %__Map_Key, %__Map_Key* %key, align 8
	; index
	store i64 zeroinitializer, i64* %0
		; SelectorExpr
	%9 = load %__Map_Header, %__Map_Header* %h, align 8
	%10 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %9, %__Map_Header* %1
	store %__Map_Key zeroinitializer, %__Map_Key* %2
	store %__Map_Key %10, %__Map_Key* %2
	%11 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %1, %__Map_Key* %2)
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %3
	store %__Map_Find_Result %11, %__Map_Find_Result* %3
	%12 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %3, i64 0, i32 2
	%13 = load i64, i64* %12, align 8
	store i64 %13, i64* %0
	; IfStmt
	%14 = load i64, i64* %0, align 8
	%15 = icmp sge i64 %14, 0
	br i1 %15, label %if.then-1, label %if.done-2

if.then-1:
	; data
	store i8* zeroinitializer, i8** %4
		%16 = load %__Map_Header, %__Map_Header* %h, align 8
	%17 = load i64, i64* %0, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %16, %__Map_Header* %5
	%18 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %5, i64 %17)
	%19 = bitcast %__Map_Entry_Header* %18 to i8*
	store i8* %19, i8** %4
	; val
	store i8* zeroinitializer, i8** %6
		%20 = load i8*, i8** %4, align 8
	; SelectorExpr
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 4
	%22 = load i64, i64* %21, align 8
	%23 = getelementptr inbounds i8, i8* %20, i64 %22
	store i8* %23, i8** %6
	; ReturnStmt
	%24 = load i8*, i8** %6, align 8
	%25 = bitcast i8* %24 to %..rawptr
	ret %..rawptr %25

if.done-2:
	; ReturnStmt
	ret %..rawptr zeroinitializer
}

define void @__dynamic_map_set(%__Map_Header* %h, %__Map_Key* %key, %..rawptr %value) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca %__Map_Header, align 16
	%3 = alloca %__Map_Header, align 16
	%4 = alloca %__Map_Find_Result, align 8
	%5 = alloca %__Map_Header, align 16
	%6 = alloca %__Map_Key, align 16
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	%9 = alloca %__Map_Entry_Header*, align 8
	%10 = alloca %__Map_Header, align 16
	%11 = alloca %__Map_Entry_Header*, align 8
	%12 = alloca %__Map_Header, align 16
	%13 = alloca i8*, align 8
	%14 = alloca %__Map_Header, align 16
	%15 = alloca %__Map_Header, align 16
	%16 = load %__Map_Header, %__Map_Header* %h, align 8
	%17 = load %__Map_Key, %__Map_Key* %key, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %value, %..rawptr* %0
	; index
	store i64 zeroinitializer, i64* %1
		; assert
	%18 = load %..rawptr, %..rawptr* %0, align 8
	%19 = icmp ne %..rawptr %18, zeroinitializer
	%20 = icmp eq i1 %19, false
	br i1 %20, label %builtin.assert.err-1, label %builtin.assert.done-2

builtin.assert.err-1:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$18, i64 0, i32 0), i64 26}, i64 652, i64 9, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$19, i64 0, i32 0), i64 12})
	br label %builtin.assert.done-2

builtin.assert.done-2:
	; IfStmt
	; SelectorExpr
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%22 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %21, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %23, i64 0, i32 0
	%25 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %24, align 8
	%26 = extractvalue {i64*, i64, i64,%Allocator} %25, 1
	%27 = icmp eq i64 %26, 0
	br i1 %27, label %if.then-3, label %if.done-4

if.then-3:
	%28 = load %__Map_Header, %__Map_Header* %h, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	store %__Map_Header %28, %__Map_Header* %2
	call void @__dynamic_map_reserve(%__Map_Header* %2, i64 16)
	%29 = load %__Map_Header, %__Map_Header* %h, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	store %__Map_Header %29, %__Map_Header* %3
	call void @__dynamic_map_grow(%__Map_Header* %3)
	br label %if.done-4

if.done-4:
	; fr
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %4
		%30 = load %__Map_Header, %__Map_Header* %h, align 8
	%31 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %30, %__Map_Header* %5
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	store %__Map_Key %31, %__Map_Key* %6
	%32 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %5, %__Map_Key* %6)
	store %__Map_Find_Result %32, %__Map_Find_Result* %4
	; IfStmt
	; SelectorExpr
	%33 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %4, i64 0, i32 2
	%34 = load i64, i64* %33, align 8
	%35 = icmp sge i64 %34, 0
	br i1 %35, label %if.then-5, label %if.else-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%36 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %4, i64 0, i32 2
	%37 = load i64, i64* %36, align 8
	store i64 %37, i64* %1
	br label %if.done-10

if.else-6:
	; AssignStmt
	%38 = load %__Map_Header, %__Map_Header* %h, align 8
	%39 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %38, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %39, %__Map_Key* %8
	%40 = call i64 @__dynamic_map_add_entry(%__Map_Header* %7, %__Map_Key* %8)
	store i64 %40, i64* %1
	; IfStmt
	; SelectorExpr
	%41 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %4, i64 0, i32 1
	%42 = load i64, i64* %41, align 8
	%43 = icmp sge i64 %42, 0
	br i1 %43, label %if.then-7, label %if.else-8

if.then-7:
	; entry
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %9
		%44 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%45 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %4, i64 0, i32 1
	%46 = load i64, i64* %45, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %10
	store %__Map_Header %44, %__Map_Header* %10
	%47 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %10, i64 %46)
	store %__Map_Entry_Header* %47, %__Map_Entry_Header** %9
	; AssignStmt
	; SelectorExpr
	%48 = load %__Map_Entry_Header*, %__Map_Entry_Header** %9, align 8
	%49 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %48, i64 0
	%50 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %49, i64 0, i32 1
	%51 = load i64, i64* %1, align 8
	store i64 %51, i64* %50
	br label %if.done-9

if.else-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%52 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%53 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %52, align 8
	%54 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %53, i64 0
	%55 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %54, i64 0, i32 0
	%56 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %55, align 8
	%57 = extractvalue {i64*, i64, i64,%Allocator} %56, 0
	%58 = extractvalue {i64*, i64, i64,%Allocator} %56, 1
	; SelectorExpr
	%59 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %4, i64 0, i32 0
	%60 = load i64, i64* %59, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$1a, i64 0, i32 0), i64 26}, i64 669, i64 16, i64 %60, i64 %58)
	%61 = getelementptr inbounds i64, i64* %57, i64 %60
	%62 = load i64, i64* %1, align 8
	store i64 %62, i64* %61
	br label %if.done-9

if.done-9:
	br label %if.done-10

if.done-10:
	; e
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %11
		%63 = load %__Map_Header, %__Map_Header* %h, align 8
	%64 = load i64, i64* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %12
	store %__Map_Header %63, %__Map_Header* %12
	%65 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %12, i64 %64)
	store %__Map_Entry_Header* %65, %__Map_Entry_Header** %11
	; AssignStmt
	; SelectorExpr
	%66 = load %__Map_Entry_Header*, %__Map_Entry_Header** %11, align 8
	%67 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %66, i64 0
	%68 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %67, i64 0, i32 0
	%69 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Key %69, %__Map_Key* %68
	; val
	store i8* zeroinitializer, i8** %13
		%70 = load %__Map_Entry_Header*, %__Map_Entry_Header** %11, align 8
	%71 = bitcast %__Map_Entry_Header* %70 to i8*
	%72 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 4
	%73 = load i64, i64* %72, align 8
	%74 = getelementptr inbounds i8, i8* %71, i64 %73
	store i8* %74, i8** %13
	%75 = load i8*, i8** %13, align 8
	%76 = load %..rawptr, %..rawptr* %0, align 8
	%77 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 5
	%78 = load i64, i64* %77, align 8
	%79 = bitcast i8* %75 to %..rawptr
	%80 = call %..rawptr @__mem_copy(%..rawptr %79, %..rawptr %76, i64 %78)
	; IfStmt
	%81 = load %__Map_Header, %__Map_Header* %h, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %14
	store %__Map_Header %81, %__Map_Header* %14
	%82 = call i1 @__dynamic_map_full(%__Map_Header* %14)
	br i1 %82, label %if.then-11, label %if.done-12

if.then-11:
	%83 = load %__Map_Header, %__Map_Header* %h, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %15
	store %__Map_Header %83, %__Map_Header* %15
	call void @__dynamic_map_grow(%__Map_Header* %15)
	br label %if.done-12

if.done-12:
	ret void
}

define void @__dynamic_map_grow(%__Map_Header* %h) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = load %__Map_Header, %__Map_Header* %h, align 8
	; new_count
	store i64 zeroinitializer, i64* %0
		; max
	; SelectorExpr
	; SelectorExpr
	%3 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%4 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %3, align 8
	%5 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %4, i64 0
	%6 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %5, i64 0, i32 1
	%7 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %6, i64 0, i32 2
	%8 = load i64, i64* %7, align 8
	%9 = mul i64 2, %8
	%10 = add i64 %9, 8
	%11 = icmp sgt i64 %10, 16
	%12 = select i1 %11, i64 %10, i64 16
	store i64 %12, i64* %0
	%13 = load %__Map_Header, %__Map_Header* %h, align 8
	%14 = load i64, i64* %0, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %13, %__Map_Header* %1
	call void @__dynamic_map_rehash(%__Map_Header* %1, i64 %14)
	ret void
}

define i1 @__dynamic_map_full(%__Map_Header* %h) {
decls-0:
	%0 = load %__Map_Header, %__Map_Header* %h, align 8
	; ReturnStmt
	; SelectorExpr
	%1 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%2 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %1, align 8
	%3 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %2, i64 0
	%4 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %3, i64 0, i32 0
	%5 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %4, align 8
	%6 = extractvalue {i64*, i64, i64,%Allocator} %5, 1
	%7 = sitofp i64 %6 to double
	%8 = fmul double 0x3fe8000000000000, %7
	%9 = fptosi double %8 to i64
	; SelectorExpr
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%11 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %10, align 8
	%12 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %11, i64 0
	%13 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %12, i64 0, i32 1
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0, i32 2
	%15 = load i64, i64* %14, align 8
	%16 = icmp sle i64 %9, %15
	ret i1 %16
}

define i1 @__dynamic_map_hash_equal(%__Map_Header* %h, %__Map_Key* %a, %__Map_Key* %b) {
decls-0:
	%0 = load %__Map_Header, %__Map_Header* %h, align 8
	%1 = load %__Map_Key, %__Map_Key* %a, align 8
	%2 = load %__Map_Key, %__Map_Key* %b, align 8
	; IfStmt
	; SelectorExpr
	%3 = getelementptr inbounds %__Map_Key, %__Map_Key* %a, i64 0, i32 0
	%4 = load i64, i64* %3, align 8
	; SelectorExpr
	%5 = getelementptr inbounds %__Map_Key, %__Map_Key* %b, i64 0, i32 0
	%6 = load i64, i64* %5, align 8
	%7 = icmp eq i64 %4, %6
	br i1 %7, label %if.then-1, label %if.done-4

if.then-1:
	; IfStmt
	; SelectorExpr
	%8 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 1
	%9 = load i1, i1* %8, align 1
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Key, %__Map_Key* %a, i64 0, i32 1
	%11 = load %..string, %..string* %10, align 8
	; SelectorExpr
	%12 = getelementptr inbounds %__Map_Key, %__Map_Key* %b, i64 0, i32 1
	%13 = load %..string, %..string* %12, align 8
	%14 = call i1 @__string_eq(%..string %11, %..string %13)
	ret i1 %14

if.done-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; ReturnStmt
	ret i1 false
}

define %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %h, %__Map_Key* %key) {
decls-0:
	%0 = alloca %__Map_Find_Result, align 8
	%1 = alloca %__Map_Entry_Header*, align 8
	%2 = alloca %__Map_Header, align 16
	%3 = alloca %__Map_Header, align 16
	%4 = alloca %__Map_Key, align 16
	%5 = alloca %__Map_Key, align 16
	%6 = load %__Map_Header, %__Map_Header* %h, align 8
	%7 = load %__Map_Key, %__Map_Key* %key, align 8
	; fr
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %0
		store %__Map_Find_Result {i64 -1, i64 -1, i64 -1}, %__Map_Find_Result* %0
	; IfStmt
	; SelectorExpr
	%8 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%9 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %8, align 8
	%10 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %9, i64 0
	%11 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %10, i64 0, i32 0
	%12 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %11, align 8
	%13 = extractvalue {i64*, i64, i64,%Allocator} %12, 1
	%14 = icmp sgt i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-7

if.then-1:
	; AssignStmt
	; SelectorExpr
	%15 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 0
	; SelectorExpr
	%16 = getelementptr inbounds %__Map_Key, %__Map_Key* %key, i64 0, i32 0
	%17 = load i64, i64* %16, align 8
	; SelectorExpr
	%18 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%19 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %18, align 8
	%20 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %19, i64 0
	%21 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %20, i64 0, i32 0
	%22 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %21, align 8
	%23 = extractvalue {i64*, i64, i64,%Allocator} %22, 1
	%24 = bitcast i64 %23 to i64
	%25 = urem i64 %17, %24
	%26 = bitcast i64 %25 to i64
	store i64 %26, i64* %15
	; AssignStmt
	; SelectorExpr
	%27 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	; IndexExpr
	; SelectorExpr
	%28 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%29 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %28, align 8
	%30 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %29, i64 0
	%31 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %30, i64 0, i32 0
	%32 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %31, align 8
	%33 = extractvalue {i64*, i64, i64,%Allocator} %32, 0
	%34 = extractvalue {i64*, i64, i64,%Allocator} %32, 1
	; SelectorExpr
	%35 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 0
	%36 = load i64, i64* %35, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$1b, i64 0, i32 0), i64 26}, i64 709, i64 32, i64 %36, i64 %34)
	%37 = getelementptr inbounds i64, i64* %33, i64 %36
	%38 = load i64, i64* %37, align 8
	store i64 %38, i64* %27
	; ForStmt
	br label %for.loop-2

for.loop-2:
	; SelectorExpr
	%39 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%40 = load i64, i64* %39, align 8
	%41 = icmp sge i64 %40, 0
	br i1 %41, label %for.body-3, label %for.done-6

for.body-3:
	; entry
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %1
		%42 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%43 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%44 = load i64, i64* %43, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	store %__Map_Header %42, %__Map_Header* %2
	%45 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %2, i64 %44)
	store %__Map_Entry_Header* %45, %__Map_Entry_Header** %1
	; IfStmt
	%46 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%47 = load %__Map_Entry_Header*, %__Map_Entry_Header** %1, align 8
	%48 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %47, i64 0
	%49 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %48, i64 0, i32 0
	%50 = load %__Map_Key, %__Map_Key* %49, align 8
	%51 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	store %__Map_Header %46, %__Map_Header* %3
	store %__Map_Key zeroinitializer, %__Map_Key* %4
	store %__Map_Key %50, %__Map_Key* %4
	store %__Map_Key zeroinitializer, %__Map_Key* %5
	store %__Map_Key %51, %__Map_Key* %5
	%52 = call i1 @__dynamic_map_hash_equal(%__Map_Header* %3, %__Map_Key* %4, %__Map_Key* %5)
	br i1 %52, label %if.then-4, label %if.done-5

if.then-4:
	; ReturnStmt
	%53 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	ret %__Map_Find_Result %53

if.done-5:
	; AssignStmt
	; SelectorExpr
	%54 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 1
	; SelectorExpr
	%55 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%56 = load i64, i64* %55, align 8
	store i64 %56, i64* %54
	; AssignStmt
	; SelectorExpr
	%57 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	; SelectorExpr
	%58 = load %__Map_Entry_Header*, %__Map_Entry_Header** %1, align 8
	%59 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %58, i64 0
	%60 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %59, i64 0, i32 1
	%61 = load i64, i64* %60, align 8
	store i64 %61, i64* %57
	br label %for.loop-2

for.done-6:
	br label %if.done-7

if.done-7:
	; ReturnStmt
	%62 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	ret %__Map_Find_Result %62
}

define i64 @__dynamic_map_add_entry(%__Map_Header* %h, %__Map_Key* %key) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %__Map_Entry_Header*, align 8
	%3 = alloca %__Map_Header, align 16
	%4 = load %__Map_Header, %__Map_Header* %h, align 8
	%5 = load %__Map_Key, %__Map_Key* %key, align 8
	; prev
	store i64 zeroinitializer, i64* %0
		; SelectorExpr
	; SelectorExpr
	%6 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%7 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %6, align 8
	%8 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %7, i64 0
	%9 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %8, i64 0, i32 1
	%10 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %9, i64 0, i32 1
	%11 = load i64, i64* %10, align 8
	store i64 %11, i64* %0
	; c
	store i64 zeroinitializer, i64* %1
		; SelectorExpr
	%12 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%13 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %12, align 8
	%14 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %13, i64 0
	%15 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %14, i64 0, i32 1
	%16 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %15, i64 0
	%17 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%18 = load i64, i64* %17, align 8
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 3
	%20 = load i64, i64* %19, align 8
	%21 = bitcast %raw-6.Dynamic_Array* %16 to %..rawptr
	%22 = call i64 @__dynamic_array_append_nothing(%..rawptr %21, i64 %18, i64 %20)
	store i64 %22, i64* %1
	; IfStmt
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %0, align 8
	%25 = icmp ne i64 %23, %24
	br i1 %25, label %if.then-1, label %if.done-2

if.then-1:
	; end
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %2
		%26 = load %__Map_Header, %__Map_Header* %h, align 8
	%27 = load i64, i64* %1, align 8
	%28 = sub i64 %27, 1
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	store %__Map_Header %26, %__Map_Header* %3
	%29 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %3, i64 %28)
	store %__Map_Entry_Header* %29, %__Map_Entry_Header** %2
	; AssignStmt
	; SelectorExpr
	%30 = load %__Map_Entry_Header*, %__Map_Entry_Header** %2, align 8
	%31 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %30, i64 0
	%32 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %31, i64 0, i32 0
	%33 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Key %33, %__Map_Key* %32
	; AssignStmt
	; SelectorExpr
	%34 = load %__Map_Entry_Header*, %__Map_Entry_Header** %2, align 8
	%35 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %34, i64 0
	%36 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %35, i64 0, i32 1
	store i64 -1, i64* %36
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%37 = load i64, i64* %0, align 8
	ret i64 %37
}

define void @__dynamic_map_delete(%__Map_Header* %h, %__Map_Key* %key) {
decls-0:
	%0 = alloca %__Map_Find_Result, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = alloca %__Map_Key, align 16
	%3 = alloca %__Map_Header, align 16
	%4 = alloca %__Map_Find_Result, align 16
	%5 = load %__Map_Header, %__Map_Header* %h, align 8
	%6 = load %__Map_Key, %__Map_Key* %key, align 8
	; fr
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %0
		%7 = load %__Map_Header, %__Map_Header* %h, align 8
	%8 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %7, %__Map_Header* %1
	store %__Map_Key zeroinitializer, %__Map_Key* %2
	store %__Map_Key %8, %__Map_Key* %2
	%9 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %1, %__Map_Key* %2)
	store %__Map_Find_Result %9, %__Map_Find_Result* %0
	; IfStmt
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%11 = load i64, i64* %10, align 8
	%12 = icmp sge i64 %11, 0
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	%13 = load %__Map_Header, %__Map_Header* %h, align 8
	%14 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	store %__Map_Header %13, %__Map_Header* %3
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %4
	store %__Map_Find_Result %14, %__Map_Find_Result* %4
	call void @__dynamic_map_erase(%__Map_Header* %3, %__Map_Find_Result* %4)
	br label %if.done-2

if.done-2:
	ret void
}

define %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %h, i64 %index) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i8*, align 8
	%2 = load %__Map_Header, %__Map_Header* %h, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %index, i64* %0
	; data
	store i8* zeroinitializer, i8** %1
		; SelectorExpr
	; SelectorExpr
	%3 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%4 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %3, align 8
	%5 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %4, i64 0
	%6 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %5, i64 0, i32 1
	%7 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %6, i64 0, i32 0
	%8 = load %..rawptr, %..rawptr* %7, align 8
	%9 = bitcast %..rawptr %8 to i8*
	%10 = load i64, i64* %0, align 8
	%11 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%12 = load i64, i64* %11, align 8
	%13 = mul i64 %10, %12
	%14 = getelementptr inbounds i8, i8* %9, i64 %13
	store i8* %14, i8** %1
	; ReturnStmt
	%15 = load i8*, i8** %1, align 8
	%16 = bitcast i8* %15 to %__Map_Entry_Header*
	ret %__Map_Entry_Header* %16
}

define void @__dynamic_map_erase(%__Map_Header* %h, %__Map_Find_Result* %fr) {
decls-0:
	%0 = alloca %__Map_Header, align 16
	%1 = alloca %__Map_Entry_Header*, align 8
	%2 = alloca %__Map_Header, align 16
	%3 = alloca %__Map_Entry_Header*, align 8
	%4 = alloca %__Map_Header, align 16
	%5 = alloca %__Map_Entry_Header*, align 8
	%6 = alloca %__Map_Header, align 16
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Find_Result, align 8
	%9 = alloca %__Map_Header, align 16
	%10 = alloca %__Map_Entry_Header*, align 8
	%11 = alloca %__Map_Header, align 16
	%12 = alloca %__Map_Key, align 16
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Entry_Header*, align 8
	%15 = load %__Map_Header, %__Map_Header* %h, align 8
	%16 = load %__Map_Find_Result, %__Map_Find_Result* %fr, align 8
	; IfStmt
	; SelectorExpr
	%17 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 1
	%18 = load i64, i64* %17, align 8
	%19 = icmp slt i64 %18, 0
	br i1 %19, label %if.then-1, label %if.else-2

if.then-1:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%20 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%21 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %20, align 8
	%22 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %21, i64 0
	%23 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %22, i64 0, i32 0
	%24 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %23, align 8
	%25 = extractvalue {i64*, i64, i64,%Allocator} %24, 0
	%26 = extractvalue {i64*, i64, i64,%Allocator} %24, 1
	; SelectorExpr
	%27 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 0
	%28 = load i64, i64* %27, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$1c, i64 0, i32 0), i64 26}, i64 748, i64 15, i64 %28, i64 %26)
	%29 = getelementptr inbounds i64, i64* %25, i64 %28
	; SelectorExpr
	%30 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%31 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%32 = load i64, i64* %31, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %0
	store %__Map_Header %30, %__Map_Header* %0
	%33 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %0, i64 %32)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %1
	store %__Map_Entry_Header* %33, %__Map_Entry_Header** %1
	%34 = load %__Map_Entry_Header*, %__Map_Entry_Header** %1, align 8
	%35 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %34, i64 0
	%36 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %35, i64 0, i32 1
	%37 = load i64, i64* %36, align 8
	store i64 %37, i64* %29
	br label %if.done-3

if.else-2:
	; AssignStmt
	; SelectorExpr
	%38 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%39 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 1
	%40 = load i64, i64* %39, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	store %__Map_Header %38, %__Map_Header* %2
	%41 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %2, i64 %40)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %3
	store %__Map_Entry_Header* %41, %__Map_Entry_Header** %3
	%42 = load %__Map_Entry_Header*, %__Map_Entry_Header** %3, align 8
	%43 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %42, i64 0
	%44 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %43, i64 0, i32 1
	; SelectorExpr
	%45 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%46 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%47 = load i64, i64* %46, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	store %__Map_Header %45, %__Map_Header* %4
	%48 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %4, i64 %47)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %5
	store %__Map_Entry_Header* %48, %__Map_Entry_Header** %5
	%49 = load %__Map_Entry_Header*, %__Map_Entry_Header** %5, align 8
	%50 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %49, i64 0
	%51 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %50, i64 0, i32 1
	%52 = load i64, i64* %51, align 8
	store i64 %52, i64* %44
	br label %if.done-3

if.done-3:
	; IfStmt
	; SelectorExpr
	%53 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%54 = load i64, i64* %53, align 8
	; SelectorExpr
	; SelectorExpr
	%55 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%56 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %55, align 8
	%57 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %56, i64 0
	%58 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %57, i64 0, i32 1
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0, i32 1
	%60 = load i64, i64* %59, align 8
	%61 = sub i64 %60, 1
	%62 = icmp eq i64 %54, %61
	br i1 %62, label %if.then-4, label %if.done-5

if.then-4:
	; SelectorExpr
	; SelectorExpr
	%63 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%64 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %63, align 8
	%65 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %64, i64 0
	%66 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %65, i64 0, i32 1
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0, i32 1
	%68 = load i64, i64* %67, align 8
	%69 = sub i64 %68, 1
	store i64 %69, i64* %67
	br label %if.done-5

if.done-5:
	%70 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%71 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%72 = load i64, i64* %71, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	store %__Map_Header %70, %__Map_Header* %6
	%73 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %6, i64 %72)
	%74 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	; SelectorExpr
	%75 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%76 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %75, align 8
	%77 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %76, i64 0
	%78 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %77, i64 0, i32 1
	%79 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %78, i64 0, i32 1
	%80 = load i64, i64* %79, align 8
	%81 = sub i64 %80, 1
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %74, %__Map_Header* %7
	%82 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %7, i64 %81)
	%83 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%84 = load i64, i64* %83, align 8
	%85 = bitcast %__Map_Entry_Header* %73 to %..rawptr
	%86 = bitcast %__Map_Entry_Header* %82 to %..rawptr
	%87 = call %..rawptr @__mem_copy(%..rawptr %85, %..rawptr %86, i64 %84)
	; last
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %8
		%88 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%89 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%90 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%91 = load i64, i64* %90, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %9
	store %__Map_Header %89, %__Map_Header* %9
	%92 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %9, i64 %91)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %10
	store %__Map_Entry_Header* %92, %__Map_Entry_Header** %10
	%93 = load %__Map_Entry_Header*, %__Map_Entry_Header** %10, align 8
	%94 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %93, i64 0
	%95 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %94, i64 0, i32 0
	%96 = load %__Map_Key, %__Map_Key* %95, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %11
	store %__Map_Header %88, %__Map_Header* %11
	store %__Map_Key zeroinitializer, %__Map_Key* %12
	store %__Map_Key %96, %__Map_Key* %12
	%97 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %11, %__Map_Key* %12)
	store %__Map_Find_Result %97, %__Map_Find_Result* %8
	; IfStmt
	; SelectorExpr
	%98 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 1
	%99 = load i64, i64* %98, align 8
	%100 = icmp sge i64 %99, 0
	br i1 %100, label %if.then-6, label %if.else-7

if.then-6:
	; AssignStmt
	; SelectorExpr
	%101 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%102 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 1
	%103 = load i64, i64* %102, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %101, %__Map_Header* %13
	%104 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %13, i64 %103)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %14
	store %__Map_Entry_Header* %104, %__Map_Entry_Header** %14
	%105 = load %__Map_Entry_Header*, %__Map_Entry_Header** %14, align 8
	%106 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %105, i64 0
	%107 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %106, i64 0, i32 1
	; SelectorExpr
	%108 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%109 = load i64, i64* %108, align 8
	store i64 %109, i64* %107
	br label %if.done-8

if.else-7:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%110 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%111 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %110, align 8
	%112 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %111, i64 0
	%113 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %112, i64 0, i32 0
	%114 = load {i64*, i64, i64,%Allocator}, {i64*, i64, i64,%Allocator}* %113, align 8
	%115 = extractvalue {i64*, i64, i64,%Allocator} %114, 0
	%116 = extractvalue {i64*, i64, i64,%Allocator} %114, 1
	; SelectorExpr
	%117 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 0
	%118 = load i64, i64* %117, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$1d, i64 0, i32 0), i64 26}, i64 761, i64 17, i64 %118, i64 %116)
	%119 = getelementptr inbounds i64, i64* %115, i64 %118
	; SelectorExpr
	%120 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%121 = load i64, i64* %120, align 8
	store i64 %121, i64* %119
	br label %if.done-8

if.done-8:
	ret void
}

define %render-14.DrawRegion @main-2.CalculateViewport(i64 %newSize, float %targetAspectRatio) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%1 = alloca float, align 4
	%2 = alloca %render-14.DrawRegion, align 4
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %0
		%3 = bitcast {[0 x <8 x i8>], [2 x float]}* %0 to i64*
	store i64 %newSize, i64* %3
	%4 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
	store float zeroinitializer, float* %1
		store float %targetAspectRatio, float* %1
	; res
	store %render-14.DrawRegion zeroinitializer, %render-14.DrawRegion* %2
		; AssignStmt
	; SelectorExpr
	%5 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 2
	; SelectorExpr
	%6 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 0
	%7 = load float, float* %6, align 4
	%8 = fptosi float %7 to i32
	store i32 %8, i32* %5
	; AssignStmt
	; SelectorExpr
	%9 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 3
	; SelectorExpr
	%10 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 2
	%11 = load i32, i32* %10, align 4
	%12 = sitofp i32 %11 to float
	%13 = load float, float* %1, align 4
	%14 = fdiv float %12, %13
	%15 = fadd float %14, 0x3fe0000000000000
	%16 = fptosi float %15 to i32
	store i32 %16, i32* %9
	; IfStmt
	; SelectorExpr
	%17 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%18 = load float, float* %17, align 4
	%19 = fptosi float %18 to i32
	; SelectorExpr
	%20 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 3
	%21 = load i32, i32* %20, align 4
	%22 = icmp slt i32 %19, %21
	br i1 %22, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%23 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 3
	; SelectorExpr
	%24 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%25 = load float, float* %24, align 4
	%26 = fptosi float %25 to i32
	store i32 %26, i32* %23
	; AssignStmt
	; SelectorExpr
	%27 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 2
	; SelectorExpr
	%28 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 3
	%29 = load i32, i32* %28, align 4
	%30 = sitofp i32 %29 to float
	%31 = load float, float* %1, align 4
	%32 = fmul float %30, %31
	%33 = fadd float %32, 0x3fe0000000000000
	%34 = fptosi float %33 to i32
	store i32 %34, i32* %27
	br label %if.done-2

if.done-2:
	; AssignStmt
	; SelectorExpr
	%35 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 0
	; SelectorExpr
	%36 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 0
	%37 = load float, float* %36, align 4
	%38 = fptosi float %37 to i32
	%39 = sdiv i32 %38, 2
	; SelectorExpr
	%40 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 2
	%41 = load i32, i32* %40, align 4
	%42 = sdiv i32 %41, 2
	%43 = sub i32 %39, %42
	store i32 %43, i32* %35
	; AssignStmt
	; SelectorExpr
	%44 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 1
	; SelectorExpr
	%45 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%46 = load float, float* %45, align 4
	%47 = fptosi float %46 to i32
	%48 = sdiv i32 %47, 2
	; SelectorExpr
	%49 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %2, i64 0, i32 3
	%50 = load i32, i32* %49, align 4
	%51 = sdiv i32 %50, 2
	%52 = sub i32 %48, %51
	store i32 %52, i32* %44
	; ReturnStmt
	%53 = load %render-14.DrawRegion, %render-14.DrawRegion* %2, align 4
	ret %render-14.DrawRegion %53
}

define ccc void @main-2.OpenGLDebugCallback(i32 %source, i32 %type, i32 %id, i32 %severity, i32 %length, i8* %message, %..rawptr %userParam) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	%5 = alloca i8*, align 8
	%6 = alloca %..rawptr, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca %..string, align 8
	%12 = alloca {%..any*, i64, i64}, align 8
	%13 = alloca [4 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %source, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %type, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %id, i32* %2
	store i32 zeroinitializer, i32* %3
		store i32 %severity, i32* %3
	store i32 zeroinitializer, i32* %4
		store i32 %length, i32* %4
	store i8* zeroinitializer, i8** %5
		store i8* %message, i8** %5
	store %..rawptr zeroinitializer, %..rawptr* %6
		store %..rawptr %userParam, %..rawptr* %6
	; SelectorExpr
	%14 = load i32, i32* %0, align 4
	%15 = load i32, i32* %1, align 4
	%16 = load i32, i32* %3, align 4
	; SelectorExpr
	%17 = load i8*, i8** %5, align 8
	%18 = call %..string @strings-7.to_odin_string(i8* %17)
	store %..any zeroinitializer, %..any* %7
	%19 = bitcast i32* %0 to %..rawptr
	%20 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%21 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %19, %..rawptr* %21
	%22 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %20, %Type_Info** %22
	%23 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%24 = bitcast i32* %1 to %..rawptr
	%25 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%26 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %24, %..rawptr* %26
	%27 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %25, %Type_Info** %27
	%28 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%29 = bitcast i32* %3 to %..rawptr
	%30 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 66
	%31 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %29, %..rawptr* %31
	%32 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %30, %Type_Info** %32
	%33 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	store %..string zeroinitializer, %..string* %11
	store %..string %18, %..string* %11
	%34 = bitcast %..string* %11 to %..rawptr
	%35 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%36 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %34, %..rawptr* %36
	%37 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %35, %Type_Info** %37
	%38 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %12
	store [4 x %..any] zeroinitializer, [4 x %..any]* %13
	%39 = getelementptr inbounds [4 x %..any], [4 x %..any]* %13, i64 0, i32 0
	store %..any %23, %..any* %39
	%40 = getelementptr inbounds [4 x %..any], [4 x %..any]* %13, i64 0, i32 1
	store %..any %28, %..any* %40
	%41 = getelementptr inbounds [4 x %..any], [4 x %..any]* %13, i64 0, i32 2
	store %..any %33, %..any* %41
	%42 = getelementptr inbounds [4 x %..any], [4 x %..any]* %13, i64 0, i32 3
	store %..any %38, %..any* %42
	%43 = getelementptr inbounds [4 x %..any], [4 x %..any]* %13, i64 0, i32 0
	%44 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 0
	store %..any* %43, %..any** %44
	%45 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 1
	store i64 4, i64* %45
	%46 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 2
	store i64 4, i64* %46
	%47 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %12, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1e, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %47)
	ret void
}

define void @main-2.ClearScreen(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%1 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%2 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %1, i64 0
	%3 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %2, i64 0, i32 8
	%4 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %3, i64 0, i32 1, i32 0
	%5 = load float, float* %4, align 4
	%6 = fptosi float %5 to i32
	; SelectorExpr
	; SelectorExpr
	%7 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%8 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %7, i64 0
	%9 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %8, i64 0, i32 8
	%10 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %9, i64 0, i32 1, i32 1
	%11 = load float, float* %10, align 4
	%12 = fptosi float %11 to i32
	call ccc void @glScissor(i32 0, i32 0, i32 %6, i32 %12)
	; SelectorExpr
	call ccc void @glClearColor(float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000)
	; SelectorExpr
	call void @gl-10.Clear(i32 16384)
	ret void
}

define void @main-2.ClearGameScreen(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%1 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%2 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %1, i64 0
	%3 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %2, i64 0, i32 9
	%4 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %3, i64 0, i32 0
	%5 = load i32, i32* %4, align 4
	; SelectorExpr
	; SelectorExpr
	%6 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%7 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %6, i64 0
	%8 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %7, i64 0, i32 9
	%9 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %8, i64 0, i32 1
	%10 = load i32, i32* %9, align 4
	; SelectorExpr
	; SelectorExpr
	%11 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%12 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %11, i64 0
	%13 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %12, i64 0, i32 9
	%14 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %13, i64 0, i32 2
	%15 = load i32, i32* %14, align 4
	; SelectorExpr
	; SelectorExpr
	%16 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%17 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %16, i64 0
	%18 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %17, i64 0, i32 9
	%19 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %18, i64 0, i32 3
	%20 = load i32, i32* %19, align 4
	call ccc void @glScissor(i32 %5, i32 %10, i32 %15, i32 %20)
	; SelectorExpr
	call ccc void @glClearColor(float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000)
	; SelectorExpr
	call void @gl-10.Clear(i32 16384)
	ret void
}

define void @main() {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca %catalog-16.Catalog*, align 8
	%3 = alloca %catalog-16.Catalog*, align 8
	%4 = alloca %catalog-16.Catalog*, align 8
	%5 = alloca %game-21.Context_t*, align 8
	%6 = alloca %renderer-24.Camera_t*, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca %..any, align 8
	%12 = alloca %..any, align 8
	%13 = alloca {%..any*, i64, i64}, align 8
	%14 = alloca [6 x %..any], align 8
	%15 = alloca %render_queue-23.Queue*, align 8
	call void @__$startup_runtime()
	; EngineContext
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		; SelectorExpr
	%16 = call %engine-20.Context_t* @engine-20.CreateContext()
	store %engine-20.Context_t* %16, %engine-20.Context_t** %0
	; SelectorExpr
	%17 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @engine-20.SetContextDefaults(%engine-20.Context_t* %17)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%18 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%19 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %18, i64 0
	%20 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %19, i64 0, i32 3
	%21 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %20, align 8
	%22 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %21, i64 0
	%23 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %22, i64 0, i32 1
	; SelectorExpr
	%24 = call %..rawptr @platform_win32-28.GetProgramHandle()
	store %..rawptr %24, %..rawptr* %23
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%25 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%26 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %25, i64 0
	%27 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %26, i64 0, i32 3
	%28 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %27, align 8
	%29 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %28, i64 0
	%30 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %29, i64 0, i32 2
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%31 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%32 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %31, i64 0
	%33 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %32, i64 0, i32 3
	%34 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %33, align 8
	%35 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %34, i64 0
	%36 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %35, i64 0, i32 1
	%37 = load %..rawptr, %..rawptr* %36, align 8
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %1
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x4094000000000000, float 0x4086800000000000]}, {[0 x <8 x i8>], [2 x float]}* %1
	%38 = bitcast {[0 x <8 x i8>], [2 x float]}* %1 to i64*
	%39 = load i64, i64* %38, align 8
	%40 = call %..rawptr @platform_win32-28.CreateWindow(%..rawptr %37, i64 %39)
	store %..rawptr %40, %..rawptr* %30
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%41 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%42 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %41, i64 0
	%43 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %42, i64 0, i32 3
	%44 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %43, align 8
	%45 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %44, i64 0
	%46 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %45, i64 0, i32 3
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%47 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%48 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %47, i64 0
	%49 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %48, i64 0, i32 3
	%50 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %49, align 8
	%51 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %50, i64 0
	%52 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %51, i64 0, i32 2
	%53 = load %..rawptr, %..rawptr* %52, align 8
	%54 = call %..rawptr @platform_win32-28.GetDC(%..rawptr %53)
	store %..rawptr %54, %..rawptr* %46
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%55 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%56 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %55, i64 0
	%57 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %56, i64 0, i32 3
	%58 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %57, align 8
	%59 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %58, i64 0
	%60 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %59, i64 0, i32 0
	%61 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %60, i64 0, i32 7
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%62 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%63 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %62, i64 0
	%64 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %63, i64 0, i32 3
	%65 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %64, align 8
	%66 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %65, i64 0
	%67 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %66, i64 0, i32 0
	%68 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %67, i64 0, i32 9
	; SelectorExpr
	%69 = call {i32, i32} @platform_win32-28.GetMaxGLVersion()
	%70 = extractvalue {i32, i32} %69, 0
	%71 = extractvalue {i32, i32} %69, 1
	store i32 %70, i32* %61
	store i32 %71, i32* %68
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%72 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%73 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %72, i64 0
	%74 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %73, i64 0, i32 3
	%75 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %74, align 8
	%76 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %75, i64 0
	%77 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %76, i64 0, i32 0
	%78 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %77, i64 0, i32 6
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%79 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%80 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %79, i64 0
	%81 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %80, i64 0, i32 3
	%82 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %81, align 8
	%83 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %82, i64 0
	%84 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %83, i64 0, i32 3
	%85 = load %..rawptr, %..rawptr* %84, align 8
	%86 = call %..rawptr @platform_win32-28.CreateOpenGLContext(%..rawptr %85, i1 true)
	store %..rawptr %86, %..rawptr* %78
	; SelectorExpr
	call void @gl-10.Init()
	; SelectorExpr
	call void @gl-10.DebugMessageCallback(void (i32, i32, i32, i32, i32, i8*, %..rawptr)* @main-2.OpenGLDebugCallback, %..rawptr zeroinitializer)
	; SelectorExpr
	call void @gl-10.Enable(i32 33346)
	; SelectorExpr
	call void @gl-10.DebugMessageControl(i32 4352, i32 4352, i32 33387, i32 0, i32* zeroinitializer, i1 false)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%87 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%88 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %87, i64 0
	%89 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %88, i64 0, i32 3
	%90 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %89, align 8
	%91 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %90, i64 0
	%92 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %91, i64 0, i32 0
	%93 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %92, i64 0
	call void @gl-10.GetInfo(%gl-10.OpenGLVars_t* %93)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%94 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%95 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %94, i64 0
	%96 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %95, i64 0, i32 3
	%97 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %96, align 8
	%98 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %97, i64 0
	%99 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %98, i64 0, i32 0
	%100 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %99, i64 0
	; SelectorExpr
	; SelectorExpr
	%101 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%102 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %101, i64 0
	%103 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %102, i64 0, i32 3
	%104 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %103, align 8
	%105 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %104, i64 0
	%106 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %105, i64 0, i32 3
	%107 = load %..rawptr, %..rawptr* %106, align 8
	call void @jwgl-26.GetInfo(%gl-10.OpenGLVars_t* %100, %..rawptr %107)
	; SelectorExpr
	%108 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @jimgui-12.Init(%engine-20.Context_t* %108)
	; SelectorExpr
	%109 = load i1 (i32)*, i1 (i32)** @jwgl-26.SwapIntervalEXT, align 8
	%110 = call ccc i1 %109(i32 -1)
	; SelectorExpr
	%111 = call i1 @xinput-13.Init()
	; SelectorExpr
	call void @xinput-13.Enable(i1 true)
	; shaderCat
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %2
		; SelectorExpr
	%112 = call {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-957(i64 1, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1f, i64 0, i32 0), i64 13}, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$20, i64 0, i32 0), i64 11})
	%113 = extractvalue {%catalog-16.Catalog*, i64} %112, 0
	%114 = extractvalue {%catalog-16.Catalog*, i64} %112, 1
	store %catalog-16.Catalog* %113, %catalog-16.Catalog** %2
	; textureCat
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %3
		; SelectorExpr
	%115 = call {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-957(i64 0, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$21, i64 0, i32 0), i64 14}, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$22, i64 0, i32 0), i64 15})
	%116 = extractvalue {%catalog-16.Catalog*, i64} %115, 0
	%117 = extractvalue {%catalog-16.Catalog*, i64} %115, 1
	store %catalog-16.Catalog* %116, %catalog-16.Catalog** %3
	; mapCat
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %4
		; SelectorExpr
	%118 = call {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-957(i64 0, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$23, i64 0, i32 0), i64 10}, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$24, i64 0, i32 0), i64 4})
	%119 = extractvalue {%catalog-16.Catalog*, i64} %118, 0
	%120 = extractvalue {%catalog-16.Catalog*, i64} %118, 1
	store %catalog-16.Catalog* %119, %catalog-16.Catalog** %4
	; SelectorExpr
	%121 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%122 = load %catalog-16.Catalog*, %catalog-16.Catalog** %3, align 8
	call void @render-14.Init(%catalog-16.Catalog* %121, %catalog-16.Catalog* %122)
	; AssignStmt
	; SelectorExpr
	%123 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%124 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %123, i64 0
	%125 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %124, i64 0, i32 6
	; SelectorExpr
	%126 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%127 = call %renderer-24.State_t* @renderer-24.Init(%catalog-16.Catalog* %126)
	store %renderer-24.State_t* %127, %renderer-24.State_t** %125
	; SelectorExpr
	; SelectorExpr
	call void @console-17.AddCommand(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$25, i64 0, i32 0), i64 4}, void ({%..string*, i64, i64})* @console-17.DefaultHelpCommand)
	; SelectorExpr
	; SelectorExpr
	call void @console-17.AddCommand(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$26, i64 0, i32 0), i64 5}, void ({%..string*, i64, i64})* @console-17.DefaultClearCommand)
	; GameContext
	store %game-21.Context_t* zeroinitializer, %game-21.Context_t** %5
		; new
	%128 = call %..rawptr @alloc_align(i64 24, i64 8)
	%129 = bitcast %..rawptr %128 to %game-21.Context_t*
	store %game-21.Context_t* %129, %game-21.Context_t** %5
	; AssignStmt
	; SelectorExpr
	%130 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%131 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %130, i64 0
	%132 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %131, i64 0, i32 0
	; SelectorExpr
	%133 = call %entity-18.List* @entity-18.MakeList()
	store %entity-18.List* %133, %entity-18.List** %132
	; AssignStmt
	; SelectorExpr
	%134 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%135 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %134, i64 0
	%136 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %135, i64 0, i32 1
	; SelectorExpr
	%137 = load %catalog-16.Catalog*, %catalog-16.Catalog** %3, align 8
	%138 = call %jmap-22.Data_t* @jmap-22.CreateMap(i64 20, i64 10, %catalog-16.Catalog* %137)
	store %jmap-22.Data_t* %138, %jmap-22.Data_t** %136
	; camera
	store %renderer-24.Camera_t* zeroinitializer, %renderer-24.Camera_t** %6
		; new
	%139 = call %..rawptr @alloc_align(i64 32, i64 8)
	%140 = bitcast %..rawptr %139 to %renderer-24.Camera_t*
	store %renderer-24.Camera_t* %140, %renderer-24.Camera_t** %6
	; AssignStmt
	; SelectorExpr
	%141 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	%142 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %141, i64 0
	%143 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %142, i64 0, i32 0
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x0000000000000000, float 0x402e000000000000]}, {[0 x <8 x i8>], [3 x float]}* %143
	; AssignStmt
	; SelectorExpr
	%144 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	%145 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %144, i64 0
	%146 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %145, i64 0, i32 2
	store float 0x4049000000000000, float* %146
	; AssignStmt
	; SelectorExpr
	%147 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	%148 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %147, i64 0
	%149 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %148, i64 0, i32 3
	store float 0x3fb9999980000000, float* %149
	; AssignStmt
	; SelectorExpr
	%150 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	%151 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %150, i64 0
	%152 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %151, i64 0, i32 4
	store float 0x4049000000000000, float* %152
	; AssignStmt
	; SelectorExpr
	%153 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	%154 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %153, i64 0
	%155 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %154, i64 0, i32 1
	store float 0x4046800000000000, float* %155
	; AssignStmt
	; SelectorExpr
	%156 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%157 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %156, i64 0
	%158 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %157, i64 0, i32 2
	%159 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %6, align 8
	store %renderer-24.Camera_t* %159, %renderer-24.Camera_t** %158
	; SelectorExpr
	; SelectorExpr
	%160 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%161 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %160, i64 0
	%162 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %161, i64 0, i32 1
	%163 = load %input-19.Input_t*, %input-19.Input_t** %162, align 8
	call void @game-21.SetupCameraBindings(%input-19.Input_t* %163)
	; SelectorExpr
	; SelectorExpr
	%164 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%165 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %164, i64 0
	%166 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %165, i64 0, i32 0
	%167 = load %entity-18.List*, %entity-18.List** %166, align 8
	; SelectorExpr
	%168 = call %entity-18.Entity* @entity-18.CreateSlowTower()
	call void @entity-18.AddEntity(%entity-18.List* %167, %entity-18.Entity* %168)
	; ForStmt
	br label %for.loop-1

for.loop-1:
	; SelectorExpr
	; SelectorExpr
	%169 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%170 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %169, i64 0
	%171 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %170, i64 0, i32 0
	%172 = load %engine-20.Setting_t*, %engine-20.Setting_t** %171, align 8
	%173 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %172, i64 0
	%174 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %173, i64 0, i32 2
	%175 = load i1, i1* %174, align 1
	br i1 %175, label %for.body-2, label %for.done-8

for.body-2:
	; SelectorExpr
	%176 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @platform_win32-28.MessageLoop(%engine-20.Context_t* %176)
	; SelectorExpr
	; SelectorExpr
	%177 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%178 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %177, i64 0
	%179 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %178, i64 0, i32 5
	%180 = load %time-15.Data_t*, %time-15.Data_t** %179, align 8
	call void @time-15.Update(%time-15.Data_t* %180)
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%181 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%182 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %181, i64 0
	%183 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %182, i64 0, i32 3
	%184 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %183, align 8
	%185 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %184, i64 0
	%186 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %185, i64 0, i32 2
	%187 = load %..rawptr, %..rawptr* %186, align 8
	%188 = call i1 @platform_win32-28.IsWindowActive(%..rawptr %187)
	br i1 %188, label %if.then-3, label %if.else-4

if.then-3:
	; SelectorExpr
	; SelectorExpr
	%189 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%190 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %189, i64 0
	%191 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %190, i64 0, i32 1
	%192 = load %input-19.Input_t*, %input-19.Input_t** %191, align 8
	call void @input-19.Update(%input-19.Input_t* %192)
	; SelectorExpr
	; SelectorExpr
	%193 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%194 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %193, i64 0
	%195 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %194, i64 0, i32 1
	%196 = load %input-19.Input_t*, %input-19.Input_t** %195, align 8
	; SelectorExpr
	; SelectorExpr
	%197 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%198 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %197, i64 0
	%199 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %198, i64 0, i32 3
	%200 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %199, align 8
	%201 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %200, i64 0
	%202 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %201, i64 0, i32 2
	%203 = load %..rawptr, %..rawptr* %202, align 8
	call void @input-19.UpdateMousePosition(%input-19.Input_t* %196, %..rawptr %203)
	br label %if.done-5

if.else-4:
	; SelectorExpr
	; SelectorExpr
	%204 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%205 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %204, i64 0
	%206 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %205, i64 0, i32 1
	%207 = load %input-19.Input_t*, %input-19.Input_t** %206, align 8
	call void @input-19.SetAllInputNeutral(%input-19.Input_t* %207)
	br label %if.done-5

if.done-5:
	; AssignStmt
	; SelectorExpr
	%208 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%209 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %208, i64 0
	%210 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %209, i64 0, i32 8
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%211 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%212 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %211, i64 0
	%213 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %212, i64 0, i32 3
	%214 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %213, align 8
	%215 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %214, i64 0
	%216 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %215, i64 0, i32 2
	%217 = load %..rawptr, %..rawptr* %216, align 8
	%218 = call {[0 x <8 x i8>], [2 x float]} @platform_win32-28.GetWindowSize(%..rawptr %217)
	store {[0 x <8 x i8>], [2 x float]} %218, {[0 x <8 x i8>], [2 x float]}* %210
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%219 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%220 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %219, i64 0
	%221 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %220, i64 0, i32 3
	%222 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %221, align 8
	%223 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %222, i64 0
	%224 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %223, i64 0, i32 2
	%225 = load %..rawptr, %..rawptr* %224, align 8
	; SelectorExpr
	; SelectorExpr
	%226 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%227 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %226, i64 0
	%228 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %227, i64 0, i32 8
	%229 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %228, i64 0, i32 1, i32 0
	%230 = load float, float* %229, align 4
	; SelectorExpr
	; SelectorExpr
	%231 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%232 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %231, i64 0
	%233 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %232, i64 0, i32 8
	%234 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %233, i64 0, i32 1, i32 1
	%235 = load float, float* %234, align 4
	; SelectorExpr
	; SelectorExpr
	%236 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%237 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %236, i64 0
	%238 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %237, i64 0, i32 9
	%239 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %238, i64 0, i32 0
	%240 = load i32, i32* %239, align 4
	; SelectorExpr
	; SelectorExpr
	%241 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%242 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %241, i64 0
	%243 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %242, i64 0, i32 9
	%244 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %243, i64 0, i32 1
	%245 = load i32, i32* %244, align 4
	; SelectorExpr
	; SelectorExpr
	%246 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%247 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %246, i64 0
	%248 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %247, i64 0, i32 9
	%249 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %248, i64 0, i32 2
	%250 = load i32, i32* %249, align 4
	; SelectorExpr
	; SelectorExpr
	%251 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%252 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %251, i64 0
	%253 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %252, i64 0, i32 9
	%254 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %253, i64 0, i32 3
	%255 = load i32, i32* %254, align 4
	store %..any zeroinitializer, %..any* %7
	%256 = bitcast float* %229 to %..rawptr
	%257 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%258 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %256, %..rawptr* %258
	%259 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %257, %Type_Info** %259
	%260 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%261 = bitcast float* %234 to %..rawptr
	%262 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%263 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %261, %..rawptr* %263
	%264 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %262, %Type_Info** %264
	%265 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%266 = bitcast i32* %239 to %..rawptr
	%267 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%268 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %266, %..rawptr* %268
	%269 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %267, %Type_Info** %269
	%270 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%271 = bitcast i32* %244 to %..rawptr
	%272 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%273 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %271, %..rawptr* %273
	%274 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %272, %Type_Info** %274
	%275 = load %..any, %..any* %10, align 8
	store %..any zeroinitializer, %..any* %11
	%276 = bitcast i32* %249 to %..rawptr
	%277 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%278 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %276, %..rawptr* %278
	%279 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %277, %Type_Info** %279
	%280 = load %..any, %..any* %11, align 8
	store %..any zeroinitializer, %..any* %12
	%281 = bitcast i32* %254 to %..rawptr
	%282 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%283 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %281, %..rawptr* %283
	%284 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %282, %Type_Info** %284
	%285 = load %..any, %..any* %12, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	store [6 x %..any] zeroinitializer, [6 x %..any]* %14
	%286 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 0
	store %..any %260, %..any* %286
	%287 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 1
	store %..any %265, %..any* %287
	%288 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 2
	store %..any %270, %..any* %288
	%289 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 3
	store %..any %275, %..any* %289
	%290 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 4
	store %..any %280, %..any* %290
	%291 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 5
	store %..any %285, %..any* %291
	%292 = getelementptr inbounds [6 x %..any], [6 x %..any]* %14, i64 0, i32 0
	%293 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 0
	store %..any* %292, %..any** %293
	%294 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 1
	store i64 6, i64* %294
	%295 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 2
	store i64 6, i64* %295
	%296 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	call void @platform_win32-28.ChangeWindowTitle(%..rawptr %225, %..string {i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__str$27, i64 0, i32 0), i64 52}, {%..any*, i64, i64} %296)
	; AssignStmt
	; SelectorExpr
	%297 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%298 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %297, i64 0
	%299 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %298, i64 0, i32 9
	; SelectorExpr
	%300 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%301 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %300, i64 0
	%302 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %301, i64 0, i32 8
	%303 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %302, align 8
	; SelectorExpr
	; SelectorExpr
	%304 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%305 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %304, i64 0
	%306 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %305, i64 0, i32 2
	%307 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %306, align 8
	%308 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %307, i64 0
	%309 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %308, i64 0, i32 1
	%310 = load float, float* %309, align 4
	%311 = bitcast {[0 x <8 x i8>], [2 x float]}* %302 to i64*
	%312 = load i64, i64* %311, align 8
	%313 = call %render-14.DrawRegion @main-2.CalculateViewport(i64 %312, float %310)
	store %render-14.DrawRegion %313, %render-14.DrawRegion* %299
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%314 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%315 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %314, i64 0
	%316 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %315, i64 0, i32 7
	%317 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %316, i64 0, i32 1, i32 0
	; SelectorExpr
	; SelectorExpr
	%318 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%319 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %318, i64 0
	%320 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %319, i64 0, i32 8
	%321 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %320, i64 0, i32 1, i32 0
	%322 = load float, float* %321, align 4
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%323 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%324 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %323, i64 0
	%325 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %324, i64 0, i32 2
	%326 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %325, align 8
	%327 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %326, i64 0
	%328 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %327, i64 0, i32 0
	%329 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %328, i64 0, i32 1, i32 0
	%330 = load float, float* %329, align 4
	%331 = fdiv float %322, %330
	store float %331, float* %317
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%332 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%333 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %332, i64 0
	%334 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %333, i64 0, i32 7
	%335 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %334, i64 0, i32 1, i32 1
	; SelectorExpr
	; SelectorExpr
	%336 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%337 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %336, i64 0
	%338 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %337, i64 0, i32 8
	%339 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %338, i64 0, i32 1, i32 1
	%340 = load float, float* %339, align 4
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%341 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%342 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %341, i64 0
	%343 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %342, i64 0, i32 2
	%344 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %343, align 8
	%345 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %344, i64 0
	%346 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %345, i64 0, i32 0
	%347 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %346, i64 0, i32 1, i32 1
	%348 = load float, float* %347, align 4
	%349 = fdiv float %340, %348
	store float %349, float* %335
	%350 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @main-2.ClearScreen(%engine-20.Context_t* %350)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%351 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%352 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %351, i64 0
	%353 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %352, i64 0, i32 9
	%354 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %353, i64 0, i32 0
	%355 = load i32, i32* %354, align 4
	; SelectorExpr
	; SelectorExpr
	%356 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%357 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %356, i64 0
	%358 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %357, i64 0, i32 9
	%359 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %358, i64 0, i32 1
	%360 = load i32, i32* %359, align 4
	; SelectorExpr
	; SelectorExpr
	%361 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%362 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %361, i64 0
	%363 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %362, i64 0, i32 9
	%364 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %363, i64 0, i32 2
	%365 = load i32, i32* %364, align 4
	; SelectorExpr
	; SelectorExpr
	%366 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%367 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %366, i64 0
	%368 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %367, i64 0, i32 9
	%369 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %368, i64 0, i32 3
	%370 = load i32, i32* %369, align 4
	call ccc void @glViewport(i32 %355, i32 %360, i32 %365, i32 %370)
	%371 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @main-2.ClearGameScreen(%engine-20.Context_t* %371)
	; SelectorExpr
	call void @gl-10.Clear(i32 256)
	; SelectorExpr
	%372 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	; SelectorExpr
	%373 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%374 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %373, i64 0
	%375 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %374, i64 0, i32 2
	%376 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %375, align 8
	call void @game-21.CameraLogic(%engine-20.Context_t* %372, %renderer-24.Camera_t* %376)
	; queue
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %15
		; SelectorExpr
	; SelectorExpr
	%377 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%378 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %377, i64 0
	%379 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %378, i64 0, i32 1
	%380 = load %jmap-22.Data_t*, %jmap-22.Data_t** %379, align 8
	%381 = call %render_queue-23.Queue* @jmap-22.DrawMap(%jmap-22.Data_t* %380)
	store %render_queue-23.Queue* %381, %render_queue-23.Queue** %15
	; SelectorExpr
	%382 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	; SelectorExpr
	%383 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	%384 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %383, i64 0
	%385 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %384, i64 0, i32 2
	%386 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %385, align 8
	%387 = load %render_queue-23.Queue*, %render_queue-23.Queue** %15, align 8
	call void @renderer-24.RenderQueue(%engine-20.Context_t* %382, %renderer-24.Camera_t* %386, %render_queue-23.Queue* %387)
	; SelectorExpr
	%388 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @render-14.Draw(%engine-20.Context_t* %388)
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%389 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%390 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %389, i64 0
	%391 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %390, i64 0, i32 0
	%392 = load %engine-20.Setting_t*, %engine-20.Setting_t** %391, align 8
	%393 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %392, i64 0
	%394 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %393, i64 0, i32 1
	%395 = load i1, i1* %394, align 1
	br i1 %395, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%396 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%397 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %396, i64 0
	%398 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %397, i64 0, i32 5
	%399 = load %time-15.Data_t*, %time-15.Data_t** %398, align 8
	%400 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %399, i64 0
	%401 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %400, i64 0, i32 2
	%402 = load double, double* %401, align 8
	%403 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @jimgui-12.BeginNewFrame(double %402, %engine-20.Context_t* %403)
	; SelectorExpr
	%404 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%405 = load %game-21.Context_t*, %game-21.Context_t** %5, align 8
	call void @debug-11.RenderDebugUI(%engine-20.Context_t* %404, %game-21.Context_t* %405)
	; SelectorExpr
	%406 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @jimgui-12.RenderProc(%engine-20.Context_t* %406)
	br label %if.done-7

if.done-7:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%407 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%408 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %407, i64 0
	%409 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %408, i64 0, i32 3
	%410 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %409, align 8
	%411 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %410, i64 0
	%412 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %411, i64 0, i32 3
	%413 = load %..rawptr, %..rawptr* %412, align 8
	call void @platform_win32-28.SwapBuffers(%..rawptr %413)
	br label %for.loop-1

for.done-8:
	ret void
}

define {{i8*, i64, i64}, i1} @os-3.read_entire_file(%..string %name) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca {{i8*, i64, i64}, i1}, align 8
	%4 = alloca i64, align 8
	%5 = alloca {{i8*, i64, i64}, i1}, align 8
	%6 = alloca {{i8*, i64, i64}, i1}, align 8
	%7 = alloca {i8*, i64, i64}, align 8
	%8 = alloca {i8*, i64, i64}, align 8
	%9 = alloca {{i8*, i64, i64}, i1}, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca {{i8*, i64, i64}, i1}, align 8
	%13 = alloca {i8*, i64, i64}, align 8
	%14 = alloca {{i8*, i64, i64}, i1}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	; fd
	store i64 zeroinitializer, i64* %1
		; err
	store i64 zeroinitializer, i64* %2
		%15 = load %..string, %..string* %0, align 8
	%16 = call {i64, i64} @os_windows-29.open(%..string %15, i64 0, i32 0)
	%17 = extractvalue {i64, i64} %16, 0
	%18 = extractvalue {i64, i64} %16, 1
	store i64 %17, i64* %1
	store i64 %18, i64* %2
	; IfStmt
	%19 = load i64, i64* %2, align 8
	%20 = icmp ne i64 %19, 0
	br i1 %20, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %3
	%21 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %3, i64 0, i32 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %21
	%22 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %3, i64 0, i32 1
	store i1 false, i1* %22
	%23 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %3, align 8
	ret {{i8*, i64, i64}, i1} %23

if.done-2:
	; DeferStmt
	; length
	store i64 zeroinitializer, i64* %4
		; IfStmt
	; AssignStmt
	%24 = load i64, i64* %1, align 8
	%25 = call {i64, i64} @os_windows-29.file_size(i64 %24)
	%26 = extractvalue {i64, i64} %25, 0
	%27 = extractvalue {i64, i64} %25, 1
	store i64 %26, i64* %4
	store i64 %27, i64* %2
	%28 = load i64, i64* %2, align 8
	%29 = icmp ne i64 %28, 0
	br i1 %29, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %5
	%30 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %5, i64 0, i32 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %30
	%31 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %5, i64 0, i32 1
	store i1 false, i1* %31
	%32 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %5, align 8
	; defer
	%33 = load i64, i64* %1, align 8
	call void @os_windows-29.close(i64 %33)
	ret {{i8*, i64, i64}, i1} %32

if.done-4:
	; IfStmt
	%34 = load i64, i64* %4, align 8
	%35 = icmp eq i64 %34, 0
	br i1 %35, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %6
	%36 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %6, i64 0, i32 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %36
	%37 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %6, i64 0, i32 1
	store i1 true, i1* %37
	%38 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %6, align 8
	; defer
	%39 = load i64, i64* %1, align 8
	call void @os_windows-29.close(i64 %39)
	ret {{i8*, i64, i64}, i1} %38

if.done-6:
	; data
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %7
		; make
	%40 = load i64, i64* %4, align 8
	%41 = bitcast i64 %40 to i64
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$28, i64 0, i32 0), i64 20}, i64 25, i64 23, i64 0, i64 %41, i64 %41)
	%42 = mul i64 1, %41
	%43 = call %..rawptr @alloc_align(i64 %42, i64 1)
	%44 = bitcast %..rawptr %43 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %8
	%45 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 0
	store i8* %44, i8** %45
	%46 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 1
	store i64 %41, i64* %46
	%47 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 2
	store i64 %41, i64* %47
	%48 = load {i8*, i64, i64}, {i8*, i64, i64}* %8, align 8
	store {i8*, i64, i64} %48, {i8*, i64, i64}* %7
	; IfStmt
	%49 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%50 = extractvalue {i8*, i64, i64} %49, 0
	%51 = extractvalue {i8*, i64, i64} %49, 2
	%52 = bitcast %..rawptr null to i8*
	%53 = icmp eq i8* %50, %52
	%54 = icmp eq i64 %51, 0
	%55 = or i1 %53, %54
	br i1 %55, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %9
	%56 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %9, i64 0, i32 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %56
	%57 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %9, i64 0, i32 1
	store i1 false, i1* %57
	%58 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %9, align 8
	; defer
	%59 = load i64, i64* %1, align 8
	call void @os_windows-29.close(i64 %59)
	ret {{i8*, i64, i64}, i1} %58

if.done-8:
	; bytes_read
	store i64 zeroinitializer, i64* %10
		; read_err
	store i64 zeroinitializer, i64* %11
		%60 = load i64, i64* %1, align 8
	%61 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%62 = call {i64, i64} @os_windows-29.read(i64 %60, {i8*, i64, i64} %61)
	%63 = extractvalue {i64, i64} %62, 0
	%64 = extractvalue {i64, i64} %62, 1
	store i64 %63, i64* %10
	store i64 %64, i64* %11
	; IfStmt
	%65 = load i64, i64* %11, align 8
	%66 = icmp ne i64 %65, 0
	br i1 %66, label %if.then-9, label %if.done-10

if.then-9:
	; free
	%67 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%68 = extractvalue {i8*, i64, i64} %67, 0
	%69 = bitcast i8* %68 to %..rawptr
	call void @free_ptr(%..rawptr %69)
	; ReturnStmt
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %12
	%70 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %12, i64 0, i32 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %70
	%71 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %12, i64 0, i32 1
	store i1 false, i1* %71
	%72 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %12, align 8
	; defer
	%73 = load i64, i64* %1, align 8
	call void @os_windows-29.close(i64 %73)
	ret {{i8*, i64, i64}, i1} %72

if.done-10:
	; ReturnStmt
	; SliceExpr
	%74 = load i64, i64* %10, align 8
	%75 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%76 = extractvalue {i8*, i64, i64} %75, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$29, i64 0, i32 0), i64 20}, i64 35, i64 13, i64 0, i64 %74, i64 %76)
	%77 = extractvalue {i8*, i64, i64} %75, 0
	%78 = getelementptr inbounds i8, i8* %77, i64 0
	%79 = sub i64 %74, 0
	%80 = sub i64 %76, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %13
	%81 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 0
	store i8* %78, i8** %81
	%82 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 1
	store i64 %79, i64* %82
	%83 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 2
	store i64 %80, i64* %83
	%84 = load {i8*, i64, i64}, {i8*, i64, i64}* %13, align 8
	store {{i8*, i64, i64}, i1} zeroinitializer, {{i8*, i64, i64}, i1}* %14
	%85 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %14, i64 0, i32 0
	store {i8*, i64, i64} %84, {i8*, i64, i64}* %85
	%86 = getelementptr inbounds {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %14, i64 0, i32 1
	store i1 true, i1* %86
	%87 = load {{i8*, i64, i64}, i1}, {{i8*, i64, i64}, i1}* %14, align 8
	; defer
	%88 = load i64, i64* %1, align 8
	call void @os_windows-29.close(i64 %88)
	ret {{i8*, i64, i64}, i1} %87
}

define %fmt-4.String_Buffer @fmt-4.make_string_buffer_from_slice({i8*, i64, i64} %b) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca %fmt-4.String_Buffer, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %b, {i8*, i64, i64}* %0
	; ReturnStmt
	; CompoundLit
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %1
	store %fmt-4.String_Buffer {{i8*, i64, i64,%Allocator} zeroinitializer, {i8*, i64, i64} zeroinitializer, i1 false}, %fmt-4.String_Buffer* %1
	%2 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%3 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %1, i64 0, i32 1
	store {i8*, i64, i64} %2, {i8*, i64, i64}* %3
	%4 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %1, align 8
	ret %fmt-4.String_Buffer %4
}

define {i8*, i64, i64} @fmt-4.string_buffer_data-180(%fmt-4.String_Buffer* %buf) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, align 8
	; IfStmt
	; SelectorExpr
	%3 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, i64 0, i32 2
	%4 = load i1, i1* %3, align 1
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	; SliceExpr
	; SelectorExpr
	%5 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, i64 0, i32 0
	%6 = load {i8*, i64, i64,%Allocator}, {i8*, i64, i64,%Allocator}* %5, align 8
	%7 = extractvalue {i8*, i64, i64,%Allocator} %6, 1
	%8 = extractvalue {i8*, i64, i64,%Allocator} %6, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2a, i64 0, i32 0), i64 21}, i64 35, i64 16, i64 0, i64 %7, i64 %8)
	%9 = extractvalue {i8*, i64, i64,%Allocator} %6, 0
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	%11 = sub i64 %7, 0
	%12 = sub i64 %8, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %0, i64 0, i32 0
	store i8* %10, i8** %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %0, i64 0, i32 1
	store i64 %11, i64* %14
	%15 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %0, i64 0, i32 2
	store i64 %12, i64* %15
	%16 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %16

if.done-2:
	; ReturnStmt
	; SliceExpr
	; SelectorExpr
	%17 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, i64 0, i32 1
	%18 = load {i8*, i64, i64}, {i8*, i64, i64}* %17, align 8
	%19 = extractvalue {i8*, i64, i64} %18, 1
	%20 = extractvalue {i8*, i64, i64} %18, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2b, i64 0, i32 0), i64 21}, i64 37, i64 15, i64 0, i64 %19, i64 %20)
	%21 = extractvalue {i8*, i64, i64} %18, 0
	%22 = getelementptr inbounds i8, i8* %21, i64 0
	%23 = sub i64 %19, 0
	%24 = sub i64 %20, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
	%25 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %1, i64 0, i32 0
	store i8* %22, i8** %25
	%26 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %1, i64 0, i32 1
	store i64 %23, i64* %26
	%27 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %1, i64 0, i32 2
	store i64 %24, i64* %27
	%28 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	ret {i8*, i64, i64} %28
}

define %..string @fmt-4.to_string(%fmt-4.String_Buffer* %buf) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer, align 16
	%1 = alloca %..string, align 8
	%2 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, align 8
	; ReturnStmt
	%3 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %buf, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %0
	store %fmt-4.String_Buffer %3, %fmt-4.String_Buffer* %0
	%4 = call {i8*, i64, i64} @fmt-4.string_buffer_data-180(%fmt-4.String_Buffer* %0)
	%5 = extractvalue {i8*, i64, i64} %4, 0
	%6 = extractvalue {i8*, i64, i64} %4, 1
	store %..string zeroinitializer, %..string* %1
	%7 = getelementptr inbounds %..string, %..string* %1, i64 0, i32 0
	store i8* %5, i8** %7
	%8 = getelementptr inbounds %..string, %..string* %1, i64 0, i32 1
	store i64 %6, i64* %8
	%9 = load %..string, %..string* %1, align 8
	ret %..string %9
}

define void @fmt-4.write_string(%fmt-4.String_Buffer* %buf, %..string %s) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i8*, align 8
	%3 = alloca {i8*, i64, i64}, align 8
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %s, %..string* %1
	%4 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%5 = load %..string, %..string* %1, align 8
	%6 = extractvalue %..string %5, 0
	store i8* zeroinitializer, i8** %2
	store i8* %6, i8** %2
	%7 = extractvalue %..string %5, 1
	%8 = sub i64 %7, 0
	%9 = sub i64 %7, 0
	%10 = load i8*, i8** %2, align 8
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %3
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %3, i64 0, i32 0
	store i8* %11, i8** %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %3, i64 0, i32 1
	store i64 %8, i64* %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %3, i64 0, i32 2
	store i64 %9, i64* %14
	%15 = load {i8*, i64, i64}, {i8*, i64, i64}* %3, align 8
	call void @fmt-4.write_bytes(%fmt-4.String_Buffer* %4, {i8*, i64, i64} %15)
	ret void
}

define void @fmt-4.write_bytes(%fmt-4.String_Buffer* %buf, {i8*, i64, i64} %b) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		store {i8*, i64, i64} %b, {i8*, i64, i64}* %1
	; IfStmt
	; SelectorExpr
	%2 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%3 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %2, i64 0
	%4 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %3, i64 0, i32 2
	%5 = load i1, i1* %4, align 1
	br i1 %5, label %if.then-1, label %if.else-2

if.then-1:
	; append
	; SelectorExpr
	%6 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%7 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %6, i64 0
	%8 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %7, i64 0, i32 0
	%9 = bitcast {i8*, i64, i64,%Allocator}* %8 to %..rawptr
	; SelectorExpr
	%10 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%11 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %10, i64 0
	%12 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %11, i64 0, i32 0
	%13 = load {i8*, i64, i64,%Allocator}, {i8*, i64, i64,%Allocator}* %12, align 8
	%14 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%15 = extractvalue {i8*, i64, i64} %14, 0
	%16 = extractvalue {i8*, i64, i64} %14, 1
	%17 = bitcast i8* %15 to %..rawptr
	%18 = call i64 @__dynamic_array_append(%..rawptr %9, i64 1, i64 1, %..rawptr %17, i64 %16)
	br label %if.done-3

if.else-2:
	; append
	; SelectorExpr
	%19 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%20 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %20, i64 0, i32 1
	%22 = bitcast {i8*, i64, i64}* %21 to %..rawptr
	; SelectorExpr
	%23 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%24 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %24, i64 0, i32 1
	%26 = load {i8*, i64, i64}, {i8*, i64, i64}* %25, align 8
	%27 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%28 = extractvalue {i8*, i64, i64} %27, 0
	%29 = extractvalue {i8*, i64, i64} %27, 1
	%30 = bitcast i8* %28 to %..rawptr
	%31 = call i64 @__slice_append(%..rawptr %22, i64 1, i64 1, %..rawptr %30, i64 %29)
	br label %if.done-3

if.done-3:
	ret void
}

define void @fmt-4.write_byte(%fmt-4.String_Buffer* %buf, i8 %b) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca i8, align 1
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca [1 x i8], align 1
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca [1 x i8], align 1
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store i8 zeroinitializer, i8* %1
		store i8 %b, i8* %1
	; IfStmt
	; SelectorExpr
	%6 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%7 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %6, i64 0
	%8 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %7, i64 0, i32 2
	%9 = load i1, i1* %8, align 1
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	; append
	; SelectorExpr
	%10 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%11 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %10, i64 0
	%12 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %11, i64 0, i32 0
	%13 = bitcast {i8*, i64, i64,%Allocator}* %12 to %..rawptr
	; SelectorExpr
	%14 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%15 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %14, i64 0
	%16 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %15, i64 0, i32 0
	%17 = load {i8*, i64, i64,%Allocator}, {i8*, i64, i64,%Allocator}* %16, align 8
	%18 = load i8, i8* %1, align 1
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	store [1 x i8] zeroinitializer, [1 x i8]* %3
	%19 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i32 0
	store i8 %18, i8* %19
	%20 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i32 0
	%21 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %20, i8** %21
	%22 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %22
	%23 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %23
	%24 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%25 = extractvalue {i8*, i64, i64} %24, 0
	%26 = extractvalue {i8*, i64, i64} %24, 1
	%27 = bitcast i8* %25 to %..rawptr
	%28 = call i64 @__dynamic_array_append(%..rawptr %13, i64 1, i64 1, %..rawptr %27, i64 %26)
	br label %if.done-3

if.else-2:
	; append
	; SelectorExpr
	%29 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%30 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %29, i64 0
	%31 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %30, i64 0, i32 1
	%32 = bitcast {i8*, i64, i64}* %31 to %..rawptr
	; SelectorExpr
	%33 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%34 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %33, i64 0
	%35 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %34, i64 0, i32 1
	%36 = load {i8*, i64, i64}, {i8*, i64, i64}* %35, align 8
	%37 = load i8, i8* %1, align 1
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	store [1 x i8] zeroinitializer, [1 x i8]* %5
	%38 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i32 0
	store i8 %37, i8* %38
	%39 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i32 0
	%40 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %39, i8** %40
	%41 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %41
	%42 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %42
	%43 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%44 = extractvalue {i8*, i64, i64} %43, 0
	%45 = extractvalue {i8*, i64, i64} %43, 1
	%46 = bitcast i8* %44 to %..rawptr
	%47 = call i64 @__slice_append(%..rawptr %32, i64 1, i64 1, %..rawptr %46, i64 %45)
	br label %if.done-3

if.done-3:
	ret void
}

define void @fmt-4.write_rune(%fmt-4.String_Buffer* %buf, i32 %r) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca i32, align 4
	%2 = alloca [4 x i8], align 1
	%3 = alloca i64, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store i32 zeroinitializer, i32* %1
		store i32 %r, i32* %1
	; IfStmt
	%5 = load i32, i32* %1, align 4
	%6 = icmp slt i32 %5, 128
	br i1 %6, label %if.then-1, label %if.done-2

if.then-1:
	%7 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%8 = load i32, i32* %1, align 4
	%9 = trunc i32 %8 to i8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %7, i8 %9)
	; ReturnStmt
	ret void

if.done-2:
	; b
	store [4 x i8] zeroinitializer, [4 x i8]* %2
		; n
	store i64 zeroinitializer, i64* %3
		; SelectorExpr
	%10 = load i32, i32* %1, align 4
	%11 = call {[4 x i8], i64} @utf8-5.encode_rune(i32 %10)
	%12 = extractvalue {[4 x i8], i64} %11, 0
	%13 = extractvalue {[4 x i8], i64} %11, 1
	store [4 x i8] %12, [4 x i8]* %2
	store i64 %13, i64* %3
	%14 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SliceExpr
	%15 = load i64, i64* %3, align 8
	%16 = load [4 x i8], [4 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2c, i64 0, i32 0), i64 21}, i64 68, i64 20, i64 0, i64 %15, i64 4)
	%17 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i32 0
	%18 = getelementptr inbounds i8, i8* %17, i64 0
	%19 = sub i64 %15, 0
	%20 = sub i64 4, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%21 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %18, i8** %21
	%22 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %19, i64* %22
	%23 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %20, i64* %23
	%24 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	call void @fmt-4.write_bytes(%fmt-4.String_Buffer* %14, {i8*, i64, i64} %24)
	ret void
}

define i64 @fmt-4.fprintln(i64 %fd, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [4096 x i8], align 1
	%3 = alloca %fmt-4.String_Buffer, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca %fmt-4.String_Buffer, align 16
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; data
	store [4096 x i8] zeroinitializer, [4096 x i8]* %2
		; buf
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %3
		; SliceExpr
	%7 = load [4096 x i8], [4096 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2d, i64 0, i32 0), i64 21}, i64 103, i64 43, i64 0, i64 0, i64 4096)
	%8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	%10 = sub i64 0, 0
	%11 = sub i64 4096, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %9, i8** %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %10, i64* %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %11, i64* %14
	%15 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%16 = call %fmt-4.String_Buffer @fmt-4.make_string_buffer_from_slice({i8*, i64, i64} %15)
	store %fmt-4.String_Buffer %16, %fmt-4.String_Buffer* %3
	%17 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %3, i64 0
	%18 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%19 = call %..string @fmt-4.sbprintln(%fmt-4.String_Buffer* %17, {%..any*, i64, i64} %18)
	; res
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
		%20 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %3, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %6
	store %fmt-4.String_Buffer %20, %fmt-4.String_Buffer* %6
	%21 = call {i8*, i64, i64} @fmt-4.string_buffer_data-180(%fmt-4.String_Buffer* %6)
	store {i8*, i64, i64} %21, {i8*, i64, i64}* %5
	; SelectorExpr
	%22 = load i64, i64* %0, align 8
	%23 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%24 = call {i64, i64} @os_windows-29.write(i64 %22, {i8*, i64, i64} %23)
	; ReturnStmt
	%25 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%26 = extractvalue {i8*, i64, i64} %25, 1
	ret i64 %26
}

define i64 @fmt-4.fprintf(i64 %fd, %..string %fmt, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [4096 x i8], align 1
	%4 = alloca %fmt-4.String_Buffer, align 8
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca {i8*, i64, i64}, align 8
	%7 = alloca %fmt-4.String_Buffer, align 16
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %fmt, %..string* %1
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %2
	; data
	store [4096 x i8] zeroinitializer, [4096 x i8]* %3
		; buf
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %4
		; SliceExpr
	%8 = load [4096 x i8], [4096 x i8]* %3, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2e, i64 0, i32 0), i64 21}, i64 111, i64 43, i64 0, i64 0, i64 4096)
	%9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i32 0
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	%11 = sub i64 0, 0
	%12 = sub i64 4096, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 0
	store i8* %10, i8** %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 1
	store i64 %11, i64* %14
	%15 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 2
	store i64 %12, i64* %15
	%16 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%17 = call %fmt-4.String_Buffer @fmt-4.make_string_buffer_from_slice({i8*, i64, i64} %16)
	store %fmt-4.String_Buffer %17, %fmt-4.String_Buffer* %4
	%18 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %4, i64 0
	%19 = load %..string, %..string* %1, align 8
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%21 = call %..string @fmt-4.sbprintf(%fmt-4.String_Buffer* %18, %..string %19, {%..any*, i64, i64} %20)
	; res
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %6
		%22 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %4, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %7
	store %fmt-4.String_Buffer %22, %fmt-4.String_Buffer* %7
	%23 = call {i8*, i64, i64} @fmt-4.string_buffer_data-180(%fmt-4.String_Buffer* %7)
	store {i8*, i64, i64} %23, {i8*, i64, i64}* %6
	; SelectorExpr
	%24 = load i64, i64* %0, align 8
	%25 = load {i8*, i64, i64}, {i8*, i64, i64}* %6, align 8
	%26 = call {i64, i64} @os_windows-29.write(i64 %24, {i8*, i64, i64} %25)
	; ReturnStmt
	%27 = load {i8*, i64, i64}, {i8*, i64, i64}* %6, align 8
	%28 = extractvalue {i8*, i64, i64} %27, 1
	ret i64 %28
}

define i64 @fmt-4.println({%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca {%..any*, i64, i64}, align 8
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %0
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %0
	; ReturnStmt
	; SelectorExpr
	%1 = load i64, i64* @os_windows-29.stdout, align 8
	%2 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %0, align 8
	%3 = call i64 @fmt-4.fprintln(i64 %1, {%..any*, i64, i64} %2)
	ret i64 %3
}

define i64 @fmt-4.printf(%..string %fmt, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; ReturnStmt
	; SelectorExpr
	%2 = load i64, i64* @os_windows-29.stdout, align 8
	%3 = load %..string, %..string* %0, align 8
	%4 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%5 = call i64 @fmt-4.fprintf(i64 %2, %..string %3, {%..any*, i64, i64} %4)
	ret i64 %5
}

define %..string @fmt-4.bprintf({i8*, i64, i64} %buf, %..string %fmt, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca %fmt-4.String_Buffer, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %fmt, %..string* %1
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %2
	; sb
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %3
		; SliceExpr
	%5 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%6 = extractvalue {i8*, i64, i64} %5, 1
	%7 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2f, i64 0, i32 0), i64 21}, i64 163, i64 41, i64 0, i64 0, i64 %6)
	%8 = extractvalue {i8*, i64, i64} %7, 0
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	%10 = sub i64 0, 0
	%11 = sub i64 %6, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %9, i8** %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %10, i64* %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %11, i64* %14
	%15 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%16 = call %fmt-4.String_Buffer @fmt-4.make_string_buffer_from_slice({i8*, i64, i64} %15)
	store %fmt-4.String_Buffer %16, %fmt-4.String_Buffer* %3
	; ReturnStmt
	%17 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %3, i64 0
	%18 = load %..string, %..string* %1, align 8
	%19 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%20 = call %..string @fmt-4.sbprintf(%fmt-4.String_Buffer* %17, %..string %18, {%..any*, i64, i64} %19)
	ret %..string %20
}

define void @fmt-4.write_type(%fmt-4.String_Buffer* %buf, %Type_Info* %ti) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info.Named*, align 8
	%3 = alloca %Type_Info.Integer*, align 8
	%4 = alloca %fmt-4.Fmt_Info, align 8
	%5 = alloca %fmt-4.Fmt_Info, align 8
	%6 = alloca %Type_Info.Float*, align 8
	%7 = alloca %Type_Info.Complex*, align 8
	%8 = alloca %Type_Info.Quaternion*, align 8
	%9 = alloca %Type_Info.String*, align 8
	%10 = alloca %Type_Info.Boolean*, align 8
	%11 = alloca %Type_Info.Any*, align 8
	%12 = alloca %Type_Info.Atomic*, align 8
	%13 = alloca %Type_Info.Pointer*, align 8
	%14 = alloca %Type_Info.Procedure*, align 8
	%15 = alloca %Type_Info.Tuple*, align 8
	%16 = alloca {%Type_Info.Tuple*, i1}, align 8
	%17 = alloca %Type_Info*, align 8
	%18 = alloca i64, align 8
	%19 = alloca i64, align 8
	%20 = alloca i64, align 8
	%21 = alloca %Type_Info.Tuple*, align 8
	%22 = alloca i64, align 8
	%23 = alloca %..string, align 8
	%24 = alloca i64, align 8
	%25 = alloca i64, align 8
	%26 = alloca i64, align 8
	%27 = alloca %Type_Info*, align 8
	%28 = alloca %Type_Info.Array*, align 8
	%29 = alloca %fmt-4.Fmt_Info, align 8
	%30 = alloca %fmt-4.Fmt_Info, align 8
	%31 = alloca %Type_Info.Dynamic_Array*, align 8
	%32 = alloca %Type_Info.Slice*, align 8
	%33 = alloca %Type_Info.Vector*, align 8
	%34 = alloca %fmt-4.Fmt_Info, align 8
	%35 = alloca %fmt-4.Fmt_Info, align 8
	%36 = alloca %Type_Info.Map*, align 8
	%37 = alloca %Type_Info.Struct*, align 8
	%38 = alloca %fmt-4.Fmt_Info, align 8
	%39 = alloca %fmt-4.Fmt_Info, align 8
	%40 = alloca %..string, align 8
	%41 = alloca i64, align 8
	%42 = alloca i64, align 8
	%43 = alloca i64, align 8
	%44 = alloca %Type_Info.Union*, align 8
	%45 = alloca {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, align 8
	%46 = alloca i64, align 8
	%47 = alloca %..string, align 8
	%48 = alloca i64, align 8
	%49 = alloca i64, align 8
	%50 = alloca i64, align 8
	%51 = alloca %..string, align 8
	%52 = alloca i64, align 8
	%53 = alloca i64, align 8
	%54 = alloca i64, align 8
	%55 = alloca %Type_Info*, align 8
	%56 = alloca %Type_Info.Struct*, align 8
	%57 = alloca {%Type_Info.Struct*, i1}, align 8
	%58 = alloca i64, align 8
	%59 = alloca i64, align 8
	%60 = alloca i64, align 8
	%61 = alloca i64, align 8
	%62 = alloca i64, align 8
	%63 = alloca %Type_Info.Raw_Union*, align 8
	%64 = alloca %..string, align 8
	%65 = alloca i64, align 8
	%66 = alloca i64, align 8
	%67 = alloca i64, align 8
	%68 = alloca %Type_Info.Enum*, align 8
	%69 = alloca %..string, align 8
	%70 = alloca i64, align 8
	%71 = alloca i64, align 8
	%72 = alloca i64, align 8
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store %Type_Info* zeroinitializer, %Type_Info** %1
		store %Type_Info* %ti, %Type_Info** %1
	; IfStmt
	%73 = load %Type_Info*, %Type_Info** %1, align 8
	%74 = icmp eq %Type_Info* %73, zeroinitializer
	br i1 %74, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; TypeMatchStmt
	%75 = load %Type_Info*, %Type_Info** %1, align 8
	; get union's tag
	%76 = getelementptr inbounds %Type_Info, %Type_Info* %75, i64 0, i32 4 ; UnionTagPtr
	%77 = load i64, i64* %76, align 8
	%78 = bitcast %Type_Info* %75 to %..rawptr
	%79 = icmp eq i64 %77, 1
	br i1 %79, label %typematch.body-4, label %typematch.next-3

typematch.next-3:
	%80 = icmp eq i64 %77, 2
	br i1 %80, label %typematch.body-6, label %typematch.next-5

typematch.body-4:
	%81 = bitcast %..rawptr %78 to %Type_Info.Named*
	store %Type_Info.Named* zeroinitializer, %Type_Info.Named** %2
	store %Type_Info.Named* %81, %Type_Info.Named** %2
	%82 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%83 = load %Type_Info.Named*, %Type_Info.Named** %2, align 8
	%84 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %83, i64 0
	%85 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %84, i64 0, i32 2
	%86 = load %..string, %..string* %85, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %82, %..string %86)
	br label %typematch.done-133

typematch.next-5:
	%87 = icmp eq i64 %77, 3
	br i1 %87, label %typematch.body-16, label %typematch.next-15

typematch.body-6:
	%88 = bitcast %..rawptr %78 to %Type_Info.Integer*
	store %Type_Info.Integer* zeroinitializer, %Type_Info.Integer** %3
	store %Type_Info.Integer* %88, %Type_Info.Integer** %3
	; MatchStmt
	%89 = load %Type_Info*, %Type_Info** %1, align 8
	%90 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%91 = icmp eq %Type_Info* %89, %90
	%92 = icmp eq i1 true, %91
	br i1 %92, label %match.case.body-8, label %match.case.next-7

match.case.next-7:
	%93 = load %Type_Info*, %Type_Info** %1, align 8
	%94 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%95 = icmp eq %Type_Info* %93, %94
	%96 = icmp eq i1 true, %95
	br i1 %96, label %match.fall.body-10, label %match.case.next-9

match.case.body-8:
	%97 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %97, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$30, i64 0, i32 0), i64 3})
	br label %match.done-14

match.case.next-9:
	%98 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; TernaryExpr
	; SelectorExpr
	%99 = load %Type_Info.Integer*, %Type_Info.Integer** %3, align 8
	%100 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %99, i64 0
	%101 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %100, i64 0, i32 2
	%102 = load i1, i1* %101, align 1
	br i1 %102, label %if.then-11, label %if.else-12

match.fall.body-10:
	%103 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %103, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$31, i64 0, i32 0), i64 4})
	br label %match.done-14

if.then-11:
	br label %if.done-13

if.else-12:
	br label %if.done-13

if.done-13:
	%104 = phi %..string [ {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$32, i64 0, i32 0), i64 1}, %if.then-11 ], [ {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$33, i64 0, i32 0), i64 1}, %if.else-12 ]
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %98, %..string %104)
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %4
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %5
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %5
	%105 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%106 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %5, i64 0, i32 3
	store %fmt-4.String_Buffer* %105, %fmt-4.String_Buffer** %106
	%107 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %5, align 8
	store %fmt-4.Fmt_Info %107, %fmt-4.Fmt_Info* %4
	%108 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %4, i64 0
	; SelectorExpr
	%109 = load %Type_Info.Integer*, %Type_Info.Integer** %3, align 8
	%110 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %109, i64 0
	%111 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %110, i64 0, i32 0
	%112 = load i64, i64* %111, align 8
	%113 = mul i64 8, %112
	%114 = bitcast i64 %113 to i64
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %108, i64 %114, i1 false, i64 64, i32 100)
	br label %match.done-14

match.done-14:
	br label %typematch.done-133

typematch.next-15:
	%115 = icmp eq i64 %77, 4
	br i1 %115, label %typematch.body-23, label %typematch.next-22

typematch.body-16:
	%116 = bitcast %..rawptr %78 to %Type_Info.Float*
	store %Type_Info.Float* zeroinitializer, %Type_Info.Float** %6
	store %Type_Info.Float* %116, %Type_Info.Float** %6
	; MatchStmt
	; SelectorExpr
	%117 = load %Type_Info.Float*, %Type_Info.Float** %6, align 8
	%118 = getelementptr inbounds %Type_Info.Float, %Type_Info.Float* %117, i64 0
	%119 = getelementptr inbounds %Type_Info.Float, %Type_Info.Float* %118, i64 0, i32 0
	%120 = load i64, i64* %119, align 8
	%121 = icmp eq i64 %120, 4
	br i1 %121, label %match.case.body-18, label %match.case.next-17

match.case.next-17:
	%122 = icmp eq i64 %120, 8
	br i1 %122, label %match.fall.body-20, label %match.case.next-19

match.case.body-18:
	%123 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %123, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$34, i64 0, i32 0), i64 3})
	br label %match.done-21

match.case.next-19:
	br label %match.done-21

match.fall.body-20:
	%124 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %124, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$35, i64 0, i32 0), i64 3})
	br label %match.done-21

match.done-21:
	br label %typematch.done-133

typematch.next-22:
	%125 = icmp eq i64 %77, 5
	br i1 %125, label %typematch.body-30, label %typematch.next-29

typematch.body-23:
	%126 = bitcast %..rawptr %78 to %Type_Info.Complex*
	store %Type_Info.Complex* zeroinitializer, %Type_Info.Complex** %7
	store %Type_Info.Complex* %126, %Type_Info.Complex** %7
	; MatchStmt
	; SelectorExpr
	%127 = load %Type_Info.Complex*, %Type_Info.Complex** %7, align 8
	%128 = getelementptr inbounds %Type_Info.Complex, %Type_Info.Complex* %127, i64 0
	%129 = getelementptr inbounds %Type_Info.Complex, %Type_Info.Complex* %128, i64 0, i32 0
	%130 = load i64, i64* %129, align 8
	%131 = icmp eq i64 %130, 8
	br i1 %131, label %match.case.body-25, label %match.case.next-24

match.case.next-24:
	%132 = icmp eq i64 %130, 16
	br i1 %132, label %match.fall.body-27, label %match.case.next-26

match.case.body-25:
	%133 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %133, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$36, i64 0, i32 0), i64 9})
	br label %match.done-28

match.case.next-26:
	br label %match.done-28

match.fall.body-27:
	%134 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %134, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$37, i64 0, i32 0), i64 10})
	br label %match.done-28

match.done-28:
	br label %typematch.done-133

typematch.next-29:
	%135 = icmp eq i64 %77, 6
	br i1 %135, label %typematch.body-37, label %typematch.next-36

typematch.body-30:
	%136 = bitcast %..rawptr %78 to %Type_Info.Quaternion*
	store %Type_Info.Quaternion* zeroinitializer, %Type_Info.Quaternion** %8
	store %Type_Info.Quaternion* %136, %Type_Info.Quaternion** %8
	; MatchStmt
	; SelectorExpr
	%137 = load %Type_Info.Quaternion*, %Type_Info.Quaternion** %8, align 8
	%138 = getelementptr inbounds %Type_Info.Quaternion, %Type_Info.Quaternion* %137, i64 0
	%139 = getelementptr inbounds %Type_Info.Quaternion, %Type_Info.Quaternion* %138, i64 0, i32 0
	%140 = load i64, i64* %139, align 8
	%141 = icmp eq i64 %140, 16
	br i1 %141, label %match.case.body-32, label %match.case.next-31

match.case.next-31:
	%142 = icmp eq i64 %140, 32
	br i1 %142, label %match.fall.body-34, label %match.case.next-33

match.case.body-32:
	%143 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %143, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$38, i64 0, i32 0), i64 13})
	br label %match.done-35

match.case.next-33:
	br label %match.done-35

match.fall.body-34:
	%144 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %144, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$39, i64 0, i32 0), i64 10})
	br label %match.done-35

match.done-35:
	br label %typematch.done-133

typematch.next-36:
	%145 = icmp eq i64 %77, 7
	br i1 %145, label %typematch.body-39, label %typematch.next-38

typematch.body-37:
	%146 = bitcast %..rawptr %78 to %Type_Info.String*
	store %Type_Info.String* zeroinitializer, %Type_Info.String** %9
	store %Type_Info.String* %146, %Type_Info.String** %9
	%147 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %147, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$3a, i64 0, i32 0), i64 6})
	br label %typematch.done-133

typematch.next-38:
	%148 = icmp eq i64 %77, 8
	br i1 %148, label %typematch.body-41, label %typematch.next-40

typematch.body-39:
	%149 = bitcast %..rawptr %78 to %Type_Info.Boolean*
	store %Type_Info.Boolean* zeroinitializer, %Type_Info.Boolean** %10
	store %Type_Info.Boolean* %149, %Type_Info.Boolean** %10
	%150 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %150, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3b, i64 0, i32 0), i64 4})
	br label %typematch.done-133

typematch.next-40:
	%151 = icmp eq i64 %77, 10
	br i1 %151, label %typematch.body-43, label %typematch.next-42

typematch.body-41:
	%152 = bitcast %..rawptr %78 to %Type_Info.Any*
	store %Type_Info.Any* zeroinitializer, %Type_Info.Any** %11
	store %Type_Info.Any* %152, %Type_Info.Any** %11
	%153 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %153, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$3c, i64 0, i32 0), i64 3})
	br label %typematch.done-133

typematch.next-42:
	%154 = icmp eq i64 %77, 9
	br i1 %154, label %typematch.body-45, label %typematch.next-44

typematch.body-43:
	%155 = bitcast %..rawptr %78 to %Type_Info.Atomic*
	store %Type_Info.Atomic* zeroinitializer, %Type_Info.Atomic** %12
	store %Type_Info.Atomic* %155, %Type_Info.Atomic** %12
	%156 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %156, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3d, i64 0, i32 0), i64 7})
	%157 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%158 = load %Type_Info.Atomic*, %Type_Info.Atomic** %12, align 8
	%159 = getelementptr inbounds %Type_Info.Atomic, %Type_Info.Atomic* %158, i64 0
	%160 = getelementptr inbounds %Type_Info.Atomic, %Type_Info.Atomic* %159, i64 0, i32 2
	%161 = load %Type_Info*, %Type_Info** %160, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %157, %Type_Info* %161)
	br label %typematch.done-133

typematch.next-44:
	%162 = icmp eq i64 %77, 11
	br i1 %162, label %typematch.body-50, label %typematch.next-49

typematch.body-45:
	%163 = bitcast %..rawptr %78 to %Type_Info.Pointer*
	store %Type_Info.Pointer* zeroinitializer, %Type_Info.Pointer** %13
	store %Type_Info.Pointer* %163, %Type_Info.Pointer** %13
	; IfStmt
	; SelectorExpr
	%164 = load %Type_Info.Pointer*, %Type_Info.Pointer** %13, align 8
	%165 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %164, i64 0
	%166 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %165, i64 0, i32 2
	%167 = load %Type_Info*, %Type_Info** %166, align 8
	%168 = icmp eq %Type_Info* %167, zeroinitializer
	br i1 %168, label %if.then-46, label %if.else-47

if.then-46:
	%169 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %169, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$3e, i64 0, i32 0), i64 6})
	br label %if.done-48

if.else-47:
	%170 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %170, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$3f, i64 0, i32 0), i64 1})
	%171 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%172 = load %Type_Info.Pointer*, %Type_Info.Pointer** %13, align 8
	%173 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %172, i64 0
	%174 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %173, i64 0, i32 2
	%175 = load %Type_Info*, %Type_Info** %174, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %171, %Type_Info* %175)
	br label %if.done-48

if.done-48:
	br label %typematch.done-133

typematch.next-49:
	%176 = icmp eq i64 %77, 16
	br i1 %176, label %typematch.body-64, label %typematch.next-63

typematch.body-50:
	%177 = bitcast %..rawptr %78 to %Type_Info.Procedure*
	store %Type_Info.Procedure* zeroinitializer, %Type_Info.Procedure** %14
	store %Type_Info.Procedure* %177, %Type_Info.Procedure** %14
	%178 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %178, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$40, i64 0, i32 0), i64 4})
	; IfStmt
	; SelectorExpr
	%179 = load %Type_Info.Procedure*, %Type_Info.Procedure** %14, align 8
	%180 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %179, i64 0
	%181 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %180, i64 0, i32 2
	%182 = load %Type_Info*, %Type_Info** %181, align 8
	%183 = icmp eq %Type_Info* %182, zeroinitializer
	br i1 %183, label %if.then-51, label %if.else-52

if.then-51:
	%184 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %184, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$41, i64 0, i32 0), i64 2})
	br label %if.done-60

if.else-52:
	; t
	store %Type_Info.Tuple* zeroinitializer, %Type_Info.Tuple** %15
		; SelectorExpr
	%185 = load %Type_Info.Procedure*, %Type_Info.Procedure** %14, align 8
	%186 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %185, i64 0
	%187 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %186, i64 0, i32 2
	%188 = load %Type_Info*, %Type_Info** %187, align 8
	; cast - union_cast
	store {%Type_Info.Tuple*, i1} zeroinitializer, {%Type_Info.Tuple*, i1}* %16
	%189 = getelementptr inbounds %Type_Info, %Type_Info* %188, i64 0, i32 4 ; UnionTagPtr
	%190 = load i64, i64* %189, align 8
	%191 = icmp eq i64 %190, 16
	br i1 %191, label %union_cast.ok-53, label %union_cast.end-54

union_cast.ok-53:
	%192 = getelementptr inbounds {%Type_Info.Tuple*, i1}, {%Type_Info.Tuple*, i1}* %16, i64 0, i32 0
	%193 = getelementptr inbounds {%Type_Info.Tuple*, i1}, {%Type_Info.Tuple*, i1}* %16, i64 0, i32 1
	%194 = bitcast %Type_Info* %188 to %Type_Info.Tuple*
	store %Type_Info.Tuple* %194, %Type_Info.Tuple** %192
	store i1 true, i1* %193
	br label %union_cast.end-54

union_cast.end-54:
	%195 = getelementptr inbounds {%Type_Info.Tuple*, i1}, {%Type_Info.Tuple*, i1}* %16, i64 0, i32 1
	%196 = load i1, i1* %195, align 1
	%197 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%198 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	call void @__type_assertion_check(i1 %196, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$42, i64 0, i32 0), i64 21}, i64 232, i64 14, %Type_Info* %197, %Type_Info* %198)
	%199 = getelementptr inbounds {%Type_Info.Tuple*, i1}, {%Type_Info.Tuple*, i1}* %16, i64 0, i32 0
	%200 = load %Type_Info.Tuple*, %Type_Info.Tuple** %199, align 8
	store %Type_Info.Tuple* %200, %Type_Info.Tuple** %15
	%201 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %201, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$43, i64 0, i32 0), i64 1})
	; RangeStmt
	; type
	store %Type_Info* zeroinitializer, %Type_Info** %17
		; i
	store i64 zeroinitializer, i64* %18
		; SelectorExpr
	%202 = load %Type_Info.Tuple*, %Type_Info.Tuple** %15, align 8
	%203 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %202, i64 0
	%204 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %203, i64 0, i32 2
	%205 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %204, i64 0, i32 0
	%206 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %205, align 8
	store i64 zeroinitializer, i64* %19
	%207 = extractvalue {%Type_Info**, i64, i64} %206, 1
	store i64 %207, i64* %19
	store i64 zeroinitializer, i64* %20
	store i64 -1, i64* %20
	br label %for.index.loop-55

for.index.loop-55:
	%208 = load i64, i64* %20, align 8
	%209 = add i64 %208, 1
	store i64 %209, i64* %20
	%210 = load i64, i64* %19, align 8
	%211 = icmp slt i64 %209, %210
	br i1 %211, label %for.index.body-56, label %for.index.done-59

for.index.body-56:
	%212 = load i64, i64* %20, align 8
	%213 = extractvalue {%Type_Info**, i64, i64} %206, 0
	%214 = getelementptr inbounds %Type_Info*, %Type_Info** %213, i64 %212
	%215 = load %Type_Info*, %Type_Info** %214, align 8
	store %Type_Info* %215, %Type_Info** %17
	store i64 %212, i64* %18
	; IfStmt
	%216 = load i64, i64* %18, align 8
	%217 = icmp sgt i64 %216, 0
	br i1 %217, label %if.then-57, label %if.done-58

if.then-57:
	%218 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %218, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$44, i64 0, i32 0), i64 2})
	br label %if.done-58

if.done-58:
	%219 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%220 = load %Type_Info*, %Type_Info** %17, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %219, %Type_Info* %220)
	br label %for.index.loop-55

for.index.done-59:
	%221 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %221, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$45, i64 0, i32 0), i64 1})
	br label %if.done-60

if.done-60:
	; IfStmt
	; SelectorExpr
	%222 = load %Type_Info.Procedure*, %Type_Info.Procedure** %14, align 8
	%223 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %222, i64 0
	%224 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %223, i64 0, i32 3
	%225 = load %Type_Info*, %Type_Info** %224, align 8
	%226 = icmp ne %Type_Info* %225, zeroinitializer
	br i1 %226, label %if.then-61, label %if.done-62

if.then-61:
	%227 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %227, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$46, i64 0, i32 0), i64 4})
	%228 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%229 = load %Type_Info.Procedure*, %Type_Info.Procedure** %14, align 8
	%230 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %229, i64 0
	%231 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %230, i64 0, i32 3
	%232 = load %Type_Info*, %Type_Info** %231, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %228, %Type_Info* %232)
	br label %if.done-62

if.done-62:
	br label %typematch.done-133

typematch.next-63:
	%233 = icmp eq i64 %77, 12
	br i1 %233, label %typematch.body-77, label %typematch.next-76

typematch.body-64:
	%234 = bitcast %..rawptr %78 to %Type_Info.Tuple*
	store %Type_Info.Tuple* zeroinitializer, %Type_Info.Tuple** %21
	store %Type_Info.Tuple* %234, %Type_Info.Tuple** %21
	; count
	store i64 zeroinitializer, i64* %22
		; SelectorExpr
	%235 = load %Type_Info.Tuple*, %Type_Info.Tuple** %21, align 8
	%236 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %235, i64 0
	%237 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %236, i64 0, i32 2
	%238 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %237, i64 0, i32 1
	%239 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %238, align 8
	%240 = extractvalue {%..string*, i64, i64} %239, 1
	store i64 %240, i64* %22
	; IfStmt
	%241 = load i64, i64* %22, align 8
	%242 = icmp ne i64 %241, 1
	br i1 %242, label %if.then-65, label %if.done-66

if.then-65:
	%243 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %243, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$47, i64 0, i32 0), i64 1})
	br label %if.done-66

if.done-66:
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %23
		; i
	store i64 zeroinitializer, i64* %24
		; SelectorExpr
	%244 = load %Type_Info.Tuple*, %Type_Info.Tuple** %21, align 8
	%245 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %244, i64 0
	%246 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %245, i64 0, i32 2
	%247 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %246, i64 0, i32 1
	%248 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %247, align 8
	store i64 zeroinitializer, i64* %25
	%249 = extractvalue {%..string*, i64, i64} %248, 1
	store i64 %249, i64* %25
	store i64 zeroinitializer, i64* %26
	store i64 -1, i64* %26
	br label %for.index.loop-67

for.index.loop-67:
	%250 = load i64, i64* %26, align 8
	%251 = add i64 %250, 1
	store i64 %251, i64* %26
	%252 = load i64, i64* %25, align 8
	%253 = icmp slt i64 %251, %252
	br i1 %253, label %for.index.body-68, label %for.index.done-73

for.index.body-68:
	%254 = load i64, i64* %26, align 8
	%255 = extractvalue {%..string*, i64, i64} %248, 0
	%256 = getelementptr inbounds %..string, %..string* %255, i64 %254
	%257 = load %..string, %..string* %256, align 8
	store %..string %257, %..string* %23
	store i64 %254, i64* %24
	; IfStmt
	%258 = load i64, i64* %24, align 8
	%259 = icmp sgt i64 %258, 0
	br i1 %259, label %if.then-69, label %if.done-70

if.then-69:
	%260 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %260, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$48, i64 0, i32 0), i64 2})
	br label %if.done-70

if.done-70:
	; type
	store %Type_Info* zeroinitializer, %Type_Info** %27
		; IndexExpr
	; SelectorExpr
	%261 = load %Type_Info.Tuple*, %Type_Info.Tuple** %21, align 8
	%262 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %261, i64 0
	%263 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %262, i64 0, i32 2
	%264 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %263, i64 0, i32 0
	%265 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %264, align 8
	%266 = extractvalue {%Type_Info**, i64, i64} %265, 0
	%267 = extractvalue {%Type_Info**, i64, i64} %265, 1
	%268 = load i64, i64* %24, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$49, i64 0, i32 0), i64 21}, i64 250, i64 23, i64 %268, i64 %267)
	%269 = getelementptr inbounds %Type_Info*, %Type_Info** %266, i64 %268
	%270 = load %Type_Info*, %Type_Info** %269, align 8
	store %Type_Info* %270, %Type_Info** %27
	; IfStmt
	%271 = load %..string, %..string* %23, align 8
	%272 = extractvalue %..string %271, 1
	%273 = icmp sgt i64 %272, 0
	br i1 %273, label %if.then-71, label %if.done-72

if.then-71:
	%274 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%275 = load %..string, %..string* %23, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %274, %..string %275)
	%276 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %276, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4a, i64 0, i32 0), i64 2})
	br label %if.done-72

if.done-72:
	%277 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%278 = load %Type_Info*, %Type_Info** %27, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %277, %Type_Info* %278)
	br label %for.index.loop-67

for.index.done-73:
	; IfStmt
	%279 = load i64, i64* %22, align 8
	%280 = icmp ne i64 %279, 1
	br i1 %280, label %if.then-74, label %if.done-75

if.then-74:
	%281 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %281, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$4b, i64 0, i32 0), i64 1})
	br label %if.done-75

if.done-75:
	br label %typematch.done-133

typematch.next-76:
	%282 = icmp eq i64 %77, 13
	br i1 %282, label %typematch.body-79, label %typematch.next-78

typematch.body-77:
	%283 = bitcast %..rawptr %78 to %Type_Info.Array*
	store %Type_Info.Array* zeroinitializer, %Type_Info.Array** %28
	store %Type_Info.Array* %283, %Type_Info.Array** %28
	%284 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %284, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$4c, i64 0, i32 0), i64 1})
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %29
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %30
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %30
	%285 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%286 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, i64 0, i32 3
	store %fmt-4.String_Buffer* %285, %fmt-4.String_Buffer** %286
	%287 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, align 8
	store %fmt-4.Fmt_Info %287, %fmt-4.Fmt_Info* %29
	%288 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0
	; SelectorExpr
	%289 = load %Type_Info.Array*, %Type_Info.Array** %28, align 8
	%290 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %289, i64 0
	%291 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %290, i64 0, i32 4
	%292 = load i64, i64* %291, align 8
	%293 = bitcast i64 %292 to i64
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %288, i64 %293, i1 false, i64 64, i32 100)
	%294 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %294, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$4d, i64 0, i32 0), i64 1})
	%295 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%296 = load %Type_Info.Array*, %Type_Info.Array** %28, align 8
	%297 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %296, i64 0
	%298 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %297, i64 0, i32 2
	%299 = load %Type_Info*, %Type_Info** %298, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %295, %Type_Info* %299)
	br label %typematch.done-133

typematch.next-78:
	%300 = icmp eq i64 %77, 14
	br i1 %300, label %typematch.body-81, label %typematch.next-80

typematch.body-79:
	%301 = bitcast %..rawptr %78 to %Type_Info.Dynamic_Array*
	store %Type_Info.Dynamic_Array* zeroinitializer, %Type_Info.Dynamic_Array** %31
	store %Type_Info.Dynamic_Array* %301, %Type_Info.Dynamic_Array** %31
	%302 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %302, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4e, i64 0, i32 0), i64 9})
	%303 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%304 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %31, align 8
	%305 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %304, i64 0
	%306 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %305, i64 0, i32 2
	%307 = load %Type_Info*, %Type_Info** %306, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %303, %Type_Info* %307)
	br label %typematch.done-133

typematch.next-80:
	%308 = icmp eq i64 %77, 15
	br i1 %308, label %typematch.body-83, label %typematch.next-82

typematch.body-81:
	%309 = bitcast %..rawptr %78 to %Type_Info.Slice*
	store %Type_Info.Slice* zeroinitializer, %Type_Info.Slice** %32
	store %Type_Info.Slice* %309, %Type_Info.Slice** %32
	%310 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %310, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4f, i64 0, i32 0), i64 2})
	%311 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%312 = load %Type_Info.Slice*, %Type_Info.Slice** %32, align 8
	%313 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %312, i64 0
	%314 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %313, i64 0, i32 2
	%315 = load %Type_Info*, %Type_Info** %314, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %311, %Type_Info* %315)
	br label %typematch.done-133

typematch.next-82:
	%316 = icmp eq i64 %77, 21
	br i1 %316, label %typematch.body-85, label %typematch.next-84

typematch.body-83:
	%317 = bitcast %..rawptr %78 to %Type_Info.Vector*
	store %Type_Info.Vector* zeroinitializer, %Type_Info.Vector** %33
	store %Type_Info.Vector* %317, %Type_Info.Vector** %33
	%318 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %318, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$50, i64 0, i32 0), i64 8})
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %34
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %35
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %35
	%319 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%320 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %35, i64 0, i32 3
	store %fmt-4.String_Buffer* %319, %fmt-4.String_Buffer** %320
	%321 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %35, align 8
	store %fmt-4.Fmt_Info %321, %fmt-4.Fmt_Info* %34
	%322 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %34, i64 0
	; SelectorExpr
	%323 = load %Type_Info.Vector*, %Type_Info.Vector** %33, align 8
	%324 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %323, i64 0
	%325 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %324, i64 0, i32 4
	%326 = load i64, i64* %325, align 8
	%327 = bitcast i64 %326 to i64
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %322, i64 %327, i1 false, i64 64, i32 100)
	%328 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %328, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$51, i64 0, i32 0), i64 1})
	%329 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%330 = load %Type_Info.Vector*, %Type_Info.Vector** %33, align 8
	%331 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %330, i64 0
	%332 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %331, i64 0, i32 2
	%333 = load %Type_Info*, %Type_Info** %332, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %329, %Type_Info* %333)
	br label %typematch.done-133

typematch.next-84:
	%334 = icmp eq i64 %77, 17
	br i1 %334, label %typematch.body-87, label %typematch.next-86

typematch.body-85:
	%335 = bitcast %..rawptr %78 to %Type_Info.Map*
	store %Type_Info.Map* zeroinitializer, %Type_Info.Map** %36
	store %Type_Info.Map* %335, %Type_Info.Map** %36
	%336 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %336, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$52, i64 0, i32 0), i64 4})
	%337 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%338 = load %Type_Info.Map*, %Type_Info.Map** %36, align 8
	%339 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %338, i64 0
	%340 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %339, i64 0, i32 2
	%341 = load %Type_Info*, %Type_Info** %340, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %337, %Type_Info* %341)
	%342 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %342, i8 93)
	%343 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%344 = load %Type_Info.Map*, %Type_Info.Map** %36, align 8
	%345 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %344, i64 0
	%346 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %345, i64 0, i32 3
	%347 = load %Type_Info*, %Type_Info** %346, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %343, %Type_Info* %347)
	br label %typematch.done-133

typematch.next-86:
	%348 = icmp eq i64 %77, 19
	br i1 %348, label %typematch.body-100, label %typematch.next-99

typematch.body-87:
	%349 = bitcast %..rawptr %78 to %Type_Info.Struct*
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %37
	store %Type_Info.Struct* %349, %Type_Info.Struct** %37
	%350 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %350, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$53, i64 0, i32 0), i64 7})
	; IfStmt
	; SelectorExpr
	%351 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%352 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %351, i64 0
	%353 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %352, i64 0, i32 2
	%354 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %353, i64 0, i32 4
	%355 = load i1, i1* %354, align 1
	br i1 %355, label %if.then-88, label %if.done-89

if.then-88:
	%356 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %356, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$54, i64 0, i32 0), i64 8})
	br label %if.done-89

if.done-89:
	; IfStmt
	; SelectorExpr
	%357 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%358 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %357, i64 0
	%359 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %358, i64 0, i32 2
	%360 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %359, i64 0, i32 5
	%361 = load i1, i1* %360, align 1
	br i1 %361, label %if.then-90, label %if.done-91

if.then-90:
	%362 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %362, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$55, i64 0, i32 0), i64 9})
	br label %if.done-91

if.done-91:
	; IfStmt
	; SelectorExpr
	%363 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%364 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %363, i64 0
	%365 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %364, i64 0, i32 2
	%366 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %365, i64 0, i32 6
	%367 = load i1, i1* %366, align 1
	br i1 %367, label %if.then-92, label %if.done-93

if.then-92:
	%368 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %368, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$56, i64 0, i32 0), i64 7})
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %38
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %39
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %39
	%369 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%370 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0, i32 3
	store %fmt-4.String_Buffer* %369, %fmt-4.String_Buffer** %370
	%371 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, align 8
	store %fmt-4.Fmt_Info %371, %fmt-4.Fmt_Info* %38
	%372 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %38, i64 0
	; SelectorExpr
	%373 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%374 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %373, i64 0
	%375 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %374, i64 0, i32 1
	%376 = load i64, i64* %375, align 8
	%377 = bitcast i64 %376 to i64
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %372, i64 %377, i1 false, i64 64, i32 100)
	%378 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %378, i8 32)
	br label %if.done-93

if.done-93:
	%379 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %379, i8 123)
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %40
		; i
	store i64 zeroinitializer, i64* %41
		; SelectorExpr
	%380 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%381 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %380, i64 0
	%382 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %381, i64 0, i32 2
	%383 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %382, i64 0, i32 1
	%384 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %383, align 8
	store i64 zeroinitializer, i64* %42
	%385 = extractvalue {%..string*, i64, i64} %384, 1
	store i64 %385, i64* %42
	store i64 zeroinitializer, i64* %43
	store i64 -1, i64* %43
	br label %for.index.loop-94

for.index.loop-94:
	%386 = load i64, i64* %43, align 8
	%387 = add i64 %386, 1
	store i64 %387, i64* %43
	%388 = load i64, i64* %42, align 8
	%389 = icmp slt i64 %387, %388
	br i1 %389, label %for.index.body-95, label %for.index.done-98

for.index.body-95:
	%390 = load i64, i64* %43, align 8
	%391 = extractvalue {%..string*, i64, i64} %384, 0
	%392 = getelementptr inbounds %..string, %..string* %391, i64 %390
	%393 = load %..string, %..string* %392, align 8
	store %..string %393, %..string* %40
	store i64 %390, i64* %41
	; IfStmt
	%394 = load i64, i64* %41, align 8
	%395 = icmp sgt i64 %394, 0
	br i1 %395, label %if.then-96, label %if.done-97

if.then-96:
	%396 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %396, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$57, i64 0, i32 0), i64 2})
	br label %if.done-97

if.done-97:
	%397 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%398 = load %..string, %..string* %40, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %397, %..string %398)
	%399 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %399, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$58, i64 0, i32 0), i64 2})
	%400 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; IndexExpr
	; SelectorExpr
	%401 = load %Type_Info.Struct*, %Type_Info.Struct** %37, align 8
	%402 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %401, i64 0
	%403 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %402, i64 0, i32 2
	%404 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %403, i64 0, i32 0
	%405 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %404, align 8
	%406 = extractvalue {%Type_Info**, i64, i64} %405, 0
	%407 = extractvalue {%Type_Info**, i64, i64} %405, 1
	%408 = load i64, i64* %41, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$59, i64 0, i32 0), i64 21}, i64 302, i64 31, i64 %408, i64 %407)
	%409 = getelementptr inbounds %Type_Info*, %Type_Info** %406, i64 %408
	%410 = load %Type_Info*, %Type_Info** %409, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %400, %Type_Info* %410)
	br label %for.index.loop-94

for.index.done-98:
	%411 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %411, i8 125)
	br label %typematch.done-133

typematch.next-99:
	%412 = icmp eq i64 %77, 18
	br i1 %412, label %typematch.body-120, label %typematch.next-119

typematch.body-100:
	%413 = bitcast %..rawptr %78 to %Type_Info.Union*
	store %Type_Info.Union* zeroinitializer, %Type_Info.Union** %44
	store %Type_Info.Union* %413, %Type_Info.Union** %44
	%414 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %414, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5a, i64 0, i32 0), i64 7})
	; cf
	store {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}} zeroinitializer, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45
		; SelectorExpr
	%415 = load %Type_Info.Union*, %Type_Info.Union** %44, align 8
	%416 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %415, i64 0
	%417 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %416, i64 0, i32 2
	%418 = load {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %417, align 8
	store {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}} %418, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45
	; total_count
	store i64 zeroinitializer, i64* %46
		store i64 0, i64* %46
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %47
		; i
	store i64 zeroinitializer, i64* %48
		; SelectorExpr
	%419 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45, i64 0, i32 1
	%420 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %419, align 8
	store i64 zeroinitializer, i64* %49
	%421 = extractvalue {%..string*, i64, i64} %420, 1
	store i64 %421, i64* %49
	store i64 zeroinitializer, i64* %50
	store i64 -1, i64* %50
	br label %for.index.loop-101

for.index.loop-101:
	%422 = load i64, i64* %50, align 8
	%423 = add i64 %422, 1
	store i64 %423, i64* %50
	%424 = load i64, i64* %49, align 8
	%425 = icmp slt i64 %423, %424
	br i1 %425, label %for.index.body-102, label %for.index.done-105

for.index.body-102:
	%426 = load i64, i64* %50, align 8
	%427 = extractvalue {%..string*, i64, i64} %420, 0
	%428 = getelementptr inbounds %..string, %..string* %427, i64 %426
	%429 = load %..string, %..string* %428, align 8
	store %..string %429, %..string* %47
	store i64 %426, i64* %48
	; IfStmt
	%430 = load i64, i64* %48, align 8
	%431 = icmp sgt i64 %430, 0
	br i1 %431, label %if.then-103, label %if.done-104

if.then-103:
	%432 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %432, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5b, i64 0, i32 0), i64 2})
	br label %if.done-104

if.done-104:
	%433 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%434 = load %..string, %..string* %47, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %433, %..string %434)
	%435 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %435, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5c, i64 0, i32 0), i64 2})
	%436 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; IndexExpr
	; SelectorExpr
	%437 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45, i64 0, i32 0
	%438 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %437, align 8
	%439 = extractvalue {%Type_Info**, i64, i64} %438, 0
	%440 = extractvalue {%Type_Info**, i64, i64} %438, 1
	%441 = load i64, i64* %48, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5d, i64 0, i32 0), i64 21}, i64 316, i64 29, i64 %441, i64 %440)
	%442 = getelementptr inbounds %Type_Info*, %Type_Info** %439, i64 %441
	%443 = load %Type_Info*, %Type_Info** %442, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %436, %Type_Info* %443)
	%444 = load i64, i64* %46, align 8
	%445 = add i64 %444, 1
	store i64 %445, i64* %46
	br label %for.index.loop-101

for.index.done-105:
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %51
		; i
	store i64 zeroinitializer, i64* %52
		; SelectorExpr
	%446 = load %Type_Info.Union*, %Type_Info.Union** %44, align 8
	%447 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %446, i64 0
	%448 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %447, i64 0, i32 3
	%449 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %448, align 8
	store i64 zeroinitializer, i64* %53
	%450 = extractvalue {%..string*, i64, i64} %449, 1
	store i64 %450, i64* %53
	store i64 zeroinitializer, i64* %54
	store i64 -1, i64* %54
	br label %for.index.loop-106

for.index.loop-106:
	%451 = load i64, i64* %54, align 8
	%452 = add i64 %451, 1
	store i64 %452, i64* %54
	%453 = load i64, i64* %53, align 8
	%454 = icmp slt i64 %452, %453
	br i1 %454, label %for.index.body-107, label %for.index.done-118

for.index.body-107:
	%455 = load i64, i64* %54, align 8
	%456 = extractvalue {%..string*, i64, i64} %449, 0
	%457 = getelementptr inbounds %..string, %..string* %456, i64 %455
	%458 = load %..string, %..string* %457, align 8
	store %..string %458, %..string* %51
	store i64 %455, i64* %52
	; IfStmt
	%459 = load i64, i64* %46, align 8
	%460 = icmp sgt i64 %459, 0
	br i1 %460, label %if.then-109, label %cmp.or-108

cmp.or-108:
	%461 = load i64, i64* %52, align 8
	%462 = icmp sgt i64 %461, 0
	br i1 %462, label %if.then-109, label %if.done-110

if.then-109:
	%463 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %463, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5e, i64 0, i32 0), i64 2})
	br label %if.done-110

if.done-110:
	%464 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%465 = load %..string, %..string* %51, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %464, %..string %465)
	%466 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %466, i8 123)
	; DeferStmt
	; variant_type
	store %Type_Info* zeroinitializer, %Type_Info** %55
		; IndexExpr
	; SelectorExpr
	%467 = load %Type_Info.Union*, %Type_Info.Union** %44, align 8
	%468 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %467, i64 0
	%469 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %468, i64 0, i32 4
	%470 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %469, align 8
	%471 = extractvalue {%Type_Info**, i64, i64} %470, 0
	%472 = extractvalue {%Type_Info**, i64, i64} %470, 1
	%473 = load i64, i64* %52, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5f, i64 0, i32 0), i64 21}, i64 327, i64 54, i64 %473, i64 %472)
	%474 = getelementptr inbounds %Type_Info*, %Type_Info** %471, i64 %473
	%475 = load %Type_Info*, %Type_Info** %474, align 8
	%476 = call %Type_Info* @type_info_base(%Type_Info* %475)
	store %Type_Info* %476, %Type_Info** %55
	; variant
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %56
		%477 = load %Type_Info*, %Type_Info** %55, align 8
	; cast - union_cast
	store {%Type_Info.Struct*, i1} zeroinitializer, {%Type_Info.Struct*, i1}* %57
	%478 = getelementptr inbounds %Type_Info, %Type_Info* %477, i64 0, i32 4 ; UnionTagPtr
	%479 = load i64, i64* %478, align 8
	%480 = icmp eq i64 %479, 17
	br i1 %480, label %union_cast.ok-111, label %union_cast.end-112

union_cast.ok-111:
	%481 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %57, i64 0, i32 0
	%482 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %57, i64 0, i32 1
	%483 = bitcast %Type_Info* %477 to %Type_Info.Struct*
	store %Type_Info.Struct* %483, %Type_Info.Struct** %481
	store i1 true, i1* %482
	br label %union_cast.end-112

union_cast.end-112:
	%484 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %57, i64 0, i32 1
	%485 = load i1, i1* %484, align 1
	%486 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%487 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	call void @__type_assertion_check(i1 %485, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$60, i64 0, i32 0), i64 21}, i64 328, i64 15, %Type_Info* %486, %Type_Info* %487)
	%488 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %57, i64 0, i32 0
	%489 = load %Type_Info.Struct*, %Type_Info.Struct** %488, align 8
	store %Type_Info.Struct* %489, %Type_Info.Struct** %56
	; vc
	store i64 zeroinitializer, i64* %58
		; SelectorExpr
	%490 = load %Type_Info.Struct*, %Type_Info.Struct** %56, align 8
	%491 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %490, i64 0
	%492 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %491, i64 0, i32 2
	%493 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %492, i64 0, i32 1
	%494 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %493, align 8
	%495 = extractvalue {%..string*, i64, i64} %494, 1
	; SelectorExpr
	%496 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45, i64 0, i32 1
	%497 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %496, align 8
	%498 = extractvalue {%..string*, i64, i64} %497, 1
	%499 = sub i64 %495, %498
	store i64 %499, i64* %58
	; RangeStmt
	; j
	store i64 zeroinitializer, i64* %59
		store i64 zeroinitializer, i64* %60
	store i64 0, i64* %60
	store i64 zeroinitializer, i64* %61
	store i64 0, i64* %61
	br label %for.interval.loop-113

for.interval.loop-113:
	%500 = load i64, i64* %58, align 8
	%501 = load i64, i64* %60, align 8
	%502 = icmp sle i64 %501, %500
	br i1 %502, label %for.interval.body-114, label %for.interval.done-117

for.interval.body-114:
	%503 = load i64, i64* %60, align 8
	%504 = load i64, i64* %61, align 8
	%505 = load i64, i64* %60, align 8
	%506 = add i64 %505, 1
	store i64 %506, i64* %60
	%507 = load i64, i64* %61, align 8
	%508 = add i64 %507, 1
	store i64 %508, i64* %61
	store i64 %503, i64* %59
	; IfStmt
	%509 = load i64, i64* %59, align 8
	%510 = icmp sgt i64 %509, 0
	br i1 %510, label %if.then-115, label %if.done-116

if.then-115:
	%511 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %511, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$61, i64 0, i32 0), i64 2})
	br label %if.done-116

if.done-116:
	; index
	store i64 zeroinitializer, i64* %62
		%512 = load i64, i64* %59, align 8
	; SelectorExpr
	%513 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %45, i64 0, i32 1
	%514 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %513, align 8
	%515 = extractvalue {%..string*, i64, i64} %514, 1
	%516 = add i64 %512, %515
	store i64 %516, i64* %62
	%517 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; IndexExpr
	; SelectorExpr
	%518 = load %Type_Info.Struct*, %Type_Info.Struct** %56, align 8
	%519 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %518, i64 0
	%520 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %519, i64 0, i32 2
	%521 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %520, i64 0, i32 1
	%522 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %521, align 8
	%523 = extractvalue {%..string*, i64, i64} %522, 0
	%524 = extractvalue {%..string*, i64, i64} %522, 1
	%525 = load i64, i64* %62, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$62, i64 0, i32 0), i64 21}, i64 336, i64 37, i64 %525, i64 %524)
	%526 = getelementptr inbounds %..string, %..string* %523, i64 %525
	%527 = load %..string, %..string* %526, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %517, %..string %527)
	%528 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %528, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$63, i64 0, i32 0), i64 2})
	%529 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; IndexExpr
	; SelectorExpr
	%530 = load %Type_Info.Struct*, %Type_Info.Struct** %56, align 8
	%531 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %530, i64 0
	%532 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %531, i64 0, i32 2
	%533 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %532, i64 0, i32 0
	%534 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %533, align 8
	%535 = extractvalue {%Type_Info**, i64, i64} %534, 0
	%536 = extractvalue {%Type_Info**, i64, i64} %534, 1
	%537 = load i64, i64* %62, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$64, i64 0, i32 0), i64 21}, i64 338, i64 35, i64 %537, i64 %536)
	%538 = getelementptr inbounds %Type_Info*, %Type_Info** %535, i64 %537
	%539 = load %Type_Info*, %Type_Info** %538, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %529, %Type_Info* %539)
	br label %for.interval.loop-113

for.interval.done-117:
	; defer
	%540 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %540, i8 125)
	br label %for.index.loop-106

for.index.done-118:
	%541 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %541, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$65, i64 0, i32 0), i64 1})
	br label %typematch.done-133

typematch.next-119:
	%542 = icmp eq i64 %77, 20
	br i1 %542, label %typematch.body-127, label %typematch.next-126

typematch.body-120:
	%543 = bitcast %..rawptr %78 to %Type_Info.Raw_Union*
	store %Type_Info.Raw_Union* zeroinitializer, %Type_Info.Raw_Union** %63
	store %Type_Info.Raw_Union* %543, %Type_Info.Raw_Union** %63
	%544 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %544, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$66, i64 0, i32 0), i64 11})
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %64
		; i
	store i64 zeroinitializer, i64* %65
		; SelectorExpr
	%545 = load %Type_Info.Raw_Union*, %Type_Info.Raw_Union** %63, align 8
	%546 = getelementptr inbounds %Type_Info.Raw_Union, %Type_Info.Raw_Union* %545, i64 0
	%547 = getelementptr inbounds %Type_Info.Raw_Union, %Type_Info.Raw_Union* %546, i64 0, i32 2
	%548 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %547, i64 0, i32 1
	%549 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %548, align 8
	store i64 zeroinitializer, i64* %66
	%550 = extractvalue {%..string*, i64, i64} %549, 1
	store i64 %550, i64* %66
	store i64 zeroinitializer, i64* %67
	store i64 -1, i64* %67
	br label %for.index.loop-121

for.index.loop-121:
	%551 = load i64, i64* %67, align 8
	%552 = add i64 %551, 1
	store i64 %552, i64* %67
	%553 = load i64, i64* %66, align 8
	%554 = icmp slt i64 %552, %553
	br i1 %554, label %for.index.body-122, label %for.index.done-125

for.index.body-122:
	%555 = load i64, i64* %67, align 8
	%556 = extractvalue {%..string*, i64, i64} %549, 0
	%557 = getelementptr inbounds %..string, %..string* %556, i64 %555
	%558 = load %..string, %..string* %557, align 8
	store %..string %558, %..string* %64
	store i64 %555, i64* %65
	; IfStmt
	%559 = load i64, i64* %65, align 8
	%560 = icmp sgt i64 %559, 0
	br i1 %560, label %if.then-123, label %if.done-124

if.then-123:
	%561 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %561, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$67, i64 0, i32 0), i64 2})
	br label %if.done-124

if.done-124:
	%562 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%563 = load %..string, %..string* %64, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %562, %..string %563)
	%564 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %564, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$68, i64 0, i32 0), i64 2})
	%565 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; IndexExpr
	; SelectorExpr
	%566 = load %Type_Info.Raw_Union*, %Type_Info.Raw_Union** %63, align 8
	%567 = getelementptr inbounds %Type_Info.Raw_Union, %Type_Info.Raw_Union* %566, i64 0
	%568 = getelementptr inbounds %Type_Info.Raw_Union, %Type_Info.Raw_Union* %567, i64 0, i32 2
	%569 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %568, i64 0, i32 0
	%570 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %569, align 8
	%571 = extractvalue {%Type_Info**, i64, i64} %570, 0
	%572 = extractvalue {%Type_Info**, i64, i64} %570, 1
	%573 = load i64, i64* %65, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$69, i64 0, i32 0), i64 21}, i64 351, i64 31, i64 %573, i64 %572)
	%574 = getelementptr inbounds %Type_Info*, %Type_Info** %571, i64 %573
	%575 = load %Type_Info*, %Type_Info** %574, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %565, %Type_Info* %575)
	br label %for.index.loop-121

for.index.done-125:
	%576 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %576, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$6a, i64 0, i32 0), i64 1})
	br label %typematch.done-133

typematch.next-126:
	br label %typematch.done-133

typematch.body-127:
	%577 = bitcast %..rawptr %78 to %Type_Info.Enum*
	store %Type_Info.Enum* zeroinitializer, %Type_Info.Enum** %68
	store %Type_Info.Enum* %577, %Type_Info.Enum** %68
	%578 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %578, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6b, i64 0, i32 0), i64 5})
	%579 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SelectorExpr
	%580 = load %Type_Info.Enum*, %Type_Info.Enum** %68, align 8
	%581 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %580, i64 0
	%582 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %581, i64 0, i32 2
	%583 = load %Type_Info*, %Type_Info** %582, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %579, %Type_Info* %583)
	%584 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %584, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6c, i64 0, i32 0), i64 2})
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %69
		; i
	store i64 zeroinitializer, i64* %70
		; SelectorExpr
	%585 = load %Type_Info.Enum*, %Type_Info.Enum** %68, align 8
	%586 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %585, i64 0
	%587 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %586, i64 0, i32 3
	%588 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %587, align 8
	store i64 zeroinitializer, i64* %71
	%589 = extractvalue {%..string*, i64, i64} %588, 1
	store i64 %589, i64* %71
	store i64 zeroinitializer, i64* %72
	store i64 -1, i64* %72
	br label %for.index.loop-128

for.index.loop-128:
	%590 = load i64, i64* %72, align 8
	%591 = add i64 %590, 1
	store i64 %591, i64* %72
	%592 = load i64, i64* %71, align 8
	%593 = icmp slt i64 %591, %592
	br i1 %593, label %for.index.body-129, label %for.index.done-132

for.index.body-129:
	%594 = load i64, i64* %72, align 8
	%595 = extractvalue {%..string*, i64, i64} %588, 0
	%596 = getelementptr inbounds %..string, %..string* %595, i64 %594
	%597 = load %..string, %..string* %596, align 8
	store %..string %597, %..string* %69
	store i64 %594, i64* %70
	; IfStmt
	%598 = load i64, i64* %70, align 8
	%599 = icmp sgt i64 %598, 0
	br i1 %599, label %if.then-130, label %if.done-131

if.then-130:
	%600 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %600, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6d, i64 0, i32 0), i64 2})
	br label %if.done-131

if.done-131:
	%601 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%602 = load %..string, %..string* %69, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %601, %..string %602)
	br label %for.index.loop-128

for.index.done-132:
	%603 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %603, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$6e, i64 0, i32 0), i64 1})
	br label %typematch.done-133

typematch.done-133:
	ret void
}

define {i64, i64, i1} @fmt-4._parse_int(%..string %s, i64 %offset) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i32, align 4
	%7 = alloca {i64, i64, i1}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %offset, i64* %1
	; result
	store i64 zeroinitializer, i64* %2
		store i64 0, i64* %2
	; ok
	store i1 zeroinitializer, i1* %3
		store i1 true, i1* %3
	; i
	store i64 zeroinitializer, i64* %4
		store i64 0, i64* %4
	; ForStmt
	br label %for.loop-1

for.loop-1:
	%8 = load i64, i64* %4, align 8
	; SliceExpr
	%9 = load i64, i64* %1, align 8
	%10 = load %..string, %..string* %0, align 8
	%11 = extractvalue %..string %10, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$6f, i64 0, i32 0), i64 21}, i64 380, i64 15, i64 %9, i64 %11)
	%12 = extractvalue %..string %10, 0
	%13 = getelementptr inbounds i8, i8* %12, i64 %9
	%14 = sub i64 %11, %9
	store %..string zeroinitializer, %..string* %5
	%15 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %13, i8** %15
	%16 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %14, i64* %16
	%17 = load %..string, %..string* %5, align 8
	%18 = extractvalue %..string %17, 1
	%19 = icmp slt i64 %8, %18
	br i1 %19, label %for.body-2, label %for.done-5

for.body-2:
	; c
	store i32 zeroinitializer, i32* %6
		; IndexExpr
	%20 = load %..string, %..string* %0, align 8
	%21 = extractvalue %..string %20, 0
	%22 = extractvalue %..string %20, 1
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %4, align 8
	%25 = add i64 %23, %24
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$70, i64 0, i32 0), i64 21}, i64 381, i64 15, i64 %25, i64 %22)
	%26 = getelementptr inbounds i8, i8* %21, i64 %25
	%27 = load i8, i8* %26, align 1
	%28 = zext i8 %27 to i32
	store i32 %28, i32* %6
	; IfStmt
	%29 = load i32, i32* %6, align 4
	%30 = call i1 @fmt-4._parse_int.is_digit-0(i32 %29)
	br i1 %30, label %if.done-4, label %if.then-3

if.then-3:
	; break
	br label %for.done-5

if.done-4:
	%31 = load i64, i64* %4, align 8
	%32 = add i64 %31, 1
	store i64 %32, i64* %4
	; AssignStmt
	%33 = load i64, i64* %2, align 8
	%34 = mul i64 %33, 10
	store i64 %34, i64* %2
	; AssignStmt
	%35 = load i32, i32* %6, align 4
	%36 = sext i32 %35 to i64
	%37 = sub i64 %36, 48
	%38 = load i64, i64* %2, align 8
	%39 = add i64 %38, %37
	store i64 %39, i64* %2
	br label %for.loop-1

for.done-5:
	; ReturnStmt
	%40 = load i64, i64* %2, align 8
	%41 = load i64, i64* %1, align 8
	%42 = load i64, i64* %4, align 8
	%43 = add i64 %41, %42
	%44 = load i64, i64* %4, align 8
	%45 = icmp ne i64 %44, 0
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %7
	%46 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 0
	store i64 %40, i64* %46
	%47 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 1
	store i64 %43, i64* %47
	%48 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 2
	store i1 %45, i1* %48
	%49 = load {i64, i64, i1}, {i64, i64, i1}* %7, align 8
	ret {i64, i64, i1} %49
}

define i1 @fmt-4._parse_int.is_digit-0(i32 %r) alwaysinline {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %r, i32* %0
	; ReturnStmt
	%1 = load i32, i32* %0, align 4
	%2 = icmp sle i32 48, %1
	%3 = load i32, i32* %0, align 4
	%4 = icmp sle i32 48, %3
	br i1 %4, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	%5 = load i32, i32* %0, align 4
	%6 = icmp sle i32 %5, 57
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%7 = phi i1 [ false, %decls-0 ], [ %6, %logical.cmp.rhs-1 ]
	ret i1 %7
}

define {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %fi, i64 %arg_index, %..string %format, i64 %offset, i64 %arg_count) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %..string, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca {i64, i64, i1}, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i1, align 1
	%9 = alloca %..string, align 8
	%10 = alloca {i64, i64, i1}, align 8
	%11 = alloca {i64, i64, i1}, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i64 zeroinitializer, i64* %1
		store i64 %arg_index, i64* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %format, %..string* %2
	store i64 zeroinitializer, i64* %3
		store i64 %offset, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %arg_count, i64* %4
	; IfStmt
	%12 = load %..string, %..string* %2, align 8
	%13 = extractvalue %..string %12, 1
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 %13, %14
	br i1 %15, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; IndexExpr
	%16 = load %..string, %..string* %2, align 8
	%17 = extractvalue %..string %16, 0
	%18 = extractvalue %..string %16, 1
	%19 = load i64, i64* %3, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$71, i64 0, i32 0), i64 21}, i64 414, i64 37, i64 %19, i64 %18)
	%20 = getelementptr inbounds i8, i8* %17, i64 %19
	%21 = load i8, i8* %20, align 1
	%22 = icmp ne i8 %21, 91
	br i1 %22, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %3, align 8
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %5
	%25 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 0
	store i64 %23, i64* %25
	%26 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 1
	store i64 %24, i64* %26
	%27 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 2
	store i1 false, i1* %27
	%28 = load {i64, i64, i1}, {i64, i64, i1}* %5, align 8
	ret {i64, i64, i1} %28

if.done-3:
	; AssignStmt
	; SelectorExpr
	%29 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%30 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0
	%31 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, i64 0, i32 11
	store i1 true, i1* %31
	; index
	store i64 zeroinitializer, i64* %6
		; width
	store i64 zeroinitializer, i64* %7
		; ok
	store i1 zeroinitializer, i1* %8
		; SliceExpr
	%32 = load i64, i64* %3, align 8
	%33 = load %..string, %..string* %2, align 8
	%34 = extractvalue %..string %33, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$72, i64 0, i32 0), i64 21}, i64 418, i64 45, i64 %32, i64 %34)
	%35 = extractvalue %..string %33, 0
	%36 = getelementptr inbounds i8, i8* %35, i64 %32
	%37 = sub i64 %34, %32
	store %..string zeroinitializer, %..string* %9
	%38 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 0
	store i8* %36, i8** %38
	%39 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 1
	store i64 %37, i64* %39
	%40 = load %..string, %..string* %9, align 8
	%41 = call {i64, i64, i1} @fmt-4._arg_number.parse_arg_number-0(%..string %40)
	%42 = extractvalue {i64, i64, i1} %41, 0
	%43 = extractvalue {i64, i64, i1} %41, 1
	%44 = extractvalue {i64, i64, i1} %41, 2
	store i64 %42, i64* %6
	store i64 %43, i64* %7
	store i1 %44, i1* %8
	; IfStmt
	%45 = load i1, i1* %8, align 1
	br i1 %45, label %cmp.and-4, label %if.done-7

cmp.and-4:
	%46 = load i64, i64* %6, align 8
	%47 = icmp sle i64 0, %46
	br i1 %47, label %cmp.and-5, label %if.done-7

cmp.and-5:
	%48 = load i64, i64* %6, align 8
	%49 = load i64, i64* %4, align 8
	%50 = icmp slt i64 %48, %49
	br i1 %50, label %if.then-6, label %if.done-7

if.then-6:
	; ReturnStmt
	%51 = load i64, i64* %6, align 8
	%52 = load i64, i64* %3, align 8
	%53 = load i64, i64* %7, align 8
	%54 = add i64 %52, %53
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %10
	%55 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 0
	store i64 %51, i64* %55
	%56 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 1
	store i64 %54, i64* %56
	%57 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 2
	store i1 true, i1* %57
	%58 = load {i64, i64, i1}, {i64, i64, i1}* %10, align 8
	ret {i64, i64, i1} %58

if.done-7:
	; AssignStmt
	; SelectorExpr
	%59 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%60 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %59, i64 0
	%61 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %60, i64 0, i32 12
	store i1 false, i1* %61
	; ReturnStmt
	%62 = load i64, i64* %1, align 8
	%63 = load i64, i64* %3, align 8
	%64 = load i64, i64* %7, align 8
	%65 = add i64 %63, %64
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %11
	%66 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 0
	store i64 %62, i64* %66
	%67 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 1
	store i64 %65, i64* %67
	%68 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 2
	store i1 false, i1* %68
	%69 = load {i64, i64, i1}, {i64, i64, i1}* %11, align 8
	ret {i64, i64, i1} %69
}

define {i64, i64, i1} @fmt-4._arg_number.parse_arg_number-0(%..string %format) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i64, i64, i1}, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i1, align 1
	%8 = alloca {i64, i64, i1}, align 8
	%9 = alloca {i64, i64, i1}, align 8
	%10 = alloca {i64, i64, i1}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %format, %..string* %0
	; IfStmt
	%11 = load %..string, %..string* %0, align 8
	%12 = extractvalue %..string %11, 1
	%13 = icmp slt i64 %12, 3
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %1
	%14 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 0
	store i64 0, i64* %14
	%15 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 1
	store i64 1, i64* %15
	%16 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 2
	store i1 false, i1* %16
	%17 = load {i64, i64, i1}, {i64, i64, i1}* %1, align 8
	ret {i64, i64, i1} %17

if.done-2:
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %2
		store i64 zeroinitializer, i64* %3
	store i64 1, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	br label %for.interval.loop-3

for.interval.loop-3:
	%18 = load %..string, %..string* %0, align 8
	%19 = extractvalue %..string %18, 1
	%20 = load i64, i64* %3, align 8
	%21 = icmp sle i64 %20, %19
	br i1 %21, label %for.interval.body-4, label %for.interval.done-10

for.interval.body-4:
	%22 = load i64, i64* %3, align 8
	%23 = load i64, i64* %4, align 8
	%24 = load i64, i64* %3, align 8
	%25 = add i64 %24, 1
	store i64 %25, i64* %3
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	store i64 %22, i64* %2
	; IfStmt
	; IndexExpr
	%28 = load %..string, %..string* %0, align 8
	%29 = extractvalue %..string %28, 0
	%30 = extractvalue %..string %28, 1
	%31 = load i64, i64* %2, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$73, i64 0, i32 0), i64 21}, i64 401, i64 14, i64 %31, i64 %30)
	%32 = getelementptr inbounds i8, i8* %29, i64 %31
	%33 = load i8, i8* %32, align 1
	%34 = icmp eq i8 %33, 93
	br i1 %34, label %if.then-5, label %if.done-9

if.then-5:
	; width
	store i64 zeroinitializer, i64* %5
		; new_index
	store i64 zeroinitializer, i64* %6
		; ok
	store i1 zeroinitializer, i1* %7
		%35 = load %..string, %..string* %0, align 8
	%36 = call {i64, i64, i1} @fmt-4._parse_int(%..string %35, i64 1)
	%37 = extractvalue {i64, i64, i1} %36, 0
	%38 = extractvalue {i64, i64, i1} %36, 1
	%39 = extractvalue {i64, i64, i1} %36, 2
	store i64 %37, i64* %5
	store i64 %38, i64* %6
	store i1 %39, i1* %7
	; IfStmt
	%40 = load i1, i1* %7, align 1
	br i1 %40, label %cmp.or-6, label %if.then-7

cmp.or-6:
	%41 = load i64, i64* %6, align 8
	%42 = load i64, i64* %2, align 8
	%43 = icmp ne i64 %41, %42
	br i1 %43, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	%44 = load i64, i64* %2, align 8
	%45 = add i64 %44, 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %8
	%46 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 0
	store i64 0, i64* %46
	%47 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 1
	store i64 %45, i64* %47
	%48 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 2
	store i1 false, i1* %48
	%49 = load {i64, i64, i1}, {i64, i64, i1}* %8, align 8
	ret {i64, i64, i1} %49

if.done-8:
	; ReturnStmt
	%50 = load i64, i64* %5, align 8
	%51 = sub i64 %50, 1
	%52 = load i64, i64* %2, align 8
	%53 = add i64 %52, 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %9
	%54 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 0
	store i64 %51, i64* %54
	%55 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 1
	store i64 %53, i64* %55
	%56 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 2
	store i1 true, i1* %56
	%57 = load {i64, i64, i1}, {i64, i64, i1}* %9, align 8
	ret {i64, i64, i1} %57

if.done-9:
	br label %for.interval.loop-3

for.interval.done-10:
	; ReturnStmt
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %10
	%58 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 0
	store i64 0, i64* %58
	%59 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 1
	store i64 1, i64* %59
	%60 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 2
	store i1 false, i1* %60
	%61 = load {i64, i64, i1}, {i64, i64, i1}* %10, align 8
	ret {i64, i64, i1} %61
}

define {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64, i64} %args, i64 %arg_index) {
decls-0:
	%0 = alloca {%..any*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i1, align 1
	%5 = alloca %..any, align 8
	%6 = alloca i64, align 8
	%7 = alloca i8, align 1
	%8 = alloca i16, align 2
	%9 = alloca i32, align 4
	%10 = alloca i64, align 8
	%11 = alloca i8, align 1
	%12 = alloca i16, align 2
	%13 = alloca i32, align 4
	%14 = alloca i64, align 8
	%15 = alloca %..any, align 8
	%16 = alloca {i64, i64, i1}, align 8
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %0
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %0
	store i64 zeroinitializer, i64* %1
		store i64 %arg_index, i64* %1
	; num
	store i64 zeroinitializer, i64* %2
		store i64 0, i64* %2
	; new_arg_index
	store i64 zeroinitializer, i64* %3
		%17 = load i64, i64* %1, align 8
	store i64 %17, i64* %3
	; ok
	store i1 zeroinitializer, i1* %4
		store i1 true, i1* %4
	; IfStmt
	%18 = load i64, i64* %1, align 8
	%19 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %0, align 8
	%20 = extractvalue {%..any*, i64, i64} %19, 1
	%21 = icmp slt i64 %18, %20
	br i1 %21, label %if.then-1, label %if.done-21

if.then-1:
	; arg
	store %..any zeroinitializer, %..any* %5
		; IndexExpr
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %0, align 8
	%23 = extractvalue {%..any*, i64, i64} %22, 0
	%24 = extractvalue {%..any*, i64, i64} %22, 1
	%25 = load i64, i64* %1, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$74, i64 0, i32 0), i64 21}, i64 431, i64 15, i64 %25, i64 %24)
	%26 = getelementptr inbounds %..any, %..any* %23, i64 %25
	%27 = load %..any, %..any* %26, align 8
	store %..any %27, %..any* %5
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	; SelectorExpr
	%29 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%30 = load %Type_Info*, %Type_Info** %29, align 8
	%31 = call %Type_Info* @type_info_base(%Type_Info* %30)
	store %Type_Info* %31, %Type_Info** %28
	; TypeMatchStmt
	%32 = load %..any, %..any* %5, align 8
	%33 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%34 = load %Type_Info*, %Type_Info** %33, align 8
	%35 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%36 = icmp eq %Type_Info* %34, %35
	br i1 %36, label %typematch.body-3, label %typematch.next-2

typematch.next-2:
	%37 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%38 = load %Type_Info*, %Type_Info** %37, align 8
	%39 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%40 = icmp eq %Type_Info* %38, %39
	br i1 %40, label %typematch.body-5, label %typematch.next-4

typematch.body-3:
	%41 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%42 = load %..rawptr, %..rawptr* %41, align 8
	%43 = bitcast %..rawptr %42 to i64*
	%44 = load i64, i64* %43, align 8
	store i64 zeroinitializer, i64* %6
	store i64 %44, i64* %6
	; AssignStmt
	%45 = load i64, i64* %6, align 8
	store i64 %45, i64* %2
	br label %typematch.done-20

typematch.next-4:
	%46 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%47 = load %Type_Info*, %Type_Info** %46, align 8
	%48 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%49 = icmp eq %Type_Info* %47, %48
	br i1 %49, label %typematch.body-7, label %typematch.next-6

typematch.body-5:
	%50 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%51 = load %..rawptr, %..rawptr* %50, align 8
	%52 = bitcast %..rawptr %51 to i8*
	%53 = load i8, i8* %52, align 1
	store i8 zeroinitializer, i8* %7
	store i8 %53, i8* %7
	; AssignStmt
	%54 = load i8, i8* %7, align 1
	%55 = sext i8 %54 to i64
	store i64 %55, i64* %2
	br label %typematch.done-20

typematch.next-6:
	%56 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%57 = load %Type_Info*, %Type_Info** %56, align 8
	%58 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%59 = icmp eq %Type_Info* %57, %58
	br i1 %59, label %typematch.body-9, label %typematch.next-8

typematch.body-7:
	%60 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = bitcast %..rawptr %61 to i16*
	%63 = load i16, i16* %62, align 2
	store i16 zeroinitializer, i16* %8
	store i16 %63, i16* %8
	; AssignStmt
	%64 = load i16, i16* %8, align 2
	%65 = sext i16 %64 to i64
	store i64 %65, i64* %2
	br label %typematch.done-20

typematch.next-8:
	%66 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%67 = load %Type_Info*, %Type_Info** %66, align 8
	%68 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%69 = icmp eq %Type_Info* %67, %68
	br i1 %69, label %typematch.body-11, label %typematch.next-10

typematch.body-9:
	%70 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%71 = load %..rawptr, %..rawptr* %70, align 8
	%72 = bitcast %..rawptr %71 to i32*
	%73 = load i32, i32* %72, align 4
	store i32 zeroinitializer, i32* %9
	store i32 %73, i32* %9
	; AssignStmt
	%74 = load i32, i32* %9, align 4
	%75 = sext i32 %74 to i64
	store i64 %75, i64* %2
	br label %typematch.done-20

typematch.next-10:
	%76 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%77 = load %Type_Info*, %Type_Info** %76, align 8
	%78 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%79 = icmp eq %Type_Info* %77, %78
	br i1 %79, label %typematch.body-13, label %typematch.next-12

typematch.body-11:
	%80 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%81 = load %..rawptr, %..rawptr* %80, align 8
	%82 = bitcast %..rawptr %81 to i64*
	%83 = load i64, i64* %82, align 8
	store i64 zeroinitializer, i64* %10
	store i64 %83, i64* %10
	; AssignStmt
	%84 = load i64, i64* %10, align 8
	%85 = bitcast i64 %84 to i64
	store i64 %85, i64* %2
	br label %typematch.done-20

typematch.next-12:
	%86 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%87 = load %Type_Info*, %Type_Info** %86, align 8
	%88 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%89 = icmp eq %Type_Info* %87, %88
	br i1 %89, label %typematch.body-15, label %typematch.next-14

typematch.body-13:
	%90 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%91 = load %..rawptr, %..rawptr* %90, align 8
	%92 = bitcast %..rawptr %91 to i8*
	%93 = load i8, i8* %92, align 1
	store i8 zeroinitializer, i8* %11
	store i8 %93, i8* %11
	; AssignStmt
	%94 = load i8, i8* %11, align 1
	%95 = zext i8 %94 to i64
	store i64 %95, i64* %2
	br label %typematch.done-20

typematch.next-14:
	%96 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%97 = load %Type_Info*, %Type_Info** %96, align 8
	%98 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%99 = icmp eq %Type_Info* %97, %98
	br i1 %99, label %typematch.body-17, label %typematch.next-16

typematch.body-15:
	%100 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%101 = load %..rawptr, %..rawptr* %100, align 8
	%102 = bitcast %..rawptr %101 to i16*
	%103 = load i16, i16* %102, align 2
	store i16 zeroinitializer, i16* %12
	store i16 %103, i16* %12
	; AssignStmt
	%104 = load i16, i16* %12, align 2
	%105 = zext i16 %104 to i64
	store i64 %105, i64* %2
	br label %typematch.done-20

typematch.next-16:
	%106 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%107 = load %Type_Info*, %Type_Info** %106, align 8
	%108 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%109 = icmp eq %Type_Info* %107, %108
	br i1 %109, label %typematch.body-19, label %typematch.next-18

typematch.body-17:
	%110 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%111 = load %..rawptr, %..rawptr* %110, align 8
	%112 = bitcast %..rawptr %111 to i32*
	%113 = load i32, i32* %112, align 4
	store i32 zeroinitializer, i32* %13
	store i32 %113, i32* %13
	; AssignStmt
	%114 = load i32, i32* %13, align 4
	%115 = zext i32 %114 to i64
	store i64 %115, i64* %2
	br label %typematch.done-20

typematch.next-18:
	store %..any zeroinitializer, %..any* %15
	store %..any %32, %..any* %15
	; AssignStmt
	store i1 false, i1* %4
	br label %typematch.done-20

typematch.body-19:
	%116 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%117 = load %..rawptr, %..rawptr* %116, align 8
	%118 = bitcast %..rawptr %117 to i64*
	%119 = load i64, i64* %118, align 8
	store i64 zeroinitializer, i64* %14
	store i64 %119, i64* %14
	; AssignStmt
	%120 = load i64, i64* %14, align 8
	%121 = bitcast i64 %120 to i64
	store i64 %121, i64* %2
	br label %typematch.done-20

typematch.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	%122 = load i64, i64* %2, align 8
	%123 = load i64, i64* %3, align 8
	%124 = load i1, i1* %4, align 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %16
	%125 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %16, i64 0, i32 0
	store i64 %122, i64* %125
	%126 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %16, i64 0, i32 1
	store i64 %123, i64* %126
	%127 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %16, i64 0, i32 2
	store i1 %124, i1* %127
	%128 = load {i64, i64, i1}, {i64, i64, i1}* %16, align 8
	ret {i64, i64, i1} %128
}

define void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %fi, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i32, align 4
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i32 zeroinitializer, i32* %1
		store i32 %verb, i32* %1
	; assert
	%2 = load i32, i32* %1, align 4
	%3 = icmp ne i32 %2, 118
	%4 = icmp eq i1 %3, false
	br i1 %4, label %builtin.assert.err-1, label %builtin.assert.done-2

builtin.assert.err-1:
	call void @__assert(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$75, i64 0, i32 0), i64 21}, i64 453, i64 9, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$76, i64 0, i32 0), i64 9})
	br label %builtin.assert.done-2

builtin.assert.done-2:
	%5 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%6 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %5, i64 0
	%7 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %6, i64 0, i32 3
	%8 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %7, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %8, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$77, i64 0, i32 0), i64 2})
	%9 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%10 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %9, i64 0
	%11 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %10, i64 0, i32 3
	%12 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %11, align 8
	%13 = load i32, i32* %1, align 4
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %12, i32 %13)
	%14 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0
	%16 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %15, i64 0, i32 3
	%17 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %16, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %17, i8 40)
	; IfStmt
	; SelectorExpr
	%18 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%19 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %18, i64 0
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0, i32 0
	%21 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	%22 = load %Type_Info*, %Type_Info** %21, align 8
	%23 = icmp ne %Type_Info* %22, zeroinitializer
	br i1 %23, label %if.then-3, label %if.else-4

if.then-3:
	%24 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0
	%26 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %25, i64 0, i32 3
	%27 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %26, align 8
	; SelectorExpr
	%28 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%29 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %28, i64 0
	%30 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0, i32 0
	%31 = getelementptr inbounds %..any, %..any* %30, i64 0, i32 1
	%32 = load %Type_Info*, %Type_Info** %31, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %27, %Type_Info* %32)
	%33 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0
	%35 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %34, i64 0, i32 3
	%36 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %35, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %36, i8 61)
	%37 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%38 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%39 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %38, i64 0
	%40 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0, i32 0
	%41 = load %..any, %..any* %40, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %37, %..any %41, i32 118)
	br label %if.done-5

if.else-4:
	%42 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%43 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %42, i64 0
	%44 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %43, i64 0, i32 3
	%45 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %44, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %45, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$78, i64 0, i32 0), i64 5})
	br label %if.done-5

if.done-5:
	%46 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%47 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %46, i64 0
	%48 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %47, i64 0, i32 3
	%49 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %48, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %49, i8 41)
	ret void
}

define void @fmt-4.fmt_bool(%fmt-4.Fmt_Info* %fi, i1 %b, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca i32, align 4
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i1 zeroinitializer, i1* %1
		store i1 %b, i1* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; MatchStmt
	%3 = load i32, i32* %2, align 4
	%4 = icmp eq i32 %3, 116
	br i1 %4, label %match.case.body-3, label %match.case.next-1

match.case.next-1:
	%5 = icmp eq i32 %3, 118
	br i1 %5, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%6 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%7 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %6, i32 %7)
	br label %match.done-7

match.case.body-3:
	%8 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%9 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, i64 0
	%10 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %9, i64 0, i32 3
	%11 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %10, align 8
	; TernaryExpr
	%12 = load i1, i1* %1, align 1
	br i1 %12, label %if.then-4, label %if.else-5

if.then-4:
	br label %if.done-6

if.else-5:
	br label %if.done-6

if.done-6:
	%13 = phi %..string [ {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$79, i64 0, i32 0), i64 4}, %if.then-4 ], [ {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7a, i64 0, i32 0), i64 5}, %if.else-5 ]
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %11, %..string %13)
	br label %match.done-7

match.done-7:
	ret void
}

define void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %fi, i64 %width) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i8, align 1
	%3 = alloca {i8*, i64, i64}, align 8
	%4 = alloca %fmt-4.String_Buffer, align 16
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i64 zeroinitializer, i64* %1
		store i64 %width, i64* %1
	; IfStmt
	%8 = load i64, i64* %1, align 8
	%9 = icmp sle i64 %8, 0
	br i1 %9, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; pad_byte
	store i8 zeroinitializer, i8* %2
		store i8 32, i8* %2
	; IfStmt
	; SelectorExpr
	%10 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%11 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %10, i64 0
	%12 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %11, i64 0, i32 7
	%13 = load i1, i1* %12, align 1
	br i1 %13, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	store i8 48, i8* %2
	br label %if.done-4

if.done-4:
	; data
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %3
		; SelectorExpr
	%14 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0
	%16 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %15, i64 0, i32 3
	%17 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %16, align 8
	%18 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %17, i64 0
	%19 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %18, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %4
	store %fmt-4.String_Buffer %19, %fmt-4.String_Buffer* %4
	%20 = call {i8*, i64, i64} @fmt-4.string_buffer_data-180(%fmt-4.String_Buffer* %4)
	store {i8*, i64, i64} %20, {i8*, i64, i64}* %3
	; count
	store i64 zeroinitializer, i64* %5
		; min
	%21 = load i64, i64* %1, align 8
	%22 = load {i8*, i64, i64}, {i8*, i64, i64}* %3, align 8
	%23 = extractvalue {i8*, i64, i64} %22, 2
	%24 = load {i8*, i64, i64}, {i8*, i64, i64}* %3, align 8
	%25 = extractvalue {i8*, i64, i64} %24, 1
	%26 = sub i64 %23, %25
	%27 = icmp slt i64 %21, %26
	%28 = select i1 %27, i64 %21, i64 %26
	store i64 %28, i64* %5
	; RangeStmt
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	store i64 zeroinitializer, i64* %7
	store i64 0, i64* %7
	br label %for.interval.loop-5

for.interval.loop-5:
	%29 = load i64, i64* %5, align 8
	%30 = load i64, i64* %6, align 8
	%31 = icmp sle i64 %30, %29
	br i1 %31, label %for.interval.body-6, label %for.interval.done-7

for.interval.body-6:
	%32 = load i64, i64* %6, align 8
	%33 = load i64, i64* %7, align 8
	%34 = load i64, i64* %6, align 8
	%35 = add i64 %34, 1
	store i64 %35, i64* %6
	%36 = load i64, i64* %7, align 8
	%37 = add i64 %36, 1
	store i64 %37, i64* %7
	; SelectorExpr
	%38 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%39 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %38, i64 0
	%40 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0, i32 3
	%41 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %40, align 8
	%42 = load i8, i8* %2, align 1
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %41, i8 %42)
	br label %for.interval.loop-5

for.interval.done-7:
	ret void
}

define {i64, i1} @fmt-4.is_integer_negative(i64 %u, i1 %is_signed, i64 %bit_size) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i8, align 1
	%5 = alloca i16, align 2
	%6 = alloca i32, align 4
	%7 = alloca i64, align 8
	%8 = alloca {i64, i1}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %u, i64* %0
	store i1 zeroinitializer, i1* %1
		store i1 %is_signed, i1* %1
	store i64 zeroinitializer, i64* %2
		store i64 %bit_size, i64* %2
	; neg
	store i1 zeroinitializer, i1* %3
		store i1 false, i1* %3
	; IfStmt
	%9 = load i1, i1* %1, align 1
	br i1 %9, label %if.then-1, label %if.done-19

if.then-1:
	; MatchStmt
	%10 = load i64, i64* %2, align 8
	%11 = icmp eq i64 %10, 8
	br i1 %11, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%12 = icmp eq i64 %10, 16
	br i1 %12, label %match.fall.body-7, label %match.case.next-6

match.case.body-3:
	; i
	store i8 zeroinitializer, i8* %4
		%13 = load i64, i64* %0, align 8
	%14 = trunc i64 %13 to i8
	store i8 %14, i8* %4
	; AssignStmt
	%15 = load i8, i8* %4, align 1
	%16 = icmp slt i8 %15, 0
	store i1 %16, i1* %3
	; IfStmt
	%17 = load i1, i1* %3, align 1
	br i1 %17, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	%18 = load i8, i8* %4, align 1
	%19 = sub i8 0, %18
	store i8 %19, i8* %4
	br label %if.done-5

if.done-5:
	; AssignStmt
	%20 = load i8, i8* %4, align 1
	%21 = sext i8 %20 to i64
	store i64 %21, i64* %0
	br label %match.done-18

match.case.next-6:
	%22 = icmp eq i64 %10, 32
	br i1 %22, label %match.fall.body-11, label %match.case.next-10

match.fall.body-7:
	; i
	store i16 zeroinitializer, i16* %5
		%23 = load i64, i64* %0, align 8
	%24 = trunc i64 %23 to i16
	store i16 %24, i16* %5
	; AssignStmt
	%25 = load i16, i16* %5, align 2
	%26 = icmp slt i16 %25, 0
	store i1 %26, i1* %3
	; IfStmt
	%27 = load i1, i1* %3, align 1
	br i1 %27, label %if.then-8, label %if.done-9

if.then-8:
	; AssignStmt
	%28 = load i16, i16* %5, align 2
	%29 = sub i16 0, %28
	store i16 %29, i16* %5
	br label %if.done-9

if.done-9:
	; AssignStmt
	%30 = load i16, i16* %5, align 2
	%31 = sext i16 %30 to i64
	store i64 %31, i64* %0
	br label %match.done-18

match.case.next-10:
	%32 = icmp eq i64 %10, 64
	br i1 %32, label %match.fall.body-15, label %match.case.next-14

match.fall.body-11:
	; i
	store i32 zeroinitializer, i32* %6
		%33 = load i64, i64* %0, align 8
	%34 = trunc i64 %33 to i32
	store i32 %34, i32* %6
	; AssignStmt
	%35 = load i32, i32* %6, align 4
	%36 = icmp slt i32 %35, 0
	store i1 %36, i1* %3
	; IfStmt
	%37 = load i1, i1* %3, align 1
	br i1 %37, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	%38 = load i32, i32* %6, align 4
	%39 = sub i32 0, %38
	store i32 %39, i32* %6
	br label %if.done-13

if.done-13:
	; AssignStmt
	%40 = load i32, i32* %6, align 4
	%41 = sext i32 %40 to i64
	store i64 %41, i64* %0
	br label %match.done-18

match.case.next-14:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$7b, i64 0, i32 0), i64 21}, i64 519, i64 10, %..string {i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__str$7c, i64 0, i32 0), i64 41})
	br label %match.done-18

match.fall.body-15:
	; i
	store i64 zeroinitializer, i64* %7
		%42 = load i64, i64* %0, align 8
	%43 = bitcast i64 %42 to i64
	store i64 %43, i64* %7
	; AssignStmt
	%44 = load i64, i64* %7, align 8
	%45 = icmp slt i64 %44, 0
	store i1 %45, i1* %3
	; IfStmt
	%46 = load i1, i1* %3, align 1
	br i1 %46, label %if.then-16, label %if.done-17

if.then-16:
	; AssignStmt
	%47 = load i64, i64* %7, align 8
	%48 = sub i64 0, %47
	store i64 %48, i64* %7
	br label %if.done-17

if.done-17:
	; AssignStmt
	%49 = load i64, i64* %7, align 8
	%50 = bitcast i64 %49 to i64
	store i64 %50, i64* %0
	br label %match.done-18

match.done-18:
	br label %if.done-19

if.done-19:
	; ReturnStmt
	%51 = load i64, i64* %0, align 8
	%52 = load i1, i1* %3, align 1
	store {i64, i1} zeroinitializer, {i64, i1}* %8
	%53 = getelementptr inbounds {i64, i1}, {i64, i1}* %8, i64 0, i32 0
	store i64 %51, i64* %53
	%54 = getelementptr inbounds {i64, i1}, {i64, i1}* %8, i64 0, i32 1
	store i1 %52, i1* %54
	%55 = load {i64, i1}, {i64, i1}* %8, align 8
	ret {i64, i1} %55
}

define void @fmt-4._write_int(%fmt-4.Fmt_Info* %fi, i64 %u, i64 %base, i1 %is_signed, i64 %bit_size, %..string %digits) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i1, align 1
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i1, align 1
	%10 = alloca [256 x i8], align 1
	%11 = alloca i64, align 8
	%12 = alloca %..string, align 8
	%13 = alloca {i8*, i64, i64}, align 8
	%14 = alloca i1, align 1
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i64 zeroinitializer, i64* %1
		store i64 %u, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %base, i64* %2
	store i1 zeroinitializer, i1* %3
		store i1 %is_signed, i1* %3
	store i64 zeroinitializer, i64* %4
		store i64 %bit_size, i64* %4
	store %..string zeroinitializer, %..string* %5
		store %..string %digits, %..string* %5
	; neg
	store i1 zeroinitializer, i1* %6
		%15 = load i64, i64* %1, align 8
	%16 = load i1, i1* %3, align 1
	%17 = load i64, i64* %4, align 8
	%18 = call {i64, i1} @fmt-4.is_integer_negative(i64 %15, i1 %16, i64 %17)
	%19 = extractvalue {i64, i1} %18, 0
	%20 = extractvalue {i64, i1} %18, 1
	store i1 %20, i1* %6
	; IfStmt
	; SelectorExpr
	%21 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %22, i64 0, i32 9
	%24 = load i1, i1* %23, align 1
	br i1 %24, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%25 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%26 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %25, i64 0
	%27 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %26, i64 0, i32 10
	%28 = load i1, i1* %27, align 1
	br i1 %28, label %if.then-2, label %if.done-5

if.then-2:
	; width
	store i64 zeroinitializer, i64* %7
		; SelectorExpr
	%29 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%30 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0
	%31 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, i64 0, i32 1
	%32 = load i64, i64* %31, align 8
	; SelectorExpr
	%33 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0
	%35 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %34, i64 0, i32 2
	%36 = load i64, i64* %35, align 8
	%37 = add i64 %32, %36
	%38 = add i64 %37, 3
	store i64 %38, i64* %7
	; IfStmt
	%39 = load i64, i64* %7, align 8
	%40 = icmp sgt i64 %39, 256
	br i1 %40, label %if.then-3, label %if.done-4

if.then-3:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$7d, i64 0, i32 0), i64 21}, i64 533, i64 10, %..string {i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__str$7e, i64 0, i32 0), i64 55})
	br label %if.done-4

if.done-4:
	br label %if.done-5

if.done-5:
	; prec
	store i64 zeroinitializer, i64* %8
		store i64 0, i64* %8
	; IfStmt
	; SelectorExpr
	%41 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%42 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %41, i64 0
	%43 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %42, i64 0, i32 10
	%44 = load i1, i1* %43, align 1
	br i1 %44, label %if.then-6, label %if.else-10

if.then-6:
	; AssignStmt
	; SelectorExpr
	%45 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%46 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %45, i64 0
	%47 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %46, i64 0, i32 2
	%48 = load i64, i64* %47, align 8
	store i64 %48, i64* %8
	; IfStmt
	%49 = load i64, i64* %8, align 8
	%50 = icmp eq i64 %49, 0
	br i1 %50, label %cmp.and-7, label %if.done-9

cmp.and-7:
	%51 = load i64, i64* %1, align 8
	%52 = icmp eq i64 %51, 0
	br i1 %52, label %if.then-8, label %if.done-9

if.then-8:
	; prev_zero
	store i1 zeroinitializer, i1* %9
		; SelectorExpr
	%53 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%54 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %53, i64 0
	%55 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %54, i64 0, i32 7
	%56 = load i1, i1* %55, align 1
	store i1 %56, i1* %9
	; AssignStmt
	; SelectorExpr
	%57 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%58 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %57, i64 0
	%59 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %58, i64 0, i32 7
	store i1 false, i1* %59
	%60 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%61 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%62 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %61, i64 0
	%63 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %62, i64 0, i32 1
	%64 = load i64, i64* %63, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %60, i64 %64)
	; AssignStmt
	; SelectorExpr
	%65 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%66 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %65, i64 0
	%67 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %66, i64 0, i32 7
	%68 = load i1, i1* %9, align 1
	store i1 %68, i1* %67
	; ReturnStmt
	ret void

if.done-9:
	br label %if.done-18

if.else-10:
	; IfStmt
	; SelectorExpr
	%69 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%70 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %69, i64 0
	%71 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %70, i64 0, i32 7
	%72 = load i1, i1* %71, align 1
	br i1 %72, label %cmp.and-11, label %if.done-17

cmp.and-11:
	; SelectorExpr
	%73 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%74 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %73, i64 0
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %74, i64 0, i32 9
	%76 = load i1, i1* %75, align 1
	br i1 %76, label %if.then-12, label %if.done-17

if.then-12:
	; AssignStmt
	; SelectorExpr
	%77 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%78 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %77, i64 0
	%79 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %78, i64 0, i32 1
	%80 = load i64, i64* %79, align 8
	store i64 %80, i64* %8
	; IfStmt
	%81 = load i1, i1* %6, align 1
	br i1 %81, label %if.then-15, label %cmp.or-13

cmp.or-13:
	; SelectorExpr
	%82 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%83 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %82, i64 0
	%84 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %83, i64 0, i32 5
	%85 = load i1, i1* %84, align 1
	br i1 %85, label %if.then-15, label %cmp.or-14

cmp.or-14:
	; SelectorExpr
	%86 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%87 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %86, i64 0
	%88 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %87, i64 0, i32 6
	%89 = load i1, i1* %88, align 1
	br i1 %89, label %if.then-15, label %if.done-16

if.then-15:
	%90 = load i64, i64* %8, align 8
	%91 = sub i64 %90, 1
	store i64 %91, i64* %8
	br label %if.done-16

if.done-16:
	br label %if.done-17

if.done-17:
	br label %if.done-18

if.done-18:
	; MatchStmt
	%92 = load i64, i64* %2, align 8
	%93 = icmp eq i64 %92, 2
	br i1 %93, label %match.case.body-24, label %match.case.next-19

match.case.next-19:
	%94 = icmp eq i64 %92, 8
	br i1 %94, label %match.case.body-24, label %match.case.next-20

match.case.next-20:
	%95 = icmp eq i64 %92, 10
	br i1 %95, label %match.case.body-24, label %match.case.next-21

match.case.next-21:
	%96 = icmp eq i64 %92, 12
	br i1 %96, label %match.case.body-24, label %match.case.next-22

match.case.next-22:
	%97 = icmp eq i64 %92, 16
	br i1 %97, label %match.case.body-24, label %match.case.next-23

match.case.next-23:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$7f, i64 0, i32 0), i64 21}, i64 559, i64 9, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$80, i64 0, i32 0), i64 32})
	br label %match.done-25

match.case.body-24:
	; break
	br label %match.done-25

match.done-25:
	; buf
	store [256 x i8] zeroinitializer, [256 x i8]* %10
		; flags
	store i64 zeroinitializer, i64* %11
		; IfStmt
	; SelectorExpr
	%98 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%99 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %98, i64 0
	%100 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %99, i64 0, i32 8
	%101 = load i1, i1* %100, align 1
	br i1 %101, label %if.then-26, label %if.done-27

if.then-26:
	; AssignStmt
	%102 = load i64, i64* %11, align 8
	%103 = or i64 %102, 1
	store i64 %103, i64* %11
	br label %if.done-27

if.done-27:
	; IfStmt
	; SelectorExpr
	%104 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%105 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %104, i64 0
	%106 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %105, i64 0, i32 5
	%107 = load i1, i1* %106, align 1
	br i1 %107, label %if.then-28, label %if.done-29

if.then-28:
	; AssignStmt
	%108 = load i64, i64* %11, align 8
	%109 = or i64 %108, 2
	store i64 %109, i64* %11
	br label %if.done-29

if.done-29:
	; IfStmt
	; SelectorExpr
	%110 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%111 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %110, i64 0
	%112 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %111, i64 0, i32 6
	%113 = load i1, i1* %112, align 1
	br i1 %113, label %if.then-30, label %if.done-31

if.then-30:
	; AssignStmt
	%114 = load i64, i64* %11, align 8
	%115 = or i64 %114, 4
	store i64 %115, i64* %11
	br label %if.done-31

if.done-31:
	; s
	store %..string zeroinitializer, %..string* %12
		; SelectorExpr
	; SliceExpr
	%116 = load [256 x i8], [256 x i8]* %10, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$81, i64 0, i32 0), i64 21}, i64 567, i64 30, i64 0, i64 0, i64 256)
	%117 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i32 0
	%118 = getelementptr inbounds i8, i8* %117, i64 0
	%119 = sub i64 0, 0
	%120 = sub i64 256, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %13
	%121 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 0
	store i8* %118, i8** %121
	%122 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 1
	store i64 %119, i64* %122
	%123 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 2
	store i64 %120, i64* %123
	%124 = load {i8*, i64, i64}, {i8*, i64, i64}* %13, align 8
	%125 = load i64, i64* %1, align 8
	%126 = load i64, i64* %2, align 8
	%127 = load i1, i1* %3, align 1
	%128 = load i64, i64* %4, align 8
	%129 = load %..string, %..string* %5, align 8
	%130 = load i64, i64* %11, align 8
	%131 = call %..string @strconv-34.append_bits({i8*, i64, i64} %124, i64 %125, i64 %126, i1 %127, i64 %128, %..string %129, i64 %130)
	store %..string %131, %..string* %12
	; prev_zero
	store i1 zeroinitializer, i1* %14
		; SelectorExpr
	%132 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%133 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %132, i64 0
	%134 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %133, i64 0, i32 7
	%135 = load i1, i1* %134, align 1
	store i1 %135, i1* %14
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%136 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%137 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %136, i64 0
	%138 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %137, i64 0, i32 7
	store i1 false, i1* %138
	%139 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%140 = load %..string, %..string* %12, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %139, %..string %140)
	; defer
	; AssignStmt
	; SelectorExpr
	%141 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%142 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %141, i64 0
	%143 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %142, i64 0, i32 7
	%144 = load i1, i1* %14, align 1
	store i1 %144, i1* %143
	ret void
}

define void @fmt-4.fmt_rune(%fmt-4.Fmt_Info* %fi, i32 %r) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i32, align 4
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i32 zeroinitializer, i32* %1
		store i32 %r, i32* %1
	; SelectorExpr
	%2 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%3 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	%4 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 3
	%5 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %4, align 8
	%6 = load i32, i32* %1, align 4
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %5, i32 %6)
	ret void
}

define void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %fi, i64 %u, i1 %is_signed, i64 %bit_size, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i1, align 1
	%3 = alloca i64, align 8
	%4 = alloca i32, align 4
	%5 = alloca i32, align 4
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store i64 zeroinitializer, i64* %1
		store i64 %u, i64* %1
	store i1 zeroinitializer, i1* %2
		store i1 %is_signed, i1* %2
	store i64 zeroinitializer, i64* %3
		store i64 %bit_size, i64* %3
	store i32 zeroinitializer, i32* %4
		store i32 %verb, i32* %4
	; MatchStmt
	%6 = load i32, i32* %4, align 4
	%7 = icmp eq i32 %6, 118
	br i1 %7, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%8 = icmp eq i32 %6, 98
	br i1 %8, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	%9 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%10 = load i64, i64* %1, align 8
	%11 = load i1, i1* %2, align 1
	%12 = load i64, i64* %3, align 8
	%13 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %9, i64 %10, i64 10, i1 %11, i64 %12, %..string %13)
	br label %match.done-22

match.case.next-3:
	%14 = icmp eq i32 %6, 111
	br i1 %14, label %match.fall.body-6, label %match.case.next-5

match.fall.body-4:
	%15 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%16 = load i64, i64* %1, align 8
	%17 = load i1, i1* %2, align 1
	%18 = load i64, i64* %3, align 8
	%19 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %15, i64 %16, i64 2, i1 %17, i64 %18, %..string %19)
	br label %match.done-22

match.case.next-5:
	%20 = icmp eq i32 %6, 100
	br i1 %20, label %match.fall.body-8, label %match.case.next-7

match.fall.body-6:
	%21 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%22 = load i64, i64* %1, align 8
	%23 = load i1, i1* %2, align 1
	%24 = load i64, i64* %3, align 8
	%25 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %21, i64 %22, i64 8, i1 %23, i64 %24, %..string %25)
	br label %match.done-22

match.case.next-7:
	%26 = icmp eq i32 %6, 120
	br i1 %26, label %match.fall.body-10, label %match.case.next-9

match.fall.body-8:
	%27 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%28 = load i64, i64* %1, align 8
	%29 = load i1, i1* %2, align 1
	%30 = load i64, i64* %3, align 8
	%31 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %27, i64 %28, i64 10, i1 %29, i64 %30, %..string %31)
	br label %match.done-22

match.case.next-9:
	%32 = icmp eq i32 %6, 88
	br i1 %32, label %match.fall.body-12, label %match.case.next-11

match.fall.body-10:
	%33 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%34 = load i64, i64* %1, align 8
	%35 = load i1, i1* %2, align 1
	%36 = load i64, i64* %3, align 8
	%37 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %33, i64 %34, i64 16, i1 %35, i64 %36, %..string %37)
	br label %match.done-22

match.case.next-11:
	%38 = icmp eq i32 %6, 99
	br i1 %38, label %match.fall.body-15, label %match.case.next-13

match.fall.body-12:
	%39 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%40 = load i64, i64* %1, align 8
	%41 = load i1, i1* %2, align 1
	%42 = load i64, i64* %3, align 8
	%43 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %39, i64 %40, i64 16, i1 %41, i64 %42, %..string %43)
	br label %match.done-22

match.case.next-13:
	%44 = icmp eq i32 %6, 114
	br i1 %44, label %match.fall.body-15, label %match.case.next-14

match.case.next-14:
	%45 = icmp eq i32 %6, 85
	br i1 %45, label %match.fall.body-17, label %match.case.next-16

match.fall.body-15:
	%46 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%47 = load i64, i64* %1, align 8
	%48 = trunc i64 %47 to i32
	call void @fmt-4.fmt_rune(%fmt-4.Fmt_Info* %46, i32 %48)
	br label %match.done-22

match.case.next-16:
	%49 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%50 = load i32, i32* %4, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %49, i32 %50)
	br label %match.done-22

match.fall.body-17:
	; r
	store i32 zeroinitializer, i32* %5
		%51 = load i64, i64* %1, align 8
	%52 = trunc i64 %51 to i32
	store i32 %52, i32* %5
	; IfStmt
	%53 = load i32, i32* %5, align 4
	%54 = icmp slt i32 %53, 0
	br i1 %54, label %if.then-19, label %cmp.or-18

cmp.or-18:
	%55 = load i32, i32* %5, align 4
	%56 = icmp sgt i32 %55, 1114111
	br i1 %56, label %if.then-19, label %if.else-20

if.then-19:
	%57 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%58 = load i32, i32* %4, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %57, i32 %58)
	br label %if.done-21

if.else-20:
	; SelectorExpr
	%59 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%60 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %59, i64 0
	%61 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %60, i64 0, i32 3
	%62 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %61, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %62, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$82, i64 0, i32 0), i64 2})
	%63 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%64 = load i64, i64* %1, align 8
	%65 = load i64, i64* %3, align 8
	%66 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %63, i64 %64, i64 16, i1 false, i64 %65, %..string %66)
	br label %if.done-21

if.done-21:
	br label %match.done-22

match.done-22:
	ret void
}

define void @fmt-4._pad(%fmt-4.Fmt_Info* %fi, %..string %s) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %s, %..string* %1
	; IfStmt
	; SelectorExpr
	%3 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%4 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	%5 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %4, i64 0, i32 9
	%6 = load i1, i1* %5, align 1
	br i1 %6, label %if.done-2, label %if.then-1

if.then-1:
	; SelectorExpr
	%7 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%8 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %7, i64 0
	%9 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, i64 0, i32 3
	%10 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %9, align 8
	%11 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %10, %..string %11)
	; ReturnStmt
	ret void

if.done-2:
	; width
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%12 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%13 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %12, i64 0
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0, i32 1
	%15 = load i64, i64* %14, align 8
	; SelectorExpr
	%16 = load %..string, %..string* %1, align 8
	%17 = call i64 @utf8-5.rune_count-259(%..string %16)
	%18 = sub i64 %15, %17
	store i64 %18, i64* %2
	; IfStmt
	; SelectorExpr
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 4
	%22 = load i1, i1* %21, align 1
	br i1 %22, label %if.then-3, label %if.else-4

if.then-3:
	; SelectorExpr
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0, i32 3
	%26 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %25, align 8
	%27 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %26, %..string %27)
	%28 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%29 = load i64, i64* %2, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %28, i64 %29)
	br label %if.done-5

if.else-4:
	%30 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%31 = load i64, i64* %2, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %30, i64 %31)
	; SelectorExpr
	%32 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%33 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %32, i64 0
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0, i32 3
	%35 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %34, align 8
	%36 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %35, %..string %36)
	br label %if.done-5

if.done-5:
	ret void
}

define void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %fi, double %v, i64 %bit_size, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca double, align 8
	%2 = alloca i64, align 8
	%3 = alloca i32, align 4
	%4 = alloca i64, align 8
	%5 = alloca [386 x i8], align 1
	%6 = alloca %..string, align 8
	%7 = alloca {i8*, i64, i64}, align 8
	%8 = alloca {i8*, i64, i64}, align 8
	%9 = alloca %..string, align 8
	%10 = alloca %..string, align 8
	%11 = alloca %..string, align 8
	%12 = alloca %..string, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store double zeroinitializer, double* %1
		store double %v, double* %1
	store i64 zeroinitializer, i64* %2
		store i64 %bit_size, i64* %2
	store i32 zeroinitializer, i32* %3
		store i32 %verb, i32* %3
	; MatchStmt
	%13 = load i32, i32* %3, align 4
	%14 = icmp eq i32 %13, 102
	br i1 %14, label %match.case.body-4, label %match.case.next-1

match.case.next-1:
	%15 = icmp eq i32 %13, 70
	br i1 %15, label %match.case.body-4, label %match.case.next-2

match.case.next-2:
	%16 = icmp eq i32 %13, 118
	br i1 %16, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%17 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%18 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %17, i32 %18)
	; ReturnStmt
	ret void

match.case.body-4:
	; prec
	store i64 zeroinitializer, i64* %4
		store i64 3, i64* %4
	; IfStmt
	; SelectorExpr
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 10
	%22 = load i1, i1* %21, align 1
	br i1 %22, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0, i32 2
	%26 = load i64, i64* %25, align 8
	store i64 %26, i64* %4
	br label %if.done-6

if.done-6:
	; buf
	store [386 x i8] zeroinitializer, [386 x i8]* %5
		; str
	store %..string zeroinitializer, %..string* %6
		; SelectorExpr
	; SliceExpr
	%27 = load [386 x i8], [386 x i8]* %5, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$83, i64 0, i32 0), i64 21}, i64 633, i64 34, i64 1, i64 1, i64 386)
	%28 = getelementptr inbounds [386 x i8], [386 x i8]* %5, i64 0, i32 0
	%29 = getelementptr inbounds i8, i8* %28, i64 1
	%30 = sub i64 1, 1
	%31 = sub i64 386, 1
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %7
	%32 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %7, i64 0, i32 0
	store i8* %29, i8** %32
	%33 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %7, i64 0, i32 1
	store i64 %30, i64* %33
	%34 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %7, i64 0, i32 2
	store i64 %31, i64* %34
	%35 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%36 = load double, double* %1, align 8
	%37 = load i64, i64* %4, align 8
	%38 = load i64, i64* %2, align 8
	%39 = call %..string @strconv-34.append_float({i8*, i64, i64} %35, double %36, i8 102, i64 %37, i64 %38)
	store %..string %39, %..string* %6
	; AssignStmt
	; SliceExpr
	%40 = load %..string, %..string* %6, align 8
	%41 = extractvalue %..string %40, 1
	%42 = add i64 %41, 1
	%43 = load [386 x i8], [386 x i8]* %5, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$84, i64 0, i32 0), i64 21}, i64 634, i64 19, i64 0, i64 %42, i64 386)
	%44 = getelementptr inbounds [386 x i8], [386 x i8]* %5, i64 0, i32 0
	%45 = getelementptr inbounds i8, i8* %44, i64 0
	%46 = sub i64 %42, 0
	%47 = sub i64 386, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %8
	%48 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 0
	store i8* %45, i8** %48
	%49 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 1
	store i64 %46, i64* %49
	%50 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 2
	store i64 %47, i64* %50
	%51 = load {i8*, i64, i64}, {i8*, i64, i64}* %8, align 8
	%52 = extractvalue {i8*, i64, i64} %51, 0
	%53 = extractvalue {i8*, i64, i64} %51, 1
	store %..string zeroinitializer, %..string* %9
	%54 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 0
	store i8* %52, i8** %54
	%55 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 1
	store i64 %53, i64* %55
	%56 = load %..string, %..string* %9, align 8
	store %..string %56, %..string* %6
	; IfStmt
	; IndexExpr
	%57 = load %..string, %..string* %6, align 8
	%58 = extractvalue %..string %57, 0
	%59 = extractvalue %..string %57, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$85, i64 0, i32 0), i64 21}, i64 635, i64 10, i64 1, i64 %59)
	%60 = getelementptr inbounds i8, i8* %58, i64 1
	%61 = load i8, i8* %60, align 1
	%62 = icmp eq i8 %61, 43
	br i1 %62, label %if.then-8, label %cmp.or-7

cmp.or-7:
	; IndexExpr
	%63 = load %..string, %..string* %6, align 8
	%64 = extractvalue %..string %63, 0
	%65 = extractvalue %..string %63, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$86, i64 0, i32 0), i64 21}, i64 635, i64 27, i64 1, i64 %65)
	%66 = getelementptr inbounds i8, i8* %64, i64 1
	%67 = load i8, i8* %66, align 1
	%68 = icmp eq i8 %67, 45
	br i1 %68, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	; SliceExpr
	%69 = load %..string, %..string* %6, align 8
	%70 = extractvalue %..string %69, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$87, i64 0, i32 0), i64 21}, i64 636, i64 13, i64 1, i64 %70)
	%71 = extractvalue %..string %69, 0
	%72 = getelementptr inbounds i8, i8* %71, i64 1
	%73 = sub i64 %70, 1
	store %..string zeroinitializer, %..string* %10
	%74 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 0
	store i8* %72, i8** %74
	%75 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 1
	store i64 %73, i64* %75
	%76 = load %..string, %..string* %10, align 8
	store %..string %76, %..string* %6
	br label %if.done-10

if.else-9:
	; AssignStmt
	; IndexExpr
	%77 = load %..string, %..string* %6, align 8
	%78 = extractvalue %..string %77, 0
	%79 = extractvalue %..string %77, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$88, i64 0, i32 0), i64 21}, i64 638, i64 8, i64 0, i64 %79)
	%80 = getelementptr inbounds i8, i8* %78, i64 0
	store i8 43, i8* %80
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	%81 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%82 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %81, i64 0
	%83 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %82, i64 0, i32 6
	%84 = load i1, i1* %83, align 1
	br i1 %84, label %cmp.and-11, label %if.done-14

cmp.and-11:
	; SelectorExpr
	%85 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%86 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %85, i64 0
	%87 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %86, i64 0, i32 5
	%88 = load i1, i1* %87, align 1
	br i1 %88, label %if.done-14, label %cmp.and-12

cmp.and-12:
	; IndexExpr
	%89 = load %..string, %..string* %6, align 8
	%90 = extractvalue %..string %89, 0
	%91 = extractvalue %..string %89, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$89, i64 0, i32 0), i64 21}, i64 641, i64 34, i64 0, i64 %91)
	%92 = getelementptr inbounds i8, i8* %90, i64 0
	%93 = load i8, i8* %92, align 1
	%94 = icmp eq i8 %93, 43
	br i1 %94, label %if.then-13, label %if.done-14

if.then-13:
	; AssignStmt
	; IndexExpr
	%95 = load %..string, %..string* %6, align 8
	%96 = extractvalue %..string %95, 0
	%97 = extractvalue %..string %95, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8a, i64 0, i32 0), i64 21}, i64 642, i64 8, i64 0, i64 %97)
	%98 = getelementptr inbounds i8, i8* %96, i64 0
	store i8 32, i8* %98
	br label %if.done-14

if.done-14:
	; IfStmt
	%99 = load %..string, %..string* %6, align 8
	%100 = extractvalue %..string %99, 1
	%101 = icmp sgt i64 %100, 1
	br i1 %101, label %cmp.and-15, label %if.done-18

cmp.and-15:
	; IndexExpr
	%102 = load %..string, %..string* %6, align 8
	%103 = extractvalue %..string %102, 0
	%104 = extractvalue %..string %102, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8b, i64 0, i32 0), i64 21}, i64 645, i64 26, i64 1, i64 %104)
	%105 = getelementptr inbounds i8, i8* %103, i64 1
	%106 = load i8, i8* %105, align 1
	%107 = icmp eq i8 %106, 78
	br i1 %107, label %cmp.and-16, label %if.done-18

cmp.and-16:
	; IndexExpr
	%108 = load %..string, %..string* %6, align 8
	%109 = extractvalue %..string %108, 0
	%110 = extractvalue %..string %108, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8c, i64 0, i32 0), i64 21}, i64 645, i64 43, i64 1, i64 %110)
	%111 = getelementptr inbounds i8, i8* %109, i64 1
	%112 = load i8, i8* %111, align 1
	%113 = icmp eq i8 %112, 73
	br i1 %113, label %if.then-17, label %if.done-18

if.then-17:
	; SelectorExpr
	%114 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%115 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %114, i64 0
	%116 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %115, i64 0, i32 3
	%117 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %116, align 8
	%118 = load %..string, %..string* %6, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %117, %..string %118)
	; ReturnStmt
	ret void

if.done-18:
	; IfStmt
	; SelectorExpr
	%119 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%120 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %119, i64 0
	%121 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %120, i64 0, i32 5
	%122 = load i1, i1* %121, align 1
	br i1 %122, label %if.then-20, label %cmp.or-19

cmp.or-19:
	; IndexExpr
	%123 = load %..string, %..string* %6, align 8
	%124 = extractvalue %..string %123, 0
	%125 = extractvalue %..string %123, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8d, i64 0, i32 0), i64 21}, i64 650, i64 21, i64 0, i64 %125)
	%126 = getelementptr inbounds i8, i8* %124, i64 0
	%127 = load i8, i8* %126, align 1
	%128 = icmp ne i8 %127, 43
	br i1 %128, label %if.then-20, label %if.else-26

if.then-20:
	; IfStmt
	; SelectorExpr
	%129 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%130 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %129, i64 0
	%131 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %130, i64 0, i32 7
	%132 = load i1, i1* %131, align 1
	br i1 %132, label %cmp.and-21, label %if.else-24

cmp.and-21:
	; SelectorExpr
	%133 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%134 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %133, i64 0
	%135 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %134, i64 0, i32 9
	%136 = load i1, i1* %135, align 1
	br i1 %136, label %cmp.and-22, label %if.else-24

cmp.and-22:
	; SelectorExpr
	%137 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%138 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %137, i64 0
	%139 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %138, i64 0, i32 1
	%140 = load i64, i64* %139, align 8
	%141 = load %..string, %..string* %6, align 8
	%142 = extractvalue %..string %141, 1
	%143 = icmp sgt i64 %140, %142
	br i1 %143, label %if.then-23, label %if.else-24

if.then-23:
	; SelectorExpr
	%144 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%145 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %144, i64 0
	%146 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %145, i64 0, i32 3
	%147 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %146, align 8
	; IndexExpr
	%148 = load %..string, %..string* %6, align 8
	%149 = extractvalue %..string %148, 0
	%150 = extractvalue %..string %148, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8e, i64 0, i32 0), i64 21}, i64 652, i64 28, i64 0, i64 %150)
	%151 = getelementptr inbounds i8, i8* %149, i64 0
	%152 = load i8, i8* %151, align 1
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %147, i8 %152)
	%153 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%154 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%155 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %154, i64 0
	%156 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %155, i64 0, i32 1
	%157 = load i64, i64* %156, align 8
	%158 = load %..string, %..string* %6, align 8
	%159 = extractvalue %..string %158, 1
	%160 = sub i64 %157, %159
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %153, i64 %160)
	; SelectorExpr
	%161 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%162 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %161, i64 0
	%163 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %162, i64 0, i32 3
	%164 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %163, align 8
	; SliceExpr
	%165 = load %..string, %..string* %6, align 8
	%166 = extractvalue %..string %165, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$8f, i64 0, i32 0), i64 21}, i64 654, i64 29, i64 1, i64 %166)
	%167 = extractvalue %..string %165, 0
	%168 = getelementptr inbounds i8, i8* %167, i64 1
	%169 = sub i64 %166, 1
	store %..string zeroinitializer, %..string* %11
	%170 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 0
	store i8* %168, i8** %170
	%171 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 1
	store i64 %169, i64* %171
	%172 = load %..string, %..string* %11, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %164, %..string %172)
	br label %if.done-25

if.else-24:
	%173 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%174 = load %..string, %..string* %6, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %173, %..string %174)
	br label %if.done-25

if.done-25:
	br label %if.done-27

if.else-26:
	%175 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SliceExpr
	%176 = load %..string, %..string* %6, align 8
	%177 = extractvalue %..string %176, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$90, i64 0, i32 0), i64 21}, i64 659, i64 16, i64 1, i64 %177)
	%178 = extractvalue %..string %176, 0
	%179 = getelementptr inbounds i8, i8* %178, i64 1
	%180 = sub i64 %177, 1
	store %..string zeroinitializer, %..string* %12
	%181 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 0
	store i8* %179, i8** %181
	%182 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 1
	store i64 %180, i64* %182
	%183 = load %..string, %..string* %12, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %175, %..string %183)
	br label %if.done-27

if.done-27:
	br label %match.done-28

match.done-28:
	ret void
}

define void @fmt-4.fmt_string(%fmt-4.Fmt_Info* %fi, %..string %s, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %s, %..string* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; MatchStmt
	%7 = load i32, i32* %2, align 4
	%8 = icmp eq i32 %7, 115
	br i1 %8, label %match.case.body-3, label %match.case.next-1

match.case.next-1:
	%9 = icmp eq i32 %7, 118
	br i1 %9, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%10 = icmp eq i32 %7, 120
	br i1 %10, label %match.fall.body-6, label %match.case.next-4

match.case.body-3:
	; SelectorExpr
	%11 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%12 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %11, i64 0
	%13 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %12, i64 0, i32 3
	%14 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %13, align 8
	%15 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %14, %..string %15)
	br label %match.done-16

match.case.next-4:
	%16 = icmp eq i32 %7, 88
	br i1 %16, label %match.fall.body-6, label %match.case.next-5

match.case.next-5:
	%17 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%18 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %17, i32 %18)
	br label %match.done-16

match.fall.body-6:
	; space
	store i1 zeroinitializer, i1* %3
		; SelectorExpr
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 6
	%22 = load i1, i1* %21, align 1
	store i1 %22, i1* %3
	; AssignStmt
	; SelectorExpr
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0, i32 6
	store i1 false, i1* %25
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %4
		store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	br label %for.interval.loop-7

for.interval.loop-7:
	%26 = load %..string, %..string* %1, align 8
	%27 = extractvalue %..string %26, 1
	%28 = load i64, i64* %5, align 8
	%29 = icmp slt i64 %28, %27
	br i1 %29, label %for.interval.body-8, label %for.interval.done-15

for.interval.body-8:
	%30 = load i64, i64* %5, align 8
	%31 = load i64, i64* %6, align 8
	%32 = load i64, i64* %5, align 8
	%33 = add i64 %32, 1
	store i64 %33, i64* %5
	%34 = load i64, i64* %6, align 8
	%35 = add i64 %34, 1
	store i64 %35, i64* %6
	store i64 %30, i64* %4
	; IfStmt
	%36 = load i64, i64* %4, align 8
	%37 = icmp sgt i64 %36, 0
	br i1 %37, label %cmp.and-9, label %if.done-11

cmp.and-9:
	%38 = load i1, i1* %3, align 1
	br i1 %38, label %if.then-10, label %if.done-11

if.then-10:
	; SelectorExpr
	%39 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%40 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0
	%41 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %40, i64 0, i32 3
	%42 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %41, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %42, i8 32)
	br label %if.done-11

if.done-11:
	%43 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; IndexExpr
	%44 = load %..string, %..string* %1, align 8
	%45 = extractvalue %..string %44, 0
	%46 = extractvalue %..string %44, 1
	%47 = load i64, i64* %4, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$91, i64 0, i32 0), i64 21}, i64 681, i64 25, i64 %47, i64 %46)
	%48 = getelementptr inbounds i8, i8* %45, i64 %47
	%49 = load i8, i8* %48, align 1
	%50 = zext i8 %49 to i64
	; TernaryExpr
	%51 = load i32, i32* %2, align 4
	%52 = icmp eq i32 %51, 120
	br i1 %52, label %if.then-12, label %if.else-13

if.then-12:
	%53 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	br label %if.done-14

if.else-13:
	%54 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	br label %if.done-14

if.done-14:
	%55 = phi %..string [ %53, %if.then-12 ], [ %54, %if.else-13 ]
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %43, i64 %50, i64 16, i1 false, i64 8, %..string %55)
	br label %for.interval.loop-7

for.interval.done-15:
	; defer
	; AssignStmt
	; SelectorExpr
	%56 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%57 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %56, i64 0
	%58 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %57, i64 0, i32 6
	%59 = load i1, i1* %3, align 1
	store i1 %59, i1* %58
	br label %match.done-16

match.done-16:
	ret void
}

define void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %fi, %..rawptr %p, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i32, align 4
	%3 = alloca i64, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %p, %..rawptr* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; MatchStmt
	%4 = load i32, i32* %2, align 4
	%5 = icmp eq i32 %4, 112
	br i1 %5, label %match.case.body-3, label %match.case.next-1

match.case.next-1:
	%6 = icmp eq i32 %4, 118
	br i1 %6, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%7 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%8 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %7, i32 %8)
	; ReturnStmt
	ret void

match.case.body-3:
	br label %match.done-4

match.done-4:
	; u
	store i64 zeroinitializer, i64* %3
		%9 = load %..rawptr, %..rawptr* %1, align 8
	%10 = ptrtoint %..rawptr %9 to i64
	%11 = bitcast i64 %10 to i64
	store i64 %11, i64* %3
	; IfStmt
	; SelectorExpr
	%12 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%13 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %12, i64 0
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0, i32 8
	%15 = load i1, i1* %14, align 1
	br i1 %15, label %cmp.or-5, label %if.then-6

cmp.or-5:
	%16 = load i32, i32* %2, align 4
	%17 = icmp eq i32 %16, 118
	br i1 %17, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%18 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%19 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %18, i64 0
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0, i32 3
	%21 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %20, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %21, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$92, i64 0, i32 0), i64 2})
	br label %if.done-7

if.done-7:
	%22 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%23 = load i64, i64* %3, align 8
	%24 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	call void @fmt-4._write_int(%fmt-4.Fmt_Info* %22, i64 %23, i64 16, i1 false, i64 64, %..string %24)
	ret void
}

define void @fmt-4.fmt_enum(%fmt-4.Fmt_Info* %fi, %..any %v, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info.Enum*, align 8
	%4 = alloca %..any, align 8
	%5 = alloca i64, align 8
	%6 = alloca double, align 8
	%7 = alloca i1, align 1
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca i8, align 1
	%11 = alloca i16, align 2
	%12 = alloca i32, align 4
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i8, align 1
	%16 = alloca i16, align 2
	%17 = alloca i32, align 4
	%18 = alloca i64, align 8
	%19 = alloca i64, align 8
	%20 = alloca float, align 4
	%21 = alloca double, align 8
	%22 = alloca {[0 x <8 x i8>], [8 x i8]}, align 8
	%23 = alloca i64, align 8
	%24 = alloca i64, align 8
	%25 = alloca i64, align 8
	%26 = alloca {[0 x <8 x i8>], [8 x i8]}, align 8
	%27 = alloca i64, align 8
	%28 = alloca i64, align 8
	%29 = alloca i64, align 8
	%30 = alloca %Type_Info*, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..any zeroinitializer, %..any* %1
		store %..any %v, %..any* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; IfStmt
	; SelectorExpr
	%31 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%32 = load %Type_Info*, %Type_Info** %31, align 8
	%33 = icmp eq %Type_Info* %32, zeroinitializer
	br i1 %33, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%34 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%35 = load %..rawptr, %..rawptr* %34, align 8
	%36 = icmp eq %..rawptr %35, zeroinitializer
	br i1 %36, label %if.then-2, label %if.done-3

if.then-2:
	; SelectorExpr
	%37 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%38 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %37, i64 0
	%39 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %38, i64 0, i32 3
	%40 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %39, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %40, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$93, i64 0, i32 0), i64 5})
	; ReturnStmt
	ret void

if.done-3:
	; TypeMatchStmt
	; SelectorExpr
	%41 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%42 = load %Type_Info*, %Type_Info** %41, align 8
	; get union's tag
	%43 = getelementptr inbounds %Type_Info, %Type_Info* %42, i64 0, i32 4 ; UnionTagPtr
	%44 = load i64, i64* %43, align 8
	%45 = bitcast %Type_Info* %42 to %..rawptr
	%46 = icmp eq i64 %44, 20
	br i1 %46, label %typematch.body-5, label %typematch.next-4

typematch.next-4:
	store %Type_Info* zeroinitializer, %Type_Info** %30
	store %Type_Info* %42, %Type_Info** %30
	%47 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%48 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %47, i32 %48)
	; ReturnStmt
	ret void

typematch.body-5:
	%49 = bitcast %..rawptr %45 to %Type_Info.Enum*
	store %Type_Info.Enum* zeroinitializer, %Type_Info.Enum** %3
	store %Type_Info.Enum* %49, %Type_Info.Enum** %3
	; MatchStmt
	%50 = load i32, i32* %2, align 4
	%51 = icmp eq i32 %50, 100
	br i1 %51, label %match.case.body-8, label %match.case.next-6

match.case.next-6:
	%52 = icmp eq i32 %50, 102
	br i1 %52, label %match.case.body-8, label %match.case.next-7

match.case.next-7:
	%53 = icmp eq i32 %50, 115
	br i1 %53, label %match.fall.body-11, label %match.case.next-9

match.case.body-8:
	%54 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %4
	store %..any zeroinitializer, %..any* %4
	; SelectorExpr
	%55 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%56 = load %..rawptr, %..rawptr* %55, align 8
	%57 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %56, %..rawptr* %57
	; SelectorExpr
	%58 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%59 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %58, i64 0
	%60 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %59, i64 0, i32 2
	%61 = load %Type_Info*, %Type_Info** %60, align 8
	%62 = call %Type_Info* @type_info_base(%Type_Info* %61)
	%63 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %62, %Type_Info** %63
	%64 = load %..any, %..any* %4, align 8
	%65 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %54, %..any %64, i32 %65)
	br label %match.done-55

match.case.next-9:
	%66 = icmp eq i32 %50, 118
	br i1 %66, label %match.fall.body-11, label %match.case.next-10

match.case.next-10:
	%67 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%68 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %67, i32 %68)
	; ReturnStmt
	ret void

match.fall.body-11:
	; i
	store i64 zeroinitializer, i64* %5
		; f
	store double zeroinitializer, double* %6
		; ok
	store i1 zeroinitializer, i1* %7
		store i1 false, i1* %7
	; a
	store %..any zeroinitializer, %..any* %8
		; CompoundLit
	store %..any zeroinitializer, %..any* %9
	store %..any zeroinitializer, %..any* %9
	; SelectorExpr
	%69 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%70 = load %..rawptr, %..rawptr* %69, align 8
	%71 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %70, %..rawptr* %71
	; SelectorExpr
	%72 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%73 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %72, i64 0
	%74 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %73, i64 0, i32 2
	%75 = load %Type_Info*, %Type_Info** %74, align 8
	%76 = call %Type_Info* @type_info_base(%Type_Info* %75)
	%77 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %76, %Type_Info** %77
	%78 = load %..any, %..any* %9, align 8
	store %..any %78, %..any* %8
	; TypeMatchStmt
	%79 = load %..any, %..any* %8, align 8
	%80 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%81 = load %Type_Info*, %Type_Info** %80, align 8
	%82 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%83 = icmp eq %Type_Info* %81, %82
	br i1 %83, label %typematch.body-13, label %typematch.next-12

typematch.next-12:
	%84 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%85 = load %Type_Info*, %Type_Info** %84, align 8
	%86 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%87 = icmp eq %Type_Info* %85, %86
	br i1 %87, label %typematch.body-15, label %typematch.next-14

typematch.body-13:
	%88 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%89 = load %..rawptr, %..rawptr* %88, align 8
	%90 = bitcast %..rawptr %89 to i8*
	%91 = load i8, i8* %90, align 1
	store i8 zeroinitializer, i8* %10
	store i8 %91, i8* %10
	; AssignStmt
	%92 = load i8, i8* %10, align 1
	%93 = sext i8 %92 to i64
	store i64 %93, i64* %5
	br label %typematch.done-36

typematch.next-14:
	%94 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%95 = load %Type_Info*, %Type_Info** %94, align 8
	%96 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%97 = icmp eq %Type_Info* %95, %96
	br i1 %97, label %typematch.body-17, label %typematch.next-16

typematch.body-15:
	%98 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%99 = load %..rawptr, %..rawptr* %98, align 8
	%100 = bitcast %..rawptr %99 to i16*
	%101 = load i16, i16* %100, align 2
	store i16 zeroinitializer, i16* %11
	store i16 %101, i16* %11
	; AssignStmt
	%102 = load i16, i16* %11, align 2
	%103 = sext i16 %102 to i64
	store i64 %103, i64* %5
	br label %typematch.done-36

typematch.next-16:
	%104 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%105 = load %Type_Info*, %Type_Info** %104, align 8
	%106 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%107 = icmp eq %Type_Info* %105, %106
	br i1 %107, label %typematch.body-19, label %typematch.next-18

typematch.body-17:
	%108 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%109 = load %..rawptr, %..rawptr* %108, align 8
	%110 = bitcast %..rawptr %109 to i32*
	%111 = load i32, i32* %110, align 4
	store i32 zeroinitializer, i32* %12
	store i32 %111, i32* %12
	; AssignStmt
	%112 = load i32, i32* %12, align 4
	%113 = sext i32 %112 to i64
	store i64 %113, i64* %5
	br label %typematch.done-36

typematch.next-18:
	%114 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%115 = load %Type_Info*, %Type_Info** %114, align 8
	%116 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%117 = icmp eq %Type_Info* %115, %116
	br i1 %117, label %typematch.body-21, label %typematch.next-20

typematch.body-19:
	%118 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%119 = load %..rawptr, %..rawptr* %118, align 8
	%120 = bitcast %..rawptr %119 to i64*
	%121 = load i64, i64* %120, align 8
	store i64 zeroinitializer, i64* %13
	store i64 %121, i64* %13
	; AssignStmt
	%122 = load i64, i64* %13, align 8
	store i64 %122, i64* %5
	br label %typematch.done-36

typematch.next-20:
	%123 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%124 = load %Type_Info*, %Type_Info** %123, align 8
	%125 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%126 = icmp eq %Type_Info* %124, %125
	br i1 %126, label %typematch.body-23, label %typematch.next-22

typematch.body-21:
	%127 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%128 = load %..rawptr, %..rawptr* %127, align 8
	%129 = bitcast %..rawptr %128 to i64*
	%130 = load i64, i64* %129, align 8
	store i64 zeroinitializer, i64* %14
	store i64 %130, i64* %14
	; AssignStmt
	%131 = load i64, i64* %14, align 8
	%132 = bitcast i64 %131 to i64
	store i64 %132, i64* %5
	br label %typematch.done-36

typematch.next-22:
	%133 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%134 = load %Type_Info*, %Type_Info** %133, align 8
	%135 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%136 = icmp eq %Type_Info* %134, %135
	br i1 %136, label %typematch.body-25, label %typematch.next-24

typematch.body-23:
	%137 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%138 = load %..rawptr, %..rawptr* %137, align 8
	%139 = bitcast %..rawptr %138 to i8*
	%140 = load i8, i8* %139, align 1
	store i8 zeroinitializer, i8* %15
	store i8 %140, i8* %15
	; AssignStmt
	%141 = load i8, i8* %15, align 1
	%142 = zext i8 %141 to i64
	store i64 %142, i64* %5
	br label %typematch.done-36

typematch.next-24:
	%143 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%144 = load %Type_Info*, %Type_Info** %143, align 8
	%145 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%146 = icmp eq %Type_Info* %144, %145
	br i1 %146, label %typematch.body-27, label %typematch.next-26

typematch.body-25:
	%147 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%148 = load %..rawptr, %..rawptr* %147, align 8
	%149 = bitcast %..rawptr %148 to i16*
	%150 = load i16, i16* %149, align 2
	store i16 zeroinitializer, i16* %16
	store i16 %150, i16* %16
	; AssignStmt
	%151 = load i16, i16* %16, align 2
	%152 = zext i16 %151 to i64
	store i64 %152, i64* %5
	br label %typematch.done-36

typematch.next-26:
	%153 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%154 = load %Type_Info*, %Type_Info** %153, align 8
	%155 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%156 = icmp eq %Type_Info* %154, %155
	br i1 %156, label %typematch.body-29, label %typematch.next-28

typematch.body-27:
	%157 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%158 = load %..rawptr, %..rawptr* %157, align 8
	%159 = bitcast %..rawptr %158 to i32*
	%160 = load i32, i32* %159, align 4
	store i32 zeroinitializer, i32* %17
	store i32 %160, i32* %17
	; AssignStmt
	%161 = load i32, i32* %17, align 4
	%162 = zext i32 %161 to i64
	store i64 %162, i64* %5
	br label %typematch.done-36

typematch.next-28:
	%163 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%164 = load %Type_Info*, %Type_Info** %163, align 8
	%165 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%166 = icmp eq %Type_Info* %164, %165
	br i1 %166, label %typematch.body-31, label %typematch.next-30

typematch.body-29:
	%167 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%168 = load %..rawptr, %..rawptr* %167, align 8
	%169 = bitcast %..rawptr %168 to i64*
	%170 = load i64, i64* %169, align 8
	store i64 zeroinitializer, i64* %18
	store i64 %170, i64* %18
	; AssignStmt
	%171 = load i64, i64* %18, align 8
	%172 = bitcast i64 %171 to i64
	store i64 %172, i64* %5
	br label %typematch.done-36

typematch.next-30:
	%173 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%174 = load %Type_Info*, %Type_Info** %173, align 8
	%175 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%176 = icmp eq %Type_Info* %174, %175
	br i1 %176, label %typematch.body-33, label %typematch.next-32

typematch.body-31:
	%177 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%178 = load %..rawptr, %..rawptr* %177, align 8
	%179 = bitcast %..rawptr %178 to i64*
	%180 = load i64, i64* %179, align 8
	store i64 zeroinitializer, i64* %19
	store i64 %180, i64* %19
	; AssignStmt
	%181 = load i64, i64* %19, align 8
	%182 = bitcast i64 %181 to i64
	store i64 %182, i64* %5
	br label %typematch.done-36

typematch.next-32:
	%183 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	%184 = load %Type_Info*, %Type_Info** %183, align 8
	%185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%186 = icmp eq %Type_Info* %184, %185
	br i1 %186, label %typematch.body-35, label %typematch.next-34

typematch.body-33:
	%187 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%188 = load %..rawptr, %..rawptr* %187, align 8
	%189 = bitcast %..rawptr %188 to float*
	%190 = load float, float* %189, align 4
	store float zeroinitializer, float* %20
	store float %190, float* %20
	; AssignStmt
	%191 = load float, float* %20, align 4
	%192 = fpext float %191 to double
	store double %192, double* %6
	; AssignStmt
	%193 = load double, double* %6, align 8
	%194 = bitcast double %193 to i64
	store i64 %194, i64* %5
	br label %typematch.done-36

typematch.next-34:
	br label %typematch.done-36

typematch.body-35:
	%195 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	%196 = load %..rawptr, %..rawptr* %195, align 8
	%197 = bitcast %..rawptr %196 to double*
	%198 = load double, double* %197, align 8
	store double zeroinitializer, double* %21
	store double %198, double* %21
	; AssignStmt
	%199 = load double, double* %21, align 8
	store double %199, double* %6
	; AssignStmt
	%200 = load double, double* %6, align 8
	%201 = bitcast double %200 to i64
	store i64 %201, i64* %5
	br label %typematch.done-36

typematch.done-36:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%202 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%203 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %202, i64 0
	%204 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %203, i64 0, i32 2
	%205 = load %Type_Info*, %Type_Info** %204, align 8
	%206 = call i1 @types-33.is_string(%Type_Info* %205)
	br i1 %206, label %if.then-37, label %if.else-43

if.then-37:
	; RangeStmt
	; val
	store {[0 x <8 x i8>], [8 x i8]} zeroinitializer, {[0 x <8 x i8>], [8 x i8]}* %22
		; idx
	store i64 zeroinitializer, i64* %23
		; SelectorExpr
	%207 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%208 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %207, i64 0
	%209 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %208, i64 0, i32 4
	%210 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %209, align 8
	store i64 zeroinitializer, i64* %24
	%211 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %210, 1
	store i64 %211, i64* %24
	store i64 zeroinitializer, i64* %25
	store i64 -1, i64* %25
	br label %for.index.loop-38

for.index.loop-38:
	%212 = load i64, i64* %25, align 8
	%213 = add i64 %212, 1
	store i64 %213, i64* %25
	%214 = load i64, i64* %24, align 8
	%215 = icmp slt i64 %213, %214
	br i1 %215, label %for.index.body-39, label %for.index.done-42

for.index.body-39:
	%216 = load i64, i64* %25, align 8
	%217 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %210, 0
	%218 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %217, i64 %216
	%219 = load {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %218, align 8
	store {[0 x <8 x i8>], [8 x i8]} %219, {[0 x <8 x i8>], [8 x i8]}* %22
	store i64 %216, i64* %23
	; IfStmt
	; SelectorExpr
	%220 = bitcast {[0 x <8 x i8>], [8 x i8]}* %22 to i64*
	%221 = load i64, i64* %220, align 8
	%222 = load i64, i64* %5, align 8
	%223 = icmp eq i64 %221, %222
	br i1 %223, label %if.then-40, label %if.done-41

if.then-40:
	; SelectorExpr
	%224 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%225 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %224, i64 0
	%226 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %225, i64 0, i32 3
	%227 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %226, align 8
	; IndexExpr
	; SelectorExpr
	%228 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%229 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %228, i64 0
	%230 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %229, i64 0, i32 3
	%231 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %230, align 8
	%232 = extractvalue {%..string*, i64, i64} %231, 0
	%233 = extractvalue {%..string*, i64, i64} %231, 1
	%234 = load i64, i64* %23, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$94, i64 0, i32 0), i64 21}, i64 742, i64 36, i64 %234, i64 %233)
	%235 = getelementptr inbounds %..string, %..string* %232, i64 %234
	%236 = load %..string, %..string* %235, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %227, %..string %236)
	; AssignStmt
	store i1 true, i1* %7
	; break
	br label %for.index.done-42

if.done-41:
	br label %for.index.loop-38

for.index.done-42:
	br label %if.done-52

if.else-43:
	; IfStmt
	; SelectorExpr
	%237 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%238 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %237, i64 0
	%239 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %238, i64 0, i32 4
	%240 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %239, align 8
	%241 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %240, 1
	%242 = icmp eq i64 %241, 0
	br i1 %242, label %if.then-44, label %if.else-45

if.then-44:
	; SelectorExpr
	%243 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%244 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %243, i64 0
	%245 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %244, i64 0, i32 3
	%246 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %245, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %246, %..string zeroinitializer)
	; AssignStmt
	store i1 true, i1* %7
	br label %if.done-51

if.else-45:
	; RangeStmt
	; val
	store {[0 x <8 x i8>], [8 x i8]} zeroinitializer, {[0 x <8 x i8>], [8 x i8]}* %26
		; idx
	store i64 zeroinitializer, i64* %27
		; SelectorExpr
	%247 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%248 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %247, i64 0
	%249 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %248, i64 0, i32 4
	%250 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %249, align 8
	store i64 zeroinitializer, i64* %28
	%251 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %250, 1
	store i64 %251, i64* %28
	store i64 zeroinitializer, i64* %29
	store i64 -1, i64* %29
	br label %for.index.loop-46

for.index.loop-46:
	%252 = load i64, i64* %29, align 8
	%253 = add i64 %252, 1
	store i64 %253, i64* %29
	%254 = load i64, i64* %28, align 8
	%255 = icmp slt i64 %253, %254
	br i1 %255, label %for.index.body-47, label %for.index.done-50

for.index.body-47:
	%256 = load i64, i64* %29, align 8
	%257 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %250, 0
	%258 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %257, i64 %256
	%259 = load {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %258, align 8
	store {[0 x <8 x i8>], [8 x i8]} %259, {[0 x <8 x i8>], [8 x i8]}* %26
	store i64 %256, i64* %27
	; IfStmt
	; SelectorExpr
	%260 = bitcast {[0 x <8 x i8>], [8 x i8]}* %26 to i64*
	%261 = load i64, i64* %260, align 8
	%262 = load i64, i64* %5, align 8
	%263 = icmp eq i64 %261, %262
	br i1 %263, label %if.then-48, label %if.done-49

if.then-48:
	; SelectorExpr
	%264 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%265 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %264, i64 0
	%266 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %265, i64 0, i32 3
	%267 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %266, align 8
	; IndexExpr
	; SelectorExpr
	%268 = load %Type_Info.Enum*, %Type_Info.Enum** %3, align 8
	%269 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %268, i64 0
	%270 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %269, i64 0, i32 3
	%271 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %270, align 8
	%272 = extractvalue {%..string*, i64, i64} %271, 0
	%273 = extractvalue {%..string*, i64, i64} %271, 1
	%274 = load i64, i64* %27, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$95, i64 0, i32 0), i64 21}, i64 753, i64 36, i64 %274, i64 %273)
	%275 = getelementptr inbounds %..string, %..string* %272, i64 %274
	%276 = load %..string, %..string* %275, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %267, %..string %276)
	; AssignStmt
	store i1 true, i1* %7
	; break
	br label %for.index.done-50

if.done-49:
	br label %for.index.loop-46

for.index.done-50:
	br label %if.done-51

if.done-51:
	br label %if.done-52

if.done-52:
	; IfStmt
	%277 = load i1, i1* %7, align 1
	br i1 %277, label %if.done-54, label %if.then-53

if.then-53:
	; SelectorExpr
	%278 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%279 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %278, i64 0
	%280 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %279, i64 0, i32 3
	%281 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %280, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %281, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$96, i64 0, i32 0), i64 18})
	br label %if.done-54

if.done-54:
	br label %match.done-55

match.done-55:
	br label %typematch.done-56

typematch.done-56:
	ret void
}

define void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %fi, %..any %v, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info.Named*, align 8
	%4 = alloca %Type_Info.Struct*, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i8*, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %Type_Info*, align 8
	%11 = alloca %..any, align 8
	%12 = alloca %Type_Info.Boolean*, align 8
	%13 = alloca %Type_Info.Integer*, align 8
	%14 = alloca %Type_Info.Float*, align 8
	%15 = alloca %Type_Info.Complex*, align 8
	%16 = alloca %Type_Info.Quaternion*, align 8
	%17 = alloca %Type_Info.String*, align 8
	%18 = alloca %Type_Info.Pointer*, align 8
	%19 = alloca %Type_Info.Atomic*, align 8
	%20 = alloca %..any, align 8
	%21 = alloca %Type_Info.Array*, align 8
	%22 = alloca i64, align 8
	%23 = alloca i64, align 8
	%24 = alloca i64, align 8
	%25 = alloca i8*, align 8
	%26 = alloca %..any, align 8
	%27 = alloca %Type_Info.Dynamic_Array*, align 8
	%28 = alloca %raw-6.Dynamic_Array*, align 8
	%29 = alloca i64, align 8
	%30 = alloca i64, align 8
	%31 = alloca i64, align 8
	%32 = alloca i8*, align 8
	%33 = alloca %..any, align 8
	%34 = alloca %Type_Info.Slice*, align 8
	%35 = alloca {i8*, i64, i64}*, align 8
	%36 = alloca i64, align 8
	%37 = alloca i64, align 8
	%38 = alloca i8*, align 8
	%39 = alloca %..any, align 8
	%40 = alloca %Type_Info.Vector*, align 8
	%41 = alloca i64, align 8
	%42 = alloca i64, align 8
	%43 = alloca i64, align 8
	%44 = alloca i8*, align 8
	%45 = alloca %..any, align 8
	%46 = alloca %Type_Info.Map*, align 8
	%47 = alloca %raw-6.Dynamic_Array*, align 8
	%48 = alloca %raw-6.Dynamic_Map*, align 8
	%49 = alloca %Type_Info.Struct*, align 8
	%50 = alloca {%Type_Info.Struct*, i1}, align 8
	%51 = alloca %Type_Info.Dynamic_Array*, align 8
	%52 = alloca {%Type_Info.Dynamic_Array*, i1}, align 8
	%53 = alloca %Type_Info.Struct*, align 8
	%54 = alloca {%Type_Info.Struct*, i1}, align 8
	%55 = alloca i64, align 8
	%56 = alloca i64, align 8
	%57 = alloca i64, align 8
	%58 = alloca i64, align 8
	%59 = alloca i8*, align 8
	%60 = alloca %__Map_Entry_Header*, align 8
	%61 = alloca %fmt-4.Fmt_Info, align 8
	%62 = alloca %fmt-4.Fmt_Info, align 8
	%63 = alloca %..any, align 8
	%64 = alloca i8*, align 8
	%65 = alloca %..any, align 8
	%66 = alloca %Type_Info.Struct*, align 8
	%67 = alloca i64, align 8
	%68 = alloca i64, align 8
	%69 = alloca i64, align 8
	%70 = alloca i8*, align 8
	%71 = alloca %..any, align 8
	%72 = alloca %Type_Info.Union*, align 8
	%73 = alloca {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, align 8
	%74 = alloca i64, align 8
	%75 = alloca i64, align 8
	%76 = alloca i64, align 8
	%77 = alloca i8*, align 8
	%78 = alloca %..any, align 8
	%79 = alloca %Type_Info.Raw_Union*, align 8
	%80 = alloca %Type_Info.Enum*, align 8
	%81 = alloca %Type_Info.Procedure*, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..any zeroinitializer, %..any* %1
		store %..any %v, %..any* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; IfStmt
	; SelectorExpr
	%82 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%83 = load %..rawptr, %..rawptr* %82, align 8
	%84 = icmp eq %..rawptr %83, zeroinitializer
	br i1 %84, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%85 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%86 = load %Type_Info*, %Type_Info** %85, align 8
	%87 = icmp eq %Type_Info* %86, zeroinitializer
	br i1 %87, label %if.then-2, label %if.done-3

if.then-2:
	; SelectorExpr
	%88 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%89 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %88, i64 0
	%90 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %89, i64 0, i32 3
	%91 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %90, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %91, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$97, i64 0, i32 0), i64 5})
	; ReturnStmt
	ret void

if.done-3:
	; TypeMatchStmt
	; SelectorExpr
	%92 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%93 = load %Type_Info*, %Type_Info** %92, align 8
	; get union's tag
	%94 = getelementptr inbounds %Type_Info, %Type_Info* %93, i64 0, i32 4 ; UnionTagPtr
	%95 = load i64, i64* %94, align 8
	%96 = bitcast %Type_Info* %93 to %..rawptr
	%97 = icmp eq i64 %95, 1
	br i1 %97, label %typematch.body-5, label %typematch.next-4

typematch.next-4:
	%98 = icmp eq i64 %95, 7
	br i1 %98, label %typematch.body-17, label %typematch.next-16

typematch.body-5:
	%99 = bitcast %..rawptr %96 to %Type_Info.Named*
	store %Type_Info.Named* zeroinitializer, %Type_Info.Named** %3
	store %Type_Info.Named* %99, %Type_Info.Named** %3
	; TypeMatchStmt
	; SelectorExpr
	%100 = load %Type_Info.Named*, %Type_Info.Named** %3, align 8
	%101 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %100, i64 0
	%102 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %101, i64 0, i32 3
	%103 = load %Type_Info*, %Type_Info** %102, align 8
	; get union's tag
	%104 = getelementptr inbounds %Type_Info, %Type_Info* %103, i64 0, i32 4 ; UnionTagPtr
	%105 = load i64, i64* %104, align 8
	%106 = bitcast %Type_Info* %103 to %..rawptr
	%107 = icmp eq i64 %105, 17
	br i1 %107, label %typematch.body-7, label %typematch.next-6

typematch.next-6:
	store %Type_Info* zeroinitializer, %Type_Info** %10
	store %Type_Info* %103, %Type_Info** %10
	%108 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %11
	store %..any zeroinitializer, %..any* %11
	; SelectorExpr
	%109 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%110 = load %..rawptr, %..rawptr* %109, align 8
	%111 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %110, %..rawptr* %111
	; SelectorExpr
	%112 = load %Type_Info.Named*, %Type_Info.Named** %3, align 8
	%113 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %112, i64 0
	%114 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %113, i64 0, i32 3
	%115 = load %Type_Info*, %Type_Info** %114, align 8
	%116 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %115, %Type_Info** %116
	%117 = load %..any, %..any* %11, align 8
	%118 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %108, %..any %117, i32 %118)
	br label %typematch.done-15

typematch.body-7:
	%119 = bitcast %..rawptr %106 to %Type_Info.Struct*
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %4
	store %Type_Info.Struct* %119, %Type_Info.Struct** %4
	; IfStmt
	%120 = load i32, i32* %2, align 4
	%121 = icmp ne i32 %120, 118
	br i1 %121, label %if.then-8, label %if.done-9

if.then-8:
	%122 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%123 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %122, i32 %123)
	; ReturnStmt
	ret void

if.done-9:
	; SelectorExpr
	%124 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%125 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %124, i64 0
	%126 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %125, i64 0, i32 3
	%127 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %126, align 8
	; SelectorExpr
	%128 = load %Type_Info.Named*, %Type_Info.Named** %3, align 8
	%129 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %128, i64 0
	%130 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %129, i64 0, i32 2
	%131 = load %..string, %..string* %130, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %127, %..string %131)
	; SelectorExpr
	%132 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%133 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %132, i64 0
	%134 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %133, i64 0, i32 3
	%135 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %134, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %135, i8 123)
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %5
		; SelectorExpr
	%136 = load %Type_Info.Struct*, %Type_Info.Struct** %4, align 8
	%137 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %136, i64 0
	%138 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %137, i64 0, i32 2
	%139 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %138, i64 0, i32 1
	%140 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %139, align 8
	store i64 zeroinitializer, i64* %6
	%141 = extractvalue {%..string*, i64, i64} %140, 1
	store i64 %141, i64* %6
	store i64 zeroinitializer, i64* %7
	store i64 -1, i64* %7
	br label %for.index.loop-10

for.index.loop-10:
	%142 = load i64, i64* %7, align 8
	%143 = add i64 %142, 1
	store i64 %143, i64* %7
	%144 = load i64, i64* %6, align 8
	%145 = icmp slt i64 %143, %144
	br i1 %145, label %for.index.body-11, label %for.index.done-14

for.index.body-11:
	%146 = load i64, i64* %7, align 8
	store i64 %146, i64* %5
	; IfStmt
	%147 = load i64, i64* %5, align 8
	%148 = icmp sgt i64 %147, 0
	br i1 %148, label %if.then-12, label %if.done-13

if.then-12:
	; SelectorExpr
	%149 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%150 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %149, i64 0
	%151 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %150, i64 0, i32 3
	%152 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %151, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %152, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$98, i64 0, i32 0), i64 2})
	br label %if.done-13

if.done-13:
	; SelectorExpr
	%153 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%154 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %153, i64 0
	%155 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %154, i64 0, i32 3
	%156 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %155, align 8
	; IndexExpr
	; SelectorExpr
	%157 = load %Type_Info.Struct*, %Type_Info.Struct** %4, align 8
	%158 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %157, i64 0
	%159 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %158, i64 0, i32 2
	%160 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %159, i64 0, i32 1
	%161 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %160, align 8
	%162 = extractvalue {%..string*, i64, i64} %161, 0
	%163 = extractvalue {%..string*, i64, i64} %161, 1
	%164 = load i64, i64* %5, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$99, i64 0, i32 0), i64 21}, i64 792, i64 34, i64 %164, i64 %163)
	%165 = getelementptr inbounds %..string, %..string* %162, i64 %164
	%166 = load %..string, %..string* %165, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %156, %..string %166)
	; SelectorExpr
	%167 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%168 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %167, i64 0
	%169 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %168, i64 0, i32 3
	%170 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %169, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %170, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$9a, i64 0, i32 0), i64 3})
	; data
	store i8* zeroinitializer, i8** %8
		; SelectorExpr
	%171 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%172 = load %..rawptr, %..rawptr* %171, align 8
	%173 = bitcast %..rawptr %172 to i8*
	; IndexExpr
	; SelectorExpr
	%174 = load %Type_Info.Struct*, %Type_Info.Struct** %4, align 8
	%175 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %174, i64 0
	%176 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %175, i64 0, i32 2
	%177 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %176, i64 0, i32 2
	%178 = load {i64*, i64, i64}, {i64*, i64, i64}* %177, align 8
	%179 = extractvalue {i64*, i64, i64} %178, 0
	%180 = extractvalue {i64*, i64, i64} %178, 1
	%181 = load i64, i64* %5, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$9b, i64 0, i32 0), i64 21}, i64 794, i64 39, i64 %181, i64 %180)
	%182 = getelementptr inbounds i64, i64* %179, i64 %181
	%183 = load i64, i64* %182, align 8
	%184 = getelementptr inbounds i8, i8* %173, i64 %183
	store i8* %184, i8** %8
	%185 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %9
	store %..any zeroinitializer, %..any* %9
	%186 = load i8*, i8** %8, align 8
	%187 = bitcast i8* %186 to %..rawptr
	%188 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %187, %..rawptr* %188
	; IndexExpr
	; SelectorExpr
	%189 = load %Type_Info.Struct*, %Type_Info.Struct** %4, align 8
	%190 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %189, i64 0
	%191 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %190, i64 0, i32 2
	%192 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %191, i64 0, i32 0
	%193 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %192, align 8
	%194 = extractvalue {%Type_Info**, i64, i64} %193, 0
	%195 = extractvalue {%Type_Info**, i64, i64} %193, 1
	%196 = load i64, i64* %5, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$9c, i64 0, i32 0), i64 21}, i64 795, i64 43, i64 %196, i64 %195)
	%197 = getelementptr inbounds %Type_Info*, %Type_Info** %194, i64 %196
	%198 = load %Type_Info*, %Type_Info** %197, align 8
	%199 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %198, %Type_Info** %199
	%200 = load %..any, %..any* %9, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %185, %..any %200, i32 118)
	br label %for.index.loop-10

for.index.done-14:
	; SelectorExpr
	%201 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%202 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %201, i64 0
	%203 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %202, i64 0, i32 3
	%204 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %203, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %204, i8 125)
	br label %typematch.done-15

typematch.done-15:
	br label %typematch.done-101

typematch.next-16:
	%205 = icmp eq i64 %95, 2
	br i1 %205, label %typematch.body-19, label %typematch.next-18

typematch.body-17:
	%206 = bitcast %..rawptr %96 to %Type_Info.Boolean*
	store %Type_Info.Boolean* zeroinitializer, %Type_Info.Boolean** %12
	store %Type_Info.Boolean* %206, %Type_Info.Boolean** %12
	%207 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%208 = load %..any, %..any* %1, align 8
	%209 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %207, %..any %208, i32 %209)
	br label %typematch.done-101

typematch.next-18:
	%210 = icmp eq i64 %95, 3
	br i1 %210, label %typematch.body-21, label %typematch.next-20

typematch.body-19:
	%211 = bitcast %..rawptr %96 to %Type_Info.Integer*
	store %Type_Info.Integer* zeroinitializer, %Type_Info.Integer** %13
	store %Type_Info.Integer* %211, %Type_Info.Integer** %13
	%212 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%213 = load %..any, %..any* %1, align 8
	%214 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %212, %..any %213, i32 %214)
	br label %typematch.done-101

typematch.next-20:
	%215 = icmp eq i64 %95, 4
	br i1 %215, label %typematch.body-23, label %typematch.next-22

typematch.body-21:
	%216 = bitcast %..rawptr %96 to %Type_Info.Float*
	store %Type_Info.Float* zeroinitializer, %Type_Info.Float** %14
	store %Type_Info.Float* %216, %Type_Info.Float** %14
	%217 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%218 = load %..any, %..any* %1, align 8
	%219 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %217, %..any %218, i32 %219)
	br label %typematch.done-101

typematch.next-22:
	%220 = icmp eq i64 %95, 5
	br i1 %220, label %typematch.body-25, label %typematch.next-24

typematch.body-23:
	%221 = bitcast %..rawptr %96 to %Type_Info.Complex*
	store %Type_Info.Complex* zeroinitializer, %Type_Info.Complex** %15
	store %Type_Info.Complex* %221, %Type_Info.Complex** %15
	%222 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%223 = load %..any, %..any* %1, align 8
	%224 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %222, %..any %223, i32 %224)
	br label %typematch.done-101

typematch.next-24:
	%225 = icmp eq i64 %95, 6
	br i1 %225, label %typematch.body-27, label %typematch.next-26

typematch.body-25:
	%226 = bitcast %..rawptr %96 to %Type_Info.Quaternion*
	store %Type_Info.Quaternion* zeroinitializer, %Type_Info.Quaternion** %16
	store %Type_Info.Quaternion* %226, %Type_Info.Quaternion** %16
	%227 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%228 = load %..any, %..any* %1, align 8
	%229 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %227, %..any %228, i32 %229)
	br label %typematch.done-101

typematch.next-26:
	%230 = icmp eq i64 %95, 9
	br i1 %230, label %typematch.body-29, label %typematch.next-28

typematch.body-27:
	%231 = bitcast %..rawptr %96 to %Type_Info.String*
	store %Type_Info.String* zeroinitializer, %Type_Info.String** %17
	store %Type_Info.String* %231, %Type_Info.String** %17
	%232 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%233 = load %..any, %..any* %1, align 8
	%234 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %232, %..any %233, i32 %234)
	br label %typematch.done-101

typematch.next-28:
	%235 = icmp eq i64 %95, 10
	br i1 %235, label %typematch.body-34, label %typematch.next-33

typematch.body-29:
	%236 = bitcast %..rawptr %96 to %Type_Info.Pointer*
	store %Type_Info.Pointer* zeroinitializer, %Type_Info.Pointer** %18
	store %Type_Info.Pointer* %236, %Type_Info.Pointer** %18
	; IfStmt
	; SelectorExpr
	%237 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%238 = load %Type_Info*, %Type_Info** %237, align 8
	%239 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%240 = icmp eq %Type_Info* %238, %239
	br i1 %240, label %if.then-30, label %if.else-31

if.then-30:
	; SelectorExpr
	%241 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%242 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %241, i64 0
	%243 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %242, i64 0, i32 3
	%244 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %243, align 8
	; SelectorExpr
	%245 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%246 = load %..rawptr, %..rawptr* %245, align 8
	%247 = bitcast %..rawptr %246 to %Type_Info**
	%248 = getelementptr inbounds %Type_Info*, %Type_Info** %247, i64 0
	%249 = load %Type_Info*, %Type_Info** %248, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %244, %Type_Info* %249)
	br label %if.done-32

if.else-31:
	%250 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%251 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%252 = load %..rawptr, %..rawptr* %251, align 8
	%253 = bitcast %..rawptr %252 to %..rawptr*
	%254 = getelementptr inbounds %..rawptr, %..rawptr* %253, i64 0
	%255 = load %..rawptr, %..rawptr* %254, align 8
	%256 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %250, %..rawptr %255, i32 %256)
	br label %if.done-32

if.done-32:
	br label %typematch.done-101

typematch.next-33:
	%257 = icmp eq i64 %95, 12
	br i1 %257, label %typematch.body-36, label %typematch.next-35

typematch.body-34:
	%258 = bitcast %..rawptr %96 to %Type_Info.Atomic*
	store %Type_Info.Atomic* zeroinitializer, %Type_Info.Atomic** %19
	store %Type_Info.Atomic* %258, %Type_Info.Atomic** %19
	%259 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %20
	store %..any zeroinitializer, %..any* %20
	; SelectorExpr
	%260 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%261 = load %..rawptr, %..rawptr* %260, align 8
	%262 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 0
	store %..rawptr %261, %..rawptr* %262
	; SelectorExpr
	%263 = load %Type_Info.Atomic*, %Type_Info.Atomic** %19, align 8
	%264 = getelementptr inbounds %Type_Info.Atomic, %Type_Info.Atomic* %263, i64 0
	%265 = getelementptr inbounds %Type_Info.Atomic, %Type_Info.Atomic* %264, i64 0, i32 2
	%266 = load %Type_Info*, %Type_Info** %265, align 8
	%267 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	store %Type_Info* %266, %Type_Info** %267
	%268 = load %..any, %..any* %20, align 8
	%269 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %259, %..any %268, i32 %269)
	br label %typematch.done-101

typematch.next-35:
	%270 = icmp eq i64 %95, 13
	br i1 %270, label %typematch.body-43, label %typematch.next-42

typematch.body-36:
	%271 = bitcast %..rawptr %96 to %Type_Info.Array*
	store %Type_Info.Array* zeroinitializer, %Type_Info.Array** %21
	store %Type_Info.Array* %271, %Type_Info.Array** %21
	; SelectorExpr
	%272 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%273 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %272, i64 0
	%274 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %273, i64 0, i32 3
	%275 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %274, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %275, i8 91)
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %22
		store i64 zeroinitializer, i64* %23
	store i64 0, i64* %23
	store i64 zeroinitializer, i64* %24
	store i64 0, i64* %24
	br label %for.interval.loop-37

for.interval.loop-37:
	; SelectorExpr
	%276 = load %Type_Info.Array*, %Type_Info.Array** %21, align 8
	%277 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %276, i64 0
	%278 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %277, i64 0, i32 4
	%279 = load i64, i64* %278, align 8
	%280 = load i64, i64* %23, align 8
	%281 = icmp slt i64 %280, %279
	br i1 %281, label %for.interval.body-38, label %for.interval.done-41

for.interval.body-38:
	%282 = load i64, i64* %23, align 8
	%283 = load i64, i64* %24, align 8
	%284 = load i64, i64* %23, align 8
	%285 = add i64 %284, 1
	store i64 %285, i64* %23
	%286 = load i64, i64* %24, align 8
	%287 = add i64 %286, 1
	store i64 %287, i64* %24
	store i64 %282, i64* %22
	; IfStmt
	%288 = load i64, i64* %22, align 8
	%289 = icmp sgt i64 %288, 0
	br i1 %289, label %if.then-39, label %if.done-40

if.then-39:
	; SelectorExpr
	%290 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%291 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %290, i64 0
	%292 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %291, i64 0, i32 3
	%293 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %292, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %293, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$9d, i64 0, i32 0), i64 2})
	br label %if.done-40

if.done-40:
	; data
	store i8* zeroinitializer, i8** %25
		; SelectorExpr
	%294 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%295 = load %..rawptr, %..rawptr* %294, align 8
	%296 = bitcast %..rawptr %295 to i8*
	%297 = load i64, i64* %22, align 8
	; SelectorExpr
	%298 = load %Type_Info.Array*, %Type_Info.Array** %21, align 8
	%299 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %298, i64 0
	%300 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %299, i64 0, i32 3
	%301 = load i64, i64* %300, align 8
	%302 = mul i64 %297, %301
	%303 = getelementptr inbounds i8, i8* %296, i64 %302
	store i8* %303, i8** %25
	%304 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %26
	store %..any zeroinitializer, %..any* %26
	%305 = load i8*, i8** %25, align 8
	%306 = bitcast i8* %305 to %..rawptr
	%307 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 0
	store %..rawptr %306, %..rawptr* %307
	; SelectorExpr
	%308 = load %Type_Info.Array*, %Type_Info.Array** %21, align 8
	%309 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %308, i64 0
	%310 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %309, i64 0, i32 2
	%311 = load %Type_Info*, %Type_Info** %310, align 8
	%312 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 1
	store %Type_Info* %311, %Type_Info** %312
	%313 = load %..any, %..any* %26, align 8
	%314 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %304, %..any %313, i32 %314)
	br label %for.interval.loop-37

for.interval.done-41:
	; defer
	; SelectorExpr
	%315 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%316 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %315, i64 0
	%317 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %316, i64 0, i32 3
	%318 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %317, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %318, i8 93)
	br label %typematch.done-101

typematch.next-42:
	%319 = icmp eq i64 %95, 14
	br i1 %319, label %typematch.body-50, label %typematch.next-49

typematch.body-43:
	%320 = bitcast %..rawptr %96 to %Type_Info.Dynamic_Array*
	store %Type_Info.Dynamic_Array* zeroinitializer, %Type_Info.Dynamic_Array** %27
	store %Type_Info.Dynamic_Array* %320, %Type_Info.Dynamic_Array** %27
	; SelectorExpr
	%321 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%322 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %321, i64 0
	%323 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %322, i64 0, i32 3
	%324 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %323, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %324, i8 91)
	; DeferStmt
	; array
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %28
		; SelectorExpr
	%325 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%326 = load %..rawptr, %..rawptr* %325, align 8
	%327 = bitcast %..rawptr %326 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %327, %raw-6.Dynamic_Array** %28
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %29
		store i64 zeroinitializer, i64* %30
	store i64 0, i64* %30
	store i64 zeroinitializer, i64* %31
	store i64 0, i64* %31
	br label %for.interval.loop-44

for.interval.loop-44:
	; SelectorExpr
	%328 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %28, align 8
	%329 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %328, i64 0
	%330 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %329, i64 0, i32 1
	%331 = load i64, i64* %330, align 8
	%332 = load i64, i64* %30, align 8
	%333 = icmp slt i64 %332, %331
	br i1 %333, label %for.interval.body-45, label %for.interval.done-48

for.interval.body-45:
	%334 = load i64, i64* %30, align 8
	%335 = load i64, i64* %31, align 8
	%336 = load i64, i64* %30, align 8
	%337 = add i64 %336, 1
	store i64 %337, i64* %30
	%338 = load i64, i64* %31, align 8
	%339 = add i64 %338, 1
	store i64 %339, i64* %31
	store i64 %334, i64* %29
	; IfStmt
	%340 = load i64, i64* %29, align 8
	%341 = icmp sgt i64 %340, 0
	br i1 %341, label %if.then-46, label %if.done-47

if.then-46:
	; SelectorExpr
	%342 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%343 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %342, i64 0
	%344 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %343, i64 0, i32 3
	%345 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %344, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %345, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$9e, i64 0, i32 0), i64 2})
	br label %if.done-47

if.done-47:
	; data
	store i8* zeroinitializer, i8** %32
		; SelectorExpr
	%346 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %28, align 8
	%347 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %346, i64 0
	%348 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %347, i64 0, i32 0
	%349 = load %..rawptr, %..rawptr* %348, align 8
	%350 = bitcast %..rawptr %349 to i8*
	%351 = load i64, i64* %29, align 8
	; SelectorExpr
	%352 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %27, align 8
	%353 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %352, i64 0
	%354 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %353, i64 0, i32 3
	%355 = load i64, i64* %354, align 8
	%356 = mul i64 %351, %355
	%357 = getelementptr inbounds i8, i8* %350, i64 %356
	store i8* %357, i8** %32
	%358 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %33
	store %..any zeroinitializer, %..any* %33
	%359 = load i8*, i8** %32, align 8
	%360 = bitcast i8* %359 to %..rawptr
	%361 = getelementptr inbounds %..any, %..any* %33, i64 0, i32 0
	store %..rawptr %360, %..rawptr* %361
	; SelectorExpr
	%362 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %27, align 8
	%363 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %362, i64 0
	%364 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %363, i64 0, i32 2
	%365 = load %Type_Info*, %Type_Info** %364, align 8
	%366 = getelementptr inbounds %..any, %..any* %33, i64 0, i32 1
	store %Type_Info* %365, %Type_Info** %366
	%367 = load %..any, %..any* %33, align 8
	%368 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %358, %..any %367, i32 %368)
	br label %for.interval.loop-44

for.interval.done-48:
	; defer
	; SelectorExpr
	%369 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%370 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %369, i64 0
	%371 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %370, i64 0, i32 3
	%372 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %371, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %372, i8 93)
	br label %typematch.done-101

typematch.next-49:
	%373 = icmp eq i64 %95, 15
	br i1 %373, label %typematch.body-57, label %typematch.next-56

typematch.body-50:
	%374 = bitcast %..rawptr %96 to %Type_Info.Slice*
	store %Type_Info.Slice* zeroinitializer, %Type_Info.Slice** %34
	store %Type_Info.Slice* %374, %Type_Info.Slice** %34
	; SelectorExpr
	%375 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%376 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %375, i64 0
	%377 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %376, i64 0, i32 3
	%378 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %377, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %378, i8 91)
	; DeferStmt
	; slice
	store {i8*, i64, i64}* zeroinitializer, {i8*, i64, i64}** %35
		; SelectorExpr
	%379 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%380 = load %..rawptr, %..rawptr* %379, align 8
	%381 = bitcast %..rawptr %380 to {i8*, i64, i64}*
	store {i8*, i64, i64}* %381, {i8*, i64, i64}** %35
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %36
		%382 = load {i8*, i64, i64}*, {i8*, i64, i64}** %35, align 8
	%383 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %382, i64 0, i32 1
	%384 = load {i8*, i64, i64}, {i8*, i64, i64}* %382, align 8
	store i64 zeroinitializer, i64* %37
	store i64 -1, i64* %37
	br label %for.index.loop-51

for.index.loop-51:
	%385 = load i64, i64* %37, align 8
	%386 = add i64 %385, 1
	store i64 %386, i64* %37
	%387 = load i64, i64* %383, align 8
	%388 = icmp slt i64 %386, %387
	br i1 %388, label %for.index.body-52, label %for.index.done-55

for.index.body-52:
	%389 = load i64, i64* %37, align 8
	store i64 %389, i64* %36
	; IfStmt
	%390 = load i64, i64* %36, align 8
	%391 = icmp sgt i64 %390, 0
	br i1 %391, label %if.then-53, label %if.done-54

if.then-53:
	; SelectorExpr
	%392 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%393 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %392, i64 0
	%394 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %393, i64 0, i32 3
	%395 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %394, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %395, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$9f, i64 0, i32 0), i64 2})
	br label %if.done-54

if.done-54:
	; data
	store i8* zeroinitializer, i8** %38
		; IndexExpr
	%396 = load {i8*, i64, i64}*, {i8*, i64, i64}** %35, align 8
	%397 = load {i8*, i64, i64}, {i8*, i64, i64}* %396, align 8
	%398 = extractvalue {i8*, i64, i64} %397, 0
	%399 = extractvalue {i8*, i64, i64} %397, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a0, i64 0, i32 0), i64 21}, i64 851, i64 19, i64 0, i64 %399)
	%400 = getelementptr inbounds i8, i8* %398, i64 0
	%401 = getelementptr inbounds i8, i8* %400, i64 0
	%402 = load i64, i64* %36, align 8
	; SelectorExpr
	%403 = load %Type_Info.Slice*, %Type_Info.Slice** %34, align 8
	%404 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %403, i64 0
	%405 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %404, i64 0, i32 3
	%406 = load i64, i64* %405, align 8
	%407 = mul i64 %402, %406
	%408 = getelementptr inbounds i8, i8* %401, i64 %407
	store i8* %408, i8** %38
	%409 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %39
	store %..any zeroinitializer, %..any* %39
	%410 = load i8*, i8** %38, align 8
	%411 = bitcast i8* %410 to %..rawptr
	%412 = getelementptr inbounds %..any, %..any* %39, i64 0, i32 0
	store %..rawptr %411, %..rawptr* %412
	; SelectorExpr
	%413 = load %Type_Info.Slice*, %Type_Info.Slice** %34, align 8
	%414 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %413, i64 0
	%415 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %414, i64 0, i32 2
	%416 = load %Type_Info*, %Type_Info** %415, align 8
	%417 = getelementptr inbounds %..any, %..any* %39, i64 0, i32 1
	store %Type_Info* %416, %Type_Info** %417
	%418 = load %..any, %..any* %39, align 8
	%419 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %409, %..any %418, i32 %419)
	br label %for.index.loop-51

for.index.done-55:
	; defer
	; SelectorExpr
	%420 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%421 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %420, i64 0
	%422 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %421, i64 0, i32 3
	%423 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %422, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %423, i8 93)
	br label %typematch.done-101

typematch.next-56:
	%424 = icmp eq i64 %95, 21
	br i1 %424, label %typematch.body-64, label %typematch.next-63

typematch.body-57:
	%425 = bitcast %..rawptr %96 to %Type_Info.Vector*
	store %Type_Info.Vector* zeroinitializer, %Type_Info.Vector** %40
	store %Type_Info.Vector* %425, %Type_Info.Vector** %40
	; SelectorExpr
	%426 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%427 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %426, i64 0
	%428 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %427, i64 0, i32 3
	%429 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %428, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %429, i8 60)
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %41
		store i64 zeroinitializer, i64* %42
	store i64 0, i64* %42
	store i64 zeroinitializer, i64* %43
	store i64 0, i64* %43
	br label %for.interval.loop-58

for.interval.loop-58:
	; SelectorExpr
	%430 = load %Type_Info.Vector*, %Type_Info.Vector** %40, align 8
	%431 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %430, i64 0
	%432 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %431, i64 0, i32 4
	%433 = load i64, i64* %432, align 8
	%434 = load i64, i64* %42, align 8
	%435 = icmp slt i64 %434, %433
	br i1 %435, label %for.interval.body-59, label %for.interval.done-62

for.interval.body-59:
	%436 = load i64, i64* %42, align 8
	%437 = load i64, i64* %43, align 8
	%438 = load i64, i64* %42, align 8
	%439 = add i64 %438, 1
	store i64 %439, i64* %42
	%440 = load i64, i64* %43, align 8
	%441 = add i64 %440, 1
	store i64 %441, i64* %43
	store i64 %436, i64* %41
	; IfStmt
	%442 = load i64, i64* %41, align 8
	%443 = icmp sgt i64 %442, 0
	br i1 %443, label %if.then-60, label %if.done-61

if.then-60:
	; SelectorExpr
	%444 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%445 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %444, i64 0
	%446 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %445, i64 0, i32 3
	%447 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %446, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %447, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$a1, i64 0, i32 0), i64 2})
	br label %if.done-61

if.done-61:
	; data
	store i8* zeroinitializer, i8** %44
		; SelectorExpr
	%448 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%449 = load %..rawptr, %..rawptr* %448, align 8
	%450 = bitcast %..rawptr %449 to i8*
	%451 = load i64, i64* %41, align 8
	; SelectorExpr
	%452 = load %Type_Info.Vector*, %Type_Info.Vector** %40, align 8
	%453 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %452, i64 0
	%454 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %453, i64 0, i32 3
	%455 = load i64, i64* %454, align 8
	%456 = mul i64 %451, %455
	%457 = getelementptr inbounds i8, i8* %450, i64 %456
	store i8* %457, i8** %44
	%458 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %45
	store %..any zeroinitializer, %..any* %45
	%459 = load i8*, i8** %44, align 8
	%460 = bitcast i8* %459 to %..rawptr
	%461 = getelementptr inbounds %..any, %..any* %45, i64 0, i32 0
	store %..rawptr %460, %..rawptr* %461
	; SelectorExpr
	%462 = load %Type_Info.Vector*, %Type_Info.Vector** %40, align 8
	%463 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %462, i64 0
	%464 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %463, i64 0, i32 2
	%465 = load %Type_Info*, %Type_Info** %464, align 8
	%466 = getelementptr inbounds %..any, %..any* %45, i64 0, i32 1
	store %Type_Info* %465, %Type_Info** %466
	%467 = load %..any, %..any* %45, align 8
	%468 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %458, %..any %467, i32 %468)
	br label %for.interval.loop-58

for.interval.done-62:
	; defer
	; SelectorExpr
	%469 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%470 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %469, i64 0
	%471 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %470, i64 0, i32 3
	%472 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %471, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %472, i8 62)
	br label %typematch.done-101

typematch.next-63:
	%473 = icmp eq i64 %95, 17
	br i1 %473, label %typematch.body-82, label %typematch.next-81

typematch.body-64:
	%474 = bitcast %..rawptr %96 to %Type_Info.Map*
	store %Type_Info.Map* zeroinitializer, %Type_Info.Map** %46
	store %Type_Info.Map* %474, %Type_Info.Map** %46
	; IfStmt
	%475 = load i32, i32* %2, align 4
	%476 = icmp ne i32 %475, 118
	br i1 %476, label %if.then-65, label %if.done-66

if.then-65:
	%477 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%478 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %477, i32 %478)
	; ReturnStmt
	ret void

if.done-66:
	; SelectorExpr
	%479 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%480 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %479, i64 0
	%481 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %480, i64 0, i32 3
	%482 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %481, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %482, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$a2, i64 0, i32 0), i64 4})
	; DeferStmt
	; entries
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %47
		; SelectorExpr
	; SelectorExpr
	%483 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%484 = load %..rawptr, %..rawptr* %483, align 8
	%485 = bitcast %..rawptr %484 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* zeroinitializer, %raw-6.Dynamic_Map** %48
	store %raw-6.Dynamic_Map* %485, %raw-6.Dynamic_Map** %48
	%486 = load %raw-6.Dynamic_Map*, %raw-6.Dynamic_Map** %48, align 8
	%487 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %486, i64 0
	%488 = getelementptr inbounds %raw-6.Dynamic_Map, %raw-6.Dynamic_Map* %487, i64 0, i32 1
	%489 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %488, i64 0
	store %raw-6.Dynamic_Array* %489, %raw-6.Dynamic_Array** %47
	; gs
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %49
		; SelectorExpr
	%490 = load %Type_Info.Map*, %Type_Info.Map** %46, align 8
	%491 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %490, i64 0
	%492 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %491, i64 0, i32 4
	%493 = load %Type_Info*, %Type_Info** %492, align 8
	%494 = call %Type_Info* @type_info_base(%Type_Info* %493)
	; cast - union_cast
	store {%Type_Info.Struct*, i1} zeroinitializer, {%Type_Info.Struct*, i1}* %50
	%495 = getelementptr inbounds %Type_Info, %Type_Info* %494, i64 0, i32 4 ; UnionTagPtr
	%496 = load i64, i64* %495, align 8
	%497 = icmp eq i64 %496, 17
	br i1 %497, label %union_cast.ok-67, label %union_cast.end-68

union_cast.ok-67:
	%498 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %50, i64 0, i32 0
	%499 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %50, i64 0, i32 1
	%500 = bitcast %Type_Info* %494 to %Type_Info.Struct*
	store %Type_Info.Struct* %500, %Type_Info.Struct** %498
	store i1 true, i1* %499
	br label %union_cast.end-68

union_cast.end-68:
	%501 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %50, i64 0, i32 1
	%502 = load i1, i1* %501, align 1
	%503 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%504 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	call void @__type_assertion_check(i1 %502, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a3, i64 0, i32 0), i64 21}, i64 877, i64 9, %Type_Info* %503, %Type_Info* %504)
	%505 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %50, i64 0, i32 0
	%506 = load %Type_Info.Struct*, %Type_Info.Struct** %505, align 8
	store %Type_Info.Struct* %506, %Type_Info.Struct** %49
	; ed
	store %Type_Info.Dynamic_Array* zeroinitializer, %Type_Info.Dynamic_Array** %51
		; IndexExpr
	; SelectorExpr
	%507 = load %Type_Info.Struct*, %Type_Info.Struct** %49, align 8
	%508 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %507, i64 0
	%509 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %508, i64 0, i32 2
	%510 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %509, i64 0, i32 0
	%511 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %510, align 8
	%512 = extractvalue {%Type_Info**, i64, i64} %511, 0
	%513 = extractvalue {%Type_Info**, i64, i64} %511, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a4, i64 0, i32 0), i64 21}, i64 878, i64 33, i64 1, i64 %513)
	%514 = getelementptr inbounds %Type_Info*, %Type_Info** %512, i64 1
	%515 = load %Type_Info*, %Type_Info** %514, align 8
	%516 = call %Type_Info* @type_info_base(%Type_Info* %515)
	; cast - union_cast
	store {%Type_Info.Dynamic_Array*, i1} zeroinitializer, {%Type_Info.Dynamic_Array*, i1}* %52
	%517 = getelementptr inbounds %Type_Info, %Type_Info* %516, i64 0, i32 4 ; UnionTagPtr
	%518 = load i64, i64* %517, align 8
	%519 = icmp eq i64 %518, 13
	br i1 %519, label %union_cast.ok-69, label %union_cast.end-70

union_cast.ok-69:
	%520 = getelementptr inbounds {%Type_Info.Dynamic_Array*, i1}, {%Type_Info.Dynamic_Array*, i1}* %52, i64 0, i32 0
	%521 = getelementptr inbounds {%Type_Info.Dynamic_Array*, i1}, {%Type_Info.Dynamic_Array*, i1}* %52, i64 0, i32 1
	%522 = bitcast %Type_Info* %516 to %Type_Info.Dynamic_Array*
	store %Type_Info.Dynamic_Array* %522, %Type_Info.Dynamic_Array** %520
	store i1 true, i1* %521
	br label %union_cast.end-70

union_cast.end-70:
	%523 = getelementptr inbounds {%Type_Info.Dynamic_Array*, i1}, {%Type_Info.Dynamic_Array*, i1}* %52, i64 0, i32 1
	%524 = load i1, i1* %523, align 1
	%525 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%526 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	call void @__type_assertion_check(i1 %524, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a5, i64 0, i32 0), i64 21}, i64 878, i64 9, %Type_Info* %525, %Type_Info* %526)
	%527 = getelementptr inbounds {%Type_Info.Dynamic_Array*, i1}, {%Type_Info.Dynamic_Array*, i1}* %52, i64 0, i32 0
	%528 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %527, align 8
	store %Type_Info.Dynamic_Array* %528, %Type_Info.Dynamic_Array** %51
	; entry_type
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %53
		; SelectorExpr
	%529 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %51, align 8
	%530 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %529, i64 0
	%531 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %530, i64 0, i32 2
	%532 = load %Type_Info*, %Type_Info** %531, align 8
	; cast - union_cast
	store {%Type_Info.Struct*, i1} zeroinitializer, {%Type_Info.Struct*, i1}* %54
	%533 = getelementptr inbounds %Type_Info, %Type_Info* %532, i64 0, i32 4 ; UnionTagPtr
	%534 = load i64, i64* %533, align 8
	%535 = icmp eq i64 %534, 17
	br i1 %535, label %union_cast.ok-71, label %union_cast.end-72

union_cast.ok-71:
	%536 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %54, i64 0, i32 0
	%537 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %54, i64 0, i32 1
	%538 = bitcast %Type_Info* %532 to %Type_Info.Struct*
	store %Type_Info.Struct* %538, %Type_Info.Struct** %536
	store i1 true, i1* %537
	br label %union_cast.end-72

union_cast.end-72:
	%539 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %54, i64 0, i32 1
	%540 = load i1, i1* %539, align 1
	%541 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%542 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	call void @__type_assertion_check(i1 %540, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a6, i64 0, i32 0), i64 21}, i64 880, i64 20, %Type_Info* %541, %Type_Info* %542)
	%543 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %54, i64 0, i32 0
	%544 = load %Type_Info.Struct*, %Type_Info.Struct** %543, align 8
	store %Type_Info.Struct* %544, %Type_Info.Struct** %53
	; entry_size
	store i64 zeroinitializer, i64* %55
		; SelectorExpr
	%545 = load %Type_Info.Dynamic_Array*, %Type_Info.Dynamic_Array** %51, align 8
	%546 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %545, i64 0
	%547 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %546, i64 0, i32 3
	%548 = load i64, i64* %547, align 8
	store i64 %548, i64* %55
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %56
		store i64 zeroinitializer, i64* %57
	store i64 0, i64* %57
	store i64 zeroinitializer, i64* %58
	store i64 0, i64* %58
	br label %for.interval.loop-73

for.interval.loop-73:
	; SelectorExpr
	%549 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %47, align 8
	%550 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %549, i64 0
	%551 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %550, i64 0, i32 1
	%552 = load i64, i64* %551, align 8
	%553 = load i64, i64* %57, align 8
	%554 = icmp slt i64 %553, %552
	br i1 %554, label %for.interval.body-74, label %for.interval.done-80

for.interval.body-74:
	%555 = load i64, i64* %57, align 8
	%556 = load i64, i64* %58, align 8
	%557 = load i64, i64* %57, align 8
	%558 = add i64 %557, 1
	store i64 %558, i64* %57
	%559 = load i64, i64* %58, align 8
	%560 = add i64 %559, 1
	store i64 %560, i64* %58
	store i64 %555, i64* %56
	; IfStmt
	%561 = load i64, i64* %56, align 8
	%562 = icmp sgt i64 %561, 0
	br i1 %562, label %if.then-75, label %if.done-76

if.then-75:
	; SelectorExpr
	%563 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%564 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %563, i64 0
	%565 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %564, i64 0, i32 3
	%566 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %565, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %566, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$a7, i64 0, i32 0), i64 2})
	br label %if.done-76

if.done-76:
	; data
	store i8* zeroinitializer, i8** %59
		; SelectorExpr
	%567 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %47, align 8
	%568 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %567, i64 0
	%569 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %568, i64 0, i32 0
	%570 = load %..rawptr, %..rawptr* %569, align 8
	%571 = bitcast %..rawptr %570 to i8*
	%572 = load i64, i64* %56, align 8
	%573 = load i64, i64* %55, align 8
	%574 = mul i64 %572, %573
	%575 = getelementptr inbounds i8, i8* %571, i64 %574
	store i8* %575, i8** %59
	; header
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %60
		%576 = load i8*, i8** %59, align 8
	%577 = bitcast i8* %576 to %__Map_Entry_Header*
	store %__Map_Entry_Header* %577, %__Map_Entry_Header** %60
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%578 = load %Type_Info.Map*, %Type_Info.Map** %46, align 8
	%579 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %578, i64 0
	%580 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %579, i64 0, i32 2
	%581 = load %Type_Info*, %Type_Info** %580, align 8
	%582 = call i1 @types-33.is_string(%Type_Info* %581)
	br i1 %582, label %if.then-77, label %if.else-78

if.then-77:
	; SelectorExpr
	%583 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%584 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %583, i64 0
	%585 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %584, i64 0, i32 3
	%586 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %585, align 8
	; SelectorExpr
	; SelectorExpr
	%587 = load %__Map_Entry_Header*, %__Map_Entry_Header** %60, align 8
	%588 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %587, i64 0
	%589 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %588, i64 0, i32 0
	%590 = getelementptr inbounds %__Map_Key, %__Map_Key* %589, i64 0, i32 1
	%591 = load %..string, %..string* %590, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %586, %..string %591)
	br label %if.done-79

if.else-78:
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %61
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %62
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %62
	; SelectorExpr
	%592 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%593 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %592, i64 0
	%594 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %593, i64 0, i32 3
	%595 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %594, align 8
	%596 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %62, i64 0, i32 3
	store %fmt-4.String_Buffer* %595, %fmt-4.String_Buffer** %596
	%597 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %62, align 8
	store %fmt-4.Fmt_Info %597, %fmt-4.Fmt_Info* %61
	%598 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %61, i64 0
	; CompoundLit
	store %..any zeroinitializer, %..any* %63
	store %..any zeroinitializer, %..any* %63
	; SelectorExpr
	; SelectorExpr
	%599 = load %__Map_Entry_Header*, %__Map_Entry_Header** %60, align 8
	%600 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %599, i64 0
	%601 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %600, i64 0, i32 0
	%602 = getelementptr inbounds %__Map_Key, %__Map_Key* %601, i64 0, i32 0
	%603 = getelementptr inbounds i64, i64* %602, i64 0
	%604 = bitcast i64* %603 to %..rawptr
	%605 = getelementptr inbounds %..any, %..any* %63, i64 0, i32 0
	store %..rawptr %604, %..rawptr* %605
	; SelectorExpr
	%606 = load %Type_Info.Map*, %Type_Info.Map** %46, align 8
	%607 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %606, i64 0
	%608 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %607, i64 0, i32 2
	%609 = load %Type_Info*, %Type_Info** %608, align 8
	%610 = getelementptr inbounds %..any, %..any* %63, i64 0, i32 1
	store %Type_Info* %609, %Type_Info** %610
	%611 = load %..any, %..any* %63, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %598, %..any %611, i32 118)
	br label %if.done-79

if.done-79:
	; SelectorExpr
	%612 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%613 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %612, i64 0
	%614 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %613, i64 0, i32 3
	%615 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %614, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %615, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$a8, i64 0, i32 0), i64 1})
	; value
	store i8* zeroinitializer, i8** %64
		%616 = load i8*, i8** %59, align 8
	; IndexExpr
	; SelectorExpr
	%617 = load %Type_Info.Struct*, %Type_Info.Struct** %53, align 8
	%618 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %617, i64 0
	%619 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %618, i64 0, i32 2
	%620 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %619, i64 0, i32 2
	%621 = load {i64*, i64, i64}, {i64*, i64, i64}* %620, align 8
	%622 = extractvalue {i64*, i64, i64} %621, 0
	%623 = extractvalue {i64*, i64, i64} %621, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$a9, i64 0, i32 0), i64 21}, i64 898, i64 39, i64 2, i64 %623)
	%624 = getelementptr inbounds i64, i64* %622, i64 2
	%625 = load i64, i64* %624, align 8
	%626 = getelementptr inbounds i8, i8* %616, i64 %625
	store i8* %626, i8** %64
	%627 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %65
	store %..any zeroinitializer, %..any* %65
	%628 = load i8*, i8** %64, align 8
	%629 = bitcast i8* %628 to %..rawptr
	%630 = getelementptr inbounds %..any, %..any* %65, i64 0, i32 0
	store %..rawptr %629, %..rawptr* %630
	; SelectorExpr
	%631 = load %Type_Info.Map*, %Type_Info.Map** %46, align 8
	%632 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %631, i64 0
	%633 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %632, i64 0, i32 3
	%634 = load %Type_Info*, %Type_Info** %633, align 8
	%635 = getelementptr inbounds %..any, %..any* %65, i64 0, i32 1
	store %Type_Info* %634, %Type_Info** %635
	%636 = load %..any, %..any* %65, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %627, %..any %636, i32 118)
	br label %for.interval.loop-73

for.interval.done-80:
	; defer
	; SelectorExpr
	%637 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%638 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %637, i64 0
	%639 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %638, i64 0, i32 3
	%640 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %639, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %640, i8 93)
	br label %typematch.done-101

typematch.next-81:
	%641 = icmp eq i64 %95, 19
	br i1 %641, label %typematch.body-89, label %typematch.next-88

typematch.body-82:
	%642 = bitcast %..rawptr %96 to %Type_Info.Struct*
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %66
	store %Type_Info.Struct* %642, %Type_Info.Struct** %66
	; SelectorExpr
	%643 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%644 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %643, i64 0
	%645 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %644, i64 0, i32 3
	%646 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %645, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %646, i8 123)
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %67
		; SelectorExpr
	%647 = load %Type_Info.Struct*, %Type_Info.Struct** %66, align 8
	%648 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %647, i64 0
	%649 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %648, i64 0, i32 2
	%650 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %649, i64 0, i32 1
	%651 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %650, align 8
	store i64 zeroinitializer, i64* %68
	%652 = extractvalue {%..string*, i64, i64} %651, 1
	store i64 %652, i64* %68
	store i64 zeroinitializer, i64* %69
	store i64 -1, i64* %69
	br label %for.index.loop-83

for.index.loop-83:
	%653 = load i64, i64* %69, align 8
	%654 = add i64 %653, 1
	store i64 %654, i64* %69
	%655 = load i64, i64* %68, align 8
	%656 = icmp slt i64 %654, %655
	br i1 %656, label %for.index.body-84, label %for.index.done-87

for.index.body-84:
	%657 = load i64, i64* %69, align 8
	store i64 %657, i64* %67
	; IfStmt
	%658 = load i64, i64* %67, align 8
	%659 = icmp sgt i64 %658, 0
	br i1 %659, label %if.then-85, label %if.done-86

if.then-85:
	; SelectorExpr
	%660 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%661 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %660, i64 0
	%662 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %661, i64 0, i32 3
	%663 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %662, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %663, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$aa, i64 0, i32 0), i64 2})
	br label %if.done-86

if.done-86:
	; SelectorExpr
	%664 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%665 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %664, i64 0
	%666 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %665, i64 0, i32 3
	%667 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %666, align 8
	; IndexExpr
	; SelectorExpr
	%668 = load %Type_Info.Struct*, %Type_Info.Struct** %66, align 8
	%669 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %668, i64 0
	%670 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %669, i64 0, i32 2
	%671 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %670, i64 0, i32 1
	%672 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %671, align 8
	%673 = extractvalue {%..string*, i64, i64} %672, 0
	%674 = extractvalue {%..string*, i64, i64} %672, 1
	%675 = load i64, i64* %67, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$ab, i64 0, i32 0), i64 21}, i64 912, i64 36, i64 %675, i64 %674)
	%676 = getelementptr inbounds %..string, %..string* %673, i64 %675
	%677 = load %..string, %..string* %676, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %667, %..string %677)
	; SelectorExpr
	%678 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%679 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %678, i64 0
	%680 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %679, i64 0, i32 3
	%681 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %680, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %681, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$ac, i64 0, i32 0), i64 3})
	; data
	store i8* zeroinitializer, i8** %70
		; SelectorExpr
	%682 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%683 = load %..rawptr, %..rawptr* %682, align 8
	%684 = bitcast %..rawptr %683 to i8*
	; IndexExpr
	; SelectorExpr
	%685 = load %Type_Info.Struct*, %Type_Info.Struct** %66, align 8
	%686 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %685, i64 0
	%687 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %686, i64 0, i32 2
	%688 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %687, i64 0, i32 2
	%689 = load {i64*, i64, i64}, {i64*, i64, i64}* %688, align 8
	%690 = extractvalue {i64*, i64, i64} %689, 0
	%691 = extractvalue {i64*, i64, i64} %689, 1
	%692 = load i64, i64* %67, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$ad, i64 0, i32 0), i64 21}, i64 914, i64 41, i64 %692, i64 %691)
	%693 = getelementptr inbounds i64, i64* %690, i64 %692
	%694 = load i64, i64* %693, align 8
	%695 = getelementptr inbounds i8, i8* %684, i64 %694
	store i8* %695, i8** %70
	%696 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %71
	store %..any zeroinitializer, %..any* %71
	%697 = load i8*, i8** %70, align 8
	%698 = bitcast i8* %697 to %..rawptr
	%699 = getelementptr inbounds %..any, %..any* %71, i64 0, i32 0
	store %..rawptr %698, %..rawptr* %699
	; IndexExpr
	; SelectorExpr
	%700 = load %Type_Info.Struct*, %Type_Info.Struct** %66, align 8
	%701 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %700, i64 0
	%702 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %701, i64 0, i32 2
	%703 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %702, i64 0, i32 0
	%704 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %703, align 8
	%705 = extractvalue {%Type_Info**, i64, i64} %704, 0
	%706 = extractvalue {%Type_Info**, i64, i64} %704, 1
	%707 = load i64, i64* %67, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$ae, i64 0, i32 0), i64 21}, i64 915, i64 47, i64 %707, i64 %706)
	%708 = getelementptr inbounds %Type_Info*, %Type_Info** %705, i64 %707
	%709 = load %Type_Info*, %Type_Info** %708, align 8
	%710 = getelementptr inbounds %..any, %..any* %71, i64 0, i32 1
	store %Type_Info* %709, %Type_Info** %710
	%711 = load %..any, %..any* %71, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %696, %..any %711, i32 118)
	br label %for.index.loop-83

for.index.done-87:
	; defer
	; SelectorExpr
	%712 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%713 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %712, i64 0
	%714 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %713, i64 0, i32 3
	%715 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %714, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %715, i8 125)
	br label %typematch.done-101

typematch.next-88:
	%716 = icmp eq i64 %95, 18
	br i1 %716, label %typematch.body-96, label %typematch.next-95

typematch.body-89:
	%717 = bitcast %..rawptr %96 to %Type_Info.Union*
	store %Type_Info.Union* zeroinitializer, %Type_Info.Union** %72
	store %Type_Info.Union* %717, %Type_Info.Union** %72
	; SelectorExpr
	%718 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%719 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %718, i64 0
	%720 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %719, i64 0, i32 3
	%721 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %720, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %721, i8 123)
	; DeferStmt
	; cf
	store {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}} zeroinitializer, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73
		; SelectorExpr
	%722 = load %Type_Info.Union*, %Type_Info.Union** %72, align 8
	%723 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %722, i64 0
	%724 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %723, i64 0, i32 2
	%725 = load {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %724, align 8
	store {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}} %725, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %74
		; SelectorExpr
	%726 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73, i64 0, i32 1
	%727 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %726, align 8
	store i64 zeroinitializer, i64* %75
	%728 = extractvalue {%..string*, i64, i64} %727, 1
	store i64 %728, i64* %75
	store i64 zeroinitializer, i64* %76
	store i64 -1, i64* %76
	br label %for.index.loop-90

for.index.loop-90:
	%729 = load i64, i64* %76, align 8
	%730 = add i64 %729, 1
	store i64 %730, i64* %76
	%731 = load i64, i64* %75, align 8
	%732 = icmp slt i64 %730, %731
	br i1 %732, label %for.index.body-91, label %for.index.done-94

for.index.body-91:
	%733 = load i64, i64* %76, align 8
	store i64 %733, i64* %74
	; IfStmt
	%734 = load i64, i64* %74, align 8
	%735 = icmp sgt i64 %734, 0
	br i1 %735, label %if.then-92, label %if.done-93

if.then-92:
	; SelectorExpr
	%736 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%737 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %736, i64 0
	%738 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %737, i64 0, i32 3
	%739 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %738, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %739, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$af, i64 0, i32 0), i64 2})
	br label %if.done-93

if.done-93:
	; SelectorExpr
	%740 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%741 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %740, i64 0
	%742 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %741, i64 0, i32 3
	%743 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %742, align 8
	; IndexExpr
	; SelectorExpr
	%744 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73, i64 0, i32 1
	%745 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %744, align 8
	%746 = extractvalue {%..string*, i64, i64} %745, 0
	%747 = extractvalue {%..string*, i64, i64} %745, 1
	%748 = load i64, i64* %74, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b0, i64 0, i32 0), i64 21}, i64 928, i64 34, i64 %748, i64 %747)
	%749 = getelementptr inbounds %..string, %..string* %746, i64 %748
	%750 = load %..string, %..string* %749, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %743, %..string %750)
	; SelectorExpr
	%751 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%752 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %751, i64 0
	%753 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %752, i64 0, i32 3
	%754 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %753, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %754, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$b1, i64 0, i32 0), i64 3})
	; data
	store i8* zeroinitializer, i8** %77
		; SelectorExpr
	%755 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%756 = load %..rawptr, %..rawptr* %755, align 8
	%757 = bitcast %..rawptr %756 to i8*
	; IndexExpr
	; SelectorExpr
	%758 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73, i64 0, i32 2
	%759 = load {i64*, i64, i64}, {i64*, i64, i64}* %758, align 8
	%760 = extractvalue {i64*, i64, i64} %759, 0
	%761 = extractvalue {i64*, i64, i64} %759, 1
	%762 = load i64, i64* %74, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b2, i64 0, i32 0), i64 21}, i64 930, i64 39, i64 %762, i64 %761)
	%763 = getelementptr inbounds i64, i64* %760, i64 %762
	%764 = load i64, i64* %763, align 8
	%765 = getelementptr inbounds i8, i8* %757, i64 %764
	store i8* %765, i8** %77
	%766 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %78
	store %..any zeroinitializer, %..any* %78
	%767 = load i8*, i8** %77, align 8
	%768 = bitcast i8* %767 to %..rawptr
	%769 = getelementptr inbounds %..any, %..any* %78, i64 0, i32 0
	store %..rawptr %768, %..rawptr* %769
	; IndexExpr
	; SelectorExpr
	%770 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %73, i64 0, i32 0
	%771 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %770, align 8
	%772 = extractvalue {%Type_Info**, i64, i64} %771, 0
	%773 = extractvalue {%Type_Info**, i64, i64} %771, 1
	%774 = load i64, i64* %74, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b3, i64 0, i32 0), i64 21}, i64 931, i64 45, i64 %774, i64 %773)
	%775 = getelementptr inbounds %Type_Info*, %Type_Info** %772, i64 %774
	%776 = load %Type_Info*, %Type_Info** %775, align 8
	%777 = getelementptr inbounds %..any, %..any* %78, i64 0, i32 1
	store %Type_Info* %776, %Type_Info** %777
	%778 = load %..any, %..any* %78, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %766, %..any %778, i32 118)
	br label %for.index.loop-90

for.index.done-94:
	; defer
	; SelectorExpr
	%779 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%780 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %779, i64 0
	%781 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %780, i64 0, i32 3
	%782 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %781, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %782, i8 125)
	br label %typematch.done-101

typematch.next-95:
	%783 = icmp eq i64 %95, 20
	br i1 %783, label %typematch.body-98, label %typematch.next-97

typematch.body-96:
	%784 = bitcast %..rawptr %96 to %Type_Info.Raw_Union*
	store %Type_Info.Raw_Union* zeroinitializer, %Type_Info.Raw_Union** %79
	store %Type_Info.Raw_Union* %784, %Type_Info.Raw_Union** %79
	; SelectorExpr
	%785 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%786 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %785, i64 0
	%787 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %786, i64 0, i32 3
	%788 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %787, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %788, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$b4, i64 0, i32 0), i64 11})
	br label %typematch.done-101

typematch.next-97:
	%789 = icmp eq i64 %95, 11
	br i1 %789, label %typematch.body-100, label %typematch.next-99

typematch.body-98:
	%790 = bitcast %..rawptr %96 to %Type_Info.Enum*
	store %Type_Info.Enum* zeroinitializer, %Type_Info.Enum** %80
	store %Type_Info.Enum* %790, %Type_Info.Enum** %80
	%791 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%792 = load %..any, %..any* %1, align 8
	%793 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_enum(%fmt-4.Fmt_Info* %791, %..any %792, i32 %793)
	br label %typematch.done-101

typematch.next-99:
	br label %typematch.done-101

typematch.body-100:
	%794 = bitcast %..rawptr %96 to %Type_Info.Procedure*
	store %Type_Info.Procedure* zeroinitializer, %Type_Info.Procedure** %81
	store %Type_Info.Procedure* %794, %Type_Info.Procedure** %81
	; SelectorExpr
	%795 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%796 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %795, i64 0
	%797 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %796, i64 0, i32 3
	%798 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %797, align 8
	; SelectorExpr
	%799 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%800 = load %Type_Info*, %Type_Info** %799, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %798, %Type_Info* %800)
	; SelectorExpr
	%801 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%802 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %801, i64 0
	%803 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %802, i64 0, i32 3
	%804 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %803, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %804, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$b5, i64 0, i32 0), i64 3})
	%805 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%806 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%807 = load %..rawptr, %..rawptr* %806, align 8
	%808 = bitcast %..rawptr %807 to %..rawptr*
	%809 = getelementptr inbounds %..rawptr, %..rawptr* %808, i64 0
	%810 = load %..rawptr, %..rawptr* %809, align 8
	call void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %805, %..rawptr %810, i32 112)
	br label %typematch.done-101

typematch.done-101:
	ret void
}

define void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %fi, %..complex128 %c, i64 %bits, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..complex128, align 8
	%2 = alloca i64, align 8
	%3 = alloca i32, align 4
	%4 = alloca double, align 8
	%5 = alloca double, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..complex128 zeroinitializer, %..complex128* %1
		store %..complex128 %c, %..complex128* %1
	store i64 zeroinitializer, i64* %2
		store i64 %bits, i64* %2
	store i32 zeroinitializer, i32* %3
		store i32 %verb, i32* %3
	; MatchStmt
	%6 = load i32, i32* %3, align 4
	%7 = icmp eq i32 %6, 102
	br i1 %7, label %match.case.body-4, label %match.case.next-1

match.case.next-1:
	%8 = icmp eq i32 %6, 70
	br i1 %8, label %match.case.body-4, label %match.case.next-2

match.case.next-2:
	%9 = icmp eq i32 %6, 118
	br i1 %9, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%10 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%11 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %10, i32 %11)
	; ReturnStmt
	ret void

match.case.body-4:
	; r
	store double zeroinitializer, double* %4
		; real
	%12 = load %..complex128, %..complex128* %1, align 8
	%13 = extractvalue %..complex128 %12, 0
	store double %13, double* %4
	; i
	store double zeroinitializer, double* %5
		; imag
	%14 = load %..complex128, %..complex128* %1, align 8
	%15 = extractvalue %..complex128 %14, 1
	store double %15, double* %5
	%16 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%17 = load double, double* %4, align 8
	%18 = load i64, i64* %2, align 8
	%19 = sdiv i64 %18, 2
	%20 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %16, double %17, i64 %19, i32 %20)
	; IfStmt
	; SelectorExpr
	%21 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %22, i64 0, i32 5
	%24 = load i1, i1* %23, align 1
	br i1 %24, label %if.done-7, label %cmp.and-5

cmp.and-5:
	%25 = load double, double* %5, align 8
	%26 = fcmp oge double %25, 0x0000000000000000
	br i1 %26, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%27 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%28 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %27, i64 0
	%29 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %28, i64 0, i32 3
	%30 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %29, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %30, i32 43)
	br label %if.done-7

if.done-7:
	%31 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%32 = load double, double* %5, align 8
	%33 = load i64, i64* %2, align 8
	%34 = sdiv i64 %33, 2
	%35 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %31, double %32, i64 %34, i32 %35)
	; SelectorExpr
	%36 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%37 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %36, i64 0
	%38 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %37, i64 0, i32 3
	%39 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %38, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %39, i32 105)
	br label %match.done-8

match.done-8:
	ret void
}

define void @fmt-4.fmt_quaternion(%fmt-4.Fmt_Info* %fi, %..quaternion256 %c, i64 %bits, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..quaternion256, align 8
	%2 = alloca i64, align 8
	%3 = alloca i32, align 4
	%4 = alloca double, align 8
	%5 = alloca double, align 8
	%6 = alloca double, align 8
	%7 = alloca double, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..quaternion256 zeroinitializer, %..quaternion256* %1
		store %..quaternion256 %c, %..quaternion256* %1
	store i64 zeroinitializer, i64* %2
		store i64 %bits, i64* %2
	store i32 zeroinitializer, i32* %3
		store i32 %verb, i32* %3
	; MatchStmt
	%8 = load i32, i32* %3, align 4
	%9 = icmp eq i32 %8, 102
	br i1 %9, label %match.case.body-4, label %match.case.next-1

match.case.next-1:
	%10 = icmp eq i32 %8, 70
	br i1 %10, label %match.case.body-4, label %match.case.next-2

match.case.next-2:
	%11 = icmp eq i32 %8, 118
	br i1 %11, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%12 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%13 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %12, i32 %13)
	; ReturnStmt
	ret void

match.case.body-4:
	; r
	store double zeroinitializer, double* %4
		; real
	%14 = load %..quaternion256, %..quaternion256* %1, align 8
	%15 = extractvalue %..quaternion256 %14, 0
	store double %15, double* %4
	; i
	store double zeroinitializer, double* %5
		; imag
	%16 = load %..quaternion256, %..quaternion256* %1, align 8
	%17 = extractvalue %..quaternion256 %16, 1
	store double %17, double* %5
	; j
	store double zeroinitializer, double* %6
		; jmag
	%18 = load %..quaternion256, %..quaternion256* %1, align 8
	%19 = extractvalue %..quaternion256 %18, 2
	store double %19, double* %6
	; k
	store double zeroinitializer, double* %7
		; kmag
	%20 = load %..quaternion256, %..quaternion256* %1, align 8
	%21 = extractvalue %..quaternion256 %20, 3
	store double %21, double* %7
	%22 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%23 = load double, double* %4, align 8
	%24 = load i64, i64* %2, align 8
	%25 = sdiv i64 %24, 4
	%26 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %22, double %23, i64 %25, i32 %26)
	; IfStmt
	; SelectorExpr
	%27 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%28 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %27, i64 0
	%29 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %28, i64 0, i32 5
	%30 = load i1, i1* %29, align 1
	br i1 %30, label %if.done-7, label %cmp.and-5

cmp.and-5:
	%31 = load double, double* %5, align 8
	%32 = fcmp oge double %31, 0x0000000000000000
	br i1 %32, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%33 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0
	%35 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %34, i64 0, i32 3
	%36 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %35, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %36, i32 43)
	br label %if.done-7

if.done-7:
	%37 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%38 = load double, double* %5, align 8
	%39 = load i64, i64* %2, align 8
	%40 = sdiv i64 %39, 4
	%41 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %37, double %38, i64 %40, i32 %41)
	; SelectorExpr
	%42 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%43 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %42, i64 0
	%44 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %43, i64 0, i32 3
	%45 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %44, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %45, i32 105)
	; IfStmt
	; SelectorExpr
	%46 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%47 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %46, i64 0
	%48 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %47, i64 0, i32 5
	%49 = load i1, i1* %48, align 1
	br i1 %49, label %if.done-10, label %cmp.and-8

cmp.and-8:
	%50 = load double, double* %6, align 8
	%51 = fcmp oge double %50, 0x0000000000000000
	br i1 %51, label %if.then-9, label %if.done-10

if.then-9:
	; SelectorExpr
	%52 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%53 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %52, i64 0
	%54 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %53, i64 0, i32 3
	%55 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %54, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %55, i32 43)
	br label %if.done-10

if.done-10:
	%56 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%57 = load double, double* %6, align 8
	%58 = load i64, i64* %2, align 8
	%59 = sdiv i64 %58, 4
	%60 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %56, double %57, i64 %59, i32 %60)
	; SelectorExpr
	%61 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%62 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %61, i64 0
	%63 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %62, i64 0, i32 3
	%64 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %63, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %64, i32 106)
	; IfStmt
	; SelectorExpr
	%65 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%66 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %65, i64 0
	%67 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %66, i64 0, i32 5
	%68 = load i1, i1* %67, align 1
	br i1 %68, label %if.done-13, label %cmp.and-11

cmp.and-11:
	%69 = load double, double* %7, align 8
	%70 = fcmp oge double %69, 0x0000000000000000
	br i1 %70, label %if.then-12, label %if.done-13

if.then-12:
	; SelectorExpr
	%71 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%72 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %71, i64 0
	%73 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %72, i64 0, i32 3
	%74 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %73, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %74, i32 43)
	br label %if.done-13

if.done-13:
	%75 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%76 = load double, double* %7, align 8
	%77 = load i64, i64* %2, align 8
	%78 = sdiv i64 %77, 4
	%79 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %75, double %76, i64 %78, i32 %79)
	; SelectorExpr
	%80 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%81 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %80, i64 0
	%82 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %81, i64 0, i32 3
	%83 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %82, align 8
	call void @fmt-4.write_rune(%fmt-4.String_Buffer* %83, i32 107)
	br label %match.done-14

match.done-14:
	ret void
}

define void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %fi, %..any %arg, i32 %verb) {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info*, align 8
	%4 = alloca %Type_Info*, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca i1, align 1
	%8 = alloca float, align 4
	%9 = alloca double, align 8
	%10 = alloca %..complex64, align 8
	%11 = alloca %..complex128, align 8
	%12 = alloca %..complex128, align 8
	%13 = alloca %..quaternion128, align 8
	%14 = alloca %..quaternion256, align 8
	%15 = alloca %..quaternion256, align 8
	%16 = alloca i64, align 8
	%17 = alloca i8, align 1
	%18 = alloca i16, align 2
	%19 = alloca i32, align 4
	%20 = alloca i64, align 8
	%21 = alloca i64, align 8
	%22 = alloca i8, align 1
	%23 = alloca i16, align 2
	%24 = alloca i32, align 4
	%25 = alloca i64, align 8
	%26 = alloca %..string, align 8
	%27 = alloca %..any, align 8
	store %fmt-4.Fmt_Info* zeroinitializer, %fmt-4.Fmt_Info** %0
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	store %..any zeroinitializer, %..any* %1
		store %..any %arg, %..any* %1
	store i32 zeroinitializer, i32* %2
		store i32 %verb, i32* %2
	; IfStmt
	%28 = load %..any, %..any* %1, align 8
	%29 = extractvalue %..any %28, 0
	%30 = extractvalue %..any %28, 1
	%31 = icmp eq %..rawptr %29, null
	%32 = bitcast %..rawptr null to %Type_Info*
	%33 = icmp eq %Type_Info* %30, %32
	%34 = or i1 %31, %33
	br i1 %34, label %if.then-1, label %if.done-2

if.then-1:
	; SelectorExpr
	%35 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%36 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %35, i64 0
	%37 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %36, i64 0, i32 3
	%38 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %37, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %38, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$b6, i64 0, i32 0), i64 5})
	; ReturnStmt
	ret void

if.done-2:
	; AssignStmt
	; SelectorExpr
	%39 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%40 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0
	%41 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %40, i64 0, i32 0
	%42 = load %..any, %..any* %1, align 8
	store %..any %42, %..any* %41
	; IfStmt
	%43 = load i32, i32* %2, align 4
	%44 = icmp eq i32 %43, 84
	br i1 %44, label %if.then-3, label %if.done-7

if.then-3:
	; ti
	store %Type_Info* zeroinitializer, %Type_Info** %3
		; SelectorExpr
	%45 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%46 = load %Type_Info*, %Type_Info** %45, align 8
	store %Type_Info* %46, %Type_Info** %3
	; TypeMatchStmt
	%47 = load %..any, %..any* %1, align 8
	%48 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%49 = load %Type_Info*, %Type_Info** %48, align 8
	%50 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%51 = icmp eq %Type_Info* %49, %50
	br i1 %51, label %typematch.body-5, label %typematch.next-4

typematch.next-4:
	br label %typematch.done-6

typematch.body-5:
	%52 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%53 = load %..rawptr, %..rawptr* %52, align 8
	%54 = bitcast %..rawptr %53 to %Type_Info**
	%55 = load %Type_Info*, %Type_Info** %54, align 8
	store %Type_Info* zeroinitializer, %Type_Info** %4
	store %Type_Info* %55, %Type_Info** %4
	; AssignStmt
	%56 = load %Type_Info*, %Type_Info** %4, align 8
	store %Type_Info* %56, %Type_Info** %3
	br label %typematch.done-6

typematch.done-6:
	; SelectorExpr
	%57 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%58 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %57, i64 0
	%59 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %58, i64 0, i32 3
	%60 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %59, align 8
	%61 = load %Type_Info*, %Type_Info** %3, align 8
	call void @fmt-4.write_type(%fmt-4.String_Buffer* %60, %Type_Info* %61)
	; ReturnStmt
	ret void

if.done-7:
	; base_arg
	store %..any zeroinitializer, %..any* %5
		%62 = load %..any, %..any* %1, align 8
	store %..any %62, %..any* %5
	; AssignStmt
	; SelectorExpr
	%63 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	; SelectorExpr
	%64 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%65 = load %Type_Info*, %Type_Info** %64, align 8
	%66 = call %Type_Info* @type_info_base(%Type_Info* %65)
	store %Type_Info* %66, %Type_Info** %63
	; TypeMatchStmt
	%67 = load %..any, %..any* %5, align 8
	%68 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%69 = load %Type_Info*, %Type_Info** %68, align 8
	%70 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 94
	%71 = icmp eq %Type_Info* %69, %70
	br i1 %71, label %typematch.body-9, label %typematch.next-8

typematch.next-8:
	%72 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%73 = load %Type_Info*, %Type_Info** %72, align 8
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%75 = icmp eq %Type_Info* %73, %74
	br i1 %75, label %typematch.body-11, label %typematch.next-10

typematch.body-9:
	%76 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%77 = load %..rawptr, %..rawptr* %76, align 8
	%78 = bitcast %..rawptr %77 to %..any*
	%79 = load %..any, %..any* %78, align 8
	store %..any zeroinitializer, %..any* %6
	store %..any %79, %..any* %6
	%80 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%81 = load %..any, %..any* %6, align 8
	%82 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %80, %..any %81, i32 %82)
	br label %typematch.done-46

typematch.next-10:
	%83 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%84 = load %Type_Info*, %Type_Info** %83, align 8
	%85 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%86 = icmp eq %Type_Info* %84, %85
	br i1 %86, label %typematch.body-13, label %typematch.next-12

typematch.body-11:
	%87 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%88 = load %..rawptr, %..rawptr* %87, align 8
	%89 = bitcast %..rawptr %88 to i1*
	%90 = load i1, i1* %89, align 1
	store i1 zeroinitializer, i1* %7
	store i1 %90, i1* %7
	%91 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%92 = load i1, i1* %7, align 1
	%93 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bool(%fmt-4.Fmt_Info* %91, i1 %92, i32 %93)
	br label %typematch.done-46

typematch.next-12:
	%94 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%95 = load %Type_Info*, %Type_Info** %94, align 8
	%96 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%97 = icmp eq %Type_Info* %95, %96
	br i1 %97, label %typematch.body-15, label %typematch.next-14

typematch.body-13:
	%98 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%99 = load %..rawptr, %..rawptr* %98, align 8
	%100 = bitcast %..rawptr %99 to float*
	%101 = load float, float* %100, align 4
	store float zeroinitializer, float* %8
	store float %101, float* %8
	%102 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%103 = load float, float* %8, align 4
	%104 = fpext float %103 to double
	%105 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %102, double %104, i64 32, i32 %105)
	br label %typematch.done-46

typematch.next-14:
	%106 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%107 = load %Type_Info*, %Type_Info** %106, align 8
	%108 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 96
	%109 = icmp eq %Type_Info* %107, %108
	br i1 %109, label %typematch.body-17, label %typematch.next-16

typematch.body-15:
	%110 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%111 = load %..rawptr, %..rawptr* %110, align 8
	%112 = bitcast %..rawptr %111 to double*
	%113 = load double, double* %112, align 8
	store double zeroinitializer, double* %9
	store double %113, double* %9
	%114 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%115 = load double, double* %9, align 8
	%116 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %114, double %115, i64 64, i32 %116)
	br label %typematch.done-46

typematch.next-16:
	%117 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%118 = load %Type_Info*, %Type_Info** %117, align 8
	%119 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 97
	%120 = icmp eq %Type_Info* %118, %119
	br i1 %120, label %typematch.body-19, label %typematch.next-18

typematch.body-17:
	%121 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%122 = load %..rawptr, %..rawptr* %121, align 8
	%123 = bitcast %..rawptr %122 to %..complex64*
	%124 = load %..complex64, %..complex64* %123, align 8
	store %..complex64 zeroinitializer, %..complex64* %10
	store %..complex64 %124, %..complex64* %10
	%125 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%126 = load %..complex64, %..complex64* %10, align 8
	store %..complex128 zeroinitializer, %..complex128* %11
	%127 = extractvalue %..complex64 %126, 0
	%128 = fpext float %127 to double
	%129 = extractvalue %..complex64 %126, 1
	%130 = fpext float %129 to double
	%131 = getelementptr inbounds %..complex128, %..complex128* %11, i64 0, i32 0
	store double %128, double* %131
	%132 = getelementptr inbounds %..complex128, %..complex128* %11, i64 0, i32 1
	store double %130, double* %132
	%133 = load %..complex128, %..complex128* %11, align 8
	%134 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %125, %..complex128 %133, i64 64, i32 %134)
	br label %typematch.done-46

typematch.next-18:
	%135 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%136 = load %Type_Info*, %Type_Info** %135, align 8
	%137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 98
	%138 = icmp eq %Type_Info* %136, %137
	br i1 %138, label %typematch.body-21, label %typematch.next-20

typematch.body-19:
	%139 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%140 = load %..rawptr, %..rawptr* %139, align 8
	%141 = bitcast %..rawptr %140 to %..complex128*
	%142 = load %..complex128, %..complex128* %141, align 8
	store %..complex128 zeroinitializer, %..complex128* %12
	store %..complex128 %142, %..complex128* %12
	%143 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%144 = load %..complex128, %..complex128* %12, align 8
	%145 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %143, %..complex128 %144, i64 128, i32 %145)
	br label %typematch.done-46

typematch.next-20:
	%146 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%147 = load %Type_Info*, %Type_Info** %146, align 8
	%148 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 99
	%149 = icmp eq %Type_Info* %147, %148
	br i1 %149, label %typematch.body-23, label %typematch.next-22

typematch.body-21:
	%150 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%151 = load %..rawptr, %..rawptr* %150, align 8
	%152 = bitcast %..rawptr %151 to %..quaternion128*
	%153 = load %..quaternion128, %..quaternion128* %152, align 8
	store %..quaternion128 zeroinitializer, %..quaternion128* %13
	store %..quaternion128 %153, %..quaternion128* %13
	%154 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%155 = load %..quaternion128, %..quaternion128* %13, align 8
	store %..quaternion256 zeroinitializer, %..quaternion256* %14
	%156 = extractvalue %..quaternion128 %155, 0
	%157 = fpext float %156 to double
	%158 = extractvalue %..quaternion128 %155, 1
	%159 = fpext float %158 to double
	%160 = extractvalue %..quaternion128 %155, 2
	%161 = fpext float %160 to double
	%162 = extractvalue %..quaternion128 %155, 3
	%163 = fpext float %162 to double
	%164 = getelementptr inbounds %..quaternion256, %..quaternion256* %14, i64 0, i32 0
	store double %157, double* %164
	%165 = getelementptr inbounds %..quaternion256, %..quaternion256* %14, i64 0, i32 1
	store double %159, double* %165
	%166 = getelementptr inbounds %..quaternion256, %..quaternion256* %14, i64 0, i32 2
	store double %161, double* %166
	%167 = getelementptr inbounds %..quaternion256, %..quaternion256* %14, i64 0, i32 3
	store double %163, double* %167
	%168 = load %..quaternion256, %..quaternion256* %14, align 8
	%169 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_quaternion(%fmt-4.Fmt_Info* %154, %..quaternion256 %168, i64 128, i32 %169)
	br label %typematch.done-46

typematch.next-22:
	%170 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%171 = load %Type_Info*, %Type_Info** %170, align 8
	%172 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%173 = icmp eq %Type_Info* %171, %172
	br i1 %173, label %typematch.body-25, label %typematch.next-24

typematch.body-23:
	%174 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%175 = load %..rawptr, %..rawptr* %174, align 8
	%176 = bitcast %..rawptr %175 to %..quaternion256*
	%177 = load %..quaternion256, %..quaternion256* %176, align 8
	store %..quaternion256 zeroinitializer, %..quaternion256* %15
	store %..quaternion256 %177, %..quaternion256* %15
	%178 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%179 = load %..quaternion256, %..quaternion256* %15, align 8
	%180 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_quaternion(%fmt-4.Fmt_Info* %178, %..quaternion256 %179, i64 256, i32 %180)
	br label %typematch.done-46

typematch.next-24:
	%181 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%182 = load %Type_Info*, %Type_Info** %181, align 8
	%183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%184 = icmp eq %Type_Info* %182, %183
	br i1 %184, label %typematch.body-27, label %typematch.next-26

typematch.body-25:
	%185 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%186 = load %..rawptr, %..rawptr* %185, align 8
	%187 = bitcast %..rawptr %186 to i64*
	%188 = load i64, i64* %187, align 8
	store i64 zeroinitializer, i64* %16
	store i64 %188, i64* %16
	%189 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%190 = load i64, i64* %16, align 8
	%191 = bitcast i64 %190 to i64
	%192 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %189, i64 %191, i1 true, i64 64, i32 %192)
	br label %typematch.done-46

typematch.next-26:
	%193 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%194 = load %Type_Info*, %Type_Info** %193, align 8
	%195 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%196 = icmp eq %Type_Info* %194, %195
	br i1 %196, label %typematch.body-29, label %typematch.next-28

typematch.body-27:
	%197 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%198 = load %..rawptr, %..rawptr* %197, align 8
	%199 = bitcast %..rawptr %198 to i8*
	%200 = load i8, i8* %199, align 1
	store i8 zeroinitializer, i8* %17
	store i8 %200, i8* %17
	%201 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%202 = load i8, i8* %17, align 1
	%203 = sext i8 %202 to i64
	%204 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %201, i64 %203, i1 true, i64 8, i32 %204)
	br label %typematch.done-46

typematch.next-28:
	%205 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%206 = load %Type_Info*, %Type_Info** %205, align 8
	%207 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%208 = icmp eq %Type_Info* %206, %207
	br i1 %208, label %typematch.body-31, label %typematch.next-30

typematch.body-29:
	%209 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%210 = load %..rawptr, %..rawptr* %209, align 8
	%211 = bitcast %..rawptr %210 to i16*
	%212 = load i16, i16* %211, align 2
	store i16 zeroinitializer, i16* %18
	store i16 %212, i16* %18
	%213 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%214 = load i16, i16* %18, align 2
	%215 = sext i16 %214 to i64
	%216 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %213, i64 %215, i1 true, i64 16, i32 %216)
	br label %typematch.done-46

typematch.next-30:
	%217 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%218 = load %Type_Info*, %Type_Info** %217, align 8
	%219 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%220 = icmp eq %Type_Info* %218, %219
	br i1 %220, label %typematch.body-33, label %typematch.next-32

typematch.body-31:
	%221 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%222 = load %..rawptr, %..rawptr* %221, align 8
	%223 = bitcast %..rawptr %222 to i32*
	%224 = load i32, i32* %223, align 4
	store i32 zeroinitializer, i32* %19
	store i32 %224, i32* %19
	%225 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%226 = load i32, i32* %19, align 4
	%227 = sext i32 %226 to i64
	%228 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %225, i64 %227, i1 true, i64 32, i32 %228)
	br label %typematch.done-46

typematch.next-32:
	%229 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%230 = load %Type_Info*, %Type_Info** %229, align 8
	%231 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%232 = icmp eq %Type_Info* %230, %231
	br i1 %232, label %typematch.body-35, label %typematch.next-34

typematch.body-33:
	%233 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%234 = load %..rawptr, %..rawptr* %233, align 8
	%235 = bitcast %..rawptr %234 to i64*
	%236 = load i64, i64* %235, align 8
	store i64 zeroinitializer, i64* %20
	store i64 %236, i64* %20
	%237 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%238 = load i64, i64* %20, align 8
	%239 = bitcast i64 %238 to i64
	%240 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %237, i64 %239, i1 true, i64 64, i32 %240)
	br label %typematch.done-46

typematch.next-34:
	%241 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%242 = load %Type_Info*, %Type_Info** %241, align 8
	%243 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%244 = icmp eq %Type_Info* %242, %243
	br i1 %244, label %typematch.body-37, label %typematch.next-36

typematch.body-35:
	%245 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%246 = load %..rawptr, %..rawptr* %245, align 8
	%247 = bitcast %..rawptr %246 to i64*
	%248 = load i64, i64* %247, align 8
	store i64 zeroinitializer, i64* %21
	store i64 %248, i64* %21
	%249 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%250 = load i64, i64* %21, align 8
	%251 = bitcast i64 %250 to i64
	%252 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %249, i64 %251, i1 false, i64 64, i32 %252)
	br label %typematch.done-46

typematch.next-36:
	%253 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%254 = load %Type_Info*, %Type_Info** %253, align 8
	%255 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%256 = icmp eq %Type_Info* %254, %255
	br i1 %256, label %typematch.body-39, label %typematch.next-38

typematch.body-37:
	%257 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%258 = load %..rawptr, %..rawptr* %257, align 8
	%259 = bitcast %..rawptr %258 to i8*
	%260 = load i8, i8* %259, align 1
	store i8 zeroinitializer, i8* %22
	store i8 %260, i8* %22
	%261 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%262 = load i8, i8* %22, align 1
	%263 = zext i8 %262 to i64
	%264 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %261, i64 %263, i1 false, i64 8, i32 %264)
	br label %typematch.done-46

typematch.next-38:
	%265 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%266 = load %Type_Info*, %Type_Info** %265, align 8
	%267 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%268 = icmp eq %Type_Info* %266, %267
	br i1 %268, label %typematch.body-41, label %typematch.next-40

typematch.body-39:
	%269 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%270 = load %..rawptr, %..rawptr* %269, align 8
	%271 = bitcast %..rawptr %270 to i16*
	%272 = load i16, i16* %271, align 2
	store i16 zeroinitializer, i16* %23
	store i16 %272, i16* %23
	%273 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%274 = load i16, i16* %23, align 2
	%275 = zext i16 %274 to i64
	%276 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %273, i64 %275, i1 false, i64 16, i32 %276)
	br label %typematch.done-46

typematch.next-40:
	%277 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%278 = load %Type_Info*, %Type_Info** %277, align 8
	%279 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%280 = icmp eq %Type_Info* %278, %279
	br i1 %280, label %typematch.body-43, label %typematch.next-42

typematch.body-41:
	%281 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%282 = load %..rawptr, %..rawptr* %281, align 8
	%283 = bitcast %..rawptr %282 to i32*
	%284 = load i32, i32* %283, align 4
	store i32 zeroinitializer, i32* %24
	store i32 %284, i32* %24
	%285 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%286 = load i32, i32* %24, align 4
	%287 = zext i32 %286 to i64
	%288 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %285, i64 %287, i1 false, i64 32, i32 %288)
	br label %typematch.done-46

typematch.next-42:
	%289 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%290 = load %Type_Info*, %Type_Info** %289, align 8
	%291 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%292 = icmp eq %Type_Info* %290, %291
	br i1 %292, label %typematch.body-45, label %typematch.next-44

typematch.body-43:
	%293 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%294 = load %..rawptr, %..rawptr* %293, align 8
	%295 = bitcast %..rawptr %294 to i64*
	%296 = load i64, i64* %295, align 8
	store i64 zeroinitializer, i64* %25
	store i64 %296, i64* %25
	%297 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%298 = load i64, i64* %25, align 8
	%299 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %297, i64 %298, i1 false, i64 64, i32 %299)
	br label %typematch.done-46

typematch.next-44:
	store %..any zeroinitializer, %..any* %27
	store %..any %67, %..any* %27
	%300 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%301 = load %..any, %..any* %1, align 8
	%302 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %300, %..any %301, i32 %302)
	br label %typematch.done-46

typematch.body-45:
	%303 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%304 = load %..rawptr, %..rawptr* %303, align 8
	%305 = bitcast %..rawptr %304 to %..string*
	%306 = load %..string, %..string* %305, align 8
	store %..string zeroinitializer, %..string* %26
	store %..string %306, %..string* %26
	%307 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%308 = load %..string, %..string* %26, align 8
	%309 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_string(%fmt-4.Fmt_Info* %307, %..string %308, i32 %309)
	br label %typematch.done-46

typematch.done-46:
	ret void
}

define %..string @fmt-4.sbprintln(%fmt-4.String_Buffer* %buf, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca %fmt-4.Fmt_Info, align 8
	%3 = alloca %..any, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %fmt-4.String_Buffer, align 16
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %buf, %fmt-4.String_Buffer** %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %2
		; AssignStmt
	; SelectorExpr
	%8 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 3
	%9 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	store %fmt-4.String_Buffer* %9, %fmt-4.String_Buffer** %8
	; RangeStmt
	; arg
	store %..any zeroinitializer, %..any* %3
		; i
	store i64 zeroinitializer, i64* %4
		%10 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	store i64 zeroinitializer, i64* %5
	%11 = extractvalue {%..any*, i64, i64} %10, 1
	store i64 %11, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 -1, i64* %6
	br label %for.index.loop-1

for.index.loop-1:
	%12 = load i64, i64* %6, align 8
	%13 = add i64 %12, 1
	store i64 %13, i64* %6
	%14 = load i64, i64* %5, align 8
	%15 = icmp slt i64 %13, %14
	br i1 %15, label %for.index.body-2, label %for.index.done-5

for.index.body-2:
	%16 = load i64, i64* %6, align 8
	%17 = extractvalue {%..any*, i64, i64} %10, 0
	%18 = getelementptr inbounds %..any, %..any* %17, i64 %16
	%19 = load %..any, %..any* %18, align 8
	store %..any %19, %..any* %3
	store i64 %16, i64* %4
	; IfStmt
	%20 = load i64, i64* %4, align 8
	%21 = icmp sgt i64 %20, 0
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	%22 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %22, i8 32)
	br label %if.done-4

if.done-4:
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	; IndexExpr
	%24 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%25 = extractvalue {%..any*, i64, i64} %24, 0
	%26 = extractvalue {%..any*, i64, i64} %24, 1
	%27 = load i64, i64* %4, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b7, i64 0, i32 0), i64 21}, i64 1063, i64 23, i64 %27, i64 %26)
	%28 = getelementptr inbounds %..any, %..any* %25, i64 %27
	%29 = load %..any, %..any* %28, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %23, %..any %29, i32 118)
	br label %for.index.loop-1

for.index.done-5:
	%30 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %30, i8 10)
	; ReturnStmt
	%31 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%32 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %31, i64 0
	%33 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %32, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %7
	store %fmt-4.String_Buffer %33, %fmt-4.String_Buffer* %7
	%34 = call %..string @fmt-4.to_string(%fmt-4.String_Buffer* %7)
	ret %..string %34
}

define %..string @fmt-4.sbprintf(%fmt-4.String_Buffer* %b, %..string %fmt, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %fmt-4.String_Buffer*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca %fmt-4.Fmt_Info, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca i64, align 8
	%8 = alloca %fmt-4.Fmt_Info, align 8
	%9 = alloca i64, align 8
	%10 = alloca %..string, align 8
	%11 = alloca i32, align 4
	%12 = alloca i64, align 8
	%13 = alloca %..string, align 8
	%14 = alloca %..any, align 8
	%15 = alloca i64, align 8
	%16 = alloca {%..any*, i64, i64}, align 8
	%17 = alloca i64, align 8
	%18 = alloca i64, align 8
	%19 = alloca %fmt-4.String_Buffer, align 16
	store %fmt-4.String_Buffer* zeroinitializer, %fmt-4.String_Buffer** %0
		store %fmt-4.String_Buffer* %b, %fmt-4.String_Buffer** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %fmt, %..string* %1
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %2
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %3
		store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %3
	; end
	store i64 zeroinitializer, i64* %4
		%20 = load %..string, %..string* %1, align 8
	%21 = extractvalue %..string %20, 1
	store i64 %21, i64* %4
	; arg_index
	store i64 zeroinitializer, i64* %5
		store i64 0, i64* %5
	; was_prev_index
	store i1 zeroinitializer, i1* %6
		store i1 false, i1* %6
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %7
		store i64 0, i64* %7
	br label %for.loop-1

for.loop-1:
	%22 = load i64, i64* %7, align 8
	%23 = load i64, i64* %4, align 8
	%24 = icmp slt i64 %22, %23
	br i1 %24, label %for.body-2, label %for.done-64

for.body-2:
	; AssignStmt
	; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %8
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %fmt-4.String_Buffer* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 true}, %fmt-4.Fmt_Info* %8
	%25 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%26 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, i64 0, i32 3
	store %fmt-4.String_Buffer* %25, %fmt-4.String_Buffer** %26
	%27 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, align 8
	store %fmt-4.Fmt_Info %27, %fmt-4.Fmt_Info* %3
	; prev_i
	store i64 zeroinitializer, i64* %9
		%28 = load i64, i64* %7, align 8
	store i64 %28, i64* %9
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%29 = load i64, i64* %7, align 8
	%30 = load i64, i64* %4, align 8
	%31 = icmp slt i64 %29, %30
	br i1 %31, label %cmp.and-4, label %for.done-6

cmp.and-4:
	; IndexExpr
	%32 = load %..string, %..string* %1, align 8
	%33 = extractvalue %..string %32, 0
	%34 = extractvalue %..string %32, 1
	%35 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b8, i64 0, i32 0), i64 21}, i64 1078, i64 22, i64 %35, i64 %34)
	%36 = getelementptr inbounds i8, i8* %33, i64 %35
	%37 = load i8, i8* %36, align 1
	%38 = icmp ne i8 %37, 37
	br i1 %38, label %for.body-5, label %for.done-6

for.body-5:
	%39 = load i64, i64* %7, align 8
	%40 = add i64 %39, 1
	store i64 %40, i64* %7
	br label %for.loop-3

for.done-6:
	; IfStmt
	%41 = load i64, i64* %7, align 8
	%42 = load i64, i64* %9, align 8
	%43 = icmp sgt i64 %41, %42
	br i1 %43, label %if.then-7, label %if.done-8

if.then-7:
	%44 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	; SliceExpr
	%45 = load i64, i64* %9, align 8
	%46 = load i64, i64* %7, align 8
	%47 = load %..string, %..string* %1, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$b9, i64 0, i32 0), i64 21}, i64 1082, i64 23, i64 %45, i64 %46)
	%48 = extractvalue %..string %47, 0
	%49 = getelementptr inbounds i8, i8* %48, i64 %45
	%50 = sub i64 %46, %45
	store %..string zeroinitializer, %..string* %10
	%51 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 0
	store i8* %49, i8** %51
	%52 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 1
	store i64 %50, i64* %52
	%53 = load %..string, %..string* %10, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %44, %..string %53)
	br label %if.done-8

if.done-8:
	; IfStmt
	%54 = load i64, i64* %7, align 8
	%55 = load i64, i64* %4, align 8
	%56 = icmp sge i64 %54, %55
	br i1 %56, label %if.then-9, label %if.done-10

if.then-9:
	; break
	br label %for.done-64

if.done-10:
	%57 = load i64, i64* %7, align 8
	%58 = add i64 %57, 1
	store i64 %58, i64* %7
	; ForStmt
	br label %for.loop-11

for.loop-11:
	%59 = load i64, i64* %7, align 8
	%60 = load i64, i64* %4, align 8
	%61 = icmp slt i64 %59, %60
	br i1 %61, label %for.body-12, label %for.done-24

for.body-12:
	; MatchStmt
	; IndexExpr
	%62 = load %..string, %..string* %1, align 8
	%63 = extractvalue %..string %62, 0
	%64 = extractvalue %..string %62, 1
	%65 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$ba, i64 0, i32 0), i64 21}, i64 1093, i64 14, i64 %65, i64 %64)
	%66 = getelementptr inbounds i8, i8* %63, i64 %65
	%67 = load i8, i8* %66, align 1
	%68 = icmp eq i8 %67, 43
	br i1 %68, label %match.case.body-14, label %match.case.next-13

match.case.next-13:
	%69 = icmp eq i8 %67, 45
	br i1 %69, label %match.fall.body-16, label %match.case.next-15

match.case.body-14:
	; AssignStmt
	; SelectorExpr
	%70 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 5
	store i1 true, i1* %70
	br label %match.done-23

match.case.next-15:
	%71 = icmp eq i8 %67, 32
	br i1 %71, label %match.fall.body-18, label %match.case.next-17

match.fall.body-16:
	; AssignStmt
	; SelectorExpr
	%72 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 4
	store i1 true, i1* %72
	; AssignStmt
	; SelectorExpr
	%73 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 7
	store i1 false, i1* %73
	br label %match.done-23

match.case.next-17:
	%74 = icmp eq i8 %67, 35
	br i1 %74, label %match.fall.body-20, label %match.case.next-19

match.fall.body-18:
	; AssignStmt
	; SelectorExpr
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 6
	store i1 true, i1* %75
	br label %match.done-23

match.case.next-19:
	%76 = icmp eq i8 %67, 48
	br i1 %76, label %match.fall.body-22, label %match.case.next-21

match.fall.body-20:
	; AssignStmt
	; SelectorExpr
	%77 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 8
	store i1 true, i1* %77
	br label %match.done-23

match.case.next-21:
	; break
	br label %for.done-24

match.fall.body-22:
	; AssignStmt
	; SelectorExpr
	%78 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 7
	; SelectorExpr
	%79 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 4
	%80 = load i1, i1* %79, align 1
	%81 = xor i1 -1, %80
	store i1 %81, i1* %78
	br label %match.done-23

match.done-23:
	%82 = load i64, i64* %7, align 8
	%83 = add i64 %82, 1
	store i64 %83, i64* %7
	br label %for.loop-11

for.done-24:
	; AssignStmt
	%84 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	%85 = load i64, i64* %5, align 8
	%86 = load %..string, %..string* %1, align 8
	%87 = load i64, i64* %7, align 8
	%88 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%89 = extractvalue {%..any*, i64, i64} %88, 1
	%90 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %84, i64 %85, %..string %86, i64 %87, i64 %89)
	%91 = extractvalue {i64, i64, i1} %90, 0
	%92 = extractvalue {i64, i64, i1} %90, 1
	%93 = extractvalue {i64, i64, i1} %90, 2
	store i64 %91, i64* %5
	store i64 %92, i64* %7
	store i1 %93, i1* %6
	; IfStmt
	%94 = load i64, i64* %7, align 8
	%95 = load i64, i64* %4, align 8
	%96 = icmp slt i64 %94, %95
	br i1 %96, label %cmp.and-25, label %if.else-31

cmp.and-25:
	; IndexExpr
	%97 = load %..string, %..string* %1, align 8
	%98 = extractvalue %..string %97, 0
	%99 = extractvalue %..string %97, 1
	%100 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$bb, i64 0, i32 0), i64 21}, i64 1113, i64 21, i64 %100, i64 %99)
	%101 = getelementptr inbounds i8, i8* %98, i64 %100
	%102 = load i8, i8* %101, align 1
	%103 = icmp eq i8 %102, 42
	br i1 %103, label %if.then-26, label %if.else-31

if.then-26:
	%104 = load i64, i64* %7, align 8
	%105 = add i64 %104, 1
	store i64 %105, i64* %7
	; AssignStmt
	; SelectorExpr
	%106 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 1
	; SelectorExpr
	%107 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 9
	%108 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%109 = load i64, i64* %5, align 8
	%110 = call {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64, i64} %108, i64 %109)
	%111 = extractvalue {i64, i64, i1} %110, 0
	%112 = extractvalue {i64, i64, i1} %110, 1
	%113 = extractvalue {i64, i64, i1} %110, 2
	store i64 %111, i64* %106
	store i64 %112, i64* %5
	store i1 %113, i1* %107
	; IfStmt
	; SelectorExpr
	%114 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 9
	%115 = load i1, i1* %114, align 1
	br i1 %115, label %if.done-28, label %if.then-27

if.then-27:
	%116 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %116, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$bc, i64 0, i32 0), i64 13})
	br label %if.done-28

if.done-28:
	; IfStmt
	; SelectorExpr
	%117 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 1
	%118 = load i64, i64* %117, align 8
	%119 = icmp slt i64 %118, 0
	br i1 %119, label %if.then-29, label %if.done-30

if.then-29:
	; AssignStmt
	; SelectorExpr
	%120 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 1
	; SelectorExpr
	%121 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 1
	%122 = load i64, i64* %121, align 8
	%123 = sub i64 0, %122
	store i64 %123, i64* %120
	; AssignStmt
	; SelectorExpr
	%124 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 4
	store i1 true, i1* %124
	; AssignStmt
	; SelectorExpr
	%125 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 7
	store i1 false, i1* %125
	br label %if.done-30

if.done-30:
	; AssignStmt
	store i1 false, i1* %6
	br label %if.done-35

if.else-31:
	; AssignStmt
	; SelectorExpr
	%126 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 1
	; SelectorExpr
	%127 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 9
	%128 = load %..string, %..string* %1, align 8
	%129 = load i64, i64* %7, align 8
	%130 = call {i64, i64, i1} @fmt-4._parse_int(%..string %128, i64 %129)
	%131 = extractvalue {i64, i64, i1} %130, 0
	%132 = extractvalue {i64, i64, i1} %130, 1
	%133 = extractvalue {i64, i64, i1} %130, 2
	store i64 %131, i64* %126
	store i64 %132, i64* %7
	store i1 %133, i1* %127
	; IfStmt
	%134 = load i1, i1* %6, align 1
	br i1 %134, label %cmp.and-32, label %if.done-34

cmp.and-32:
	; SelectorExpr
	%135 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 9
	%136 = load i1, i1* %135, align 1
	br i1 %136, label %if.then-33, label %if.done-34

if.then-33:
	; AssignStmt
	; SelectorExpr
	%137 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 12
	store i1 false, i1* %137
	br label %if.done-34

if.done-34:
	br label %if.done-35

if.done-35:
	; IfStmt
	%138 = load i64, i64* %7, align 8
	%139 = load i64, i64* %4, align 8
	%140 = icmp slt i64 %138, %139
	br i1 %140, label %cmp.and-36, label %if.done-50

cmp.and-36:
	; IndexExpr
	%141 = load %..string, %..string* %1, align 8
	%142 = extractvalue %..string %141, 0
	%143 = extractvalue %..string %141, 1
	%144 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$bd, i64 0, i32 0), i64 21}, i64 1134, i64 21, i64 %144, i64 %143)
	%145 = getelementptr inbounds i8, i8* %142, i64 %144
	%146 = load i8, i8* %145, align 1
	%147 = icmp eq i8 %146, 46
	br i1 %147, label %if.then-37, label %if.done-50

if.then-37:
	%148 = load i64, i64* %7, align 8
	%149 = add i64 %148, 1
	store i64 %149, i64* %7
	; IfStmt
	%150 = load i1, i1* %6, align 1
	br i1 %150, label %if.then-38, label %if.done-39

if.then-38:
	; AssignStmt
	; SelectorExpr
	%151 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 12
	store i1 false, i1* %151
	br label %if.done-39

if.done-39:
	; IfStmt
	%152 = load i64, i64* %7, align 8
	%153 = load i64, i64* %4, align 8
	%154 = icmp slt i64 %152, %153
	br i1 %154, label %cmp.and-40, label %if.else-46

cmp.and-40:
	; IndexExpr
	%155 = load %..string, %..string* %1, align 8
	%156 = extractvalue %..string %155, 0
	%157 = extractvalue %..string %155, 1
	%158 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$be, i64 0, i32 0), i64 21}, i64 1139, i64 22, i64 %158, i64 %157)
	%159 = getelementptr inbounds i8, i8* %156, i64 %158
	%160 = load i8, i8* %159, align 1
	%161 = icmp eq i8 %160, 42
	br i1 %161, label %if.then-41, label %if.else-46

if.then-41:
	; AssignStmt
	%162 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	%163 = load i64, i64* %5, align 8
	%164 = load %..string, %..string* %1, align 8
	%165 = load i64, i64* %7, align 8
	%166 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%167 = extractvalue {%..any*, i64, i64} %166, 1
	%168 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %162, i64 %163, %..string %164, i64 %165, i64 %167)
	%169 = extractvalue {i64, i64, i1} %168, 0
	%170 = extractvalue {i64, i64, i1} %168, 1
	%171 = extractvalue {i64, i64, i1} %168, 2
	store i64 %169, i64* %5
	store i64 %170, i64* %7
	store i1 %171, i1* %6
	%172 = load i64, i64* %7, align 8
	%173 = add i64 %172, 1
	store i64 %173, i64* %7
	; AssignStmt
	; SelectorExpr
	%174 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 2
	; SelectorExpr
	%175 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 10
	%176 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%177 = load i64, i64* %5, align 8
	%178 = call {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64, i64} %176, i64 %177)
	%179 = extractvalue {i64, i64, i1} %178, 0
	%180 = extractvalue {i64, i64, i1} %178, 1
	%181 = extractvalue {i64, i64, i1} %178, 2
	store i64 %179, i64* %174
	store i64 %180, i64* %5
	store i1 %181, i1* %175
	; IfStmt
	; SelectorExpr
	%182 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 2
	%183 = load i64, i64* %182, align 8
	%184 = icmp slt i64 %183, 0
	br i1 %184, label %if.then-42, label %if.done-43

if.then-42:
	; AssignStmt
	; SelectorExpr
	%185 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 2
	store i64 0, i64* %185
	; AssignStmt
	; SelectorExpr
	%186 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 10
	store i1 false, i1* %186
	br label %if.done-43

if.done-43:
	; IfStmt
	; SelectorExpr
	%187 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 10
	%188 = load i1, i1* %187, align 1
	br i1 %188, label %if.done-45, label %if.then-44

if.then-44:
	; SelectorExpr
	%189 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 3
	%190 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %189, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %190, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$bf, i64 0, i32 0), i64 17})
	br label %if.done-45

if.done-45:
	; AssignStmt
	store i1 false, i1* %6
	br label %if.done-49

if.else-46:
	; AssignStmt
	; SelectorExpr
	%191 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 2
	; SelectorExpr
	%192 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 10
	%193 = load %..string, %..string* %1, align 8
	%194 = load i64, i64* %7, align 8
	%195 = call {i64, i64, i1} @fmt-4._parse_int(%..string %193, i64 %194)
	%196 = extractvalue {i64, i64, i1} %195, 0
	%197 = extractvalue {i64, i64, i1} %195, 1
	%198 = extractvalue {i64, i64, i1} %195, 2
	store i64 %196, i64* %191
	store i64 %197, i64* %7
	store i1 %198, i1* %192
	; IfStmt
	; SelectorExpr
	%199 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 10
	%200 = load i1, i1* %199, align 1
	br i1 %200, label %if.done-48, label %if.then-47

if.then-47:
	br label %if.done-48

if.done-48:
	br label %if.done-49

if.done-49:
	br label %if.done-50

if.done-50:
	; IfStmt
	%201 = load i1, i1* %6, align 1
	br i1 %201, label %if.done-52, label %if.then-51

if.then-51:
	; AssignStmt
	%202 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	%203 = load i64, i64* %5, align 8
	%204 = load %..string, %..string* %1, align 8
	%205 = load i64, i64* %7, align 8
	%206 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%207 = extractvalue {%..any*, i64, i64} %206, 1
	%208 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %202, i64 %203, %..string %204, i64 %205, i64 %207)
	%209 = extractvalue {i64, i64, i1} %208, 0
	%210 = extractvalue {i64, i64, i1} %208, 1
	%211 = extractvalue {i64, i64, i1} %208, 2
	store i64 %209, i64* %5
	store i64 %210, i64* %7
	store i1 %211, i1* %6
	br label %if.done-52

if.done-52:
	; IfStmt
	%212 = load i64, i64* %7, align 8
	%213 = load i64, i64* %4, align 8
	%214 = icmp sge i64 %212, %213
	br i1 %214, label %if.then-53, label %if.done-54

if.then-53:
	%215 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %215, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$c0, i64 0, i32 0), i64 11})
	; break
	br label %for.done-64

if.done-54:
	; verb
	store i32 zeroinitializer, i32* %11
		; w
	store i64 zeroinitializer, i64* %12
		; SelectorExpr
	; SliceExpr
	%216 = load i64, i64* %7, align 8
	%217 = load %..string, %..string* %1, align 8
	%218 = extractvalue %..string %217, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$c1, i64 0, i32 0), i64 21}, i64 1169, i64 34, i64 %216, i64 %218)
	%219 = extractvalue %..string %217, 0
	%220 = getelementptr inbounds i8, i8* %219, i64 %216
	%221 = sub i64 %218, %216
	store %..string zeroinitializer, %..string* %13
	%222 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 0
	store i8* %220, i8** %222
	%223 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 1
	store i64 %221, i64* %223
	%224 = load %..string, %..string* %13, align 8
	%225 = call {i32, i64} @utf8-5.decode_rune-252(%..string %224)
	%226 = extractvalue {i32, i64} %225, 0
	%227 = extractvalue {i32, i64} %225, 1
	store i32 %226, i32* %11
	store i64 %227, i64* %12
	; AssignStmt
	%228 = load i64, i64* %12, align 8
	%229 = load i64, i64* %7, align 8
	%230 = add i64 %229, %228
	store i64 %230, i64* %7
	; IfStmt
	%231 = load i32, i32* %11, align 4
	%232 = icmp eq i32 %231, 37
	br i1 %232, label %if.then-55, label %if.else-56

if.then-55:
	%233 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_byte(%fmt-4.String_Buffer* %233, i8 37)
	br label %if.done-63

if.else-56:
	; IfStmt
	; SelectorExpr
	%234 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 12
	%235 = load i1, i1* %234, align 1
	br i1 %235, label %if.else-58, label %if.then-57

if.then-57:
	%236 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %236, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$c2, i64 0, i32 0), i64 23})
	br label %if.done-62

if.else-58:
	; IfStmt
	%237 = load i64, i64* %5, align 8
	%238 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%239 = extractvalue {%..any*, i64, i64} %238, 1
	%240 = icmp sge i64 %237, %239
	br i1 %240, label %if.then-59, label %if.else-60

if.then-59:
	%241 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %241, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$c3, i64 0, i32 0), i64 20})
	br label %if.done-61

if.else-60:
	%242 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	; IndexExpr
	%243 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%244 = extractvalue {%..any*, i64, i64} %243, 0
	%245 = extractvalue {%..any*, i64, i64} %243, 1
	%246 = load i64, i64* %5, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$c4, i64 0, i32 0), i64 21}, i64 1179, i64 22, i64 %246, i64 %245)
	%247 = getelementptr inbounds %..any, %..any* %244, i64 %246
	%248 = load %..any, %..any* %247, align 8
	%249 = load i32, i32* %11, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %242, %..any %248, i32 %249)
	%250 = load i64, i64* %5, align 8
	%251 = add i64 %250, 1
	store i64 %251, i64* %5
	br label %if.done-61

if.done-61:
	br label %if.done-62

if.done-62:
	br label %if.done-63

if.done-63:
	br label %for.loop-1

for.done-64:
	; IfStmt
	; SelectorExpr
	%252 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0, i32 11
	%253 = load i1, i1* %252, align 1
	br i1 %253, label %if.done-75, label %cmp.and-65

cmp.and-65:
	%254 = load i64, i64* %5, align 8
	%255 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%256 = extractvalue {%..any*, i64, i64} %255, 1
	%257 = icmp slt i64 %254, %256
	br i1 %257, label %if.then-66, label %if.done-75

if.then-66:
	%258 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %258, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$c5, i64 0, i32 0), i64 9})
	; RangeStmt
	; arg
	store %..any zeroinitializer, %..any* %14
		; index
	store i64 zeroinitializer, i64* %15
		; SliceExpr
	%259 = load i64, i64* %5, align 8
	%260 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%261 = extractvalue {%..any*, i64, i64} %260, 1
	%262 = extractvalue {%..any*, i64, i64} %260, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$c6, i64 0, i32 0), i64 21}, i64 1186, i64 25, i64 %259, i64 %261, i64 %262)
	%263 = extractvalue {%..any*, i64, i64} %260, 0
	%264 = getelementptr inbounds %..any, %..any* %263, i64 %259
	%265 = sub i64 %261, %259
	%266 = sub i64 %262, %259
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %16
	%267 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 0
	store %..any* %264, %..any** %267
	%268 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 1
	store i64 %265, i64* %268
	%269 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 2
	store i64 %266, i64* %269
	%270 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %16, align 8
	store i64 zeroinitializer, i64* %17
	%271 = extractvalue {%..any*, i64, i64} %270, 1
	store i64 %271, i64* %17
	store i64 zeroinitializer, i64* %18
	store i64 -1, i64* %18
	br label %for.index.loop-67

for.index.loop-67:
	%272 = load i64, i64* %18, align 8
	%273 = add i64 %272, 1
	store i64 %273, i64* %18
	%274 = load i64, i64* %17, align 8
	%275 = icmp slt i64 %273, %274
	br i1 %275, label %for.index.body-68, label %for.index.done-74

for.index.body-68:
	%276 = load i64, i64* %18, align 8
	%277 = extractvalue {%..any*, i64, i64} %270, 0
	%278 = getelementptr inbounds %..any, %..any* %277, i64 %276
	%279 = load %..any, %..any* %278, align 8
	store %..any %279, %..any* %14
	store i64 %276, i64* %15
	; IfStmt
	%280 = load i64, i64* %15, align 8
	%281 = icmp sgt i64 %280, 0
	br i1 %281, label %if.then-69, label %if.done-70

if.then-69:
	%282 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %282, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$c7, i64 0, i32 0), i64 2})
	br label %if.done-70

if.done-70:
	; IfStmt
	%283 = load %..any, %..any* %14, align 8
	%284 = extractvalue %..any %283, 0
	%285 = extractvalue %..any %283, 1
	%286 = icmp eq %..rawptr %284, null
	%287 = bitcast %..rawptr null to %Type_Info*
	%288 = icmp eq %Type_Info* %285, %287
	%289 = or i1 %286, %288
	br i1 %289, label %if.then-71, label %if.else-72

if.then-71:
	%290 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %290, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$c8, i64 0, i32 0), i64 5})
	br label %if.done-73

if.else-72:
	%291 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	; IndexExpr
	%292 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%293 = extractvalue {%..any*, i64, i64} %292, 0
	%294 = extractvalue {%..any*, i64, i64} %292, 1
	%295 = load i64, i64* %15, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$c9, i64 0, i32 0), i64 21}, i64 1193, i64 23, i64 %295, i64 %294)
	%296 = getelementptr inbounds %..any, %..any* %293, i64 %295
	%297 = load %..any, %..any* %296, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %291, %..any %297, i32 118)
	br label %if.done-73

if.done-73:
	br label %for.index.loop-67

for.index.done-74:
	%298 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	call void @fmt-4.write_string(%fmt-4.String_Buffer* %298, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$ca, i64 0, i32 0), i64 1})
	br label %if.done-75

if.done-75:
	; ReturnStmt
	%299 = load %fmt-4.String_Buffer*, %fmt-4.String_Buffer** %0, align 8
	%300 = getelementptr inbounds %fmt-4.String_Buffer, %fmt-4.String_Buffer* %299, i64 0
	%301 = load %fmt-4.String_Buffer, %fmt-4.String_Buffer* %300, align 8
	store %fmt-4.String_Buffer zeroinitializer, %fmt-4.String_Buffer* %19
	store %fmt-4.String_Buffer %301, %fmt-4.String_Buffer* %19
	%302 = call %..string @fmt-4.to_string(%fmt-4.String_Buffer* %19)
	ret %..string %302
}

define {[4 x i8], i64} @utf8-5.encode_rune(i32 %r) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca [4 x i8], align 1
	%2 = alloca i32, align 4
	%3 = alloca {[4 x i8], i64}, align 8
	%4 = alloca {[4 x i8], i64}, align 8
	%5 = alloca {[4 x i8], i64}, align 8
	%6 = alloca {[4 x i8], i64}, align 8
	store i32 zeroinitializer, i32* %0
		store i32 %r, i32* %0
	; buf
	store [4 x i8] zeroinitializer, [4 x i8]* %1
		; i
	store i32 zeroinitializer, i32* %2
		%7 = load i32, i32* %0, align 4
	%8 = bitcast i32 %7 to i32
	store i32 %8, i32* %2
	; IfStmt
	%9 = load i32, i32* %2, align 4
	%10 = icmp ule i32 %9, 127
	br i1 %10, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; IndexExpr
	%11 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$cb, i64 0, i32 0), i64 22}, i64 66, i64 7, i64 0, i64 4)
	%12 = load i32, i32* %0, align 4
	%13 = trunc i32 %12 to i8
	store i8 %13, i8* %11
	; ReturnStmt
	%14 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %3
	%15 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %3, i64 0, i32 0
	store [4 x i8] %14, [4 x i8]* %15
	%16 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %3, i64 0, i32 1
	store i64 1, i64* %16
	%17 = load {[4 x i8], i64}, {[4 x i8], i64}* %3, align 8
	ret {[4 x i8], i64} %17

if.done-2:
	; IfStmt
	%18 = load i32, i32* %2, align 4
	%19 = icmp ule i32 %18, 2047
	br i1 %19, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; IndexExpr
	%20 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$cc, i64 0, i32 0), i64 22}, i64 70, i64 7, i64 0, i64 4)
	%21 = load i32, i32* %0, align 4
	%22 = lshr i32 %21, 6
	%23 = trunc i32 %22 to i8
	%24 = or i8 192, %23
	store i8 %24, i8* %20
	; AssignStmt
	; IndexExpr
	%25 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$cd, i64 0, i32 0), i64 22}, i64 71, i64 7, i64 1, i64 4)
	%26 = load i32, i32* %0, align 4
	%27 = trunc i32 %26 to i8
	%28 = and i8 %27, 63
	%29 = or i8 128, %28
	store i8 %29, i8* %25
	; ReturnStmt
	%30 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %4
	%31 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %4, i64 0, i32 0
	store [4 x i8] %30, [4 x i8]* %31
	%32 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %4, i64 0, i32 1
	store i64 2, i64* %32
	%33 = load {[4 x i8], i64}, {[4 x i8], i64}* %4, align 8
	ret {[4 x i8], i64} %33

if.done-4:
	; IfStmt
	%34 = load i32, i32* %2, align 4
	%35 = icmp ugt i32 %34, 1114111
	br i1 %35, label %if.then-7, label %cmp.or-5

cmp.or-5:
	%36 = load i32, i32* %2, align 4
	%37 = icmp ule i32 55296, %36
	br i1 %37, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%38 = load i32, i32* %2, align 4
	%39 = icmp ule i32 %38, 57343
	br i1 %39, label %if.then-7, label %if.done-8

if.then-7:
	; AssignStmt
	store i32 65533, i32* %0
	br label %if.done-8

if.done-8:
	; IfStmt
	%40 = load i32, i32* %2, align 4
	%41 = icmp ule i32 %40, 65535
	br i1 %41, label %if.then-9, label %if.done-10

if.then-9:
	; AssignStmt
	; IndexExpr
	%42 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ce, i64 0, i32 0), i64 22}, i64 82, i64 7, i64 0, i64 4)
	%43 = load i32, i32* %0, align 4
	%44 = lshr i32 %43, 12
	%45 = trunc i32 %44 to i8
	%46 = or i8 224, %45
	store i8 %46, i8* %42
	; AssignStmt
	; IndexExpr
	%47 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$cf, i64 0, i32 0), i64 22}, i64 83, i64 7, i64 1, i64 4)
	%48 = load i32, i32* %0, align 4
	%49 = lshr i32 %48, 6
	%50 = trunc i32 %49 to i8
	%51 = and i8 %50, 63
	%52 = or i8 128, %51
	store i8 %52, i8* %47
	; AssignStmt
	; IndexExpr
	%53 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d0, i64 0, i32 0), i64 22}, i64 84, i64 7, i64 2, i64 4)
	%54 = load i32, i32* %0, align 4
	%55 = trunc i32 %54 to i8
	%56 = and i8 %55, 63
	%57 = or i8 128, %56
	store i8 %57, i8* %53
	; ReturnStmt
	%58 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %5
	%59 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %5, i64 0, i32 0
	store [4 x i8] %58, [4 x i8]* %59
	%60 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %5, i64 0, i32 1
	store i64 3, i64* %60
	%61 = load {[4 x i8], i64}, {[4 x i8], i64}* %5, align 8
	ret {[4 x i8], i64} %61

if.done-10:
	; AssignStmt
	; IndexExpr
	%62 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d1, i64 0, i32 0), i64 22}, i64 88, i64 6, i64 0, i64 4)
	%63 = load i32, i32* %0, align 4
	%64 = lshr i32 %63, 18
	%65 = trunc i32 %64 to i8
	%66 = or i8 240, %65
	store i8 %66, i8* %62
	; AssignStmt
	; IndexExpr
	%67 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d2, i64 0, i32 0), i64 22}, i64 89, i64 6, i64 1, i64 4)
	%68 = load i32, i32* %0, align 4
	%69 = lshr i32 %68, 12
	%70 = trunc i32 %69 to i8
	%71 = and i8 %70, 63
	%72 = or i8 128, %71
	store i8 %72, i8* %67
	; AssignStmt
	; IndexExpr
	%73 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d3, i64 0, i32 0), i64 22}, i64 90, i64 6, i64 2, i64 4)
	%74 = load i32, i32* %0, align 4
	%75 = lshr i32 %74, 6
	%76 = trunc i32 %75 to i8
	%77 = and i8 %76, 63
	%78 = or i8 128, %77
	store i8 %78, i8* %73
	; AssignStmt
	; IndexExpr
	%79 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d4, i64 0, i32 0), i64 22}, i64 91, i64 6, i64 3, i64 4)
	%80 = load i32, i32* %0, align 4
	%81 = trunc i32 %80 to i8
	%82 = and i8 %81, 63
	%83 = or i8 128, %82
	store i8 %83, i8* %79
	; ReturnStmt
	%84 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %6
	%85 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %6, i64 0, i32 0
	store [4 x i8] %84, [4 x i8]* %85
	%86 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %6, i64 0, i32 1
	store i64 4, i64* %86
	%87 = load {[4 x i8], i64}, {[4 x i8], i64}* %6, align 8
	ret {[4 x i8], i64} %87
}

define {i32, i64} @utf8-5.decode_rune-252(%..string %s) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca {i32, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; ReturnStmt
	%4 = load %..string, %..string* %0, align 8
	%5 = extractvalue %..string %4, 0
	store i8* zeroinitializer, i8** %1
	store i8* %5, i8** %1
	%6 = extractvalue %..string %4, 1
	%7 = sub i64 %6, 0
	%8 = sub i64 %6, 0
	%9 = load i8*, i8** %1, align 8
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %10, i8** %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %8, i64* %13
	%14 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%15 = call {i32, i64} @utf8-5.decode_rune-253({i8*, i64, i64} %14)
	%16 = extractvalue {i32, i64} %15, 0
	%17 = extractvalue {i32, i64} %15, 1
	store {i32, i64} zeroinitializer, {i32, i64}* %3
	%18 = getelementptr inbounds {i32, i64}, {i32, i64}* %3, i64 0, i32 0
	store i32 %16, i32* %18
	%19 = getelementptr inbounds {i32, i64}, {i32, i64}* %3, i64 0, i32 1
	store i64 %17, i64* %19
	%20 = load {i32, i64}, {i32, i64}* %3, align 8
	ret {i32, i64} %20
}

define {i32, i64} @utf8-5.decode_rune-253({i8*, i64, i64} %s) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca {i32, i64}, align 8
	%3 = alloca i8, align 1
	%4 = alloca i8, align 1
	%5 = alloca i32, align 4
	%6 = alloca {i32, i64}, align 8
	%7 = alloca i8, align 1
	%8 = alloca %utf8-5.Accept_Range, align 1
	%9 = alloca {i32, i64}, align 8
	%10 = alloca i8, align 1
	%11 = alloca {i32, i64}, align 8
	%12 = alloca {i32, i64}, align 8
	%13 = alloca i8, align 1
	%14 = alloca {i32, i64}, align 8
	%15 = alloca {i32, i64}, align 8
	%16 = alloca i8, align 1
	%17 = alloca {i32, i64}, align 8
	%18 = alloca {i32, i64}, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %s, {i8*, i64, i64}* %0
	; n
	store i64 zeroinitializer, i64* %1
		%19 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%20 = extractvalue {i8*, i64, i64} %19, 1
	store i64 %20, i64* %1
	; IfStmt
	%21 = load i64, i64* %1, align 8
	%22 = icmp slt i64 %21, 1
	br i1 %22, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %2
	%23 = getelementptr inbounds {i32, i64}, {i32, i64}* %2, i64 0, i32 0
	store i32 65533, i32* %23
	%24 = getelementptr inbounds {i32, i64}, {i32, i64}* %2, i64 0, i32 1
	store i64 0, i64* %24
	%25 = load {i32, i64}, {i32, i64}* %2, align 8
	ret {i32, i64} %25

if.done-2:
	; s0
	store i8 zeroinitializer, i8* %3
		; IndexExpr
	%26 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%27 = extractvalue {i8*, i64, i64} %26, 0
	%28 = extractvalue {i8*, i64, i64} %26, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d5, i64 0, i32 0), i64 22}, i64 101, i64 10, i64 0, i64 %28)
	%29 = getelementptr inbounds i8, i8* %27, i64 0
	%30 = load i8, i8* %29, align 1
	store i8 %30, i8* %3
	; x
	store i8 zeroinitializer, i8* %4
		; IndexExpr
	%31 = load i8, i8* %3, align 1
	%32 = zext i8 %31 to i64
	%33 = trunc i64 %32 to i32
	%34 = getelementptr inbounds [256 x i8], [256 x i8]* @utf8-5.accept_sizes, i64 0, i32 %33
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d6, i64 0, i32 0), i64 22}, i64 102, i64 20, i64 %32, i64 256)
	%35 = load i8, i8* %34, align 1
	store i8 %35, i8* %4
	; IfStmt
	%36 = load i8, i8* %4, align 1
	%37 = icmp uge i8 %36, 240
	br i1 %37, label %if.then-3, label %if.done-4

if.then-3:
	; mask
	store i32 zeroinitializer, i32* %5
		%38 = load i8, i8* %4, align 1
	%39 = zext i8 %38 to i32
	%40 = shl i32 %39, 31
	%41 = lshr i32 %40, 31
	store i32 %41, i32* %5
	; ReturnStmt
	; IndexExpr
	%42 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%43 = extractvalue {i8*, i64, i64} %42, 0
	%44 = extractvalue {i8*, i64, i64} %42, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d7, i64 0, i32 0), i64 22}, i64 105, i64 17, i64 0, i64 %44)
	%45 = getelementptr inbounds i8, i8* %43, i64 0
	%46 = load i8, i8* %45, align 1
	%47 = zext i8 %46 to i32
	%48 = load i32, i32* %5, align 4
	%49 = xor i32 %48, -1
	%50 = and i32 %47, %49
	%51 = load i32, i32* %5, align 4
	%52 = and i32 65533, %51
	%53 = or i32 %50, %52
	store {i32, i64} zeroinitializer, {i32, i64}* %6
	%54 = getelementptr inbounds {i32, i64}, {i32, i64}* %6, i64 0, i32 0
	store i32 %53, i32* %54
	%55 = getelementptr inbounds {i32, i64}, {i32, i64}* %6, i64 0, i32 1
	store i64 1, i64* %55
	%56 = load {i32, i64}, {i32, i64}* %6, align 8
	ret {i32, i64} %56

if.done-4:
	; sz
	store i8 zeroinitializer, i8* %7
		%57 = load i8, i8* %4, align 1
	%58 = and i8 %57, 7
	store i8 %58, i8* %7
	; accept
	store %utf8-5.Accept_Range zeroinitializer, %utf8-5.Accept_Range* %8
		; IndexExpr
	%59 = load i8, i8* %4, align 1
	%60 = lshr i8 %59, 4
	%61 = zext i8 %60 to i64
	%62 = trunc i64 %61 to i32
	%63 = getelementptr inbounds [5 x %utf8-5.Accept_Range], [5 x %utf8-5.Accept_Range]* @utf8-5.accept_ranges, i64 0, i32 %62
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d8, i64 0, i32 0), i64 22}, i64 108, i64 26, i64 %61, i64 5)
	%64 = load %utf8-5.Accept_Range, %utf8-5.Accept_Range* %63, align 1
	store %utf8-5.Accept_Range %64, %utf8-5.Accept_Range* %8
	; IfStmt
	%65 = load i64, i64* %1, align 8
	%66 = load i8, i8* %7, align 1
	%67 = zext i8 %66 to i64
	%68 = icmp slt i64 %65, %67
	br i1 %68, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %9
	%69 = getelementptr inbounds {i32, i64}, {i32, i64}* %9, i64 0, i32 0
	store i32 65533, i32* %69
	%70 = getelementptr inbounds {i32, i64}, {i32, i64}* %9, i64 0, i32 1
	store i64 1, i64* %70
	%71 = load {i32, i64}, {i32, i64}* %9, align 8
	ret {i32, i64} %71

if.done-6:
	; b1
	store i8 zeroinitializer, i8* %10
		; IndexExpr
	%72 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%73 = extractvalue {i8*, i64, i64} %72, 0
	%74 = extractvalue {i8*, i64, i64} %72, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$d9, i64 0, i32 0), i64 22}, i64 112, i64 10, i64 1, i64 %74)
	%75 = getelementptr inbounds i8, i8* %73, i64 1
	%76 = load i8, i8* %75, align 1
	store i8 %76, i8* %10
	; IfStmt
	%77 = load i8, i8* %10, align 1
	; SelectorExpr
	%78 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %8, i64 0, i32 0
	%79 = load i8, i8* %78, align 1
	%80 = icmp ult i8 %77, %79
	br i1 %80, label %if.then-8, label %cmp.or-7

cmp.or-7:
	; SelectorExpr
	%81 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %8, i64 0, i32 1
	%82 = load i8, i8* %81, align 1
	%83 = load i8, i8* %10, align 1
	%84 = icmp ult i8 %82, %83
	br i1 %84, label %if.then-8, label %if.done-9

if.then-8:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %11
	%85 = getelementptr inbounds {i32, i64}, {i32, i64}* %11, i64 0, i32 0
	store i32 65533, i32* %85
	%86 = getelementptr inbounds {i32, i64}, {i32, i64}* %11, i64 0, i32 1
	store i64 1, i64* %86
	%87 = load {i32, i64}, {i32, i64}* %11, align 8
	ret {i32, i64} %87

if.done-9:
	; IfStmt
	%88 = load i8, i8* %7, align 1
	%89 = icmp eq i8 %88, 2
	br i1 %89, label %if.then-10, label %if.done-11

if.then-10:
	; ReturnStmt
	%90 = load i8, i8* %3, align 1
	%91 = and i8 %90, 31
	%92 = zext i8 %91 to i32
	%93 = shl i32 %92, 6
	%94 = load i8, i8* %10, align 1
	%95 = and i8 %94, 63
	%96 = zext i8 %95 to i32
	%97 = or i32 %93, %96
	store {i32, i64} zeroinitializer, {i32, i64}* %12
	%98 = getelementptr inbounds {i32, i64}, {i32, i64}* %12, i64 0, i32 0
	store i32 %97, i32* %98
	%99 = getelementptr inbounds {i32, i64}, {i32, i64}* %12, i64 0, i32 1
	store i64 2, i64* %99
	%100 = load {i32, i64}, {i32, i64}* %12, align 8
	ret {i32, i64} %100

if.done-11:
	; b2
	store i8 zeroinitializer, i8* %13
		; IndexExpr
	%101 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%102 = extractvalue {i8*, i64, i64} %101, 0
	%103 = extractvalue {i8*, i64, i64} %101, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$da, i64 0, i32 0), i64 22}, i64 119, i64 10, i64 2, i64 %103)
	%104 = getelementptr inbounds i8, i8* %102, i64 2
	%105 = load i8, i8* %104, align 1
	store i8 %105, i8* %13
	; IfStmt
	%106 = load i8, i8* %13, align 1
	%107 = icmp ult i8 %106, 128
	br i1 %107, label %if.then-13, label %cmp.or-12

cmp.or-12:
	%108 = load i8, i8* %13, align 1
	%109 = icmp ult i8 191, %108
	br i1 %109, label %if.then-13, label %if.done-14

if.then-13:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %14
	%110 = getelementptr inbounds {i32, i64}, {i32, i64}* %14, i64 0, i32 0
	store i32 65533, i32* %110
	%111 = getelementptr inbounds {i32, i64}, {i32, i64}* %14, i64 0, i32 1
	store i64 1, i64* %111
	%112 = load {i32, i64}, {i32, i64}* %14, align 8
	ret {i32, i64} %112

if.done-14:
	; IfStmt
	%113 = load i8, i8* %7, align 1
	%114 = icmp eq i8 %113, 3
	br i1 %114, label %if.then-15, label %if.done-16

if.then-15:
	; ReturnStmt
	%115 = load i8, i8* %3, align 1
	%116 = and i8 %115, 15
	%117 = zext i8 %116 to i32
	%118 = shl i32 %117, 12
	%119 = load i8, i8* %10, align 1
	%120 = and i8 %119, 63
	%121 = zext i8 %120 to i32
	%122 = shl i32 %121, 6
	%123 = or i32 %118, %122
	%124 = load i8, i8* %13, align 1
	%125 = and i8 %124, 63
	%126 = zext i8 %125 to i32
	%127 = or i32 %123, %126
	store {i32, i64} zeroinitializer, {i32, i64}* %15
	%128 = getelementptr inbounds {i32, i64}, {i32, i64}* %15, i64 0, i32 0
	store i32 %127, i32* %128
	%129 = getelementptr inbounds {i32, i64}, {i32, i64}* %15, i64 0, i32 1
	store i64 3, i64* %129
	%130 = load {i32, i64}, {i32, i64}* %15, align 8
	ret {i32, i64} %130

if.done-16:
	; b3
	store i8 zeroinitializer, i8* %16
		; IndexExpr
	%131 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%132 = extractvalue {i8*, i64, i64} %131, 0
	%133 = extractvalue {i8*, i64, i64} %131, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$db, i64 0, i32 0), i64 22}, i64 126, i64 10, i64 3, i64 %133)
	%134 = getelementptr inbounds i8, i8* %132, i64 3
	%135 = load i8, i8* %134, align 1
	store i8 %135, i8* %16
	; IfStmt
	%136 = load i8, i8* %16, align 1
	%137 = icmp ult i8 %136, 128
	br i1 %137, label %if.then-18, label %cmp.or-17

cmp.or-17:
	%138 = load i8, i8* %16, align 1
	%139 = icmp ult i8 191, %138
	br i1 %139, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %17
	%140 = getelementptr inbounds {i32, i64}, {i32, i64}* %17, i64 0, i32 0
	store i32 65533, i32* %140
	%141 = getelementptr inbounds {i32, i64}, {i32, i64}* %17, i64 0, i32 1
	store i64 1, i64* %141
	%142 = load {i32, i64}, {i32, i64}* %17, align 8
	ret {i32, i64} %142

if.done-19:
	; ReturnStmt
	%143 = load i8, i8* %3, align 1
	%144 = and i8 %143, 7
	%145 = zext i8 %144 to i32
	%146 = shl i32 %145, 18
	%147 = load i8, i8* %10, align 1
	%148 = and i8 %147, 63
	%149 = zext i8 %148 to i32
	%150 = shl i32 %149, 12
	%151 = or i32 %146, %150
	%152 = load i8, i8* %13, align 1
	%153 = and i8 %152, 63
	%154 = zext i8 %153 to i32
	%155 = shl i32 %154, 6
	%156 = or i32 %151, %155
	%157 = load i8, i8* %16, align 1
	%158 = and i8 %157, 63
	%159 = zext i8 %158 to i32
	%160 = or i32 %156, %159
	store {i32, i64} zeroinitializer, {i32, i64}* %18
	%161 = getelementptr inbounds {i32, i64}, {i32, i64}* %18, i64 0, i32 0
	store i32 %160, i32* %161
	%162 = getelementptr inbounds {i32, i64}, {i32, i64}* %18, i64 0, i32 1
	store i64 4, i64* %162
	%163 = load {i32, i64}, {i32, i64}* %18, align 8
	ret {i32, i64} %163
}

define i64 @utf8-5.rune_count-259(%..string %s) alwaysinline {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; ReturnStmt
	%3 = load %..string, %..string* %0, align 8
	%4 = extractvalue %..string %3, 0
	store i8* zeroinitializer, i8** %1
	store i8* %4, i8** %1
	%5 = extractvalue %..string %3, 1
	%6 = sub i64 %5, 0
	%7 = sub i64 %5, 0
	%8 = load i8*, i8** %1, align 8
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%10 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %9, i8** %10
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %6, i64* %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %7, i64* %12
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%14 = call i64 @utf8-5.rune_count-260({i8*, i64, i64} %13)
	ret i64 %14
}

define i64 @utf8-5.rune_count-260({i8*, i64, i64} %s) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i8, align 1
	%5 = alloca i8, align 1
	%6 = alloca i64, align 8
	%7 = alloca %utf8-5.Accept_Range, align 1
	%8 = alloca i8, align 1
	%9 = alloca i8, align 1
	%10 = alloca i8, align 1
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %s, {i8*, i64, i64}* %0
	; count
	store i64 zeroinitializer, i64* %1
		store i64 0, i64* %1
	; n
	store i64 zeroinitializer, i64* %2
		%11 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%12 = extractvalue {i8*, i64, i64} %11, 1
	store i64 %12, i64* %2
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	br label %for.loop-1

for.loop-1:
	%13 = load i64, i64* %3, align 8
	%14 = load i64, i64* %2, align 8
	%15 = icmp slt i64 %13, %14
	br i1 %15, label %for.body-2, label %for.done-26

for.body-2:
	; DeferStmt
	; si
	store i8 zeroinitializer, i8* %4
		; IndexExpr
	%16 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%17 = extractvalue {i8*, i64, i64} %16, 0
	%18 = extractvalue {i8*, i64, i64} %16, 1
	%19 = load i64, i64* %3, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$dc, i64 0, i32 0), i64 22}, i64 227, i64 11, i64 %19, i64 %18)
	%20 = getelementptr inbounds i8, i8* %17, i64 %19
	%21 = load i8, i8* %20, align 1
	store i8 %21, i8* %4
	; IfStmt
	%22 = load i8, i8* %4, align 1
	%23 = icmp ult i8 %22, 128
	br i1 %23, label %if.then-3, label %if.done-4

if.then-3:
	%24 = load i64, i64* %3, align 8
	%25 = add i64 %24, 1
	store i64 %25, i64* %3
	; defer
	%26 = load i64, i64* %1, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %1
	; continue
	br label %for.loop-1

if.done-4:
	; x
	store i8 zeroinitializer, i8* %5
		; IndexExpr
	%28 = load i8, i8* %4, align 1
	%29 = zext i8 %28 to i64
	%30 = trunc i64 %29 to i32
	%31 = getelementptr inbounds [256 x i8], [256 x i8]* @utf8-5.accept_sizes, i64 0, i32 %30
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$dd, i64 0, i32 0), i64 22}, i64 232, i64 21, i64 %29, i64 256)
	%32 = load i8, i8* %31, align 1
	store i8 %32, i8* %5
	; IfStmt
	%33 = load i8, i8* %5, align 1
	%34 = icmp eq i8 %33, 241
	br i1 %34, label %if.then-5, label %if.done-6

if.then-5:
	%35 = load i64, i64* %3, align 8
	%36 = add i64 %35, 1
	store i64 %36, i64* %3
	; defer
	%37 = load i64, i64* %1, align 8
	%38 = add i64 %37, 1
	store i64 %38, i64* %1
	; continue
	br label %for.loop-1

if.done-6:
	; size
	store i64 zeroinitializer, i64* %6
		%39 = load i8, i8* %5, align 1
	%40 = and i8 %39, 7
	%41 = zext i8 %40 to i64
	store i64 %41, i64* %6
	; IfStmt
	%42 = load i64, i64* %3, align 8
	%43 = load i64, i64* %6, align 8
	%44 = add i64 %42, %43
	%45 = load i64, i64* %2, align 8
	%46 = icmp sgt i64 %44, %45
	br i1 %46, label %if.then-7, label %if.done-8

if.then-7:
	%47 = load i64, i64* %3, align 8
	%48 = add i64 %47, 1
	store i64 %48, i64* %3
	; defer
	%49 = load i64, i64* %1, align 8
	%50 = add i64 %49, 1
	store i64 %50, i64* %1
	; continue
	br label %for.loop-1

if.done-8:
	; ar
	store %utf8-5.Accept_Range zeroinitializer, %utf8-5.Accept_Range* %7
		; IndexExpr
	%51 = load i8, i8* %5, align 1
	%52 = lshr i8 %51, 4
	%53 = zext i8 %52 to i64
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [5 x %utf8-5.Accept_Range], [5 x %utf8-5.Accept_Range]* @utf8-5.accept_ranges, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$de, i64 0, i32 0), i64 22}, i64 242, i64 23, i64 %53, i64 5)
	%56 = load %utf8-5.Accept_Range, %utf8-5.Accept_Range* %55, align 1
	store %utf8-5.Accept_Range %56, %utf8-5.Accept_Range* %7
	; IfStmt
	; b
	store i8 zeroinitializer, i8* %8
		; IndexExpr
	%57 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%58 = extractvalue {i8*, i64, i64} %57, 0
	%59 = extractvalue {i8*, i64, i64} %57, 1
	%60 = load i64, i64* %3, align 8
	%61 = add i64 %60, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$df, i64 0, i32 0), i64 22}, i64 243, i64 13, i64 %61, i64 %59)
	%62 = getelementptr inbounds i8, i8* %58, i64 %61
	%63 = load i8, i8* %62, align 1
	store i8 %63, i8* %8
	%64 = load i8, i8* %8, align 1
	; SelectorExpr
	%65 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %7, i64 0, i32 0
	%66 = load i8, i8* %65, align 1
	%67 = icmp ult i8 %64, %66
	br i1 %67, label %if.then-10, label %cmp.or-9

cmp.or-9:
	; SelectorExpr
	%68 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %7, i64 0, i32 1
	%69 = load i8, i8* %68, align 1
	%70 = load i8, i8* %8, align 1
	%71 = icmp ult i8 %69, %70
	br i1 %71, label %if.then-10, label %if.else-11

if.then-10:
	; AssignStmt
	store i64 1, i64* %6
	br label %if.done-25

if.else-11:
	; IfStmt
	%72 = load i64, i64* %6, align 8
	%73 = icmp eq i64 %72, 2
	br i1 %73, label %if.then-12, label %if.else-13

if.then-12:
	br label %if.done-24

if.else-13:
	; IfStmt
	; b
	store i8 zeroinitializer, i8* %9
		; IndexExpr
	%74 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%75 = extractvalue {i8*, i64, i64} %74, 0
	%76 = extractvalue {i8*, i64, i64} %74, 1
	%77 = load i64, i64* %3, align 8
	%78 = add i64 %77, 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e0, i64 0, i32 0), i64 22}, i64 247, i64 20, i64 %78, i64 %76)
	%79 = getelementptr inbounds i8, i8* %75, i64 %78
	%80 = load i8, i8* %79, align 1
	store i8 %80, i8* %9
	%81 = load i8, i8* %9, align 1
	%82 = icmp ult i8 %81, 128
	br i1 %82, label %if.then-15, label %cmp.or-14

cmp.or-14:
	%83 = load i8, i8* %9, align 1
	%84 = icmp ult i8 191, %83
	br i1 %84, label %if.then-15, label %if.else-16

if.then-15:
	; AssignStmt
	store i64 1, i64* %6
	br label %if.done-23

if.else-16:
	; IfStmt
	%85 = load i64, i64* %6, align 8
	%86 = icmp eq i64 %85, 3
	br i1 %86, label %if.then-17, label %if.else-18

if.then-17:
	br label %if.done-22

if.else-18:
	; IfStmt
	; b
	store i8 zeroinitializer, i8* %10
		; IndexExpr
	%87 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%88 = extractvalue {i8*, i64, i64} %87, 0
	%89 = extractvalue {i8*, i64, i64} %87, 1
	%90 = load i64, i64* %3, align 8
	%91 = add i64 %90, 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e1, i64 0, i32 0), i64 22}, i64 251, i64 20, i64 %91, i64 %89)
	%92 = getelementptr inbounds i8, i8* %88, i64 %91
	%93 = load i8, i8* %92, align 1
	store i8 %93, i8* %10
	%94 = load i8, i8* %10, align 1
	%95 = icmp ult i8 %94, 128
	br i1 %95, label %if.then-20, label %cmp.or-19

cmp.or-19:
	%96 = load i8, i8* %10, align 1
	%97 = icmp ult i8 191, %96
	br i1 %97, label %if.then-20, label %if.done-21

if.then-20:
	; AssignStmt
	store i64 1, i64* %6
	br label %if.done-21

if.done-21:
	br label %if.done-22

if.done-22:
	br label %if.done-23

if.done-23:
	br label %if.done-24

if.done-24:
	br label %if.done-25

if.done-25:
	; AssignStmt
	%98 = load i64, i64* %6, align 8
	%99 = load i64, i64* %3, align 8
	%100 = add i64 %99, %98
	store i64 %100, i64* %3
	; defer
	%101 = load i64, i64* %1, align 8
	%102 = add i64 %101, 1
	store i64 %102, i64* %1
	br label %for.loop-1

for.done-26:
	; ReturnStmt
	%103 = load i64, i64* %1, align 8
	ret i64 %103
}

define i8* @strings-7.new_c_string(%..string %s) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca i8*, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; c
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		; make
	%5 = load %..string, %..string* %0, align 8
	%6 = extractvalue %..string %5, 1
	%7 = add i64 %6, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$e2, i64 0, i32 0), i64 25}, i64 2, i64 20, i64 0, i64 %7, i64 %7)
	%8 = mul i64 1, %7
	%9 = call %..rawptr @alloc_align(i64 %8, i64 1)
	%10 = bitcast %..rawptr %9 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %10, i8** %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %7, i64* %13
	%14 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	store {i8*, i64, i64} %14, {i8*, i64, i64}* %1
	; copy
	%15 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%16 = load %..string, %..string* %0, align 8
	%17 = extractvalue %..string %16, 0
	store i8* zeroinitializer, i8** %3
	store i8* %17, i8** %3
	%18 = extractvalue %..string %16, 1
	%19 = sub i64 %18, 0
	%20 = sub i64 %18, 0
	%21 = load i8*, i8** %3, align 8
	%22 = getelementptr inbounds i8, i8* %21, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%23 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %22, i8** %23
	%24 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %19, i64* %24
	%25 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %20, i64* %25
	%26 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%27 = extractvalue {i8*, i64, i64} %15, 0
	%28 = bitcast i8* %27 to %..rawptr
	%29 = extractvalue {i8*, i64, i64} %26, 0
	%30 = bitcast i8* %29 to %..rawptr
	%31 = extractvalue {i8*, i64, i64} %15, 1
	%32 = extractvalue {i8*, i64, i64} %26, 1
	%33 = icmp slt i64 %31, %32
	%34 = select i1 %33, i64 %31, i64 %32
	%35 = mul i64 %34, 1
	%36 = call %..rawptr @__mem_copy(%..rawptr %28, %..rawptr %30, i64 %35)
	; AssignStmt
	; IndexExpr
	%37 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%38 = extractvalue {i8*, i64, i64} %37, 0
	%39 = extractvalue {i8*, i64, i64} %37, 1
	%40 = load %..string, %..string* %0, align 8
	%41 = extractvalue %..string %40, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$e3, i64 0, i32 0), i64 25}, i64 4, i64 4, i64 %41, i64 %39)
	%42 = getelementptr inbounds i8, i8* %38, i64 %41
	store i8 0, i8* %42
	; ReturnStmt
	; IndexExpr
	%43 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%44 = extractvalue {i8*, i64, i64} %43, 0
	%45 = extractvalue {i8*, i64, i64} %43, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$e4, i64 0, i32 0), i64 25}, i64 5, i64 12, i64 0, i64 %45)
	%46 = getelementptr inbounds i8, i8* %44, i64 0
	%47 = getelementptr inbounds i8, i8* %46, i64 0
	ret i8* %47
}

define %..string @strings-7.to_odin_string(i8* %c) {
decls-0:
	%0 = alloca i8*, align 8
	%1 = alloca i64, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca %..string, align 8
	store i8* zeroinitializer, i8** %0
		store i8* %c, i8** %0
	; len
	store i64 zeroinitializer, i64* %1
		store i64 0, i64* %1
	; ForStmt
	br label %for.loop-1

for.loop-1:
	%4 = load i8*, i8** %0, align 8
	%5 = load i64, i64* %1, align 8
	%6 = getelementptr inbounds i8, i8* %4, i64 %5
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = load i8, i8* %7, align 1
	%9 = icmp ne i8 %8, 0
	br i1 %9, label %for.body-2, label %for.done-3

for.body-2:
	%10 = load i64, i64* %1, align 8
	%11 = add i64 %10, 1
	store i64 %11, i64* %1
	br label %for.loop-1

for.done-3:
	; ReturnStmt
	; slice_ptr
	%12 = load i8*, i8** %0, align 8
	%13 = load i64, i64* %1, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %12, i8** %14
	%15 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %13, i64* %15
	%16 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %13, i64* %16
	%17 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%18 = extractvalue {i8*, i64, i64} %17, 0
	%19 = extractvalue {i8*, i64, i64} %17, 1
	store %..string zeroinitializer, %..string* %3
	%20 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 0
	store i8* %18, i8** %20
	%21 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 1
	store i64 %19, i64* %21
	%22 = load %..string, %..string* %3, align 8
	ret %..string %22
}

define float @math-8.to_radians(float %degrees) {
decls-0:
	%0 = alloca float, align 4
	store float zeroinitializer, float* %0
		store float %degrees, float* %0
	; ReturnStmt
	%1 = load float, float* %0, align 4
	%2 = fmul float %1, 0x401921fb40000000
	%3 = fdiv float %2, 0x4076800000000000
	ret float %3
}

define float @math-8.dot-324({[0 x <8 x i8>], [3 x float]}* %a, {[0 x <8 x i8>], [3 x float]}* %b) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%1 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%2 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %a, align 8
	%3 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %b, align 8
	; c
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %0
		%4 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %a, align 8
	%5 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %b, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %1
	%6 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %a, i64 0, i32 1, i32 0
	%7 = load float, float* %6, align 4
	%8 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %b, i64 0, i32 1, i32 0
	%9 = load float, float* %8, align 4
	%10 = fmul float %7, %9
	%11 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 0
	store float %10, float* %11
	%12 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %a, i64 0, i32 1, i32 1
	%13 = load float, float* %12, align 4
	%14 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %b, i64 0, i32 1, i32 1
	%15 = load float, float* %14, align 4
	%16 = fmul float %13, %15
	%17 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 1
	store float %16, float* %17
	%18 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %a, i64 0, i32 1, i32 2
	%19 = load float, float* %18, align 4
	%20 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %b, i64 0, i32 1, i32 2
	%21 = load float, float* %20, align 4
	%22 = fmul float %19, %21
	%23 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 2
	store float %22, float* %23
	; vector.arith.end
	%24 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, align 8
	store {[0 x <8 x i8>], [3 x float]} %24, {[0 x <8 x i8>], [3 x float]}* %0
	; ReturnStmt
	; SelectorExpr
	%25 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %0, i64 0, i32 1, i32 0
	%26 = load float, float* %25, align 4
	; SelectorExpr
	%27 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %0, i64 0, i32 1, i32 1
	%28 = load float, float* %27, align 4
	%29 = fadd float %26, %28
	; SelectorExpr
	%30 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %0, i64 0, i32 1, i32 2
	%31 = load float, float* %30, align 4
	%32 = fadd float %29, %31
	ret float %32
}

define float @math-8.mag-328({[0 x <8 x i8>], [3 x float]}* %v) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%1 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%2 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	; ReturnStmt
	%3 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	%4 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %0
	store {[0 x <8 x i8>], [3 x float]} %3, {[0 x <8 x i8>], [3 x float]}* %0
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %1
	store {[0 x <8 x i8>], [3 x float]} %4, {[0 x <8 x i8>], [3 x float]}* %1
	%5 = call float @math-8.dot-324({[0 x <8 x i8>], [3 x float]}* %0, {[0 x <8 x i8>], [3 x float]}* %1)
	%6 = call ccc float @llvm.sqrt.f32(float %5)
	ret float %6
}

define {[0 x <8 x i8>], [3 x float]} @math-8.norm-331({[0 x <8 x i8>], [3 x float]}* %v) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%1 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%2 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%3 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	; ReturnStmt
	%4 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	%5 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %0
	store {[0 x <8 x i8>], [3 x float]} %5, {[0 x <8 x i8>], [3 x float]}* %0
	%6 = call float @math-8.mag-328({[0 x <8 x i8>], [3 x float]}* %0)
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %1
	%7 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 0
	store float %6, float* %7
	%8 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 1
	store float %6, float* %8
	%9 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 2
	store float %6, float* %9
	%10 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %2
	%11 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 0
	%12 = load float, float* %11, align 4
	%13 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 0
	%14 = load float, float* %13, align 4
	%15 = fdiv float %12, %14
	%16 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	store float %15, float* %16
	%17 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 1
	%18 = load float, float* %17, align 4
	%19 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 1
	%20 = load float, float* %19, align 4
	%21 = fdiv float %18, %20
	%22 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	store float %21, float* %22
	%23 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 2
	%24 = load float, float* %23, align 4
	%25 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 2
	%26 = load float, float* %25, align 4
	%27 = fdiv float %24, %26
	%28 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	store float %27, float* %28
	; vector.arith.end
	%29 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	ret {[0 x <8 x i8>], [3 x float]} %29
}

define [4 x [4 x float]] @math-8.mat4_identity() {
decls-0:
	; ReturnStmt
	ret [4 x [4 x float]] [[4 x float] [float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000]]
}

define [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %a, [4 x [4 x float]]* %b) {
decls-0:
	%0 = alloca [4 x [4 x float]], align 4
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = load [4 x [4 x float]], [4 x [4 x float]]* %a, align 4
	%8 = load [4 x [4 x float]], [4 x [4 x float]]* %b, align 4
	; c
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %0
		; RangeStmt
	; j
	store i64 zeroinitializer, i64* %1
		store i64 zeroinitializer, i64* %2
	store i64 0, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.interval.loop-1

for.interval.loop-1:
	%9 = load i64, i64* %2, align 8
	%10 = icmp slt i64 %9, 4
	br i1 %10, label %for.interval.body-2, label %for.interval.done-6

for.interval.body-2:
	%11 = load i64, i64* %2, align 8
	%12 = load i64, i64* %3, align 8
	%13 = load i64, i64* %2, align 8
	%14 = add i64 %13, 1
	store i64 %14, i64* %2
	%15 = load i64, i64* %3, align 8
	%16 = add i64 %15, 1
	store i64 %16, i64* %3
	store i64 %11, i64* %1
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %4
		store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	br label %for.interval.loop-3

for.interval.loop-3:
	%17 = load i64, i64* %5, align 8
	%18 = icmp slt i64 %17, 4
	br i1 %18, label %for.interval.body-4, label %for.interval.done-5

for.interval.body-4:
	%19 = load i64, i64* %5, align 8
	%20 = load i64, i64* %6, align 8
	%21 = load i64, i64* %5, align 8
	%22 = add i64 %21, 1
	store i64 %22, i64* %5
	%23 = load i64, i64* %6, align 8
	%24 = add i64 %23, 1
	store i64 %24, i64* %6
	store i64 %19, i64* %4
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%25 = load i64, i64* %1, align 8
	%26 = trunc i64 %25 to i32
	%27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 %26
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e5, i64 0, i32 0), i64 22}, i64 179, i64 6, i64 %25, i64 4)
	%28 = load i64, i64* %4, align 8
	%29 = trunc i64 %28 to i32
	%30 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 0, i32 %29
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e6, i64 0, i32 0), i64 22}, i64 179, i64 9, i64 %28, i64 4)
	; IndexExpr
	; IndexExpr
	%31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e7, i64 0, i32 0), i64 22}, i64 179, i64 16, i64 0, i64 4)
	%32 = load i64, i64* %4, align 8
	%33 = trunc i64 %32 to i32
	%34 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 0, i32 %33
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e8, i64 0, i32 0), i64 22}, i64 179, i64 19, i64 %32, i64 4)
	%35 = load float, float* %34, align 4
	; IndexExpr
	; IndexExpr
	%36 = load i64, i64* %1, align 8
	%37 = trunc i64 %36 to i32
	%38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %37
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$e9, i64 0, i32 0), i64 22}, i64 179, i64 24, i64 %36, i64 4)
	%39 = getelementptr inbounds [4 x float], [4 x float]* %38, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ea, i64 0, i32 0), i64 22}, i64 179, i64 27, i64 0, i64 4)
	%40 = load float, float* %39, align 4
	%41 = fmul float %35, %40
	; IndexExpr
	; IndexExpr
	%42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$eb, i64 0, i32 0), i64 22}, i64 180, i64 16, i64 1, i64 4)
	%43 = load i64, i64* %4, align 8
	%44 = trunc i64 %43 to i32
	%45 = getelementptr inbounds [4 x float], [4 x float]* %42, i64 0, i32 %44
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ec, i64 0, i32 0), i64 22}, i64 180, i64 19, i64 %43, i64 4)
	%46 = load float, float* %45, align 4
	; IndexExpr
	; IndexExpr
	%47 = load i64, i64* %1, align 8
	%48 = trunc i64 %47 to i32
	%49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %48
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ed, i64 0, i32 0), i64 22}, i64 180, i64 24, i64 %47, i64 4)
	%50 = getelementptr inbounds [4 x float], [4 x float]* %49, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ee, i64 0, i32 0), i64 22}, i64 180, i64 27, i64 1, i64 4)
	%51 = load float, float* %50, align 4
	%52 = fmul float %46, %51
	%53 = fadd float %41, %52
	; IndexExpr
	; IndexExpr
	%54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ef, i64 0, i32 0), i64 22}, i64 181, i64 16, i64 2, i64 4)
	%55 = load i64, i64* %4, align 8
	%56 = trunc i64 %55 to i32
	%57 = getelementptr inbounds [4 x float], [4 x float]* %54, i64 0, i32 %56
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f0, i64 0, i32 0), i64 22}, i64 181, i64 19, i64 %55, i64 4)
	%58 = load float, float* %57, align 4
	; IndexExpr
	; IndexExpr
	%59 = load i64, i64* %1, align 8
	%60 = trunc i64 %59 to i32
	%61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %60
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f1, i64 0, i32 0), i64 22}, i64 181, i64 24, i64 %59, i64 4)
	%62 = getelementptr inbounds [4 x float], [4 x float]* %61, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f2, i64 0, i32 0), i64 22}, i64 181, i64 27, i64 2, i64 4)
	%63 = load float, float* %62, align 4
	%64 = fmul float %58, %63
	%65 = fadd float %53, %64
	; IndexExpr
	; IndexExpr
	%66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f3, i64 0, i32 0), i64 22}, i64 182, i64 16, i64 3, i64 4)
	%67 = load i64, i64* %4, align 8
	%68 = trunc i64 %67 to i32
	%69 = getelementptr inbounds [4 x float], [4 x float]* %66, i64 0, i32 %68
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f4, i64 0, i32 0), i64 22}, i64 182, i64 19, i64 %67, i64 4)
	%70 = load float, float* %69, align 4
	; IndexExpr
	; IndexExpr
	%71 = load i64, i64* %1, align 8
	%72 = trunc i64 %71 to i32
	%73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %72
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f5, i64 0, i32 0), i64 22}, i64 182, i64 24, i64 %71, i64 4)
	%74 = getelementptr inbounds [4 x float], [4 x float]* %73, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f6, i64 0, i32 0), i64 22}, i64 182, i64 27, i64 3, i64 4)
	%75 = load float, float* %74, align 4
	%76 = fmul float %70, %75
	%77 = fadd float %65, %76
	store float %77, float* %30
	br label %for.interval.loop-3

for.interval.done-5:
	br label %for.interval.loop-1

for.interval.done-6:
	; ReturnStmt
	%78 = load [4 x [4 x float]], [4 x [4 x float]]* %0, align 4
	ret [4 x [4 x float]] %78
}

define {[0 x <16 x i8>], [4 x float]} @math-8.mul-339([4 x [4 x float]]* %m, {[0 x <16 x i8>], [4 x float]}* %v) {
decls-0:
	%0 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%1 = load [4 x [4 x float]], [4 x [4 x float]]* %m, align 4
	%2 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, align 16
	; ReturnStmt
	; CompoundLit
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %0
	store {[0 x <16 x i8>], [4 x float]} {[0 x <16 x i8>] zeroinitializer, [4 x float][float zeroinitializer, float zeroinitializer, float zeroinitializer, float zeroinitializer]}, {[0 x <16 x i8>], [4 x float]}* %0
	; IndexExpr
	; IndexExpr
	%3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f7, i64 0, i32 0), i64 22}, i64 190, i64 5, i64 0, i64 4)
	%4 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f8, i64 0, i32 0), i64 22}, i64 190, i64 8, i64 0, i64 4)
	%5 = load float, float* %4, align 4
	; SelectorExpr
	%6 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 0
	%7 = load float, float* %6, align 4
	%8 = fmul float %5, %7
	; IndexExpr
	; IndexExpr
	%9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$f9, i64 0, i32 0), i64 22}, i64 190, i64 19, i64 1, i64 4)
	%10 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$fa, i64 0, i32 0), i64 22}, i64 190, i64 22, i64 0, i64 4)
	%11 = load float, float* %10, align 4
	; SelectorExpr
	%12 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 1
	%13 = load float, float* %12, align 4
	%14 = fmul float %11, %13
	%15 = fadd float %8, %14
	; IndexExpr
	; IndexExpr
	%16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$fb, i64 0, i32 0), i64 22}, i64 190, i64 33, i64 2, i64 4)
	%17 = getelementptr inbounds [4 x float], [4 x float]* %16, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$fc, i64 0, i32 0), i64 22}, i64 190, i64 36, i64 0, i64 4)
	%18 = load float, float* %17, align 4
	; SelectorExpr
	%19 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 2
	%20 = load float, float* %19, align 4
	%21 = fmul float %18, %20
	%22 = fadd float %15, %21
	; IndexExpr
	; IndexExpr
	%23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$fd, i64 0, i32 0), i64 22}, i64 190, i64 47, i64 3, i64 4)
	%24 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$fe, i64 0, i32 0), i64 22}, i64 190, i64 50, i64 0, i64 4)
	%25 = load float, float* %24, align 4
	; SelectorExpr
	%26 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 3
	%27 = load float, float* %26, align 4
	%28 = fmul float %25, %27
	%29 = fadd float %22, %28
	%30 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %0, i64 0, i32 1, i32 0
	store float %29, float* %30
	; IndexExpr
	; IndexExpr
	%31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$ff, i64 0, i32 0), i64 22}, i64 191, i64 5, i64 0, i64 4)
	%32 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$100, i64 0, i32 0), i64 22}, i64 191, i64 8, i64 1, i64 4)
	%33 = load float, float* %32, align 4
	; SelectorExpr
	%34 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 0
	%35 = load float, float* %34, align 4
	%36 = fmul float %33, %35
	; IndexExpr
	; IndexExpr
	%37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$101, i64 0, i32 0), i64 22}, i64 191, i64 19, i64 1, i64 4)
	%38 = getelementptr inbounds [4 x float], [4 x float]* %37, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$102, i64 0, i32 0), i64 22}, i64 191, i64 22, i64 1, i64 4)
	%39 = load float, float* %38, align 4
	; SelectorExpr
	%40 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 1
	%41 = load float, float* %40, align 4
	%42 = fmul float %39, %41
	%43 = fadd float %36, %42
	; IndexExpr
	; IndexExpr
	%44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$103, i64 0, i32 0), i64 22}, i64 191, i64 33, i64 2, i64 4)
	%45 = getelementptr inbounds [4 x float], [4 x float]* %44, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$104, i64 0, i32 0), i64 22}, i64 191, i64 36, i64 1, i64 4)
	%46 = load float, float* %45, align 4
	; SelectorExpr
	%47 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 2
	%48 = load float, float* %47, align 4
	%49 = fmul float %46, %48
	%50 = fadd float %43, %49
	; IndexExpr
	; IndexExpr
	%51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$105, i64 0, i32 0), i64 22}, i64 191, i64 47, i64 3, i64 4)
	%52 = getelementptr inbounds [4 x float], [4 x float]* %51, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$106, i64 0, i32 0), i64 22}, i64 191, i64 50, i64 1, i64 4)
	%53 = load float, float* %52, align 4
	; SelectorExpr
	%54 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 3
	%55 = load float, float* %54, align 4
	%56 = fmul float %53, %55
	%57 = fadd float %50, %56
	%58 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %0, i64 0, i32 1, i32 1
	store float %57, float* %58
	; IndexExpr
	; IndexExpr
	%59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$107, i64 0, i32 0), i64 22}, i64 192, i64 5, i64 0, i64 4)
	%60 = getelementptr inbounds [4 x float], [4 x float]* %59, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$108, i64 0, i32 0), i64 22}, i64 192, i64 8, i64 2, i64 4)
	%61 = load float, float* %60, align 4
	; SelectorExpr
	%62 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 0
	%63 = load float, float* %62, align 4
	%64 = fmul float %61, %63
	; IndexExpr
	; IndexExpr
	%65 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$109, i64 0, i32 0), i64 22}, i64 192, i64 19, i64 1, i64 4)
	%66 = getelementptr inbounds [4 x float], [4 x float]* %65, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10a, i64 0, i32 0), i64 22}, i64 192, i64 22, i64 2, i64 4)
	%67 = load float, float* %66, align 4
	; SelectorExpr
	%68 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 1
	%69 = load float, float* %68, align 4
	%70 = fmul float %67, %69
	%71 = fadd float %64, %70
	; IndexExpr
	; IndexExpr
	%72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10b, i64 0, i32 0), i64 22}, i64 192, i64 33, i64 2, i64 4)
	%73 = getelementptr inbounds [4 x float], [4 x float]* %72, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10c, i64 0, i32 0), i64 22}, i64 192, i64 36, i64 2, i64 4)
	%74 = load float, float* %73, align 4
	; SelectorExpr
	%75 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 2
	%76 = load float, float* %75, align 4
	%77 = fmul float %74, %76
	%78 = fadd float %71, %77
	; IndexExpr
	; IndexExpr
	%79 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10d, i64 0, i32 0), i64 22}, i64 192, i64 47, i64 3, i64 4)
	%80 = getelementptr inbounds [4 x float], [4 x float]* %79, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10e, i64 0, i32 0), i64 22}, i64 192, i64 50, i64 2, i64 4)
	%81 = load float, float* %80, align 4
	; SelectorExpr
	%82 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 3
	%83 = load float, float* %82, align 4
	%84 = fmul float %81, %83
	%85 = fadd float %78, %84
	%86 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %0, i64 0, i32 1, i32 2
	store float %85, float* %86
	; IndexExpr
	; IndexExpr
	%87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$10f, i64 0, i32 0), i64 22}, i64 193, i64 5, i64 0, i64 4)
	%88 = getelementptr inbounds [4 x float], [4 x float]* %87, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$110, i64 0, i32 0), i64 22}, i64 193, i64 8, i64 3, i64 4)
	%89 = load float, float* %88, align 4
	; SelectorExpr
	%90 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 0
	%91 = load float, float* %90, align 4
	%92 = fmul float %89, %91
	; IndexExpr
	; IndexExpr
	%93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$111, i64 0, i32 0), i64 22}, i64 193, i64 19, i64 1, i64 4)
	%94 = getelementptr inbounds [4 x float], [4 x float]* %93, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$112, i64 0, i32 0), i64 22}, i64 193, i64 22, i64 3, i64 4)
	%95 = load float, float* %94, align 4
	; SelectorExpr
	%96 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 1
	%97 = load float, float* %96, align 4
	%98 = fmul float %95, %97
	%99 = fadd float %92, %98
	; IndexExpr
	; IndexExpr
	%100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$113, i64 0, i32 0), i64 22}, i64 193, i64 33, i64 2, i64 4)
	%101 = getelementptr inbounds [4 x float], [4 x float]* %100, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$114, i64 0, i32 0), i64 22}, i64 193, i64 36, i64 3, i64 4)
	%102 = load float, float* %101, align 4
	; SelectorExpr
	%103 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 2
	%104 = load float, float* %103, align 4
	%105 = fmul float %102, %104
	%106 = fadd float %99, %105
	; IndexExpr
	; IndexExpr
	%107 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$115, i64 0, i32 0), i64 22}, i64 193, i64 47, i64 3, i64 4)
	%108 = getelementptr inbounds [4 x float], [4 x float]* %107, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$116, i64 0, i32 0), i64 22}, i64 193, i64 50, i64 3, i64 4)
	%109 = load float, float* %108, align 4
	; SelectorExpr
	%110 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %v, i64 0, i32 1, i32 3
	%111 = load float, float* %110, align 4
	%112 = fmul float %109, %111
	%113 = fadd float %106, %112
	%114 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %0, i64 0, i32 1, i32 3
	store float %113, float* %114
	%115 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %0, align 16
	ret {[0 x <16 x i8>], [4 x float]} %115
}

define [4 x [4 x float]] @math-8.inverse([4 x [4 x float]]* %m) {
decls-0:
	%0 = alloca [4 x [4 x float]], align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca float, align 4
	%7 = alloca float, align 4
	%8 = alloca float, align 4
	%9 = alloca float, align 4
	%10 = alloca float, align 4
	%11 = alloca float, align 4
	%12 = alloca float, align 4
	%13 = alloca float, align 4
	%14 = alloca float, align 4
	%15 = alloca float, align 4
	%16 = alloca float, align 4
	%17 = alloca float, align 4
	%18 = alloca float, align 4
	%19 = alloca float, align 4
	%20 = alloca float, align 4
	%21 = load [4 x [4 x float]], [4 x [4 x float]]* %m, align 4
	; o
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %0
		; sf00
	store float zeroinitializer, float* %1
		; IndexExpr
	; IndexExpr
	%22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$117, i64 0, i32 0), i64 22}, i64 200, i64 12, i64 2, i64 4)
	%23 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$118, i64 0, i32 0), i64 22}, i64 200, i64 15, i64 2, i64 4)
	%24 = load float, float* %23, align 4
	; IndexExpr
	; IndexExpr
	%25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$119, i64 0, i32 0), i64 22}, i64 200, i64 22, i64 3, i64 4)
	%26 = getelementptr inbounds [4 x float], [4 x float]* %25, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11a, i64 0, i32 0), i64 22}, i64 200, i64 25, i64 3, i64 4)
	%27 = load float, float* %26, align 4
	%28 = fmul float %24, %27
	; IndexExpr
	; IndexExpr
	%29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11b, i64 0, i32 0), i64 22}, i64 200, i64 32, i64 3, i64 4)
	%30 = getelementptr inbounds [4 x float], [4 x float]* %29, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11c, i64 0, i32 0), i64 22}, i64 200, i64 35, i64 2, i64 4)
	%31 = load float, float* %30, align 4
	; IndexExpr
	; IndexExpr
	%32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11d, i64 0, i32 0), i64 22}, i64 200, i64 42, i64 2, i64 4)
	%33 = getelementptr inbounds [4 x float], [4 x float]* %32, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11e, i64 0, i32 0), i64 22}, i64 200, i64 45, i64 3, i64 4)
	%34 = load float, float* %33, align 4
	%35 = fmul float %31, %34
	%36 = fsub float %28, %35
	store float %36, float* %1
	; sf01
	store float zeroinitializer, float* %2
		; IndexExpr
	; IndexExpr
	%37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$11f, i64 0, i32 0), i64 22}, i64 201, i64 12, i64 2, i64 4)
	%38 = getelementptr inbounds [4 x float], [4 x float]* %37, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$120, i64 0, i32 0), i64 22}, i64 201, i64 15, i64 1, i64 4)
	%39 = load float, float* %38, align 4
	; IndexExpr
	; IndexExpr
	%40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$121, i64 0, i32 0), i64 22}, i64 201, i64 22, i64 3, i64 4)
	%41 = getelementptr inbounds [4 x float], [4 x float]* %40, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$122, i64 0, i32 0), i64 22}, i64 201, i64 25, i64 3, i64 4)
	%42 = load float, float* %41, align 4
	%43 = fmul float %39, %42
	; IndexExpr
	; IndexExpr
	%44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$123, i64 0, i32 0), i64 22}, i64 201, i64 32, i64 3, i64 4)
	%45 = getelementptr inbounds [4 x float], [4 x float]* %44, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$124, i64 0, i32 0), i64 22}, i64 201, i64 35, i64 1, i64 4)
	%46 = load float, float* %45, align 4
	; IndexExpr
	; IndexExpr
	%47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$125, i64 0, i32 0), i64 22}, i64 201, i64 42, i64 2, i64 4)
	%48 = getelementptr inbounds [4 x float], [4 x float]* %47, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$126, i64 0, i32 0), i64 22}, i64 201, i64 45, i64 3, i64 4)
	%49 = load float, float* %48, align 4
	%50 = fmul float %46, %49
	%51 = fsub float %43, %50
	store float %51, float* %2
	; sf02
	store float zeroinitializer, float* %3
		; IndexExpr
	; IndexExpr
	%52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$127, i64 0, i32 0), i64 22}, i64 202, i64 12, i64 2, i64 4)
	%53 = getelementptr inbounds [4 x float], [4 x float]* %52, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$128, i64 0, i32 0), i64 22}, i64 202, i64 15, i64 1, i64 4)
	%54 = load float, float* %53, align 4
	; IndexExpr
	; IndexExpr
	%55 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$129, i64 0, i32 0), i64 22}, i64 202, i64 22, i64 3, i64 4)
	%56 = getelementptr inbounds [4 x float], [4 x float]* %55, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12a, i64 0, i32 0), i64 22}, i64 202, i64 25, i64 2, i64 4)
	%57 = load float, float* %56, align 4
	%58 = fmul float %54, %57
	; IndexExpr
	; IndexExpr
	%59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12b, i64 0, i32 0), i64 22}, i64 202, i64 32, i64 3, i64 4)
	%60 = getelementptr inbounds [4 x float], [4 x float]* %59, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12c, i64 0, i32 0), i64 22}, i64 202, i64 35, i64 1, i64 4)
	%61 = load float, float* %60, align 4
	; IndexExpr
	; IndexExpr
	%62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12d, i64 0, i32 0), i64 22}, i64 202, i64 42, i64 2, i64 4)
	%63 = getelementptr inbounds [4 x float], [4 x float]* %62, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12e, i64 0, i32 0), i64 22}, i64 202, i64 45, i64 2, i64 4)
	%64 = load float, float* %63, align 4
	%65 = fmul float %61, %64
	%66 = fsub float %58, %65
	store float %66, float* %3
	; sf03
	store float zeroinitializer, float* %4
		; IndexExpr
	; IndexExpr
	%67 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$12f, i64 0, i32 0), i64 22}, i64 203, i64 12, i64 2, i64 4)
	%68 = getelementptr inbounds [4 x float], [4 x float]* %67, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$130, i64 0, i32 0), i64 22}, i64 203, i64 15, i64 0, i64 4)
	%69 = load float, float* %68, align 4
	; IndexExpr
	; IndexExpr
	%70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$131, i64 0, i32 0), i64 22}, i64 203, i64 22, i64 3, i64 4)
	%71 = getelementptr inbounds [4 x float], [4 x float]* %70, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$132, i64 0, i32 0), i64 22}, i64 203, i64 25, i64 3, i64 4)
	%72 = load float, float* %71, align 4
	%73 = fmul float %69, %72
	; IndexExpr
	; IndexExpr
	%74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$133, i64 0, i32 0), i64 22}, i64 203, i64 32, i64 3, i64 4)
	%75 = getelementptr inbounds [4 x float], [4 x float]* %74, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$134, i64 0, i32 0), i64 22}, i64 203, i64 35, i64 0, i64 4)
	%76 = load float, float* %75, align 4
	; IndexExpr
	; IndexExpr
	%77 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$135, i64 0, i32 0), i64 22}, i64 203, i64 42, i64 2, i64 4)
	%78 = getelementptr inbounds [4 x float], [4 x float]* %77, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$136, i64 0, i32 0), i64 22}, i64 203, i64 45, i64 3, i64 4)
	%79 = load float, float* %78, align 4
	%80 = fmul float %76, %79
	%81 = fsub float %73, %80
	store float %81, float* %4
	; sf04
	store float zeroinitializer, float* %5
		; IndexExpr
	; IndexExpr
	%82 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$137, i64 0, i32 0), i64 22}, i64 204, i64 12, i64 2, i64 4)
	%83 = getelementptr inbounds [4 x float], [4 x float]* %82, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$138, i64 0, i32 0), i64 22}, i64 204, i64 15, i64 0, i64 4)
	%84 = load float, float* %83, align 4
	; IndexExpr
	; IndexExpr
	%85 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$139, i64 0, i32 0), i64 22}, i64 204, i64 22, i64 3, i64 4)
	%86 = getelementptr inbounds [4 x float], [4 x float]* %85, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13a, i64 0, i32 0), i64 22}, i64 204, i64 25, i64 2, i64 4)
	%87 = load float, float* %86, align 4
	%88 = fmul float %84, %87
	; IndexExpr
	; IndexExpr
	%89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13b, i64 0, i32 0), i64 22}, i64 204, i64 32, i64 3, i64 4)
	%90 = getelementptr inbounds [4 x float], [4 x float]* %89, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13c, i64 0, i32 0), i64 22}, i64 204, i64 35, i64 0, i64 4)
	%91 = load float, float* %90, align 4
	; IndexExpr
	; IndexExpr
	%92 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13d, i64 0, i32 0), i64 22}, i64 204, i64 42, i64 2, i64 4)
	%93 = getelementptr inbounds [4 x float], [4 x float]* %92, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13e, i64 0, i32 0), i64 22}, i64 204, i64 45, i64 2, i64 4)
	%94 = load float, float* %93, align 4
	%95 = fmul float %91, %94
	%96 = fsub float %88, %95
	store float %96, float* %5
	; sf05
	store float zeroinitializer, float* %6
		; IndexExpr
	; IndexExpr
	%97 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$13f, i64 0, i32 0), i64 22}, i64 205, i64 12, i64 2, i64 4)
	%98 = getelementptr inbounds [4 x float], [4 x float]* %97, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$140, i64 0, i32 0), i64 22}, i64 205, i64 15, i64 0, i64 4)
	%99 = load float, float* %98, align 4
	; IndexExpr
	; IndexExpr
	%100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$141, i64 0, i32 0), i64 22}, i64 205, i64 22, i64 3, i64 4)
	%101 = getelementptr inbounds [4 x float], [4 x float]* %100, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$142, i64 0, i32 0), i64 22}, i64 205, i64 25, i64 1, i64 4)
	%102 = load float, float* %101, align 4
	%103 = fmul float %99, %102
	; IndexExpr
	; IndexExpr
	%104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$143, i64 0, i32 0), i64 22}, i64 205, i64 32, i64 3, i64 4)
	%105 = getelementptr inbounds [4 x float], [4 x float]* %104, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$144, i64 0, i32 0), i64 22}, i64 205, i64 35, i64 0, i64 4)
	%106 = load float, float* %105, align 4
	; IndexExpr
	; IndexExpr
	%107 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$145, i64 0, i32 0), i64 22}, i64 205, i64 42, i64 2, i64 4)
	%108 = getelementptr inbounds [4 x float], [4 x float]* %107, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$146, i64 0, i32 0), i64 22}, i64 205, i64 45, i64 1, i64 4)
	%109 = load float, float* %108, align 4
	%110 = fmul float %106, %109
	%111 = fsub float %103, %110
	store float %111, float* %6
	; sf06
	store float zeroinitializer, float* %7
		; IndexExpr
	; IndexExpr
	%112 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$147, i64 0, i32 0), i64 22}, i64 206, i64 12, i64 1, i64 4)
	%113 = getelementptr inbounds [4 x float], [4 x float]* %112, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$148, i64 0, i32 0), i64 22}, i64 206, i64 15, i64 2, i64 4)
	%114 = load float, float* %113, align 4
	; IndexExpr
	; IndexExpr
	%115 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$149, i64 0, i32 0), i64 22}, i64 206, i64 22, i64 3, i64 4)
	%116 = getelementptr inbounds [4 x float], [4 x float]* %115, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14a, i64 0, i32 0), i64 22}, i64 206, i64 25, i64 3, i64 4)
	%117 = load float, float* %116, align 4
	%118 = fmul float %114, %117
	; IndexExpr
	; IndexExpr
	%119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14b, i64 0, i32 0), i64 22}, i64 206, i64 32, i64 3, i64 4)
	%120 = getelementptr inbounds [4 x float], [4 x float]* %119, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14c, i64 0, i32 0), i64 22}, i64 206, i64 35, i64 2, i64 4)
	%121 = load float, float* %120, align 4
	; IndexExpr
	; IndexExpr
	%122 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14d, i64 0, i32 0), i64 22}, i64 206, i64 42, i64 1, i64 4)
	%123 = getelementptr inbounds [4 x float], [4 x float]* %122, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14e, i64 0, i32 0), i64 22}, i64 206, i64 45, i64 3, i64 4)
	%124 = load float, float* %123, align 4
	%125 = fmul float %121, %124
	%126 = fsub float %118, %125
	store float %126, float* %7
	; sf07
	store float zeroinitializer, float* %8
		; IndexExpr
	; IndexExpr
	%127 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$14f, i64 0, i32 0), i64 22}, i64 207, i64 12, i64 1, i64 4)
	%128 = getelementptr inbounds [4 x float], [4 x float]* %127, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$150, i64 0, i32 0), i64 22}, i64 207, i64 15, i64 1, i64 4)
	%129 = load float, float* %128, align 4
	; IndexExpr
	; IndexExpr
	%130 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$151, i64 0, i32 0), i64 22}, i64 207, i64 22, i64 3, i64 4)
	%131 = getelementptr inbounds [4 x float], [4 x float]* %130, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$152, i64 0, i32 0), i64 22}, i64 207, i64 25, i64 3, i64 4)
	%132 = load float, float* %131, align 4
	%133 = fmul float %129, %132
	; IndexExpr
	; IndexExpr
	%134 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$153, i64 0, i32 0), i64 22}, i64 207, i64 32, i64 3, i64 4)
	%135 = getelementptr inbounds [4 x float], [4 x float]* %134, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$154, i64 0, i32 0), i64 22}, i64 207, i64 35, i64 1, i64 4)
	%136 = load float, float* %135, align 4
	; IndexExpr
	; IndexExpr
	%137 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$155, i64 0, i32 0), i64 22}, i64 207, i64 42, i64 1, i64 4)
	%138 = getelementptr inbounds [4 x float], [4 x float]* %137, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$156, i64 0, i32 0), i64 22}, i64 207, i64 45, i64 3, i64 4)
	%139 = load float, float* %138, align 4
	%140 = fmul float %136, %139
	%141 = fsub float %133, %140
	store float %141, float* %8
	; sf08
	store float zeroinitializer, float* %9
		; IndexExpr
	; IndexExpr
	%142 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$157, i64 0, i32 0), i64 22}, i64 208, i64 12, i64 1, i64 4)
	%143 = getelementptr inbounds [4 x float], [4 x float]* %142, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$158, i64 0, i32 0), i64 22}, i64 208, i64 15, i64 1, i64 4)
	%144 = load float, float* %143, align 4
	; IndexExpr
	; IndexExpr
	%145 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$159, i64 0, i32 0), i64 22}, i64 208, i64 22, i64 3, i64 4)
	%146 = getelementptr inbounds [4 x float], [4 x float]* %145, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15a, i64 0, i32 0), i64 22}, i64 208, i64 25, i64 2, i64 4)
	%147 = load float, float* %146, align 4
	%148 = fmul float %144, %147
	; IndexExpr
	; IndexExpr
	%149 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15b, i64 0, i32 0), i64 22}, i64 208, i64 32, i64 3, i64 4)
	%150 = getelementptr inbounds [4 x float], [4 x float]* %149, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15c, i64 0, i32 0), i64 22}, i64 208, i64 35, i64 1, i64 4)
	%151 = load float, float* %150, align 4
	; IndexExpr
	; IndexExpr
	%152 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15d, i64 0, i32 0), i64 22}, i64 208, i64 42, i64 1, i64 4)
	%153 = getelementptr inbounds [4 x float], [4 x float]* %152, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15e, i64 0, i32 0), i64 22}, i64 208, i64 45, i64 2, i64 4)
	%154 = load float, float* %153, align 4
	%155 = fmul float %151, %154
	%156 = fsub float %148, %155
	store float %156, float* %9
	; sf09
	store float zeroinitializer, float* %10
		; IndexExpr
	; IndexExpr
	%157 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$15f, i64 0, i32 0), i64 22}, i64 209, i64 12, i64 1, i64 4)
	%158 = getelementptr inbounds [4 x float], [4 x float]* %157, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$160, i64 0, i32 0), i64 22}, i64 209, i64 15, i64 0, i64 4)
	%159 = load float, float* %158, align 4
	; IndexExpr
	; IndexExpr
	%160 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$161, i64 0, i32 0), i64 22}, i64 209, i64 22, i64 3, i64 4)
	%161 = getelementptr inbounds [4 x float], [4 x float]* %160, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$162, i64 0, i32 0), i64 22}, i64 209, i64 25, i64 3, i64 4)
	%162 = load float, float* %161, align 4
	%163 = fmul float %159, %162
	; IndexExpr
	; IndexExpr
	%164 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$163, i64 0, i32 0), i64 22}, i64 209, i64 32, i64 3, i64 4)
	%165 = getelementptr inbounds [4 x float], [4 x float]* %164, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$164, i64 0, i32 0), i64 22}, i64 209, i64 35, i64 0, i64 4)
	%166 = load float, float* %165, align 4
	; IndexExpr
	; IndexExpr
	%167 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$165, i64 0, i32 0), i64 22}, i64 209, i64 42, i64 1, i64 4)
	%168 = getelementptr inbounds [4 x float], [4 x float]* %167, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$166, i64 0, i32 0), i64 22}, i64 209, i64 45, i64 3, i64 4)
	%169 = load float, float* %168, align 4
	%170 = fmul float %166, %169
	%171 = fsub float %163, %170
	store float %171, float* %10
	; sf10
	store float zeroinitializer, float* %11
		; IndexExpr
	; IndexExpr
	%172 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$167, i64 0, i32 0), i64 22}, i64 210, i64 12, i64 1, i64 4)
	%173 = getelementptr inbounds [4 x float], [4 x float]* %172, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$168, i64 0, i32 0), i64 22}, i64 210, i64 15, i64 0, i64 4)
	%174 = load float, float* %173, align 4
	; IndexExpr
	; IndexExpr
	%175 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$169, i64 0, i32 0), i64 22}, i64 210, i64 22, i64 3, i64 4)
	%176 = getelementptr inbounds [4 x float], [4 x float]* %175, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16a, i64 0, i32 0), i64 22}, i64 210, i64 25, i64 2, i64 4)
	%177 = load float, float* %176, align 4
	%178 = fmul float %174, %177
	; IndexExpr
	; IndexExpr
	%179 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16b, i64 0, i32 0), i64 22}, i64 210, i64 32, i64 3, i64 4)
	%180 = getelementptr inbounds [4 x float], [4 x float]* %179, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16c, i64 0, i32 0), i64 22}, i64 210, i64 35, i64 0, i64 4)
	%181 = load float, float* %180, align 4
	; IndexExpr
	; IndexExpr
	%182 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16d, i64 0, i32 0), i64 22}, i64 210, i64 42, i64 1, i64 4)
	%183 = getelementptr inbounds [4 x float], [4 x float]* %182, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16e, i64 0, i32 0), i64 22}, i64 210, i64 45, i64 2, i64 4)
	%184 = load float, float* %183, align 4
	%185 = fmul float %181, %184
	%186 = fsub float %178, %185
	store float %186, float* %11
	; sf11
	store float zeroinitializer, float* %12
		; IndexExpr
	; IndexExpr
	%187 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$16f, i64 0, i32 0), i64 22}, i64 211, i64 12, i64 1, i64 4)
	%188 = getelementptr inbounds [4 x float], [4 x float]* %187, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$170, i64 0, i32 0), i64 22}, i64 211, i64 15, i64 1, i64 4)
	%189 = load float, float* %188, align 4
	; IndexExpr
	; IndexExpr
	%190 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$171, i64 0, i32 0), i64 22}, i64 211, i64 22, i64 3, i64 4)
	%191 = getelementptr inbounds [4 x float], [4 x float]* %190, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$172, i64 0, i32 0), i64 22}, i64 211, i64 25, i64 3, i64 4)
	%192 = load float, float* %191, align 4
	%193 = fmul float %189, %192
	; IndexExpr
	; IndexExpr
	%194 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$173, i64 0, i32 0), i64 22}, i64 211, i64 32, i64 3, i64 4)
	%195 = getelementptr inbounds [4 x float], [4 x float]* %194, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$174, i64 0, i32 0), i64 22}, i64 211, i64 35, i64 1, i64 4)
	%196 = load float, float* %195, align 4
	; IndexExpr
	; IndexExpr
	%197 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$175, i64 0, i32 0), i64 22}, i64 211, i64 42, i64 1, i64 4)
	%198 = getelementptr inbounds [4 x float], [4 x float]* %197, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$176, i64 0, i32 0), i64 22}, i64 211, i64 45, i64 3, i64 4)
	%199 = load float, float* %198, align 4
	%200 = fmul float %196, %199
	%201 = fsub float %193, %200
	store float %201, float* %12
	; sf12
	store float zeroinitializer, float* %13
		; IndexExpr
	; IndexExpr
	%202 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$177, i64 0, i32 0), i64 22}, i64 212, i64 12, i64 1, i64 4)
	%203 = getelementptr inbounds [4 x float], [4 x float]* %202, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$178, i64 0, i32 0), i64 22}, i64 212, i64 15, i64 0, i64 4)
	%204 = load float, float* %203, align 4
	; IndexExpr
	; IndexExpr
	%205 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$179, i64 0, i32 0), i64 22}, i64 212, i64 22, i64 3, i64 4)
	%206 = getelementptr inbounds [4 x float], [4 x float]* %205, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17a, i64 0, i32 0), i64 22}, i64 212, i64 25, i64 1, i64 4)
	%207 = load float, float* %206, align 4
	%208 = fmul float %204, %207
	; IndexExpr
	; IndexExpr
	%209 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17b, i64 0, i32 0), i64 22}, i64 212, i64 32, i64 3, i64 4)
	%210 = getelementptr inbounds [4 x float], [4 x float]* %209, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17c, i64 0, i32 0), i64 22}, i64 212, i64 35, i64 0, i64 4)
	%211 = load float, float* %210, align 4
	; IndexExpr
	; IndexExpr
	%212 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17d, i64 0, i32 0), i64 22}, i64 212, i64 42, i64 1, i64 4)
	%213 = getelementptr inbounds [4 x float], [4 x float]* %212, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17e, i64 0, i32 0), i64 22}, i64 212, i64 45, i64 1, i64 4)
	%214 = load float, float* %213, align 4
	%215 = fmul float %211, %214
	%216 = fsub float %208, %215
	store float %216, float* %13
	; sf13
	store float zeroinitializer, float* %14
		; IndexExpr
	; IndexExpr
	%217 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$17f, i64 0, i32 0), i64 22}, i64 213, i64 12, i64 1, i64 4)
	%218 = getelementptr inbounds [4 x float], [4 x float]* %217, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$180, i64 0, i32 0), i64 22}, i64 213, i64 15, i64 2, i64 4)
	%219 = load float, float* %218, align 4
	; IndexExpr
	; IndexExpr
	%220 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$181, i64 0, i32 0), i64 22}, i64 213, i64 22, i64 2, i64 4)
	%221 = getelementptr inbounds [4 x float], [4 x float]* %220, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$182, i64 0, i32 0), i64 22}, i64 213, i64 25, i64 3, i64 4)
	%222 = load float, float* %221, align 4
	%223 = fmul float %219, %222
	; IndexExpr
	; IndexExpr
	%224 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$183, i64 0, i32 0), i64 22}, i64 213, i64 32, i64 2, i64 4)
	%225 = getelementptr inbounds [4 x float], [4 x float]* %224, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$184, i64 0, i32 0), i64 22}, i64 213, i64 35, i64 2, i64 4)
	%226 = load float, float* %225, align 4
	; IndexExpr
	; IndexExpr
	%227 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$185, i64 0, i32 0), i64 22}, i64 213, i64 42, i64 1, i64 4)
	%228 = getelementptr inbounds [4 x float], [4 x float]* %227, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$186, i64 0, i32 0), i64 22}, i64 213, i64 45, i64 3, i64 4)
	%229 = load float, float* %228, align 4
	%230 = fmul float %226, %229
	%231 = fsub float %223, %230
	store float %231, float* %14
	; sf14
	store float zeroinitializer, float* %15
		; IndexExpr
	; IndexExpr
	%232 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$187, i64 0, i32 0), i64 22}, i64 214, i64 12, i64 1, i64 4)
	%233 = getelementptr inbounds [4 x float], [4 x float]* %232, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$188, i64 0, i32 0), i64 22}, i64 214, i64 15, i64 1, i64 4)
	%234 = load float, float* %233, align 4
	; IndexExpr
	; IndexExpr
	%235 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$189, i64 0, i32 0), i64 22}, i64 214, i64 22, i64 2, i64 4)
	%236 = getelementptr inbounds [4 x float], [4 x float]* %235, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18a, i64 0, i32 0), i64 22}, i64 214, i64 25, i64 3, i64 4)
	%237 = load float, float* %236, align 4
	%238 = fmul float %234, %237
	; IndexExpr
	; IndexExpr
	%239 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18b, i64 0, i32 0), i64 22}, i64 214, i64 32, i64 2, i64 4)
	%240 = getelementptr inbounds [4 x float], [4 x float]* %239, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18c, i64 0, i32 0), i64 22}, i64 214, i64 35, i64 1, i64 4)
	%241 = load float, float* %240, align 4
	; IndexExpr
	; IndexExpr
	%242 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18d, i64 0, i32 0), i64 22}, i64 214, i64 42, i64 1, i64 4)
	%243 = getelementptr inbounds [4 x float], [4 x float]* %242, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18e, i64 0, i32 0), i64 22}, i64 214, i64 45, i64 3, i64 4)
	%244 = load float, float* %243, align 4
	%245 = fmul float %241, %244
	%246 = fsub float %238, %245
	store float %246, float* %15
	; sf15
	store float zeroinitializer, float* %16
		; IndexExpr
	; IndexExpr
	%247 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$18f, i64 0, i32 0), i64 22}, i64 215, i64 12, i64 1, i64 4)
	%248 = getelementptr inbounds [4 x float], [4 x float]* %247, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$190, i64 0, i32 0), i64 22}, i64 215, i64 15, i64 1, i64 4)
	%249 = load float, float* %248, align 4
	; IndexExpr
	; IndexExpr
	%250 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$191, i64 0, i32 0), i64 22}, i64 215, i64 22, i64 2, i64 4)
	%251 = getelementptr inbounds [4 x float], [4 x float]* %250, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$192, i64 0, i32 0), i64 22}, i64 215, i64 25, i64 2, i64 4)
	%252 = load float, float* %251, align 4
	%253 = fmul float %249, %252
	; IndexExpr
	; IndexExpr
	%254 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$193, i64 0, i32 0), i64 22}, i64 215, i64 32, i64 2, i64 4)
	%255 = getelementptr inbounds [4 x float], [4 x float]* %254, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$194, i64 0, i32 0), i64 22}, i64 215, i64 35, i64 1, i64 4)
	%256 = load float, float* %255, align 4
	; IndexExpr
	; IndexExpr
	%257 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$195, i64 0, i32 0), i64 22}, i64 215, i64 42, i64 1, i64 4)
	%258 = getelementptr inbounds [4 x float], [4 x float]* %257, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$196, i64 0, i32 0), i64 22}, i64 215, i64 45, i64 2, i64 4)
	%259 = load float, float* %258, align 4
	%260 = fmul float %256, %259
	%261 = fsub float %253, %260
	store float %261, float* %16
	; sf16
	store float zeroinitializer, float* %17
		; IndexExpr
	; IndexExpr
	%262 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$197, i64 0, i32 0), i64 22}, i64 216, i64 12, i64 1, i64 4)
	%263 = getelementptr inbounds [4 x float], [4 x float]* %262, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$198, i64 0, i32 0), i64 22}, i64 216, i64 15, i64 0, i64 4)
	%264 = load float, float* %263, align 4
	; IndexExpr
	; IndexExpr
	%265 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$199, i64 0, i32 0), i64 22}, i64 216, i64 22, i64 2, i64 4)
	%266 = getelementptr inbounds [4 x float], [4 x float]* %265, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19a, i64 0, i32 0), i64 22}, i64 216, i64 25, i64 3, i64 4)
	%267 = load float, float* %266, align 4
	%268 = fmul float %264, %267
	; IndexExpr
	; IndexExpr
	%269 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19b, i64 0, i32 0), i64 22}, i64 216, i64 32, i64 2, i64 4)
	%270 = getelementptr inbounds [4 x float], [4 x float]* %269, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19c, i64 0, i32 0), i64 22}, i64 216, i64 35, i64 0, i64 4)
	%271 = load float, float* %270, align 4
	; IndexExpr
	; IndexExpr
	%272 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19d, i64 0, i32 0), i64 22}, i64 216, i64 42, i64 1, i64 4)
	%273 = getelementptr inbounds [4 x float], [4 x float]* %272, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19e, i64 0, i32 0), i64 22}, i64 216, i64 45, i64 3, i64 4)
	%274 = load float, float* %273, align 4
	%275 = fmul float %271, %274
	%276 = fsub float %268, %275
	store float %276, float* %17
	; sf17
	store float zeroinitializer, float* %18
		; IndexExpr
	; IndexExpr
	%277 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$19f, i64 0, i32 0), i64 22}, i64 217, i64 12, i64 1, i64 4)
	%278 = getelementptr inbounds [4 x float], [4 x float]* %277, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a0, i64 0, i32 0), i64 22}, i64 217, i64 15, i64 0, i64 4)
	%279 = load float, float* %278, align 4
	; IndexExpr
	; IndexExpr
	%280 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a1, i64 0, i32 0), i64 22}, i64 217, i64 22, i64 2, i64 4)
	%281 = getelementptr inbounds [4 x float], [4 x float]* %280, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a2, i64 0, i32 0), i64 22}, i64 217, i64 25, i64 2, i64 4)
	%282 = load float, float* %281, align 4
	%283 = fmul float %279, %282
	; IndexExpr
	; IndexExpr
	%284 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a3, i64 0, i32 0), i64 22}, i64 217, i64 32, i64 2, i64 4)
	%285 = getelementptr inbounds [4 x float], [4 x float]* %284, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a4, i64 0, i32 0), i64 22}, i64 217, i64 35, i64 0, i64 4)
	%286 = load float, float* %285, align 4
	; IndexExpr
	; IndexExpr
	%287 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a5, i64 0, i32 0), i64 22}, i64 217, i64 42, i64 1, i64 4)
	%288 = getelementptr inbounds [4 x float], [4 x float]* %287, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a6, i64 0, i32 0), i64 22}, i64 217, i64 45, i64 2, i64 4)
	%289 = load float, float* %288, align 4
	%290 = fmul float %286, %289
	%291 = fsub float %283, %290
	store float %291, float* %18
	; sf18
	store float zeroinitializer, float* %19
		; IndexExpr
	; IndexExpr
	%292 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a7, i64 0, i32 0), i64 22}, i64 218, i64 12, i64 1, i64 4)
	%293 = getelementptr inbounds [4 x float], [4 x float]* %292, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a8, i64 0, i32 0), i64 22}, i64 218, i64 15, i64 0, i64 4)
	%294 = load float, float* %293, align 4
	; IndexExpr
	; IndexExpr
	%295 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1a9, i64 0, i32 0), i64 22}, i64 218, i64 22, i64 2, i64 4)
	%296 = getelementptr inbounds [4 x float], [4 x float]* %295, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1aa, i64 0, i32 0), i64 22}, i64 218, i64 25, i64 1, i64 4)
	%297 = load float, float* %296, align 4
	%298 = fmul float %294, %297
	; IndexExpr
	; IndexExpr
	%299 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ab, i64 0, i32 0), i64 22}, i64 218, i64 32, i64 2, i64 4)
	%300 = getelementptr inbounds [4 x float], [4 x float]* %299, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ac, i64 0, i32 0), i64 22}, i64 218, i64 35, i64 0, i64 4)
	%301 = load float, float* %300, align 4
	; IndexExpr
	; IndexExpr
	%302 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ad, i64 0, i32 0), i64 22}, i64 218, i64 42, i64 1, i64 4)
	%303 = getelementptr inbounds [4 x float], [4 x float]* %302, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ae, i64 0, i32 0), i64 22}, i64 218, i64 45, i64 1, i64 4)
	%304 = load float, float* %303, align 4
	%305 = fmul float %301, %304
	%306 = fsub float %298, %305
	store float %306, float* %19
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%307 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1af, i64 0, i32 0), i64 22}, i64 220, i64 4, i64 0, i64 4)
	%308 = getelementptr inbounds [4 x float], [4 x float]* %307, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b0, i64 0, i32 0), i64 22}, i64 220, i64 7, i64 0, i64 4)
	; IndexExpr
	; IndexExpr
	%309 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b1, i64 0, i32 0), i64 22}, i64 220, i64 16, i64 1, i64 4)
	%310 = getelementptr inbounds [4 x float], [4 x float]* %309, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b2, i64 0, i32 0), i64 22}, i64 220, i64 19, i64 1, i64 4)
	%311 = load float, float* %310, align 4
	%312 = load float, float* %1, align 4
	%313 = fmul float %311, %312
	; IndexExpr
	; IndexExpr
	%314 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b3, i64 0, i32 0), i64 22}, i64 220, i64 33, i64 1, i64 4)
	%315 = getelementptr inbounds [4 x float], [4 x float]* %314, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b4, i64 0, i32 0), i64 22}, i64 220, i64 36, i64 2, i64 4)
	%316 = load float, float* %315, align 4
	%317 = load float, float* %2, align 4
	%318 = fmul float %316, %317
	%319 = fsub float %313, %318
	; IndexExpr
	; IndexExpr
	%320 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b5, i64 0, i32 0), i64 22}, i64 220, i64 50, i64 1, i64 4)
	%321 = getelementptr inbounds [4 x float], [4 x float]* %320, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b6, i64 0, i32 0), i64 22}, i64 220, i64 53, i64 3, i64 4)
	%322 = load float, float* %321, align 4
	%323 = load float, float* %3, align 4
	%324 = fmul float %322, %323
	%325 = fadd float %319, %324
	store float %325, float* %308
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%326 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b7, i64 0, i32 0), i64 22}, i64 221, i64 4, i64 0, i64 4)
	%327 = getelementptr inbounds [4 x float], [4 x float]* %326, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b8, i64 0, i32 0), i64 22}, i64 221, i64 7, i64 1, i64 4)
	; IndexExpr
	; IndexExpr
	%328 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1b9, i64 0, i32 0), i64 22}, i64 221, i64 16, i64 1, i64 4)
	%329 = getelementptr inbounds [4 x float], [4 x float]* %328, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ba, i64 0, i32 0), i64 22}, i64 221, i64 19, i64 0, i64 4)
	%330 = load float, float* %329, align 4
	%331 = load float, float* %1, align 4
	%332 = fmul float %330, %331
	; IndexExpr
	; IndexExpr
	%333 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1bb, i64 0, i32 0), i64 22}, i64 221, i64 33, i64 1, i64 4)
	%334 = getelementptr inbounds [4 x float], [4 x float]* %333, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1bc, i64 0, i32 0), i64 22}, i64 221, i64 36, i64 2, i64 4)
	%335 = load float, float* %334, align 4
	%336 = load float, float* %4, align 4
	%337 = fmul float %335, %336
	%338 = fsub float %332, %337
	; IndexExpr
	; IndexExpr
	%339 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1bd, i64 0, i32 0), i64 22}, i64 221, i64 50, i64 1, i64 4)
	%340 = getelementptr inbounds [4 x float], [4 x float]* %339, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1be, i64 0, i32 0), i64 22}, i64 221, i64 53, i64 3, i64 4)
	%341 = load float, float* %340, align 4
	%342 = load float, float* %5, align 4
	%343 = fmul float %341, %342
	%344 = fadd float %338, %343
	%345 = fsub float 0x0000000000000000, %344
	store float %345, float* %327
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%346 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1bf, i64 0, i32 0), i64 22}, i64 222, i64 4, i64 0, i64 4)
	%347 = getelementptr inbounds [4 x float], [4 x float]* %346, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c0, i64 0, i32 0), i64 22}, i64 222, i64 7, i64 2, i64 4)
	; IndexExpr
	; IndexExpr
	%348 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c1, i64 0, i32 0), i64 22}, i64 222, i64 16, i64 1, i64 4)
	%349 = getelementptr inbounds [4 x float], [4 x float]* %348, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c2, i64 0, i32 0), i64 22}, i64 222, i64 19, i64 0, i64 4)
	%350 = load float, float* %349, align 4
	%351 = load float, float* %2, align 4
	%352 = fmul float %350, %351
	; IndexExpr
	; IndexExpr
	%353 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c3, i64 0, i32 0), i64 22}, i64 222, i64 33, i64 1, i64 4)
	%354 = getelementptr inbounds [4 x float], [4 x float]* %353, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c4, i64 0, i32 0), i64 22}, i64 222, i64 36, i64 1, i64 4)
	%355 = load float, float* %354, align 4
	%356 = load float, float* %4, align 4
	%357 = fmul float %355, %356
	%358 = fsub float %352, %357
	; IndexExpr
	; IndexExpr
	%359 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c5, i64 0, i32 0), i64 22}, i64 222, i64 50, i64 1, i64 4)
	%360 = getelementptr inbounds [4 x float], [4 x float]* %359, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c6, i64 0, i32 0), i64 22}, i64 222, i64 53, i64 3, i64 4)
	%361 = load float, float* %360, align 4
	%362 = load float, float* %6, align 4
	%363 = fmul float %361, %362
	%364 = fadd float %358, %363
	store float %364, float* %347
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%365 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c7, i64 0, i32 0), i64 22}, i64 223, i64 4, i64 0, i64 4)
	%366 = getelementptr inbounds [4 x float], [4 x float]* %365, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c8, i64 0, i32 0), i64 22}, i64 223, i64 7, i64 3, i64 4)
	; IndexExpr
	; IndexExpr
	%367 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c9, i64 0, i32 0), i64 22}, i64 223, i64 16, i64 1, i64 4)
	%368 = getelementptr inbounds [4 x float], [4 x float]* %367, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ca, i64 0, i32 0), i64 22}, i64 223, i64 19, i64 0, i64 4)
	%369 = load float, float* %368, align 4
	%370 = load float, float* %3, align 4
	%371 = fmul float %369, %370
	; IndexExpr
	; IndexExpr
	%372 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1cb, i64 0, i32 0), i64 22}, i64 223, i64 33, i64 1, i64 4)
	%373 = getelementptr inbounds [4 x float], [4 x float]* %372, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1cc, i64 0, i32 0), i64 22}, i64 223, i64 36, i64 1, i64 4)
	%374 = load float, float* %373, align 4
	%375 = load float, float* %5, align 4
	%376 = fmul float %374, %375
	%377 = fsub float %371, %376
	; IndexExpr
	; IndexExpr
	%378 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1cd, i64 0, i32 0), i64 22}, i64 223, i64 50, i64 1, i64 4)
	%379 = getelementptr inbounds [4 x float], [4 x float]* %378, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ce, i64 0, i32 0), i64 22}, i64 223, i64 53, i64 2, i64 4)
	%380 = load float, float* %379, align 4
	%381 = load float, float* %6, align 4
	%382 = fmul float %380, %381
	%383 = fadd float %377, %382
	%384 = fsub float 0x0000000000000000, %383
	store float %384, float* %366
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%385 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1cf, i64 0, i32 0), i64 22}, i64 225, i64 4, i64 1, i64 4)
	%386 = getelementptr inbounds [4 x float], [4 x float]* %385, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d0, i64 0, i32 0), i64 22}, i64 225, i64 7, i64 0, i64 4)
	; IndexExpr
	; IndexExpr
	%387 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d1, i64 0, i32 0), i64 22}, i64 225, i64 16, i64 0, i64 4)
	%388 = getelementptr inbounds [4 x float], [4 x float]* %387, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d2, i64 0, i32 0), i64 22}, i64 225, i64 19, i64 1, i64 4)
	%389 = load float, float* %388, align 4
	%390 = load float, float* %1, align 4
	%391 = fmul float %389, %390
	; IndexExpr
	; IndexExpr
	%392 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d3, i64 0, i32 0), i64 22}, i64 225, i64 33, i64 0, i64 4)
	%393 = getelementptr inbounds [4 x float], [4 x float]* %392, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d4, i64 0, i32 0), i64 22}, i64 225, i64 36, i64 2, i64 4)
	%394 = load float, float* %393, align 4
	%395 = load float, float* %2, align 4
	%396 = fmul float %394, %395
	%397 = fsub float %391, %396
	; IndexExpr
	; IndexExpr
	%398 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d5, i64 0, i32 0), i64 22}, i64 225, i64 50, i64 0, i64 4)
	%399 = getelementptr inbounds [4 x float], [4 x float]* %398, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d6, i64 0, i32 0), i64 22}, i64 225, i64 53, i64 3, i64 4)
	%400 = load float, float* %399, align 4
	%401 = load float, float* %3, align 4
	%402 = fmul float %400, %401
	%403 = fadd float %397, %402
	%404 = fsub float 0x0000000000000000, %403
	store float %404, float* %386
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%405 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d7, i64 0, i32 0), i64 22}, i64 226, i64 4, i64 1, i64 4)
	%406 = getelementptr inbounds [4 x float], [4 x float]* %405, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d8, i64 0, i32 0), i64 22}, i64 226, i64 7, i64 1, i64 4)
	; IndexExpr
	; IndexExpr
	%407 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d9, i64 0, i32 0), i64 22}, i64 226, i64 16, i64 0, i64 4)
	%408 = getelementptr inbounds [4 x float], [4 x float]* %407, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1da, i64 0, i32 0), i64 22}, i64 226, i64 19, i64 0, i64 4)
	%409 = load float, float* %408, align 4
	%410 = load float, float* %1, align 4
	%411 = fmul float %409, %410
	; IndexExpr
	; IndexExpr
	%412 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1db, i64 0, i32 0), i64 22}, i64 226, i64 33, i64 0, i64 4)
	%413 = getelementptr inbounds [4 x float], [4 x float]* %412, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1dc, i64 0, i32 0), i64 22}, i64 226, i64 36, i64 2, i64 4)
	%414 = load float, float* %413, align 4
	%415 = load float, float* %4, align 4
	%416 = fmul float %414, %415
	%417 = fsub float %411, %416
	; IndexExpr
	; IndexExpr
	%418 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1dd, i64 0, i32 0), i64 22}, i64 226, i64 50, i64 0, i64 4)
	%419 = getelementptr inbounds [4 x float], [4 x float]* %418, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1de, i64 0, i32 0), i64 22}, i64 226, i64 53, i64 3, i64 4)
	%420 = load float, float* %419, align 4
	%421 = load float, float* %5, align 4
	%422 = fmul float %420, %421
	%423 = fadd float %417, %422
	store float %423, float* %406
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%424 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1df, i64 0, i32 0), i64 22}, i64 227, i64 4, i64 1, i64 4)
	%425 = getelementptr inbounds [4 x float], [4 x float]* %424, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e0, i64 0, i32 0), i64 22}, i64 227, i64 7, i64 2, i64 4)
	; IndexExpr
	; IndexExpr
	%426 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e1, i64 0, i32 0), i64 22}, i64 227, i64 16, i64 0, i64 4)
	%427 = getelementptr inbounds [4 x float], [4 x float]* %426, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e2, i64 0, i32 0), i64 22}, i64 227, i64 19, i64 0, i64 4)
	%428 = load float, float* %427, align 4
	%429 = load float, float* %2, align 4
	%430 = fmul float %428, %429
	; IndexExpr
	; IndexExpr
	%431 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e3, i64 0, i32 0), i64 22}, i64 227, i64 33, i64 0, i64 4)
	%432 = getelementptr inbounds [4 x float], [4 x float]* %431, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e4, i64 0, i32 0), i64 22}, i64 227, i64 36, i64 1, i64 4)
	%433 = load float, float* %432, align 4
	%434 = load float, float* %4, align 4
	%435 = fmul float %433, %434
	%436 = fsub float %430, %435
	; IndexExpr
	; IndexExpr
	%437 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e5, i64 0, i32 0), i64 22}, i64 227, i64 50, i64 0, i64 4)
	%438 = getelementptr inbounds [4 x float], [4 x float]* %437, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e6, i64 0, i32 0), i64 22}, i64 227, i64 53, i64 3, i64 4)
	%439 = load float, float* %438, align 4
	%440 = load float, float* %6, align 4
	%441 = fmul float %439, %440
	%442 = fadd float %436, %441
	%443 = fsub float 0x0000000000000000, %442
	store float %443, float* %425
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%444 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e7, i64 0, i32 0), i64 22}, i64 228, i64 4, i64 1, i64 4)
	%445 = getelementptr inbounds [4 x float], [4 x float]* %444, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e8, i64 0, i32 0), i64 22}, i64 228, i64 7, i64 3, i64 4)
	; IndexExpr
	; IndexExpr
	%446 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1e9, i64 0, i32 0), i64 22}, i64 228, i64 16, i64 0, i64 4)
	%447 = getelementptr inbounds [4 x float], [4 x float]* %446, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ea, i64 0, i32 0), i64 22}, i64 228, i64 19, i64 0, i64 4)
	%448 = load float, float* %447, align 4
	%449 = load float, float* %3, align 4
	%450 = fmul float %448, %449
	; IndexExpr
	; IndexExpr
	%451 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1eb, i64 0, i32 0), i64 22}, i64 228, i64 33, i64 0, i64 4)
	%452 = getelementptr inbounds [4 x float], [4 x float]* %451, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ec, i64 0, i32 0), i64 22}, i64 228, i64 36, i64 1, i64 4)
	%453 = load float, float* %452, align 4
	%454 = load float, float* %5, align 4
	%455 = fmul float %453, %454
	%456 = fsub float %450, %455
	; IndexExpr
	; IndexExpr
	%457 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ed, i64 0, i32 0), i64 22}, i64 228, i64 50, i64 0, i64 4)
	%458 = getelementptr inbounds [4 x float], [4 x float]* %457, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ee, i64 0, i32 0), i64 22}, i64 228, i64 53, i64 2, i64 4)
	%459 = load float, float* %458, align 4
	%460 = load float, float* %6, align 4
	%461 = fmul float %459, %460
	%462 = fadd float %456, %461
	store float %462, float* %445
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%463 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ef, i64 0, i32 0), i64 22}, i64 230, i64 4, i64 2, i64 4)
	%464 = getelementptr inbounds [4 x float], [4 x float]* %463, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f0, i64 0, i32 0), i64 22}, i64 230, i64 7, i64 0, i64 4)
	; IndexExpr
	; IndexExpr
	%465 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f1, i64 0, i32 0), i64 22}, i64 230, i64 16, i64 0, i64 4)
	%466 = getelementptr inbounds [4 x float], [4 x float]* %465, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f2, i64 0, i32 0), i64 22}, i64 230, i64 19, i64 1, i64 4)
	%467 = load float, float* %466, align 4
	%468 = load float, float* %7, align 4
	%469 = fmul float %467, %468
	; IndexExpr
	; IndexExpr
	%470 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f3, i64 0, i32 0), i64 22}, i64 230, i64 33, i64 0, i64 4)
	%471 = getelementptr inbounds [4 x float], [4 x float]* %470, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f4, i64 0, i32 0), i64 22}, i64 230, i64 36, i64 2, i64 4)
	%472 = load float, float* %471, align 4
	%473 = load float, float* %8, align 4
	%474 = fmul float %472, %473
	%475 = fsub float %469, %474
	; IndexExpr
	; IndexExpr
	%476 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f5, i64 0, i32 0), i64 22}, i64 230, i64 50, i64 0, i64 4)
	%477 = getelementptr inbounds [4 x float], [4 x float]* %476, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f6, i64 0, i32 0), i64 22}, i64 230, i64 53, i64 3, i64 4)
	%478 = load float, float* %477, align 4
	%479 = load float, float* %9, align 4
	%480 = fmul float %478, %479
	%481 = fadd float %475, %480
	store float %481, float* %464
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%482 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f7, i64 0, i32 0), i64 22}, i64 231, i64 4, i64 2, i64 4)
	%483 = getelementptr inbounds [4 x float], [4 x float]* %482, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f8, i64 0, i32 0), i64 22}, i64 231, i64 7, i64 1, i64 4)
	; IndexExpr
	; IndexExpr
	%484 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1f9, i64 0, i32 0), i64 22}, i64 231, i64 16, i64 0, i64 4)
	%485 = getelementptr inbounds [4 x float], [4 x float]* %484, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1fa, i64 0, i32 0), i64 22}, i64 231, i64 19, i64 0, i64 4)
	%486 = load float, float* %485, align 4
	%487 = load float, float* %7, align 4
	%488 = fmul float %486, %487
	; IndexExpr
	; IndexExpr
	%489 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1fb, i64 0, i32 0), i64 22}, i64 231, i64 33, i64 0, i64 4)
	%490 = getelementptr inbounds [4 x float], [4 x float]* %489, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1fc, i64 0, i32 0), i64 22}, i64 231, i64 36, i64 2, i64 4)
	%491 = load float, float* %490, align 4
	%492 = load float, float* %10, align 4
	%493 = fmul float %491, %492
	%494 = fsub float %488, %493
	; IndexExpr
	; IndexExpr
	%495 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1fd, i64 0, i32 0), i64 22}, i64 231, i64 50, i64 0, i64 4)
	%496 = getelementptr inbounds [4 x float], [4 x float]* %495, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1fe, i64 0, i32 0), i64 22}, i64 231, i64 53, i64 3, i64 4)
	%497 = load float, float* %496, align 4
	%498 = load float, float* %11, align 4
	%499 = fmul float %497, %498
	%500 = fadd float %494, %499
	%501 = fsub float 0x0000000000000000, %500
	store float %501, float* %483
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%502 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1ff, i64 0, i32 0), i64 22}, i64 232, i64 4, i64 2, i64 4)
	%503 = getelementptr inbounds [4 x float], [4 x float]* %502, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$200, i64 0, i32 0), i64 22}, i64 232, i64 7, i64 2, i64 4)
	; IndexExpr
	; IndexExpr
	%504 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$201, i64 0, i32 0), i64 22}, i64 232, i64 16, i64 0, i64 4)
	%505 = getelementptr inbounds [4 x float], [4 x float]* %504, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$202, i64 0, i32 0), i64 22}, i64 232, i64 19, i64 0, i64 4)
	%506 = load float, float* %505, align 4
	%507 = load float, float* %12, align 4
	%508 = fmul float %506, %507
	; IndexExpr
	; IndexExpr
	%509 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$203, i64 0, i32 0), i64 22}, i64 232, i64 33, i64 0, i64 4)
	%510 = getelementptr inbounds [4 x float], [4 x float]* %509, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$204, i64 0, i32 0), i64 22}, i64 232, i64 36, i64 1, i64 4)
	%511 = load float, float* %510, align 4
	%512 = load float, float* %10, align 4
	%513 = fmul float %511, %512
	%514 = fsub float %508, %513
	; IndexExpr
	; IndexExpr
	%515 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$205, i64 0, i32 0), i64 22}, i64 232, i64 50, i64 0, i64 4)
	%516 = getelementptr inbounds [4 x float], [4 x float]* %515, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$206, i64 0, i32 0), i64 22}, i64 232, i64 53, i64 3, i64 4)
	%517 = load float, float* %516, align 4
	%518 = load float, float* %13, align 4
	%519 = fmul float %517, %518
	%520 = fadd float %514, %519
	store float %520, float* %503
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%521 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$207, i64 0, i32 0), i64 22}, i64 233, i64 4, i64 2, i64 4)
	%522 = getelementptr inbounds [4 x float], [4 x float]* %521, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$208, i64 0, i32 0), i64 22}, i64 233, i64 7, i64 3, i64 4)
	; IndexExpr
	; IndexExpr
	%523 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$209, i64 0, i32 0), i64 22}, i64 233, i64 16, i64 0, i64 4)
	%524 = getelementptr inbounds [4 x float], [4 x float]* %523, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20a, i64 0, i32 0), i64 22}, i64 233, i64 19, i64 0, i64 4)
	%525 = load float, float* %524, align 4
	%526 = load float, float* %9, align 4
	%527 = fmul float %525, %526
	; IndexExpr
	; IndexExpr
	%528 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20b, i64 0, i32 0), i64 22}, i64 233, i64 33, i64 0, i64 4)
	%529 = getelementptr inbounds [4 x float], [4 x float]* %528, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20c, i64 0, i32 0), i64 22}, i64 233, i64 36, i64 1, i64 4)
	%530 = load float, float* %529, align 4
	%531 = load float, float* %11, align 4
	%532 = fmul float %530, %531
	%533 = fsub float %527, %532
	; IndexExpr
	; IndexExpr
	%534 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20d, i64 0, i32 0), i64 22}, i64 233, i64 50, i64 0, i64 4)
	%535 = getelementptr inbounds [4 x float], [4 x float]* %534, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20e, i64 0, i32 0), i64 22}, i64 233, i64 53, i64 2, i64 4)
	%536 = load float, float* %535, align 4
	%537 = load float, float* %13, align 4
	%538 = fmul float %536, %537
	%539 = fadd float %533, %538
	%540 = fsub float 0x0000000000000000, %539
	store float %540, float* %522
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%541 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$20f, i64 0, i32 0), i64 22}, i64 235, i64 4, i64 3, i64 4)
	%542 = getelementptr inbounds [4 x float], [4 x float]* %541, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$210, i64 0, i32 0), i64 22}, i64 235, i64 7, i64 0, i64 4)
	; IndexExpr
	; IndexExpr
	%543 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$211, i64 0, i32 0), i64 22}, i64 235, i64 16, i64 0, i64 4)
	%544 = getelementptr inbounds [4 x float], [4 x float]* %543, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$212, i64 0, i32 0), i64 22}, i64 235, i64 19, i64 1, i64 4)
	%545 = load float, float* %544, align 4
	%546 = load float, float* %14, align 4
	%547 = fmul float %545, %546
	; IndexExpr
	; IndexExpr
	%548 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$213, i64 0, i32 0), i64 22}, i64 235, i64 33, i64 0, i64 4)
	%549 = getelementptr inbounds [4 x float], [4 x float]* %548, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$214, i64 0, i32 0), i64 22}, i64 235, i64 36, i64 2, i64 4)
	%550 = load float, float* %549, align 4
	%551 = load float, float* %15, align 4
	%552 = fmul float %550, %551
	%553 = fsub float %547, %552
	; IndexExpr
	; IndexExpr
	%554 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$215, i64 0, i32 0), i64 22}, i64 235, i64 50, i64 0, i64 4)
	%555 = getelementptr inbounds [4 x float], [4 x float]* %554, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$216, i64 0, i32 0), i64 22}, i64 235, i64 53, i64 3, i64 4)
	%556 = load float, float* %555, align 4
	%557 = load float, float* %16, align 4
	%558 = fmul float %556, %557
	%559 = fadd float %553, %558
	%560 = fsub float 0x0000000000000000, %559
	store float %560, float* %542
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%561 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$217, i64 0, i32 0), i64 22}, i64 236, i64 4, i64 3, i64 4)
	%562 = getelementptr inbounds [4 x float], [4 x float]* %561, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$218, i64 0, i32 0), i64 22}, i64 236, i64 7, i64 1, i64 4)
	; IndexExpr
	; IndexExpr
	%563 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$219, i64 0, i32 0), i64 22}, i64 236, i64 16, i64 0, i64 4)
	%564 = getelementptr inbounds [4 x float], [4 x float]* %563, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21a, i64 0, i32 0), i64 22}, i64 236, i64 19, i64 0, i64 4)
	%565 = load float, float* %564, align 4
	%566 = load float, float* %14, align 4
	%567 = fmul float %565, %566
	; IndexExpr
	; IndexExpr
	%568 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21b, i64 0, i32 0), i64 22}, i64 236, i64 33, i64 0, i64 4)
	%569 = getelementptr inbounds [4 x float], [4 x float]* %568, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21c, i64 0, i32 0), i64 22}, i64 236, i64 36, i64 2, i64 4)
	%570 = load float, float* %569, align 4
	%571 = load float, float* %17, align 4
	%572 = fmul float %570, %571
	%573 = fsub float %567, %572
	; IndexExpr
	; IndexExpr
	%574 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21d, i64 0, i32 0), i64 22}, i64 236, i64 50, i64 0, i64 4)
	%575 = getelementptr inbounds [4 x float], [4 x float]* %574, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21e, i64 0, i32 0), i64 22}, i64 236, i64 53, i64 3, i64 4)
	%576 = load float, float* %575, align 4
	%577 = load float, float* %18, align 4
	%578 = fmul float %576, %577
	%579 = fadd float %573, %578
	store float %579, float* %562
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%580 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21f, i64 0, i32 0), i64 22}, i64 237, i64 4, i64 3, i64 4)
	%581 = getelementptr inbounds [4 x float], [4 x float]* %580, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$220, i64 0, i32 0), i64 22}, i64 237, i64 7, i64 2, i64 4)
	; IndexExpr
	; IndexExpr
	%582 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$221, i64 0, i32 0), i64 22}, i64 237, i64 16, i64 0, i64 4)
	%583 = getelementptr inbounds [4 x float], [4 x float]* %582, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$222, i64 0, i32 0), i64 22}, i64 237, i64 19, i64 0, i64 4)
	%584 = load float, float* %583, align 4
	%585 = load float, float* %15, align 4
	%586 = fmul float %584, %585
	; IndexExpr
	; IndexExpr
	%587 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$223, i64 0, i32 0), i64 22}, i64 237, i64 33, i64 0, i64 4)
	%588 = getelementptr inbounds [4 x float], [4 x float]* %587, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$224, i64 0, i32 0), i64 22}, i64 237, i64 36, i64 1, i64 4)
	%589 = load float, float* %588, align 4
	%590 = load float, float* %17, align 4
	%591 = fmul float %589, %590
	%592 = fsub float %586, %591
	; IndexExpr
	; IndexExpr
	%593 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$225, i64 0, i32 0), i64 22}, i64 237, i64 50, i64 0, i64 4)
	%594 = getelementptr inbounds [4 x float], [4 x float]* %593, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$226, i64 0, i32 0), i64 22}, i64 237, i64 53, i64 3, i64 4)
	%595 = load float, float* %594, align 4
	%596 = load float, float* %19, align 4
	%597 = fmul float %595, %596
	%598 = fadd float %592, %597
	%599 = fsub float 0x0000000000000000, %598
	store float %599, float* %581
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%600 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$227, i64 0, i32 0), i64 22}, i64 238, i64 4, i64 3, i64 4)
	%601 = getelementptr inbounds [4 x float], [4 x float]* %600, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$228, i64 0, i32 0), i64 22}, i64 238, i64 7, i64 3, i64 4)
	; IndexExpr
	; IndexExpr
	%602 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$229, i64 0, i32 0), i64 22}, i64 238, i64 16, i64 0, i64 4)
	%603 = getelementptr inbounds [4 x float], [4 x float]* %602, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22a, i64 0, i32 0), i64 22}, i64 238, i64 19, i64 0, i64 4)
	%604 = load float, float* %603, align 4
	%605 = load float, float* %16, align 4
	%606 = fmul float %604, %605
	; IndexExpr
	; IndexExpr
	%607 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22b, i64 0, i32 0), i64 22}, i64 238, i64 33, i64 0, i64 4)
	%608 = getelementptr inbounds [4 x float], [4 x float]* %607, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22c, i64 0, i32 0), i64 22}, i64 238, i64 36, i64 1, i64 4)
	%609 = load float, float* %608, align 4
	%610 = load float, float* %18, align 4
	%611 = fmul float %609, %610
	%612 = fsub float %606, %611
	; IndexExpr
	; IndexExpr
	%613 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22d, i64 0, i32 0), i64 22}, i64 238, i64 50, i64 0, i64 4)
	%614 = getelementptr inbounds [4 x float], [4 x float]* %613, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22e, i64 0, i32 0), i64 22}, i64 238, i64 53, i64 2, i64 4)
	%615 = load float, float* %614, align 4
	%616 = load float, float* %19, align 4
	%617 = fmul float %615, %616
	%618 = fadd float %612, %617
	store float %618, float* %601
	; ood
	store float zeroinitializer, float* %20
		; IndexExpr
	; IndexExpr
	%619 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$22f, i64 0, i32 0), i64 22}, i64 240, i64 18, i64 0, i64 4)
	%620 = getelementptr inbounds [4 x float], [4 x float]* %619, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$230, i64 0, i32 0), i64 22}, i64 240, i64 21, i64 0, i64 4)
	%621 = load float, float* %620, align 4
	; IndexExpr
	; IndexExpr
	%622 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$231, i64 0, i32 0), i64 22}, i64 240, i64 28, i64 0, i64 4)
	%623 = getelementptr inbounds [4 x float], [4 x float]* %622, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$232, i64 0, i32 0), i64 22}, i64 240, i64 31, i64 0, i64 4)
	%624 = load float, float* %623, align 4
	%625 = fmul float %621, %624
	; IndexExpr
	; IndexExpr
	%626 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$233, i64 0, i32 0), i64 22}, i64 241, i64 18, i64 0, i64 4)
	%627 = getelementptr inbounds [4 x float], [4 x float]* %626, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$234, i64 0, i32 0), i64 22}, i64 241, i64 21, i64 1, i64 4)
	%628 = load float, float* %627, align 4
	; IndexExpr
	; IndexExpr
	%629 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$235, i64 0, i32 0), i64 22}, i64 241, i64 28, i64 0, i64 4)
	%630 = getelementptr inbounds [4 x float], [4 x float]* %629, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$236, i64 0, i32 0), i64 22}, i64 241, i64 31, i64 1, i64 4)
	%631 = load float, float* %630, align 4
	%632 = fmul float %628, %631
	%633 = fadd float %625, %632
	; IndexExpr
	; IndexExpr
	%634 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$237, i64 0, i32 0), i64 22}, i64 242, i64 18, i64 0, i64 4)
	%635 = getelementptr inbounds [4 x float], [4 x float]* %634, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$238, i64 0, i32 0), i64 22}, i64 242, i64 21, i64 2, i64 4)
	%636 = load float, float* %635, align 4
	; IndexExpr
	; IndexExpr
	%637 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$239, i64 0, i32 0), i64 22}, i64 242, i64 28, i64 0, i64 4)
	%638 = getelementptr inbounds [4 x float], [4 x float]* %637, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23a, i64 0, i32 0), i64 22}, i64 242, i64 31, i64 2, i64 4)
	%639 = load float, float* %638, align 4
	%640 = fmul float %636, %639
	%641 = fadd float %633, %640
	; IndexExpr
	; IndexExpr
	%642 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23b, i64 0, i32 0), i64 22}, i64 243, i64 18, i64 0, i64 4)
	%643 = getelementptr inbounds [4 x float], [4 x float]* %642, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23c, i64 0, i32 0), i64 22}, i64 243, i64 21, i64 3, i64 4)
	%644 = load float, float* %643, align 4
	; IndexExpr
	; IndexExpr
	%645 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23d, i64 0, i32 0), i64 22}, i64 243, i64 28, i64 0, i64 4)
	%646 = getelementptr inbounds [4 x float], [4 x float]* %645, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23e, i64 0, i32 0), i64 22}, i64 243, i64 31, i64 3, i64 4)
	%647 = load float, float* %646, align 4
	%648 = fmul float %644, %647
	%649 = fadd float %641, %648
	%650 = fdiv float 0x3ff0000000000000, %649
	store float %650, float* %20
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%651 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$23f, i64 0, i32 0), i64 22}, i64 245, i64 4, i64 0, i64 4)
	%652 = getelementptr inbounds [4 x float], [4 x float]* %651, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$240, i64 0, i32 0), i64 22}, i64 245, i64 7, i64 0, i64 4)
	%653 = load float, float* %20, align 4
	%654 = load float, float* %652, align 4
	%655 = fmul float %654, %653
	store float %655, float* %652
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%656 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$241, i64 0, i32 0), i64 22}, i64 246, i64 4, i64 0, i64 4)
	%657 = getelementptr inbounds [4 x float], [4 x float]* %656, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$242, i64 0, i32 0), i64 22}, i64 246, i64 7, i64 1, i64 4)
	%658 = load float, float* %20, align 4
	%659 = load float, float* %657, align 4
	%660 = fmul float %659, %658
	store float %660, float* %657
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%661 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$243, i64 0, i32 0), i64 22}, i64 247, i64 4, i64 0, i64 4)
	%662 = getelementptr inbounds [4 x float], [4 x float]* %661, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$244, i64 0, i32 0), i64 22}, i64 247, i64 7, i64 2, i64 4)
	%663 = load float, float* %20, align 4
	%664 = load float, float* %662, align 4
	%665 = fmul float %664, %663
	store float %665, float* %662
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%666 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$245, i64 0, i32 0), i64 22}, i64 248, i64 4, i64 0, i64 4)
	%667 = getelementptr inbounds [4 x float], [4 x float]* %666, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$246, i64 0, i32 0), i64 22}, i64 248, i64 7, i64 3, i64 4)
	%668 = load float, float* %20, align 4
	%669 = load float, float* %667, align 4
	%670 = fmul float %669, %668
	store float %670, float* %667
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%671 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$247, i64 0, i32 0), i64 22}, i64 249, i64 4, i64 1, i64 4)
	%672 = getelementptr inbounds [4 x float], [4 x float]* %671, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$248, i64 0, i32 0), i64 22}, i64 249, i64 7, i64 0, i64 4)
	%673 = load float, float* %20, align 4
	%674 = load float, float* %672, align 4
	%675 = fmul float %674, %673
	store float %675, float* %672
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%676 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$249, i64 0, i32 0), i64 22}, i64 250, i64 4, i64 1, i64 4)
	%677 = getelementptr inbounds [4 x float], [4 x float]* %676, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24a, i64 0, i32 0), i64 22}, i64 250, i64 7, i64 1, i64 4)
	%678 = load float, float* %20, align 4
	%679 = load float, float* %677, align 4
	%680 = fmul float %679, %678
	store float %680, float* %677
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%681 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24b, i64 0, i32 0), i64 22}, i64 251, i64 4, i64 1, i64 4)
	%682 = getelementptr inbounds [4 x float], [4 x float]* %681, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24c, i64 0, i32 0), i64 22}, i64 251, i64 7, i64 2, i64 4)
	%683 = load float, float* %20, align 4
	%684 = load float, float* %682, align 4
	%685 = fmul float %684, %683
	store float %685, float* %682
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%686 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24d, i64 0, i32 0), i64 22}, i64 252, i64 4, i64 1, i64 4)
	%687 = getelementptr inbounds [4 x float], [4 x float]* %686, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24e, i64 0, i32 0), i64 22}, i64 252, i64 7, i64 3, i64 4)
	%688 = load float, float* %20, align 4
	%689 = load float, float* %687, align 4
	%690 = fmul float %689, %688
	store float %690, float* %687
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%691 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$24f, i64 0, i32 0), i64 22}, i64 253, i64 4, i64 2, i64 4)
	%692 = getelementptr inbounds [4 x float], [4 x float]* %691, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$250, i64 0, i32 0), i64 22}, i64 253, i64 7, i64 0, i64 4)
	%693 = load float, float* %20, align 4
	%694 = load float, float* %692, align 4
	%695 = fmul float %694, %693
	store float %695, float* %692
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%696 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$251, i64 0, i32 0), i64 22}, i64 254, i64 4, i64 2, i64 4)
	%697 = getelementptr inbounds [4 x float], [4 x float]* %696, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$252, i64 0, i32 0), i64 22}, i64 254, i64 7, i64 1, i64 4)
	%698 = load float, float* %20, align 4
	%699 = load float, float* %697, align 4
	%700 = fmul float %699, %698
	store float %700, float* %697
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%701 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$253, i64 0, i32 0), i64 22}, i64 255, i64 4, i64 2, i64 4)
	%702 = getelementptr inbounds [4 x float], [4 x float]* %701, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$254, i64 0, i32 0), i64 22}, i64 255, i64 7, i64 2, i64 4)
	%703 = load float, float* %20, align 4
	%704 = load float, float* %702, align 4
	%705 = fmul float %704, %703
	store float %705, float* %702
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%706 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$255, i64 0, i32 0), i64 22}, i64 256, i64 4, i64 2, i64 4)
	%707 = getelementptr inbounds [4 x float], [4 x float]* %706, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$256, i64 0, i32 0), i64 22}, i64 256, i64 7, i64 3, i64 4)
	%708 = load float, float* %20, align 4
	%709 = load float, float* %707, align 4
	%710 = fmul float %709, %708
	store float %710, float* %707
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%711 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$257, i64 0, i32 0), i64 22}, i64 257, i64 4, i64 3, i64 4)
	%712 = getelementptr inbounds [4 x float], [4 x float]* %711, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$258, i64 0, i32 0), i64 22}, i64 257, i64 7, i64 0, i64 4)
	%713 = load float, float* %20, align 4
	%714 = load float, float* %712, align 4
	%715 = fmul float %714, %713
	store float %715, float* %712
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%716 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$259, i64 0, i32 0), i64 22}, i64 258, i64 4, i64 3, i64 4)
	%717 = getelementptr inbounds [4 x float], [4 x float]* %716, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25a, i64 0, i32 0), i64 22}, i64 258, i64 7, i64 1, i64 4)
	%718 = load float, float* %20, align 4
	%719 = load float, float* %717, align 4
	%720 = fmul float %719, %718
	store float %720, float* %717
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%721 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25b, i64 0, i32 0), i64 22}, i64 259, i64 4, i64 3, i64 4)
	%722 = getelementptr inbounds [4 x float], [4 x float]* %721, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25c, i64 0, i32 0), i64 22}, i64 259, i64 7, i64 2, i64 4)
	%723 = load float, float* %20, align 4
	%724 = load float, float* %722, align 4
	%725 = fmul float %724, %723
	store float %725, float* %722
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%726 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25d, i64 0, i32 0), i64 22}, i64 260, i64 4, i64 3, i64 4)
	%727 = getelementptr inbounds [4 x float], [4 x float]* %726, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25e, i64 0, i32 0), i64 22}, i64 260, i64 7, i64 3, i64 4)
	%728 = load float, float* %20, align 4
	%729 = load float, float* %727, align 4
	%730 = fmul float %729, %728
	store float %730, float* %727
	; ReturnStmt
	%731 = load [4 x [4 x float]], [4 x [4 x float]]* %0, align 4
	ret [4 x [4 x float]] %731
}

define [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %v) {
decls-0:
	%0 = alloca [4 x [4 x float]], align 4
	%1 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	; m
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %0
		%2 = call [4 x [4 x float]] @math-8.mat4_identity()
	store [4 x [4 x float]] %2, [4 x [4 x float]]* %0
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$25f, i64 0, i32 0), i64 22}, i64 268, i64 4, i64 3, i64 4)
	%4 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$260, i64 0, i32 0), i64 22}, i64 268, i64 7, i64 0, i64 4)
	; SelectorExpr
	%5 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 0
	%6 = load float, float* %5, align 4
	store float %6, float* %4
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$261, i64 0, i32 0), i64 22}, i64 269, i64 4, i64 3, i64 4)
	%8 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$262, i64 0, i32 0), i64 22}, i64 269, i64 7, i64 1, i64 4)
	; SelectorExpr
	%9 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 1
	%10 = load float, float* %9, align 4
	store float %10, float* %8
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$263, i64 0, i32 0), i64 22}, i64 270, i64 4, i64 3, i64 4)
	%12 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$264, i64 0, i32 0), i64 22}, i64 270, i64 7, i64 2, i64 4)
	; SelectorExpr
	%13 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 2
	%14 = load float, float* %13, align 4
	store float %14, float* %12
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$265, i64 0, i32 0), i64 22}, i64 271, i64 4, i64 3, i64 4)
	%16 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$266, i64 0, i32 0), i64 22}, i64 271, i64 7, i64 3, i64 4)
	store float 0x3ff0000000000000, float* %16
	; ReturnStmt
	%17 = load [4 x [4 x float]], [4 x [4 x float]]* %0, align 4
	ret [4 x [4 x float]] %17
}

define [4 x [4 x float]] @math-8.mat4_rotate({[0 x <8 x i8>], [3 x float]}* %v, float %angle_radians) {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%4 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%5 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%6 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%7 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%8 = alloca [4 x [4 x float]], align 4
	%9 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	store float zeroinitializer, float* %0
		store float %angle_radians, float* %0
	; c
	store float zeroinitializer, float* %1
		%10 = load float, float* %0, align 4
	%11 = call ccc float @llvm.cos.f32(float %10)
	store float %11, float* %1
	; s
	store float zeroinitializer, float* %2
		%12 = load float, float* %0, align 4
	%13 = call ccc float @llvm.sin.f32(float %12)
	store float %13, float* %2
	; a
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %3
		%14 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %4
	store {[0 x <8 x i8>], [3 x float]} %14, {[0 x <8 x i8>], [3 x float]}* %4
	%15 = call {[0 x <8 x i8>], [3 x float]} @math-8.norm-331({[0 x <8 x i8>], [3 x float]}* %4)
	store {[0 x <8 x i8>], [3 x float]} %15, {[0 x <8 x i8>], [3 x float]}* %3
	; t
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %5
		%16 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, align 8
	%17 = load float, float* %1, align 4
	%18 = fsub float 0x3ff0000000000000, %17
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %6
	%19 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 0
	store float %18, float* %19
	%20 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 1
	store float %18, float* %20
	%21 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 2
	store float %18, float* %21
	%22 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %7
	%23 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%24 = load float, float* %23, align 4
	%25 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 0
	%26 = load float, float* %25, align 4
	%27 = fmul float %24, %26
	%28 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 0
	store float %27, float* %28
	%29 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%30 = load float, float* %29, align 4
	%31 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 1
	%32 = load float, float* %31, align 4
	%33 = fmul float %30, %32
	%34 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 1
	store float %33, float* %34
	%35 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%36 = load float, float* %35, align 4
	%37 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 2
	%38 = load float, float* %37, align 4
	%39 = fmul float %36, %38
	%40 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 2
	store float %39, float* %40
	; vector.arith.end
	%41 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, align 8
	store {[0 x <8 x i8>], [3 x float]} %41, {[0 x <8 x i8>], [3 x float]}* %5
	; rot
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %8
		%42 = call [4 x [4 x float]] @math-8.mat4_identity()
	store [4 x [4 x float]] %42, [4 x [4 x float]]* %8
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$267, i64 0, i32 0), i64 22}, i64 284, i64 6, i64 0, i64 4)
	%44 = getelementptr inbounds [4 x float], [4 x float]* %43, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$268, i64 0, i32 0), i64 22}, i64 284, i64 9, i64 0, i64 4)
	%45 = load float, float* %1, align 4
	; SelectorExpr
	%46 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 0
	%47 = load float, float* %46, align 4
	; SelectorExpr
	%48 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%49 = load float, float* %48, align 4
	%50 = fmul float %47, %49
	%51 = fadd float %45, %50
	store float %51, float* %44
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$269, i64 0, i32 0), i64 22}, i64 285, i64 6, i64 0, i64 4)
	%53 = getelementptr inbounds [4 x float], [4 x float]* %52, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26a, i64 0, i32 0), i64 22}, i64 285, i64 9, i64 1, i64 4)
	; SelectorExpr
	%54 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 0
	%55 = load float, float* %54, align 4
	; SelectorExpr
	%56 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%57 = load float, float* %56, align 4
	%58 = fmul float %55, %57
	%59 = fadd float 0x0000000000000000, %58
	%60 = load float, float* %2, align 4
	; SelectorExpr
	%61 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%62 = load float, float* %61, align 4
	%63 = fmul float %60, %62
	%64 = fadd float %59, %63
	store float %64, float* %53
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%65 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26b, i64 0, i32 0), i64 22}, i64 286, i64 6, i64 0, i64 4)
	%66 = getelementptr inbounds [4 x float], [4 x float]* %65, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26c, i64 0, i32 0), i64 22}, i64 286, i64 9, i64 2, i64 4)
	; SelectorExpr
	%67 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 0
	%68 = load float, float* %67, align 4
	; SelectorExpr
	%69 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%70 = load float, float* %69, align 4
	%71 = fmul float %68, %70
	%72 = fadd float 0x0000000000000000, %71
	%73 = load float, float* %2, align 4
	; SelectorExpr
	%74 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%75 = load float, float* %74, align 4
	%76 = fmul float %73, %75
	%77 = fsub float %72, %76
	store float %77, float* %66
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26d, i64 0, i32 0), i64 22}, i64 287, i64 6, i64 0, i64 4)
	%79 = getelementptr inbounds [4 x float], [4 x float]* %78, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26e, i64 0, i32 0), i64 22}, i64 287, i64 9, i64 3, i64 4)
	store float 0x0000000000000000, float* %79
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%80 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$26f, i64 0, i32 0), i64 22}, i64 289, i64 6, i64 1, i64 4)
	%81 = getelementptr inbounds [4 x float], [4 x float]* %80, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$270, i64 0, i32 0), i64 22}, i64 289, i64 9, i64 0, i64 4)
	; SelectorExpr
	%82 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 1
	%83 = load float, float* %82, align 4
	; SelectorExpr
	%84 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%85 = load float, float* %84, align 4
	%86 = fmul float %83, %85
	%87 = fadd float 0x0000000000000000, %86
	%88 = load float, float* %2, align 4
	; SelectorExpr
	%89 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%90 = load float, float* %89, align 4
	%91 = fmul float %88, %90
	%92 = fsub float %87, %91
	store float %92, float* %81
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$271, i64 0, i32 0), i64 22}, i64 290, i64 6, i64 1, i64 4)
	%94 = getelementptr inbounds [4 x float], [4 x float]* %93, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$272, i64 0, i32 0), i64 22}, i64 290, i64 9, i64 1, i64 4)
	%95 = load float, float* %1, align 4
	; SelectorExpr
	%96 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 1
	%97 = load float, float* %96, align 4
	; SelectorExpr
	%98 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%99 = load float, float* %98, align 4
	%100 = fmul float %97, %99
	%101 = fadd float %95, %100
	store float %101, float* %94
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%102 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$273, i64 0, i32 0), i64 22}, i64 291, i64 6, i64 1, i64 4)
	%103 = getelementptr inbounds [4 x float], [4 x float]* %102, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$274, i64 0, i32 0), i64 22}, i64 291, i64 9, i64 2, i64 4)
	; SelectorExpr
	%104 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 1
	%105 = load float, float* %104, align 4
	; SelectorExpr
	%106 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%107 = load float, float* %106, align 4
	%108 = fmul float %105, %107
	%109 = fadd float 0x0000000000000000, %108
	%110 = load float, float* %2, align 4
	; SelectorExpr
	%111 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%112 = load float, float* %111, align 4
	%113 = fmul float %110, %112
	%114 = fadd float %109, %113
	store float %114, float* %103
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%115 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$275, i64 0, i32 0), i64 22}, i64 292, i64 6, i64 1, i64 4)
	%116 = getelementptr inbounds [4 x float], [4 x float]* %115, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$276, i64 0, i32 0), i64 22}, i64 292, i64 9, i64 3, i64 4)
	store float 0x0000000000000000, float* %116
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%117 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$277, i64 0, i32 0), i64 22}, i64 294, i64 6, i64 2, i64 4)
	%118 = getelementptr inbounds [4 x float], [4 x float]* %117, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$278, i64 0, i32 0), i64 22}, i64 294, i64 9, i64 0, i64 4)
	; SelectorExpr
	%119 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 2
	%120 = load float, float* %119, align 4
	; SelectorExpr
	%121 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%122 = load float, float* %121, align 4
	%123 = fmul float %120, %122
	%124 = fadd float 0x0000000000000000, %123
	%125 = load float, float* %2, align 4
	; SelectorExpr
	%126 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%127 = load float, float* %126, align 4
	%128 = fmul float %125, %127
	%129 = fadd float %124, %128
	store float %129, float* %118
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%130 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$279, i64 0, i32 0), i64 22}, i64 295, i64 6, i64 2, i64 4)
	%131 = getelementptr inbounds [4 x float], [4 x float]* %130, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27a, i64 0, i32 0), i64 22}, i64 295, i64 9, i64 1, i64 4)
	; SelectorExpr
	%132 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 2
	%133 = load float, float* %132, align 4
	; SelectorExpr
	%134 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%135 = load float, float* %134, align 4
	%136 = fmul float %133, %135
	%137 = fadd float 0x0000000000000000, %136
	%138 = load float, float* %2, align 4
	; SelectorExpr
	%139 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%140 = load float, float* %139, align 4
	%141 = fmul float %138, %140
	%142 = fsub float %137, %141
	store float %142, float* %131
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%143 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27b, i64 0, i32 0), i64 22}, i64 296, i64 6, i64 2, i64 4)
	%144 = getelementptr inbounds [4 x float], [4 x float]* %143, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27c, i64 0, i32 0), i64 22}, i64 296, i64 9, i64 2, i64 4)
	%145 = load float, float* %1, align 4
	; SelectorExpr
	%146 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 2
	%147 = load float, float* %146, align 4
	; SelectorExpr
	%148 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%149 = load float, float* %148, align 4
	%150 = fmul float %147, %149
	%151 = fadd float %145, %150
	store float %151, float* %144
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%152 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27d, i64 0, i32 0), i64 22}, i64 297, i64 6, i64 2, i64 4)
	%153 = getelementptr inbounds [4 x float], [4 x float]* %152, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27e, i64 0, i32 0), i64 22}, i64 297, i64 9, i64 3, i64 4)
	store float 0x0000000000000000, float* %153
	; ReturnStmt
	%154 = load [4 x [4 x float]], [4 x [4 x float]]* %8, align 4
	ret [4 x [4 x float]] %154
}

define [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %m, {[0 x <8 x i8>], [3 x float]}* %v) {
decls-0:
	%0 = load [4 x [4 x float]], [4 x [4 x float]]* %m, align 4
	%1 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, align 8
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$27f, i64 0, i32 0), i64 22}, i64 303, i64 4, i64 0, i64 4)
	%3 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$280, i64 0, i32 0), i64 22}, i64 303, i64 7, i64 0, i64 4)
	; SelectorExpr
	%4 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 0
	%5 = load float, float* %4, align 4
	%6 = load float, float* %3, align 4
	%7 = fmul float %6, %5
	store float %7, float* %3
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$281, i64 0, i32 0), i64 22}, i64 304, i64 4, i64 1, i64 4)
	%9 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$282, i64 0, i32 0), i64 22}, i64 304, i64 7, i64 1, i64 4)
	; SelectorExpr
	%10 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 1
	%11 = load float, float* %10, align 4
	%12 = load float, float* %9, align 4
	%13 = fmul float %12, %11
	store float %13, float* %9
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %m, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$283, i64 0, i32 0), i64 22}, i64 305, i64 4, i64 2, i64 4)
	%15 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$284, i64 0, i32 0), i64 22}, i64 305, i64 7, i64 2, i64 4)
	; SelectorExpr
	%16 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %v, i64 0, i32 1, i32 2
	%17 = load float, float* %16, align 4
	%18 = load float, float* %15, align 4
	%19 = fmul float %18, %17
	store float %19, float* %15
	; ReturnStmt
	%20 = load [4 x [4 x float]], [4 x [4 x float]]* %m, align 4
	ret [4 x [4 x float]] %20
}

define [4 x [4 x float]] @math-8.ortho3d(float %left, float %right, float %bottom, float %top, float %near, float %far) {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca [4 x [4 x float]], align 4
	store float zeroinitializer, float* %0
		store float %left, float* %0
	store float zeroinitializer, float* %1
		store float %right, float* %1
	store float zeroinitializer, float* %2
		store float %bottom, float* %2
	store float zeroinitializer, float* %3
		store float %top, float* %3
	store float zeroinitializer, float* %4
		store float %near, float* %4
	store float zeroinitializer, float* %5
		store float %far, float* %5
	; m
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %6
		%7 = call [4 x [4 x float]] @math-8.mat4_identity()
	store [4 x [4 x float]] %7, [4 x [4 x float]]* %6
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$285, i64 0, i32 0), i64 22}, i64 345, i64 4, i64 0, i64 4)
	%9 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$286, i64 0, i32 0), i64 22}, i64 345, i64 7, i64 0, i64 4)
	%10 = load float, float* %1, align 4
	%11 = load float, float* %0, align 4
	%12 = fsub float %10, %11
	%13 = fdiv float 0x4000000000000000, %12
	store float %13, float* %9
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$287, i64 0, i32 0), i64 22}, i64 346, i64 4, i64 1, i64 4)
	%15 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$288, i64 0, i32 0), i64 22}, i64 346, i64 7, i64 1, i64 4)
	%16 = load float, float* %3, align 4
	%17 = load float, float* %2, align 4
	%18 = fsub float %16, %17
	%19 = fdiv float 0x4000000000000000, %18
	store float %19, float* %15
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$289, i64 0, i32 0), i64 22}, i64 347, i64 4, i64 2, i64 4)
	%21 = getelementptr inbounds [4 x float], [4 x float]* %20, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28a, i64 0, i32 0), i64 22}, i64 347, i64 7, i64 2, i64 4)
	%22 = load float, float* %5, align 4
	%23 = load float, float* %4, align 4
	%24 = fsub float %22, %23
	%25 = fdiv float 0xc000000000000000, %24
	store float %25, float* %21
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28b, i64 0, i32 0), i64 22}, i64 348, i64 4, i64 3, i64 4)
	%27 = getelementptr inbounds [4 x float], [4 x float]* %26, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28c, i64 0, i32 0), i64 22}, i64 348, i64 7, i64 0, i64 4)
	%28 = load float, float* %1, align 4
	%29 = load float, float* %0, align 4
	%30 = fadd float %28, %29
	%31 = fsub float 0x0000000000000000, %30
	%32 = load float, float* %1, align 4
	%33 = load float, float* %0, align 4
	%34 = fsub float %32, %33
	%35 = fdiv float %31, %34
	store float %35, float* %27
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28d, i64 0, i32 0), i64 22}, i64 349, i64 4, i64 3, i64 4)
	%37 = getelementptr inbounds [4 x float], [4 x float]* %36, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28e, i64 0, i32 0), i64 22}, i64 349, i64 7, i64 1, i64 4)
	%38 = load float, float* %3, align 4
	%39 = load float, float* %2, align 4
	%40 = fadd float %38, %39
	%41 = fsub float 0x0000000000000000, %40
	%42 = load float, float* %3, align 4
	%43 = load float, float* %2, align 4
	%44 = fsub float %42, %43
	%45 = fdiv float %41, %44
	store float %45, float* %37
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$28f, i64 0, i32 0), i64 22}, i64 350, i64 4, i64 3, i64 4)
	%47 = getelementptr inbounds [4 x float], [4 x float]* %46, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$290, i64 0, i32 0), i64 22}, i64 350, i64 7, i64 2, i64 4)
	%48 = load float, float* %5, align 4
	%49 = load float, float* %4, align 4
	%50 = fadd float %48, %49
	%51 = fsub float 0x0000000000000000, %50
	%52 = load float, float* %5, align 4
	%53 = load float, float* %4, align 4
	%54 = fsub float %52, %53
	%55 = fdiv float %51, %54
	store float %55, float* %47
	; ReturnStmt
	%56 = load [4 x [4 x float]], [4 x [4 x float]]* %6, align 4
	ret [4 x [4 x float]] %56
}

define i1 @imgui-9.Begin(%..string %name, i1* %open, i32 %flags) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1*, align 8
	%2 = alloca i32, align 4
	%3 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	store i1* zeroinitializer, i1** %1
		store i1* %open, i1** %1
	store i32 zeroinitializer, i32* %2
		store i32 %flags, i32* %2
	; str
	store i8* zeroinitializer, i8** %3
		; SelectorExpr
	%4 = load %..string, %..string* %0, align 8
	%5 = call i8* @strings-7.new_c_string(%..string %4)
	store i8* %5, i8** %3
	; DeferStmt
	; ReturnStmt
	%6 = load i8*, i8** %3, align 8
	%7 = load i1*, i1** %1, align 8
	%8 = load i32, i32* %2, align 4
	%9 = call ccc i1 @igBegin(i8* %6, i1* %7, i32 %8)
	; defer
	; free
	%10 = load i8*, i8** %3, align 8
	%11 = bitcast i8* %10 to %..rawptr
	call void @free_ptr(%..rawptr %11)
	ret i1 %9
}

define i1 @imgui-9.BeginChild(%..string %str_id, i64 %size, i1 %border, i32 %extra_flags) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca i1, align 1
	%3 = alloca i32, align 4
	%4 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %str_id, %..string* %0
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
		%5 = bitcast %imgui-9.Vec2* %1 to i64*
	store i64 %size, i64* %5
	%6 = load %imgui-9.Vec2, %imgui-9.Vec2* %1, align 4
	store i1 zeroinitializer, i1* %2
		store i1 %border, i1* %2
	store i32 zeroinitializer, i32* %3
		store i32 %extra_flags, i32* %3
	; str
	store i8* zeroinitializer, i8** %4
		; SelectorExpr
	%7 = load %..string, %..string* %0, align 8
	%8 = call i8* @strings-7.new_c_string(%..string %7)
	store i8* %8, i8** %4
	; DeferStmt
	; ReturnStmt
	%9 = load i8*, i8** %4, align 8
	%10 = load %imgui-9.Vec2, %imgui-9.Vec2* %1, align 4
	%11 = load i1, i1* %2, align 1
	%12 = load i32, i32* %3, align 4
	%13 = bitcast %imgui-9.Vec2* %1 to i64*
	%14 = load i64, i64* %13, align 8
	%15 = call ccc i1 @igBeginChild(i8* %9, i64 %14, i1 %11, i32 %12)
	; defer
	; free
	%16 = load i8*, i8** %4, align 8
	%17 = bitcast i8* %16 to %..rawptr
	call void @free_ptr(%..rawptr %17)
	ret i1 %15
}

define void @imgui-9.Text(%..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [4096 x i8], align 1
	%3 = alloca %..string, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; buf
	store [4096 x i8] zeroinitializer, [4096 x i8]* %2
		; s
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	; SliceExpr
	%5 = load [4096 x i8], [4096 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$291, i64 0, i32 0), i64 27}, i64 517, i64 25, i64 0, i64 4096, i64 4096)
	%6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = sub i64 4096, 0
	%9 = sub i64 4096, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%10 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %7, i8** %10
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %8, i64* %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %9, i64* %12
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%14 = load %..string, %..string* %0, align 8
	%15 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%16 = call %..string @fmt-4.bprintf({i8*, i64, i64} %13, %..string %14, {%..any*, i64, i64} %15)
	store %..string %16, %..string* %3
	; IndexExpr
	%17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$292, i64 0, i32 0), i64 27}, i64 519, i64 17, i64 0, i64 4096)
	%18 = getelementptr inbounds i8, i8* %17, i64 0
	call ccc void @igText(i8* %18)
	ret void
}

define void @imgui-9.TextColored(%imgui-9.Vec4* %col, %..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [4096 x i8], align 1
	%3 = alloca %..string, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca %imgui-9.Vec4, align 16
	%6 = load %imgui-9.Vec4, %imgui-9.Vec4* %col, align 4
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; buf
	store [4096 x i8] zeroinitializer, [4096 x i8]* %2
		; s
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	; SliceExpr
	%7 = load [4096 x i8], [4096 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$293, i64 0, i32 0), i64 27}, i64 526, i64 25, i64 0, i64 4096, i64 4096)
	%8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	%10 = sub i64 4096, 0
	%11 = sub i64 4096, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %9, i8** %12
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %10, i64* %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %11, i64* %14
	%15 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%16 = load %..string, %..string* %0, align 8
	%17 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%18 = call %..string @fmt-4.bprintf({i8*, i64, i64} %15, %..string %16, {%..any*, i64, i64} %17)
	store %..string %18, %..string* %3
	%19 = load %imgui-9.Vec4, %imgui-9.Vec4* %col, align 4
	; IndexExpr
	%20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$294, i64 0, i32 0), i64 27}, i64 528, i64 29, i64 0, i64 4096)
	%21 = getelementptr inbounds i8, i8* %20, i64 0
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %5
	store %imgui-9.Vec4 %19, %imgui-9.Vec4* %5
	call ccc void @igTextColored(%imgui-9.Vec4* %5, i8* %21)
	ret void
}

define void @imgui-9.TextWrapped(%..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [4096 x i8], align 1
	%3 = alloca %..string, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	; buf
	store [4096 x i8] zeroinitializer, [4096 x i8]* %2
		; s
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	; SliceExpr
	%5 = load [4096 x i8], [4096 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$295, i64 0, i32 0), i64 27}, i64 538, i64 25, i64 0, i64 4096, i64 4096)
	%6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = sub i64 4096, 0
	%9 = sub i64 4096, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%10 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %7, i8** %10
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %8, i64* %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %9, i64* %12
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%14 = load %..string, %..string* %0, align 8
	%15 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	%16 = call %..string @fmt-4.bprintf({i8*, i64, i64} %13, %..string %14, {%..any*, i64, i64} %15)
	store %..string %16, %..string* %3
	; IndexExpr
	%17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$296, i64 0, i32 0), i64 27}, i64 540, i64 24, i64 0, i64 4096)
	%18 = getelementptr inbounds i8, i8* %17, i64 0
	call ccc void @igTextWrapped(i8* %18)
	ret void
}

define i1 @imgui-9.Button(%..string %label, i64 %size) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
		%3 = bitcast %imgui-9.Vec2* %1 to i64*
	store i64 %size, i64* %3
	%4 = load %imgui-9.Vec2, %imgui-9.Vec2* %1, align 4
	; str
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%5 = load %..string, %..string* %0, align 8
	%6 = call i8* @strings-7.new_c_string(%..string %5)
	store i8* %6, i8** %2
	; DeferStmt
	; ReturnStmt
	%7 = load i8*, i8** %2, align 8
	%8 = load %imgui-9.Vec2, %imgui-9.Vec2* %1, align 4
	%9 = bitcast %imgui-9.Vec2* %1 to i64*
	%10 = load i64, i64* %9, align 8
	%11 = call ccc i1 @igButton(i8* %7, i64 %10)
	; defer
	; free
	%12 = load i8*, i8** %2, align 8
	%13 = bitcast i8* %12 to %..rawptr
	call void @free_ptr(%..rawptr %13)
	ret i1 %11
}

define i1 @imgui-9.SmallButton(%..string %label) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	; str
	store i8* zeroinitializer, i8** %1
		; SelectorExpr
	%2 = load %..string, %..string* %0, align 8
	%3 = call i8* @strings-7.new_c_string(%..string %2)
	store i8* %3, i8** %1
	; DeferStmt
	; ReturnStmt
	%4 = load i8*, i8** %1, align 8
	%5 = call ccc i1 @igSmallButton(i8* %4)
	; defer
	; free
	%6 = load i8*, i8** %1, align 8
	%7 = bitcast i8* %6 to %..rawptr
	call void @free_ptr(%..rawptr %7)
	ret i1 %5
}

define i1 @imgui-9.Checkbox(%..string %label, i1* %v) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1*, align 8
	%2 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store i1* zeroinitializer, i1** %1
		store i1* %v, i1** %1
	; str
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%3 = load %..string, %..string* %0, align 8
	%4 = call i8* @strings-7.new_c_string(%..string %3)
	store i8* %4, i8** %2
	; DeferStmt
	; ReturnStmt
	%5 = load i8*, i8** %2, align 8
	%6 = load i1*, i1** %1, align 8
	%7 = call ccc i1 @igCheckbox(i8* %5, i1* %6)
	; defer
	; free
	%8 = load i8*, i8** %2, align 8
	%9 = bitcast i8* %8 to %..rawptr
	call void @free_ptr(%..rawptr %9)
	ret i1 %7
}

define i1 @imgui-9.Combo(%..string %label, i32* %current_item, {%..string*, i64, i64} %items, i32 %height_in_items) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i32*, align 8
	%2 = alloca {%..string*, i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca i8*, align 8
	%5 = alloca {i8**, i64, i64}, align 8
	%6 = alloca {i8**, i64, i64}, align 8
	%7 = alloca %..string, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca i64, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store i32* zeroinitializer, i32** %1
		store i32* %current_item, i32** %1
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %2
		store {%..string*, i64, i64} %items, {%..string*, i64, i64}* %2
	store i32 zeroinitializer, i32* %3
		store i32 %height_in_items, i32* %3
	; str
	store i8* zeroinitializer, i8** %4
		; SelectorExpr
	%11 = load %..string, %..string* %0, align 8
	%12 = call i8* @strings-7.new_c_string(%..string %11)
	store i8* %12, i8** %4
	; DeferStmt
	; data
	store {i8**, i64, i64} zeroinitializer, {i8**, i64, i64}* %5
		; make
	%13 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %2, align 8
	%14 = extractvalue {%..string*, i64, i64} %13, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$297, i64 0, i32 0), i64 27}, i64 580, i64 28, i64 0, i64 %14, i64 %14)
	%15 = mul i64 8, %14
	%16 = call %..rawptr @alloc_align(i64 %15, i64 8)
	%17 = bitcast %..rawptr %16 to i8**
	store {i8**, i64, i64} zeroinitializer, {i8**, i64, i64}* %6
	%18 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %6, i64 0, i32 0
	store i8** %17, i8*** %18
	%19 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %6, i64 0, i32 1
	store i64 %14, i64* %19
	%20 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %6, i64 0, i32 2
	store i64 %14, i64* %20
	%21 = load {i8**, i64, i64}, {i8**, i64, i64}* %6, align 8
	store {i8**, i64, i64} %21, {i8**, i64, i64}* %5
	; DeferStmt
	; RangeStmt
	; item
	store %..string zeroinitializer, %..string* %7
		; idx
	store i64 zeroinitializer, i64* %8
		%22 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %2, align 8
	store i64 zeroinitializer, i64* %9
	%23 = extractvalue {%..string*, i64, i64} %22, 1
	store i64 %23, i64* %9
	store i64 zeroinitializer, i64* %10
	store i64 -1, i64* %10
	br label %for.index.loop-1

for.index.loop-1:
	%24 = load i64, i64* %10, align 8
	%25 = add i64 %24, 1
	store i64 %25, i64* %10
	%26 = load i64, i64* %9, align 8
	%27 = icmp slt i64 %25, %26
	br i1 %27, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%28 = load i64, i64* %10, align 8
	%29 = extractvalue {%..string*, i64, i64} %22, 0
	%30 = getelementptr inbounds %..string, %..string* %29, i64 %28
	%31 = load %..string, %..string* %30, align 8
	store %..string %31, %..string* %7
	store i64 %28, i64* %8
	; AssignStmt
	; IndexExpr
	%32 = load {i8**, i64, i64}, {i8**, i64, i64}* %5, align 8
	%33 = extractvalue {i8**, i64, i64} %32, 0
	%34 = extractvalue {i8**, i64, i64} %32, 1
	%35 = load i64, i64* %8, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$298, i64 0, i32 0), i64 27}, i64 582, i64 14, i64 %35, i64 %34)
	%36 = getelementptr inbounds i8*, i8** %33, i64 %35
	; SelectorExpr
	%37 = load %..string, %..string* %7, align 8
	%38 = call i8* @strings-7.new_c_string(%..string %37)
	store i8* %38, i8** %36
	br label %for.index.loop-1

for.index.done-3:
	; ReturnStmt
	%39 = load i8*, i8** %4, align 8
	%40 = load i32*, i32** %1, align 8
	; IndexExpr
	%41 = load {i8**, i64, i64}, {i8**, i64, i64}* %5, align 8
	%42 = extractvalue {i8**, i64, i64} %41, 0
	%43 = extractvalue {i8**, i64, i64} %41, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$299, i64 0, i32 0), i64 27}, i64 585, i64 46, i64 0, i64 %43)
	%44 = getelementptr inbounds i8*, i8** %42, i64 0
	%45 = getelementptr inbounds i8*, i8** %44, i64 0
	%46 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %2, align 8
	%47 = extractvalue {%..string*, i64, i64} %46, 1
	%48 = trunc i64 %47 to i32
	%49 = load i32, i32* %3, align 4
	%50 = call ccc i1 @igCombo(i8* %39, i32* %40, i8** %45, i32 %48, i32 %49)
	; defer
	; free
	%51 = load {i8**, i64, i64}, {i8**, i64, i64}* %5, align 8
	%52 = extractvalue {i8**, i64, i64} %51, 0
	%53 = bitcast i8** %52 to %..rawptr
	call void @free_ptr(%..rawptr %53)
	; defer
	; free
	%54 = load i8*, i8** %4, align 8
	%55 = bitcast i8* %54 to %..rawptr
	call void @free_ptr(%..rawptr %55)
	ret i1 %50
}

define void @imgui-9.DragFloat(%..string %label, float* %v, float %v_speed, float %v_min, float %v_max, %..string %display_format, float %power) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca float*, align 8
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca %..string, align 8
	%6 = alloca float, align 4
	%7 = alloca i8*, align 8
	%8 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store float* zeroinitializer, float** %1
		store float* %v, float** %1
	store float zeroinitializer, float* %2
		store float %v_speed, float* %2
	store float zeroinitializer, float* %3
		store float %v_min, float* %3
	store float zeroinitializer, float* %4
		store float %v_max, float* %4
	store %..string zeroinitializer, %..string* %5
		store %..string %display_format, %..string* %5
	store float zeroinitializer, float* %6
		store float %power, float* %6
	; str
	store i8* zeroinitializer, i8** %7
		; SelectorExpr
	%9 = load %..string, %..string* %0, align 8
	%10 = call i8* @strings-7.new_c_string(%..string %9)
	store i8* %10, i8** %7
	; DeferStmt
	; fstr
	store i8* zeroinitializer, i8** %8
		; SelectorExpr
	%11 = load %..string, %..string* %5, align 8
	%12 = call i8* @strings-7.new_c_string(%..string %11)
	store i8* %12, i8** %8
	; DeferStmt
	%13 = load i8*, i8** %7, align 8
	%14 = load float*, float** %1, align 8
	%15 = load float, float* %2, align 4
	%16 = load float, float* %3, align 4
	%17 = load float, float* %4, align 4
	%18 = load i8*, i8** %8, align 8
	%19 = load float, float* %6, align 4
	call ccc void @igDragFloat(i8* %13, float* %14, float %15, float %16, float %17, i8* %18, float %19)
	; defer
	; free
	%20 = load i8*, i8** %8, align 8
	%21 = bitcast i8* %20 to %..rawptr
	call void @free_ptr(%..rawptr %21)
	; defer
	; free
	%22 = load i8*, i8** %7, align 8
	%23 = bitcast i8* %22 to %..rawptr
	call void @free_ptr(%..rawptr %23)
	ret void
}

define i1 @imgui-9.InputText(%..string %label, {i8*, i64, i64} %buf, i32 %flags, i32 (%imgui-9.GuiTextEditCallbackData*)* %callback, %..rawptr %user_data) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = alloca i32, align 4
	%3 = alloca i32 (%imgui-9.GuiTextEditCallbackData*)*, align 8
	%4 = alloca %..rawptr, align 8
	%5 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %1
	store i32 zeroinitializer, i32* %2
		store i32 %flags, i32* %2
	store i32 (%imgui-9.GuiTextEditCallbackData*)* zeroinitializer, i32 (%imgui-9.GuiTextEditCallbackData*)** %3
		store i32 (%imgui-9.GuiTextEditCallbackData*)* %callback, i32 (%imgui-9.GuiTextEditCallbackData*)** %3
	store %..rawptr zeroinitializer, %..rawptr* %4
		store %..rawptr %user_data, %..rawptr* %4
	; str
	store i8* zeroinitializer, i8** %5
		; SelectorExpr
	%6 = load %..string, %..string* %0, align 8
	%7 = call i8* @strings-7.new_c_string(%..string %6)
	store i8* %7, i8** %5
	; DeferStmt
	; ReturnStmt
	%8 = load i8*, i8** %5, align 8
	; IndexExpr
	%9 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%10 = extractvalue {i8*, i64, i64} %9, 0
	%11 = extractvalue {i8*, i64, i64} %9, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$29a, i64 0, i32 0), i64 27}, i64 643, i64 34, i64 0, i64 %11)
	%12 = getelementptr inbounds i8, i8* %10, i64 0
	%13 = getelementptr inbounds i8, i8* %12, i64 0
	%14 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%15 = extractvalue {i8*, i64, i64} %14, 1
	%16 = bitcast i64 %15 to i64
	%17 = load i32, i32* %2, align 4
	%18 = load i32 (%imgui-9.GuiTextEditCallbackData*)*, i32 (%imgui-9.GuiTextEditCallbackData*)** %3, align 8
	%19 = load %..rawptr, %..rawptr* %4, align 8
	%20 = call ccc i1 @igInputText(i8* %8, i8* %13, i64 %16, i32 %17, i32 (%imgui-9.GuiTextEditCallbackData*)* %18, %..rawptr %19)
	; defer
	; free
	%21 = load i8*, i8** %5, align 8
	%22 = bitcast i8* %21 to %..rawptr
	call void @free_ptr(%..rawptr %22)
	ret i1 %20
}

define i1 @imgui-9.CollapsingHeader(%..string %label, i32 %flags) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i32, align 4
	%2 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store i32 zeroinitializer, i32* %1
		store i32 %flags, i32* %1
	; str
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%3 = load %..string, %..string* %0, align 8
	%4 = call i8* @strings-7.new_c_string(%..string %3)
	store i8* %4, i8** %2
	; DeferStmt
	; ReturnStmt
	%5 = load i8*, i8** %2, align 8
	%6 = load i32, i32* %1, align 4
	%7 = call ccc i1 @igCollapsingHeader(i8* %5, i32 %6)
	; defer
	; free
	%8 = load i8*, i8** %2, align 8
	%9 = bitcast i8* %8 to %..rawptr
	call void @free_ptr(%..rawptr %9)
	ret i1 %7
}

define i1 @imgui-9.BeginMenu(%..string %label, i1 %enabled) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1, align 1
	%2 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store i1 zeroinitializer, i1* %1
		store i1 %enabled, i1* %1
	; str
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%3 = load %..string, %..string* %0, align 8
	%4 = call i8* @strings-7.new_c_string(%..string %3)
	store i8* %4, i8** %2
	; DeferStmt
	; ReturnStmt
	%5 = load i8*, i8** %2, align 8
	%6 = load i1, i1* %1, align 1
	%7 = call ccc i1 @igBeginMenu(i8* %5, i1 %6)
	; defer
	; free
	%8 = load i8*, i8** %2, align 8
	%9 = bitcast i8* %8 to %..rawptr
	call void @free_ptr(%..rawptr %9)
	ret i1 %7
}

define i1 @imgui-9.MenuItem(%..string %label, %..string %shortcut, i1 %selected, i1 %enabled) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i1, align 1
	%3 = alloca i1, align 1
	%4 = alloca i8*, align 8
	%5 = alloca i8*, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %label, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %shortcut, %..string* %1
	store i1 zeroinitializer, i1* %2
		store i1 %selected, i1* %2
	store i1 zeroinitializer, i1* %3
		store i1 %enabled, i1* %3
	; str
	store i8* zeroinitializer, i8** %4
		; SelectorExpr
	%6 = load %..string, %..string* %0, align 8
	%7 = call i8* @strings-7.new_c_string(%..string %6)
	store i8* %7, i8** %4
	; DeferStmt
	; shrt
	store i8* zeroinitializer, i8** %5
		; SelectorExpr
	%8 = load %..string, %..string* %1, align 8
	%9 = call i8* @strings-7.new_c_string(%..string %8)
	store i8* %9, i8** %5
	; DeferStmt
	; ReturnStmt
	%10 = load i8*, i8** %4, align 8
	%11 = load i8*, i8** %5, align 8
	%12 = load i1, i1* %2, align 1
	%13 = load i1, i1* %3, align 1
	%14 = call ccc i1 @igMenuItem(i8* %10, i8* %11, i1 %12, i1 %13)
	; defer
	; free
	%15 = load i8*, i8** %5, align 8
	%16 = bitcast i8* %15 to %..rawptr
	call void @free_ptr(%..rawptr %16)
	; defer
	; free
	%17 = load i8*, i8** %4, align 8
	%18 = bitcast i8* %17 to %..rawptr
	call void @free_ptr(%..rawptr %18)
	ret i1 %14
}

define void @gl-10.DepthFunc(i32 %func) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %func, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._DepthFunc, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._DepthFunc, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$29b, i64 0, i32 0), i64 9}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.LogError(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$29c, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.GenerateMipmap(i32 %target) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._GenerateMipmap, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._GenerateMipmap, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$29d, i64 0, i32 0), i64 14}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$29e, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.DebugMessageControl(i32 %source, i32 %type, i32 %severity, i32 %count, i32* %ids, i1 %enabled) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32*, align 8
	%5 = alloca i1, align 1
	%6 = alloca %..string, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %source, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %type, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %severity, i32* %2
	store i32 zeroinitializer, i32* %3
		store i32 %count, i32* %3
	store i32* zeroinitializer, i32** %4
		store i32* %ids, i32** %4
	store i1 zeroinitializer, i1* %5
		store i1 %enabled, i1* %5
	; IfStmt
	%10 = load void (i32, i32, i32, i32, i32*, i1)*, void (i32, i32, i32, i32, i32*, i1)** @gl-10._DebugMessageControl, align 8
	%11 = icmp ne void (i32, i32, i32, i32, i32*, i1)* %10, zeroinitializer
	br i1 %11, label %if.then-1, label %if.else-2

if.then-1:
	%12 = load void (i32, i32, i32, i32, i32*, i1)*, void (i32, i32, i32, i32, i32*, i1)** @gl-10._DebugMessageControl, align 8
	%13 = load i32, i32* %0, align 4
	%14 = load i32, i32* %1, align 4
	%15 = load i32, i32* %2, align 4
	%16 = load i32, i32* %3, align 4
	%17 = load i32*, i32** %4, align 8
	%18 = load i1, i1* %5, align 1
	call ccc void %12(i32 %13, i32 %14, i32 %15, i32 %16, i32* %17, i1 %18)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %6
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$29f, i64 0, i32 0), i64 19}, %..string* %6
	%19 = load %..string, %..string* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%20 = bitcast %..string* %6 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%22 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [1 x %..any] zeroinitializer, [1 x %..any]* %9
	%25 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	store %..any %24, %..any* %25
	%26 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	%27 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %26, %..any** %27
	%28 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 1, i64* %28
	%29 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 1, i64* %29
	%30 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a0, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %30)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.DebugMessageCallback(void (i32, i32, i32, i32, i32, i8*, %..rawptr)* %callback, %..rawptr %userParam) {
decls-0:
	%0 = alloca void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store void (i32, i32, i32, i32, i32, i8*, %..rawptr)* zeroinitializer, void (i32, i32, i32, i32, i32, i8*, %..rawptr)** %0
		store void (i32, i32, i32, i32, i32, i8*, %..rawptr)* %callback, void (i32, i32, i32, i32, i32, i8*, %..rawptr)** %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %userParam, %..rawptr* %1
	; IfStmt
	%6 = load void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)*, void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** @gl-10._DebugMessageCallback, align 8
	%7 = icmp ne void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)*, void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** @gl-10._DebugMessageCallback, align 8
	%9 = load void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, void (i32, i32, i32, i32, i32, i8*, %..rawptr)** %0, align 8
	%10 = load %..rawptr, %..rawptr* %1, align 8
	call ccc void %8(void (i32, i32, i32, i32, i32, i8*, %..rawptr)* %9, %..rawptr %10)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2a1, i64 0, i32 0), i64 20}, %..string* %2
	%11 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%12 = bitcast %..string* %2 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a2, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.Clear(i32 %mask) {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %mask, i32* %0
	%1 = load void (i32)*, void (i32)** @gl-10._Clear, align 8
	%2 = load i32, i32* %0, align 4
	call ccc void %1(i32 %2)
	ret void
}

define void @gl-10.BufferData-773(i32 %target, i32 %size, %..rawptr %data, i32 %usage) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..rawptr, align 8
	%3 = alloca i32, align 4
	%4 = alloca %..string, align 8
	%5 = alloca %..any, align 8
	%6 = alloca {%..any*, i64, i64}, align 8
	%7 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %size, i32* %1
	store %..rawptr zeroinitializer, %..rawptr* %2
		store %..rawptr %data, %..rawptr* %2
	store i32 zeroinitializer, i32* %3
		store i32 %usage, i32* %3
	; IfStmt
	%8 = load void (i32, i32, %..rawptr, i32)*, void (i32, i32, %..rawptr, i32)** @gl-10._BufferData, align 8
	%9 = icmp ne void (i32, i32, %..rawptr, i32)* %8, zeroinitializer
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	%10 = load void (i32, i32, %..rawptr, i32)*, void (i32, i32, %..rawptr, i32)** @gl-10._BufferData, align 8
	%11 = load i32, i32* %0, align 4
	%12 = load i32, i32* %1, align 4
	%13 = load %..rawptr, %..rawptr* %2, align 8
	%14 = load i32, i32* %3, align 4
	call ccc void %10(i32 %11, i32 %12, %..rawptr %13, i32 %14)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$2a3, i64 0, i32 0), i64 10}, %..string* %4
	%15 = load %..string, %..string* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%16 = bitcast %..string* %4 to %..rawptr
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%18 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %16, %..rawptr* %18
	%19 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %17, %Type_Info** %19
	%20 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %6
	store [1 x %..any] zeroinitializer, [1 x %..any]* %7
	%21 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	store %..any %20, %..any* %21
	%22 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 0
	store %..any* %22, %..any** %23
	%24 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %24
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %25
	%26 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %6, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a4, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %26)
	br label %if.done-3

if.done-3:
	ret void
}

define i32 @gl-10.GenVBO() {
decls-0:
	%0 = alloca i32, align 4
	; bo
	store i32 zeroinitializer, i32* %0
		%1 = call i32 @gl-10.GenBuffer()
	store i32 %1, i32* %0
	; ReturnStmt
	%2 = load i32, i32* %0, align 4
	ret i32 %2
}

define i32 @gl-10.GenEBO() {
decls-0:
	%0 = alloca i32, align 4
	; bo
	store i32 zeroinitializer, i32* %0
		%1 = call i32 @gl-10.GenBuffer()
	store i32 %1, i32* %0
	; ReturnStmt
	%2 = load i32, i32* %0, align 4
	ret i32 %2
}

define i32 @gl-10.GenBuffer() {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	; IfStmt
	%5 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GenBuffers, align 8
	%6 = icmp ne void (i32, i32*)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i32 zeroinitializer, i32* %0
		%7 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GenBuffers, align 8
	%8 = getelementptr inbounds i32, i32* %0, i64 0
	%9 = bitcast i32* %8 to i32*
	call ccc void %7(i32 1, i32* %9)
	; ReturnStmt
	%10 = load i32, i32* %0, align 4
	ret i32 %10

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$2a5, i64 0, i32 0), i64 9}, %..string* %1
	%11 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%12 = bitcast %..string* %1 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a6, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	; ReturnStmt
	ret i32 0

if.done-3:
	unreachable
}

define void @gl-10.BindBuffer-778(i32 %target, i32 %buffer) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %buffer, i32* %1
	; IfStmt
	%6 = load void (i32, i32)*, void (i32, i32)** @gl-10._BindBuffer, align 8
	%7 = icmp ne void (i32, i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (i32, i32)*, void (i32, i32)** @gl-10._BindBuffer, align 8
	%9 = load i32, i32* %0, align 4
	%10 = load i32, i32* %1, align 4
	call ccc void %8(i32 %9, i32 %10)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$2a7, i64 0, i32 0), i64 10}, %..string* %2
	%11 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%12 = bitcast %..string* %2 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a8, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.BindBuffer-779(i32 %vbo) {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %vbo, i32* %0
	%1 = load i32, i32* %0, align 4
	call void @gl-10.BindBuffer-778(i32 34962, i32 %1)
	ret void
}

define void @gl-10.BindBuffer-780(i32 %ebo) {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %ebo, i32* %0
	%1 = load i32, i32* %0, align 4
	call void @gl-10.BindBuffer-778(i32 34963, i32 %1)
	ret void
}

define void @gl-10.BindFragDataLocation(%gl-10.Program* %program, i32 %colorNumber, %..string %name) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca i8*, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	%7 = load %gl-10.Program, %gl-10.Program* %program, align 8
	store i32 zeroinitializer, i32* %0
		store i32 %colorNumber, i32* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %name, %..string* %1
	; IfStmt
	%8 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-10._BindFragDataLocation, align 8
	%9 = icmp ne void (i32, i32, i8*)* %8, zeroinitializer
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	; c
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%10 = load %..string, %..string* %1, align 8
	%11 = call i8* @strings-7.new_c_string(%..string %10)
	store i8* %11, i8** %2
	%12 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-10._BindFragDataLocation, align 8
	; SelectorExpr
	%13 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%14 = load i32, i32* %13, align 4
	%15 = load i32, i32* %0, align 4
	%16 = load i8*, i8** %2, align 8
	call ccc void %12(i32 %14, i32 %15, i8* %16)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %3
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2a9, i64 0, i32 0), i64 20}, %..string* %3
	%17 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%18 = bitcast %..string* %3 to %..rawptr
	%19 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%20 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %18, %..rawptr* %20
	%21 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %19, %Type_Info** %21
	%22 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%23 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %22, %..any* %23
	%24 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %24, %..any** %25
	%26 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %26
	%27 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %27
	%28 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2aa, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %28)
	br label %if.done-3

if.done-3:
	ret void
}

define i32 @gl-10.GenVertexArray() {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	; IfStmt
	%5 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GenVertexArrays, align 8
	%6 = icmp ne void (i32, i32*)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i32 zeroinitializer, i32* %0
		%7 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GenVertexArrays, align 8
	%8 = getelementptr inbounds i32, i32* %0, i64 0
	%9 = bitcast i32* %8 to i32*
	call ccc void %7(i32 1, i32* %9)
	; ReturnStmt
	%10 = load i32, i32* %0, align 4
	ret i32 %10

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2ab, i64 0, i32 0), i64 14}, %..string* %1
	%11 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%12 = bitcast %..string* %1 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2ac, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	; ReturnStmt
	ret i32 0
}

define void @gl-10.EnableVertexAttribArray(i32 %index) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %index, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._EnableVertexAttribArray, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._EnableVertexAttribArray, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2ad, i64 0, i32 0), i64 23}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2ae, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.VertexAttribPointer(i32 %index, i32 %size, i32 %type, i1 %normalized, i32 %stride, %..rawptr %pointer) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca i32, align 4
	%5 = alloca %..rawptr, align 8
	%6 = alloca %..string, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %index, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %size, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %type, i32* %2
	store i1 zeroinitializer, i1* %3
		store i1 %normalized, i1* %3
	store i32 zeroinitializer, i32* %4
		store i32 %stride, i32* %4
	store %..rawptr zeroinitializer, %..rawptr* %5
		store %..rawptr %pointer, %..rawptr* %5
	; IfStmt
	%10 = load void (i32, i32, i32, i1, i32, %..rawptr)*, void (i32, i32, i32, i1, i32, %..rawptr)** @gl-10._VertexAttribPointer, align 8
	%11 = icmp ne void (i32, i32, i32, i1, i32, %..rawptr)* %10, zeroinitializer
	br i1 %11, label %if.then-1, label %if.else-2

if.then-1:
	%12 = load void (i32, i32, i32, i1, i32, %..rawptr)*, void (i32, i32, i32, i1, i32, %..rawptr)** @gl-10._VertexAttribPointer, align 8
	%13 = load i32, i32* %0, align 4
	%14 = load i32, i32* %1, align 4
	%15 = load i32, i32* %2, align 4
	%16 = load i1, i1* %3, align 1
	%17 = load i32, i32* %4, align 4
	%18 = load %..rawptr, %..rawptr* %5, align 8
	call ccc void %12(i32 %13, i32 %14, i32 %15, i1 %16, i32 %17, %..rawptr %18)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %6
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$2af, i64 0, i32 0), i64 19}, %..string* %6
	%19 = load %..string, %..string* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%20 = bitcast %..string* %6 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%22 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [1 x %..any] zeroinitializer, [1 x %..any]* %9
	%25 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	store %..any %24, %..any* %25
	%26 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	%27 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %26, %..any** %27
	%28 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 1, i64* %28
	%29 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 1, i64* %29
	%30 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b0, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %30)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.BindVertexArray(i32 %buffer) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %buffer, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._BindVertexArray, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._BindVertexArray, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2b1, i64 0, i32 0), i64 15}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b2, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.Uniform-787(i32 %loc, i32 %v0) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %loc, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %v0, i32* %1
	; IfStmt
	%6 = load void (i32, i32)*, void (i32, i32)** @gl-10._Uniform1i, align 8
	%7 = icmp ne void (i32, i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (i32, i32)*, void (i32, i32)** @gl-10._Uniform1i, align 8
	%9 = load i32, i32* %0, align 4
	%10 = load i32, i32* %1, align 4
	call ccc void %8(i32 %9, i32 %10)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$2b3, i64 0, i32 0), i64 7}, %..string* %2
	%11 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%12 = bitcast %..string* %2 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b4, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.Uniform-794(i32 %loc, float %v0, float %v1, float %v2, float %v3) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca %..string, align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %loc, i32* %0
	store float zeroinitializer, float* %1
		store float %v0, float* %1
	store float zeroinitializer, float* %2
		store float %v1, float* %2
	store float zeroinitializer, float* %3
		store float %v2, float* %3
	store float zeroinitializer, float* %4
		store float %v3, float* %4
	; IfStmt
	%9 = load void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-10._Uniform4f, align 8
	%10 = icmp ne void (i32, float, float, float, float)* %9, zeroinitializer
	br i1 %10, label %if.then-1, label %if.else-2

if.then-1:
	%11 = load void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-10._Uniform4f, align 8
	%12 = load i32, i32* %0, align 4
	%13 = load float, float* %1, align 4
	%14 = load float, float* %2, align 4
	%15 = load float, float* %3, align 4
	%16 = load float, float* %4, align 4
	call ccc void %11(i32 %12, float %13, float %14, float %15, float %16)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$2b5, i64 0, i32 0), i64 7}, %..string* %5
	%17 = load %..string, %..string* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%18 = bitcast %..string* %5 to %..rawptr
	%19 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%20 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %18, %..rawptr* %20
	%21 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %19, %Type_Info** %21
	%22 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%23 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %22, %..any* %23
	%24 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %24, %..any** %25
	%26 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %26
	%27 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %27
	%28 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b6, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %28)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.UniformMatrix4fv(i32 %loc, [4 x [4 x float]]* %matrix, i1 %transpose) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i1, align 1
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %loc, i32* %0
	%6 = load [4 x [4 x float]], [4 x [4 x float]]* %matrix, align 4
	store i1 zeroinitializer, i1* %1
		store i1 %transpose, i1* %1
	; IfStmt
	%7 = load void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-10._UniformMatrix4fv, align 8
	%8 = icmp ne void (i32, i32, i32, float*)* %7, zeroinitializer
	br i1 %8, label %if.then-1, label %if.else-2

if.then-1:
	%9 = load void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-10._UniformMatrix4fv, align 8
	%10 = load i32, i32* %0, align 4
	%11 = load i1, i1* %1, align 1
	%12 = zext i1 %11 to i32
	%13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0
	%14 = bitcast [4 x [4 x float]]* %13 to float*
	call ccc void %9(i32 %10, i32 1, i32 %12, float* %14)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b7, i64 0, i32 0), i64 16}, %..string* %2
	%15 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%16 = bitcast %..string* %2 to %..rawptr
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%18 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %16, %..rawptr* %18
	%19 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %17, %Type_Info** %19
	%20 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%21 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %20, %..any* %21
	%22 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %22, %..any** %23
	%24 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %24
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %25
	%26 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b8, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %26)
	br label %if.done-3

if.done-3:
	ret void
}

define i32 @gl-10.GetUniformLocation(%gl-10.Program* %program, %..string %name) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca i32, align 4
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	%7 = load %gl-10.Program, %gl-10.Program* %program, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	; IfStmt
	%8 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetUniformLocation, align 8
	%9 = icmp ne i32 (i32, i8*)* %8, zeroinitializer
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	; str
	store i8* zeroinitializer, i8** %1
		; SelectorExpr
	%10 = load %..string, %..string* %0, align 8
	%11 = call i8* @strings-7.new_c_string(%..string %10)
	store i8* %11, i8** %1
	; DeferStmt
	; res
	store i32 zeroinitializer, i32* %2
		%12 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetUniformLocation, align 8
	; SelectorExpr
	%13 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%14 = load i32, i32* %13, align 4
	%15 = load i8*, i8** %1, align 8
	%16 = call ccc i32 %12(i32 %14, i8* %15)
	store i32 %16, i32* %2
	; ReturnStmt
	%17 = load i32, i32* %2, align 4
	; defer
	; free
	%18 = load i8*, i8** %1, align 8
	%19 = bitcast i8* %18 to %..rawptr
	call void @free_ptr(%..rawptr %19)
	ret i32 %17

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %3
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$2b9, i64 0, i32 0), i64 18}, %..string* %3
	%20 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%21 = bitcast %..string* %3 to %..rawptr
	%22 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%23 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %21, %..rawptr* %23
	%24 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %22, %Type_Info** %24
	%25 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%26 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %25, %..any* %26
	%27 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%28 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %27, %..any** %28
	%29 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %29
	%30 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %30
	%31 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2ba, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %31)
	; ReturnStmt
	unreachable
}

define i32 @gl-10.GetAttribLocation(%gl-10.Program* %program, %..string %name) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca i32, align 4
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	%7 = load %gl-10.Program, %gl-10.Program* %program, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	; IfStmt
	%8 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetAttribLocation, align 8
	%9 = icmp ne i32 (i32, i8*)* %8, zeroinitializer
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	; str
	store i8* zeroinitializer, i8** %1
		; SelectorExpr
	%10 = load %..string, %..string* %0, align 8
	%11 = call i8* @strings-7.new_c_string(%..string %10)
	store i8* %11, i8** %1
	; DeferStmt
	; res
	store i32 zeroinitializer, i32* %2
		%12 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetAttribLocation, align 8
	; SelectorExpr
	%13 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%14 = load i32, i32* %13, align 4
	%15 = load i8*, i8** %1, align 8
	%16 = call ccc i32 %12(i32 %14, i8* %15)
	store i32 %16, i32* %2
	; ReturnStmt
	%17 = load i32, i32* %2, align 4
	; defer
	; free
	%18 = load i8*, i8** %1, align 8
	%19 = bitcast i8* %18 to %..rawptr
	call void @free_ptr(%..rawptr %19)
	ret i32 %17

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %3
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2bb, i64 0, i32 0), i64 17}, %..string* %3
	%20 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%21 = bitcast %..string* %3 to %..rawptr
	%22 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%23 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %21, %..rawptr* %23
	%24 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %22, %Type_Info** %24
	%25 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%26 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %25, %..any* %26
	%27 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%28 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %27, %..any** %28
	%29 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %29
	%30 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %30
	%31 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2bc, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %31)
	; ReturnStmt
	unreachable
}

define void @gl-10.DrawElements(i32 %mode, i32 %count, i32 %type, %..rawptr %indices) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca %..rawptr, align 8
	%4 = alloca %..string, align 8
	%5 = alloca %..any, align 8
	%6 = alloca {%..any*, i64, i64}, align 8
	%7 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %mode, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %count, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %type, i32* %2
	store %..rawptr zeroinitializer, %..rawptr* %3
		store %..rawptr %indices, %..rawptr* %3
	; IfStmt
	%8 = load void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-10._DrawElements, align 8
	%9 = icmp ne void (i32, i32, i32, %..rawptr)* %8, zeroinitializer
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	%10 = load void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-10._DrawElements, align 8
	%11 = load i32, i32* %0, align 4
	%12 = load i32, i32* %1, align 4
	%13 = load i32, i32* %2, align 4
	%14 = load %..rawptr, %..rawptr* %3, align 8
	call ccc void %10(i32 %11, i32 %12, i32 %13, %..rawptr %14)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %4
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2bd, i64 0, i32 0), i64 12}, %..string* %4
	%15 = load %..string, %..string* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%16 = bitcast %..string* %4 to %..rawptr
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%18 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %16, %..rawptr* %18
	%19 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %17, %Type_Info** %19
	%20 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %6
	store [1 x %..any] zeroinitializer, [1 x %..any]* %7
	%21 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	store %..any %20, %..any* %21
	%22 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 0
	store %..any* %22, %..any** %23
	%24 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %24
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %25
	%26 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %6, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2be, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %26)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.UseProgram(%gl-10.Program* %program) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..any, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1 x %..any], align 8
	%4 = load %gl-10.Program, %gl-10.Program* %program, align 8
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._UseProgram, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._UseProgram, align 8
	; SelectorExpr
	%8 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%9 = load i32, i32* %8, align 4
	call ccc void %7(i32 %9)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$2bf, i64 0, i32 0), i64 10}, %..string* %0
	%10 = load %..string, %..string* %0, align 8
	store %..any zeroinitializer, %..any* %1
	%11 = bitcast %..string* %0 to %..rawptr
	%12 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%13 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %11, %..rawptr* %13
	%14 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %12, %Type_Info** %14
	%15 = load %..any, %..any* %1, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	store [1 x %..any] zeroinitializer, [1 x %..any]* %3
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	store %..any %15, %..any* %16
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 0
	store %..any* %17, %..any** %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %20
	%21 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2c0, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %21)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.LinkProgram(%gl-10.Program* %program) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..any, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1 x %..any], align 8
	%4 = load %gl-10.Program, %gl-10.Program* %program, align 8
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._LinkProgram, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._LinkProgram, align 8
	; SelectorExpr
	%8 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%9 = load i32, i32* %8, align 4
	call ccc void %7(i32 %9)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$2c1, i64 0, i32 0), i64 11}, %..string* %0
	%10 = load %..string, %..string* %0, align 8
	store %..any zeroinitializer, %..any* %1
	%11 = bitcast %..string* %0 to %..rawptr
	%12 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%13 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %11, %..rawptr* %13
	%14 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %12, %Type_Info** %14
	%15 = load %..any, %..any* %1, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	store [1 x %..any] zeroinitializer, [1 x %..any]* %3
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	store %..any %15, %..any* %16
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 0
	store %..any* %17, %..any** %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %20
	%21 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2c2, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %21)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.TexImage2D(i32 %target, i32 %lod, i32 %internalFormat, i32 %width, i32 %height, i32 %format, i32 %type_, %..rawptr %data) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	%5 = alloca i32, align 4
	%6 = alloca i32, align 4
	%7 = alloca %..rawptr, align 8
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %lod, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %internalFormat, i32* %2
	store i32 zeroinitializer, i32* %3
		store i32 %width, i32* %3
	store i32 zeroinitializer, i32* %4
		store i32 %height, i32* %4
	store i32 zeroinitializer, i32* %5
		store i32 %format, i32* %5
	store i32 zeroinitializer, i32* %6
		store i32 %type_, i32* %6
	store %..rawptr zeroinitializer, %..rawptr* %7
		store %..rawptr %data, %..rawptr* %7
	%8 = load void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-10._TexImage2D, align 8
	%9 = load i32, i32* %0, align 4
	%10 = load i32, i32* %1, align 4
	%11 = load i32, i32* %2, align 4
	%12 = load i32, i32* %3, align 4
	%13 = load i32, i32* %4, align 4
	%14 = load i32, i32* %5, align 4
	%15 = load i32, i32* %6, align 4
	%16 = load %..rawptr, %..rawptr* %7, align 8
	call ccc void %8(i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 0, i32 %14, i32 %15, %..rawptr %16)
	ret void
}

define void @gl-10.TexParameteri(i32 %target, i32 %pname, i32 %param) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %pname, i32* %1
	store i32 zeroinitializer, i32* %2
		store i32 %param, i32* %2
	%3 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-10._TexParameteri, align 8
	%4 = load i32, i32* %0, align 4
	%5 = load i32, i32* %1, align 4
	%6 = load i32, i32* %2, align 4
	call ccc void %3(i32 %4, i32 %5, i32 %6)
	ret void
}

define void @gl-10.BindTexture(i32 %target, i32 %texture) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %target, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %texture, i32* %1
	%2 = load void (i32, i32)*, void (i32, i32)** @gl-10._BindTexture, align 8
	%3 = load i32, i32* %0, align 4
	%4 = load i32, i32* %1, align 4
	call ccc void %2(i32 %3, i32 %4)
	ret void
}

define void @gl-10.ActiveTexture(i32 %texture) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %texture, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._ActiveTexture, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._ActiveTexture, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2c3, i64 0, i32 0), i64 13}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2c4, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define i32 @gl-10.GenTexture() {
decls-0:
	%0 = alloca {i32*, i64, i64}, align 8
	; res
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %0
		%1 = call {i32*, i64, i64} @gl-10.GenTextures(i32 1)
	store {i32*, i64, i64} %1, {i32*, i64, i64}* %0
	; ReturnStmt
	; IndexExpr
	%2 = load {i32*, i64, i64}, {i32*, i64, i64}* %0, align 8
	%3 = extractvalue {i32*, i64, i64} %2, 0
	%4 = extractvalue {i32*, i64, i64} %2, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2c5, i64 0, i32 0), i64 24}, i64 400, i64 16, i64 0, i64 %4)
	%5 = getelementptr inbounds i32, i32* %3, i64 0
	%6 = load i32, i32* %5, align 4
	ret i32 %6
}

define {i32*, i64, i64} @gl-10.GenTextures(i32 %count) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca {i32*, i64, i64}, align 8
	%2 = alloca {i32*, i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca {i32*, i64, i64}, align 8
	%7 = alloca [1 x i32], align 4
	store i32 zeroinitializer, i32* %0
		store i32 %count, i32* %0
	; res
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %1
		; make
	%8 = load i32, i32* %0, align 4
	%9 = sext i32 %8 to i64
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2c6, i64 0, i32 0), i64 24}, i64 404, i64 28, i64 0, i64 %9, i64 %9)
	%10 = mul i64 4, %9
	%11 = call %..rawptr @alloc_align(i64 %10, i64 4)
	%12 = bitcast %..rawptr %11 to i32*
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %2
	%13 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %2, i64 0, i32 0
	store i32* %12, i32** %13
	%14 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %2, i64 0, i32 1
	store i64 %9, i64* %14
	%15 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %2, i64 0, i32 2
	store i64 %9, i64* %15
	%16 = load {i32*, i64, i64}, {i32*, i64, i64}* %2, align 8
	store {i32*, i64, i64} %16, {i32*, i64, i64}* %1
	%17 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GenTextures, align 8
	%18 = load i32, i32* %0, align 4
	; IndexExpr
	%19 = load {i32*, i64, i64}, {i32*, i64, i64}* %1, align 8
	%20 = extractvalue {i32*, i64, i64} %19, 0
	%21 = extractvalue {i32*, i64, i64} %19, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2c7, i64 0, i32 0), i64 24}, i64 405, i64 35, i64 0, i64 %21)
	%22 = getelementptr inbounds i32, i32* %20, i64 0
	%23 = getelementptr inbounds i32, i32* %22, i64 0
	%24 = bitcast i32* %23 to i32*
	call ccc void %17(i32 %18, i32* %24)
	; RangeStmt
	; id
	store i32 zeroinitializer, i32* %3
		%25 = load {i32*, i64, i64}, {i32*, i64, i64}* %1, align 8
	store i64 zeroinitializer, i64* %4
	%26 = extractvalue {i32*, i64, i64} %25, 1
	store i64 %26, i64* %4
	store i64 zeroinitializer, i64* %5
	store i64 -1, i64* %5
	br label %for.index.loop-1

for.index.loop-1:
	%27 = load i64, i64* %5, align 8
	%28 = add i64 %27, 1
	store i64 %28, i64* %5
	%29 = load i64, i64* %4, align 8
	%30 = icmp slt i64 %28, %29
	br i1 %30, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%31 = load i64, i64* %5, align 8
	%32 = extractvalue {i32*, i64, i64} %25, 0
	%33 = getelementptr inbounds i32, i32* %32, i64 %31
	%34 = load i32, i32* %33, align 4
	store i32 %34, i32* %3
	; append
	; SelectorExpr
	%35 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 1
	%36 = bitcast {i32*, i64, i64,%Allocator}* %35 to %..rawptr
	; SelectorExpr
	%37 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 1
	%38 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %37, align 8
	%39 = load i32, i32* %3, align 4
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %6
	store [1 x i32] zeroinitializer, [1 x i32]* %7
	%40 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i32 0
	store i32 %39, i32* %40
	%41 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i32 0
	%42 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 0
	store i32* %41, i32** %42
	%43 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %43
	%44 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %44
	%45 = load {i32*, i64, i64}, {i32*, i64, i64}* %6, align 8
	%46 = extractvalue {i32*, i64, i64} %45, 0
	%47 = extractvalue {i32*, i64, i64} %45, 1
	%48 = bitcast i32* %46 to %..rawptr
	%49 = call i64 @__dynamic_array_append(%..rawptr %36, i64 4, i64 4, %..rawptr %48, i64 %47)
	br label %for.index.loop-1

for.index.done-3:
	; ReturnStmt
	%50 = load {i32*, i64, i64}, {i32*, i64, i64}* %1, align 8
	ret {i32*, i64, i64} %50
}

define void @gl-10.BlendEquation(i32 %mode) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %mode, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._BlendEquation, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._BlendEquation, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2c8, i64 0, i32 0), i64 13}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2c9, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.BlendFunc(i32 %sfactor, i32 %dfactor) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %sfactor, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %dfactor, i32* %1
	; IfStmt
	%6 = load void (i32, i32)*, void (i32, i32)** @gl-10._BlendFunc, align 8
	%7 = icmp ne void (i32, i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (i32, i32)*, void (i32, i32)** @gl-10._BlendFunc, align 8
	%9 = load i32, i32* %0, align 4
	%10 = load i32, i32* %1, align 4
	call ccc void %8(i32 %9, i32 %10)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$2ca, i64 0, i32 0), i64 9}, %..string* %2
	%11 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%12 = bitcast %..string* %2 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2cb, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	ret void
}

define i32 @gl-10.GetShaderValue(i32 %shader, i32 %name) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %shader, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %name, i32* %1
	; IfStmt
	%3 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-10._GetShaderiv, align 8
	%4 = icmp ne void (i32, i32, i32*)* %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i32 zeroinitializer, i32* %2
		%5 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-10._GetShaderiv, align 8
	%6 = load i32, i32* %0, align 4
	%7 = load i32, i32* %1, align 4
	%8 = getelementptr inbounds i32, i32* %2, i64 0
	call ccc void %5(i32 %6, i32 %7, i32* %8)
	; ReturnStmt
	%9 = load i32, i32* %2, align 4
	ret i32 %9

if.else-2:
	br label %if.done-3

if.done-3:
	; ReturnStmt
	ret i32 0
}

define %..string @gl-10.GetString-812(i32 %name, i32 %index) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i8*, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %name, i32* %0
	store i32 zeroinitializer, i32* %1
		store i32 %index, i32* %1
	; IfStmt
	%7 = load i8* (i32, i32)*, i8* (i32, i32)** @gl-10._GetStringi, align 8
	%8 = icmp ne i8* (i32, i32)* %7, zeroinitializer
	br i1 %8, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i8* zeroinitializer, i8** %2
		%9 = load i8* (i32, i32)*, i8* (i32, i32)** @gl-10._GetStringi, align 8
	%10 = load i32, i32* %0, align 4
	%11 = load i32, i32* %1, align 4
	%12 = call ccc i8* %9(i32 %10, i32 %11)
	store i8* %12, i8** %2
	; ReturnStmt
	; SelectorExpr
	%13 = load i8*, i8** %2, align 8
	%14 = call %..string @strings-7.to_odin_string(i8* %13)
	ret %..string %14

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$2cc, i64 0, i32 0), i64 9}, %..string* %3
	%15 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%16 = bitcast %..string* %3 to %..rawptr
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%18 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %16, %..rawptr* %18
	%19 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %17, %Type_Info** %19
	%20 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%21 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %20, %..any* %21
	%22 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %22, %..any** %23
	%24 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %24
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %25
	%26 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2cd, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %26)
	; ReturnStmt
	ret %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$2ce, i64 0, i32 0), i64 3}

if.done-3:
	unreachable
}

define %..string @gl-10.GetString-813(i32 %name) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i8*, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %name, i32* %0
	; IfStmt
	%6 = load i8* (i32)*, i8* (i32)** @gl-10._GetString, align 8
	%7 = icmp ne i8* (i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i8* zeroinitializer, i8** %1
		%8 = load i8* (i32)*, i8* (i32)** @gl-10._GetString, align 8
	%9 = load i32, i32* %0, align 4
	%10 = call ccc i8* %8(i32 %9)
	store i8* %10, i8** %1
	; ReturnStmt
	; SelectorExpr
	%11 = load i8*, i8** %1, align 8
	%12 = call %..string @strings-7.to_odin_string(i8* %11)
	ret %..string %12

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$2cf, i64 0, i32 0), i64 9}, %..string* %2
	%13 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%14 = bitcast %..string* %2 to %..rawptr
	%15 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%16 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %14, %..rawptr* %16
	%17 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %15, %Type_Info** %17
	%18 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%19 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %18, %..any* %19
	%20 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %20, %..any** %21
	%22 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %22
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %23
	%24 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2d0, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %24)
	br label %if.done-3

if.done-3:
	; ReturnStmt
	ret %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$2d1, i64 0, i32 0), i64 3}
}

define i32 @gl-10.GetInteger-814(i32 %name) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %name, i32* %0
	; IfStmt
	%6 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GetIntegerv, align 8
	%7 = icmp ne void (i32, i32*)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i32 zeroinitializer, i32* %1
		%8 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GetIntegerv, align 8
	%9 = load i32, i32* %0, align 4
	%10 = getelementptr inbounds i32, i32* %1, i64 0
	call ccc void %8(i32 %9, i32* %10)
	; ReturnStmt
	%11 = load i32, i32* %1, align 4
	ret i32 %11

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$2d2, i64 0, i32 0), i64 10}, %..string* %2
	%12 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%13 = bitcast %..string* %2 to %..rawptr
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %15
	%16 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %14, %Type_Info** %16
	%17 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %17, %..any* %18
	%19 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %19, %..any** %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %21
	%22 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %22
	%23 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2d3, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %23)
	; ReturnStmt
	ret i32 0

if.done-3:
	unreachable
}

define void @gl-10.GetInteger-815(i32 %name, i32* %res) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32*, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %name, i32* %0
	store i32* zeroinitializer, i32** %1
		store i32* %res, i32** %1
	; IfStmt
	%6 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GetIntegerv, align 8
	%7 = icmp ne void (i32, i32*)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (i32, i32*)*, void (i32, i32*)** @gl-10._GetIntegerv, align 8
	%9 = load i32, i32* %0, align 4
	%10 = load i32*, i32** %1, align 8
	call ccc void %8(i32 %9, i32* %10)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$2d4, i64 0, i32 0), i64 10}, %..string* %2
	%11 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%12 = bitcast %..string* %2 to %..rawptr
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%14 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %12, %..rawptr* %14
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %13, %Type_Info** %15
	%16 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%17 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %16, %..any* %17
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %18, %..any** %19
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %21
	%22 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2d5, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %22)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.Enable(i32 %cap) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %cap, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._Enable, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._Enable, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$2d6, i64 0, i32 0), i64 6}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2d7, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.Disable(i32 %cap) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %cap, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._Disable, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._Disable, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$2d8, i64 0, i32 0), i64 7}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2d9, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.AttachShader(%gl-10.Program* %program, i32 %shader) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	%5 = load %gl-10.Program, %gl-10.Program* %program, align 8
	store i32 zeroinitializer, i32* %0
		store i32 %shader, i32* %0
	; IfStmt
	%6 = load void (i32, i32)*, void (i32, i32)** @gl-10._AttachShader, align 8
	%7 = icmp ne void (i32, i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	%8 = load void (i32, i32)*, void (i32, i32)** @gl-10._AttachShader, align 8
	; SelectorExpr
	%9 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 2
	%10 = load i32, i32* %9, align 4
	%11 = load i32, i32* %0, align 4
	call ccc void %8(i32 %10, i32 %11)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2da, i64 0, i32 0), i64 12}, %..string* %1
	%12 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%13 = bitcast %..string* %1 to %..rawptr
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%15 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %15
	%16 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %14, %Type_Info** %16
	%17 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %17, %..any* %18
	%19 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %19, %..any** %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %21
	%22 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %22
	%23 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2db, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %23)
	br label %if.done-3

if.done-3:
	ret void
}

define %gl-10.Program @gl-10.CreateProgram() {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %gl-10.Program, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	; IfStmt
	%6 = load i32 ()*, i32 ()** @gl-10._CreateProgram, align 8
	%7 = icmp ne i32 ()* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	; id
	store i32 zeroinitializer, i32* %0
		%8 = load i32 ()*, i32 ()** @gl-10._CreateProgram, align 8
	%9 = call ccc i32 %8()
	store i32 %9, i32* %0
	; res
	store %gl-10.Program zeroinitializer, %gl-10.Program* %1
		; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %1, i64 0, i32 2
	%11 = load i32, i32* %0, align 4
	store i32 %11, i32* %10
	; ReturnStmt
	%12 = load %gl-10.Program, %gl-10.Program* %1, align 8
	ret %gl-10.Program %12

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2dc, i64 0, i32 0), i64 13}, %..string* %2
	%13 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%14 = bitcast %..string* %2 to %..rawptr
	%15 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%16 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %14, %..rawptr* %16
	%17 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %15, %Type_Info** %17
	%18 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%19 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %18, %..any* %19
	%20 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %20, %..any** %21
	%22 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %22
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %23
	%24 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2dd, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %24)
	br label %if.done-3

if.done-3:
	; ReturnStmt
	ret %gl-10.Program zeroinitializer
}

define void @gl-10.ShaderSource-820(i32 %obj, %..string %str) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca [1 x %..string], align 8
	%3 = alloca {%..string*, i64, i64}, align 8
	store i32 zeroinitializer, i32* %0
		store i32 %obj, i32* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %str, %..string* %1
	; array
	store [1 x %..string] zeroinitializer, [1 x %..string]* %2
		; AssignStmt
	; IndexExpr
	%4 = getelementptr inbounds [1 x %..string], [1 x %..string]* %2, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2de, i64 0, i32 0), i64 24}, i64 527, i64 11, i64 0, i64 1)
	%5 = load %..string, %..string* %1, align 8
	store %..string %5, %..string* %4
	%6 = load i32, i32* %0, align 4
	; SliceExpr
	%7 = load [1 x %..string], [1 x %..string]* %2, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2df, i64 0, i32 0), i64 24}, i64 528, i64 28, i64 0, i64 1, i64 1)
	%8 = getelementptr inbounds [1 x %..string], [1 x %..string]* %2, i64 0, i32 0
	%9 = getelementptr inbounds %..string, %..string* %8, i64 0
	%10 = sub i64 1, 0
	%11 = sub i64 1, 0
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %3
	%12 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3, i64 0, i32 0
	store %..string* %9, %..string** %12
	%13 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3, i64 0, i32 1
	store i64 %10, i64* %13
	%14 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3, i64 0, i32 2
	store i64 %11, i64* %14
	%15 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %3, align 8
	call void @gl-10.ShaderSource-821(i32 %6, {%..string*, i64, i64} %15)
	ret void
}

define void @gl-10.ShaderSource-821(i32 %obj, {%..string*, i64, i64} %strs) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca {%..string*, i64, i64}, align 8
	%2 = alloca {i8**, i64, i64}, align 8
	%3 = alloca {i8**, i64, i64}, align 8
	%4 = alloca {i32*, i64, i64}, align 8
	%5 = alloca {i32*, i64, i64}, align 8
	%6 = alloca %..string, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca i8*, align 8
	%11 = alloca {i8*, i64, i64}, align 8
	%12 = alloca %..string, align 8
	%13 = alloca %..any, align 8
	%14 = alloca {%..any*, i64, i64}, align 8
	%15 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %obj, i32* %0
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %1
		store {%..string*, i64, i64} %strs, {%..string*, i64, i64}* %1
	; IfStmt
	%16 = load void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** @gl-10._ShaderSource, align 8
	%17 = icmp ne void (i32, i32, i8**, i32*)* %16, zeroinitializer
	br i1 %17, label %if.then-1, label %if.else-5

if.then-1:
	; newStrs
	store {i8**, i64, i64} zeroinitializer, {i8**, i64, i64}* %2
		; make
	%18 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %1, align 8
	%19 = extractvalue {%..string*, i64, i64} %18, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e0, i64 0, i32 0), i64 24}, i64 533, i64 34, i64 0, i64 %19, i64 %19)
	%20 = mul i64 8, %19
	%21 = call %..rawptr @alloc_align(i64 %20, i64 8)
	%22 = bitcast %..rawptr %21 to i8**
	store {i8**, i64, i64} zeroinitializer, {i8**, i64, i64}* %3
	%23 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %3, i64 0, i32 0
	store i8** %22, i8*** %23
	%24 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %3, i64 0, i32 1
	store i64 %19, i64* %24
	%25 = getelementptr inbounds {i8**, i64, i64}, {i8**, i64, i64}* %3, i64 0, i32 2
	store i64 %19, i64* %25
	%26 = load {i8**, i64, i64}, {i8**, i64, i64}* %3, align 8
	store {i8**, i64, i64} %26, {i8**, i64, i64}* %2
	; DeferStmt
	; lengths
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %4
		; make
	%27 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %1, align 8
	%28 = extractvalue {%..string*, i64, i64} %27, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e1, i64 0, i32 0), i64 24}, i64 534, i64 32, i64 0, i64 %28, i64 %28)
	%29 = mul i64 4, %28
	%30 = call %..rawptr @alloc_align(i64 %29, i64 4)
	%31 = bitcast %..rawptr %30 to i32*
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %5
	%32 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %5, i64 0, i32 0
	store i32* %31, i32** %32
	%33 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %5, i64 0, i32 1
	store i64 %28, i64* %33
	%34 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %5, i64 0, i32 2
	store i64 %28, i64* %34
	%35 = load {i32*, i64, i64}, {i32*, i64, i64}* %5, align 8
	store {i32*, i64, i64} %35, {i32*, i64, i64}* %4
	; DeferStmt
	; RangeStmt
	; s
	store %..string zeroinitializer, %..string* %6
		; i
	store i64 zeroinitializer, i64* %7
		%36 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %1, align 8
	store i64 zeroinitializer, i64* %8
	%37 = extractvalue {%..string*, i64, i64} %36, 1
	store i64 %37, i64* %8
	store i64 zeroinitializer, i64* %9
	store i64 -1, i64* %9
	br label %for.index.loop-2

for.index.loop-2:
	%38 = load i64, i64* %9, align 8
	%39 = add i64 %38, 1
	store i64 %39, i64* %9
	%40 = load i64, i64* %8, align 8
	%41 = icmp slt i64 %39, %40
	br i1 %41, label %for.index.body-3, label %for.index.done-4

for.index.body-3:
	%42 = load i64, i64* %9, align 8
	%43 = extractvalue {%..string*, i64, i64} %36, 0
	%44 = getelementptr inbounds %..string, %..string* %43, i64 %42
	%45 = load %..string, %..string* %44, align 8
	store %..string %45, %..string* %6
	store i64 %42, i64* %7
	; AssignStmt
	; IndexExpr
	%46 = load {i8**, i64, i64}, {i8**, i64, i64}* %2, align 8
	%47 = extractvalue {i8**, i64, i64} %46, 0
	%48 = extractvalue {i8**, i64, i64} %46, 1
	%49 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e2, i64 0, i32 0), i64 24}, i64 536, i64 21, i64 %49, i64 %48)
	%50 = getelementptr inbounds i8*, i8** %47, i64 %49
	; IndexExpr
	%51 = load %..string, %..string* %6, align 8
	%52 = extractvalue %..string %51, 0
	store i8* zeroinitializer, i8** %10
	store i8* %52, i8** %10
	%53 = extractvalue %..string %51, 1
	%54 = sub i64 %53, 0
	%55 = sub i64 %53, 0
	%56 = load i8*, i8** %10, align 8
	%57 = getelementptr inbounds i8, i8* %56, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %11
	%58 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 0
	store i8* %57, i8** %58
	%59 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 1
	store i64 %54, i64* %59
	%60 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 2
	store i64 %55, i64* %60
	%61 = load {i8*, i64, i64}, {i8*, i64, i64}* %11, align 8
	%62 = extractvalue {i8*, i64, i64} %61, 0
	%63 = extractvalue {i8*, i64, i64} %61, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e3, i64 0, i32 0), i64 24}, i64 536, i64 39, i64 0, i64 %63)
	%64 = getelementptr inbounds i8, i8* %62, i64 0
	%65 = getelementptr inbounds i8, i8* %64, i64 0
	store i8* %65, i8** %50
	; AssignStmt
	; IndexExpr
	%66 = load {i32*, i64, i64}, {i32*, i64, i64}* %4, align 8
	%67 = extractvalue {i32*, i64, i64} %66, 0
	%68 = extractvalue {i32*, i64, i64} %66, 1
	%69 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e4, i64 0, i32 0), i64 24}, i64 537, i64 21, i64 %69, i64 %68)
	%70 = getelementptr inbounds i32, i32* %67, i64 %69
	%71 = load %..string, %..string* %6, align 8
	%72 = extractvalue %..string %71, 1
	%73 = trunc i64 %72 to i32
	store i32 %73, i32* %70
	br label %for.index.loop-2

for.index.done-4:
	%74 = load void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** @gl-10._ShaderSource, align 8
	%75 = load i32, i32* %0, align 4
	%76 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %1, align 8
	%77 = extractvalue {%..string*, i64, i64} %76, 1
	%78 = trunc i64 %77 to i32
	; IndexExpr
	%79 = load {i8**, i64, i64}, {i8**, i64, i64}* %2, align 8
	%80 = extractvalue {i8**, i64, i64} %79, 0
	%81 = extractvalue {i8**, i64, i64} %79, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e5, i64 0, i32 0), i64 24}, i64 539, i64 58, i64 0, i64 %81)
	%82 = getelementptr inbounds i8*, i8** %80, i64 0
	%83 = getelementptr inbounds i8*, i8** %82, i64 0
	; IndexExpr
	%84 = load {i32*, i64, i64}, {i32*, i64, i64}* %4, align 8
	%85 = extractvalue {i32*, i64, i64} %84, 0
	%86 = extractvalue {i32*, i64, i64} %84, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2e6, i64 0, i32 0), i64 24}, i64 539, i64 71, i64 0, i64 %86)
	%87 = getelementptr inbounds i32, i32* %85, i64 0
	%88 = getelementptr inbounds i32, i32* %87, i64 0
	call ccc void %74(i32 %75, i32 %78, i8** %83, i32* %88)
	; defer
	; free
	%89 = load {i32*, i64, i64}, {i32*, i64, i64}* %4, align 8
	%90 = extractvalue {i32*, i64, i64} %89, 0
	%91 = bitcast i32* %90 to %..rawptr
	call void @free_ptr(%..rawptr %91)
	; defer
	; free
	%92 = load {i8**, i64, i64}, {i8**, i64, i64}* %2, align 8
	%93 = extractvalue {i8**, i64, i64} %92, 0
	%94 = bitcast i8** %93 to %..rawptr
	call void @free_ptr(%..rawptr %94)
	br label %if.done-6

if.else-5:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %12
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2e7, i64 0, i32 0), i64 12}, %..string* %12
	%95 = load %..string, %..string* %12, align 8
	store %..any zeroinitializer, %..any* %13
	%96 = bitcast %..string* %12 to %..rawptr
	%97 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%98 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 0
	store %..rawptr %96, %..rawptr* %98
	%99 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 1
	store %Type_Info* %97, %Type_Info** %99
	%100 = load %..any, %..any* %13, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %14
	store [1 x %..any] zeroinitializer, [1 x %..any]* %15
	%101 = getelementptr inbounds [1 x %..any], [1 x %..any]* %15, i64 0, i32 0
	store %..any %100, %..any* %101
	%102 = getelementptr inbounds [1 x %..any], [1 x %..any]* %15, i64 0, i32 0
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 0
	store %..any* %102, %..any** %103
	%104 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 1
	store i64 1, i64* %104
	%105 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 2
	store i64 1, i64* %105
	%106 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %14, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2e8, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %106)
	br label %if.done-6

if.done-6:
	ret void
}

define i32 @gl-10.CreateShader(i32 %type) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %type, i32* %0
	; IfStmt
	%6 = load i32 (i32)*, i32 (i32)** @gl-10._CreateShader, align 8
	%7 = icmp ne i32 (i32)* %6, zeroinitializer
	br i1 %7, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store i32 zeroinitializer, i32* %1
		%8 = load i32 (i32)*, i32 (i32)** @gl-10._CreateShader, align 8
	%9 = load i32, i32* %0, align 4
	%10 = call ccc i32 %8(i32 %9)
	store i32 %10, i32* %1
	; ReturnStmt
	%11 = load i32, i32* %1, align 4
	ret i32 %11

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2e9, i64 0, i32 0), i64 12}, %..string* %2
	%12 = load %..string, %..string* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%13 = bitcast %..string* %2 to %..rawptr
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %15
	%16 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %14, %Type_Info** %16
	%17 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%18 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %17, %..any* %18
	%19 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%20 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %19, %..any** %20
	%21 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %21
	%22 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %22
	%23 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2ea, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %23)
	; ReturnStmt
	ret i32 zeroinitializer

if.done-3:
	unreachable
}

define void @gl-10.CompileShader(i32 %obj) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca [1 x %..any], align 8
	store i32 zeroinitializer, i32* %0
		store i32 %obj, i32* %0
	; IfStmt
	%5 = load void (i32)*, void (i32)** @gl-10._CompileShader, align 8
	%6 = icmp ne void (i32)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	%7 = load void (i32)*, void (i32)** @gl-10._CompileShader, align 8
	%8 = load i32, i32* %0, align 4
	call ccc void %7(i32 %8)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	store %..string zeroinitializer, %..string* %1
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2eb, i64 0, i32 0), i64 13}, %..string* %1
	%9 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%10 = bitcast %..string* %1 to %..rawptr
	%11 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%12 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %10, %..rawptr* %12
	%13 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %11, %Type_Info** %13
	%14 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	store [1 x %..any] zeroinitializer, [1 x %..any]* %4
	%15 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	store %..any %14, %..any* %15
	%16 = getelementptr inbounds [1 x %..any], [1 x %..any]* %4, i64 0, i32 0
	%17 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 0
	store %..any* %16, %..any** %17
	%18 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 1
	store i64 1, i64* %18
	%19 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %3, i64 0, i32 2
	store i64 1, i64* %19
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2ec, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %20)
	br label %if.done-3

if.done-3:
	ret void
}

define void @gl-10.GetInfo(%gl-10.OpenGLVars_t* %vars) {
decls-0:
	%0 = alloca %gl-10.OpenGLVars_t*, align 8
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i64, align 8
	%4 = alloca %..string, align 8
	%5 = alloca {%..string*, i64, i64}, align 8
	%6 = alloca [1 x %..string], align 8
	store %gl-10.OpenGLVars_t* zeroinitializer, %gl-10.OpenGLVars_t** %0
		store %gl-10.OpenGLVars_t* %vars, %gl-10.OpenGLVars_t** %0
	; AssignStmt
	; SelectorExpr
	%7 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%8 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %7, i64 0
	%9 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %8, i64 0, i32 8
	%10 = call i32 @gl-10.GetInteger-814(i32 33307)
	store i32 %10, i32* %9
	; AssignStmt
	; SelectorExpr
	%11 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%12 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %11, i64 0
	%13 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %12, i64 0, i32 10
	%14 = call i32 @gl-10.GetInteger-814(i32 33308)
	store i32 %14, i32* %13
	; AssignStmt
	; SelectorExpr
	%15 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%16 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %15, i64 0
	%17 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %16, i64 0, i32 11
	%18 = call i32 @gl-10.GetInteger-814(i32 33310)
	store i32 %18, i32* %17
	; AssignStmt
	; SelectorExpr
	%19 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%20 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %19, i64 0
	%21 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %20, i64 0, i32 2
	%22 = call %..string @gl-10.GetString-813(i32 7938)
	store %..string %22, %..string* %21
	; AssignStmt
	; SelectorExpr
	%23 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%24 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %23, i64 0
	%25 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %24, i64 0, i32 3
	%26 = call %..string @gl-10.GetString-813(i32 35724)
	store %..string %26, %..string* %25
	; AssignStmt
	; SelectorExpr
	%27 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%28 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %27, i64 0
	%29 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %28, i64 0, i32 4
	%30 = call %..string @gl-10.GetString-813(i32 7936)
	store %..string %30, %..string* %29
	; AssignStmt
	; SelectorExpr
	%31 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%32 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %31, i64 0
	%33 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %32, i64 0, i32 5
	%34 = call %..string @gl-10.GetString-813(i32 7937)
	store %..string %34, %..string* %33
	; AssignStmt
	; SelectorExpr
	%35 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%36 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %35, i64 0
	%37 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %36, i64 0, i32 12
	%38 = call i32 @gl-10.GetInteger-814(i32 33309)
	store i32 %38, i32* %37
	; reserve
	; SelectorExpr
	%39 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%40 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %39, i64 0
	%41 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %40, i64 0, i32 0
	; SelectorExpr
	%42 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%43 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %42, i64 0
	%44 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %43, i64 0, i32 12
	%45 = load i32, i32* %44, align 4
	%46 = sext i32 %45 to i64
	%47 = bitcast {%..string*, i64, i64,%Allocator}* %41 to %..rawptr
	%48 = call i1 @__dynamic_array_reserve(%..rawptr %47, i64 16, i64 8, i64 %46)
	; RangeStmt
	; i
	store i32 zeroinitializer, i32* %1
		store i32 zeroinitializer, i32* %2
	store i32 0, i32* %2
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.interval.loop-1

for.interval.loop-1:
	; SelectorExpr
	%49 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%50 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %49, i64 0
	%51 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %50, i64 0, i32 12
	%52 = load i32, i32* %51, align 4
	%53 = load i32, i32* %2, align 4
	%54 = icmp slt i32 %53, %52
	br i1 %54, label %for.interval.body-2, label %for.interval.done-3

for.interval.body-2:
	%55 = load i32, i32* %2, align 4
	%56 = load i64, i64* %3, align 8
	%57 = load i32, i32* %2, align 4
	%58 = add i32 %57, 1
	store i32 %58, i32* %2
	%59 = load i64, i64* %3, align 8
	%60 = add i64 %59, 1
	store i64 %60, i64* %3
	store i32 %55, i32* %1
	; ext
	store %..string zeroinitializer, %..string* %4
		%61 = load i32, i32* %1, align 4
	%62 = bitcast i32 %61 to i32
	%63 = call %..string @gl-10.GetString-812(i32 7939, i32 %62)
	store %..string %63, %..string* %4
	; append
	; SelectorExpr
	%64 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%65 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %64, i64 0
	%66 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %65, i64 0, i32 0
	%67 = bitcast {%..string*, i64, i64,%Allocator}* %66 to %..rawptr
	; SelectorExpr
	%68 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%69 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %68, i64 0
	%70 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %69, i64 0, i32 0
	%71 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %70, align 8
	%72 = load %..string, %..string* %4, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %5
	store [1 x %..string] zeroinitializer, [1 x %..string]* %6
	%73 = getelementptr inbounds [1 x %..string], [1 x %..string]* %6, i64 0, i32 0
	store %..string %72, %..string* %73
	%74 = getelementptr inbounds [1 x %..string], [1 x %..string]* %6, i64 0, i32 0
	%75 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5, i64 0, i32 0
	store %..string* %74, %..string** %75
	%76 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %76
	%77 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %77
	%78 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %5, align 8
	%79 = extractvalue {%..string*, i64, i64} %78, 0
	%80 = extractvalue {%..string*, i64, i64} %78, 1
	%81 = bitcast %..string* %79 to %..rawptr
	%82 = call i64 @__dynamic_array_append(%..rawptr %67, i64 16, i64 8, %..rawptr %81, i64 %80)
	br label %for.interval.loop-1

for.interval.done-3:
	ret void
}

define void @gl-10.Init() {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..rawptr, align 8
	; libString
	store %..string zeroinitializer, %..string* %0
		store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2ed, i64 0, i32 0), i64 13}, %..string* %0
	; lib
	store %..rawptr zeroinitializer, %..rawptr* %1
		; SelectorExpr
	; IndexExpr
	%2 = load %..string, %..string* %0, align 8
	%3 = extractvalue %..string %2, 0
	%4 = extractvalue %..string %2, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2ee, i64 0, i32 0), i64 24}, i64 640, i64 42, i64 0, i64 %4)
	%5 = getelementptr inbounds i8, i8* %3, i64 0
	%6 = getelementptr inbounds i8, i8* %5, i64 0
	%7 = call ccc %..rawptr @LoadLibraryA(i8* %6)
	store %..rawptr %7, %..rawptr* %1
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%8 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 2
	%9 = load %..rawptr, %..rawptr* %1, align 8
	%10 = ptrtoint %..rawptr %9 to i64
	store i64 %10, i64* %8
	%11 = load %..rawptr, %..rawptr* %1, align 8
	%12 = getelementptr inbounds void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-10._DrawElements, i64 0
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 100
	%14 = bitcast void (i32, i32, i32, %..rawptr)** %12 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %11, %..rawptr %14, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2ef, i64 0, i32 0), i64 14}, %Type_Info* %13)
	%15 = load %..rawptr, %..rawptr* %1, align 8
	%16 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-10._DrawArrays, i64 0
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%18 = bitcast void (i32, i32, i32)** %16 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %15, %..rawptr %18, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2f0, i64 0, i32 0), i64 12}, %Type_Info* %17)
	%19 = load %..rawptr, %..rawptr* %1, align 8
	%20 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._BindVertexArray, i64 0
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%22 = bitcast void (i32)** %20 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %19, %..rawptr %22, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2f1, i64 0, i32 0), i64 17}, %Type_Info* %21)
	%23 = load %..rawptr, %..rawptr* %1, align 8
	%24 = getelementptr inbounds void (i32, i32, i32, i1, i32, %..rawptr)*, void (i32, i32, i32, i1, i32, %..rawptr)** @gl-10._VertexAttribPointer, i64 0
	%25 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 106
	%26 = bitcast void (i32, i32, i32, i1, i32, %..rawptr)** %24 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %23, %..rawptr %26, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2f2, i64 0, i32 0), i64 21}, %Type_Info* %25)
	%27 = load %..rawptr, %..rawptr* %1, align 8
	%28 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._EnableVertexAttribArray, i64 0
	%29 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%30 = bitcast void (i32)** %28 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %27, %..rawptr %30, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2f3, i64 0, i32 0), i64 25}, %Type_Info* %29)
	%31 = load %..rawptr, %..rawptr* %1, align 8
	%32 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-10._GenVertexArrays, i64 0
	%33 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%34 = bitcast void (i32, i32*)** %32 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %31, %..rawptr %34, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2f4, i64 0, i32 0), i64 17}, %Type_Info* %33)
	%35 = load %..rawptr, %..rawptr* %1, align 8
	%36 = getelementptr inbounds void (i32, i32, %..rawptr, i32)*, void (i32, i32, %..rawptr, i32)** @gl-10._BufferData, i64 0
	%37 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 111
	%38 = bitcast void (i32, i32, %..rawptr, i32)** %36 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %35, %..rawptr %38, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2f5, i64 0, i32 0), i64 12}, %Type_Info* %37)
	%39 = load %..rawptr, %..rawptr* %1, align 8
	%40 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._BindBuffer, i64 0
	%41 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%42 = bitcast void (i32, i32)** %40 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %39, %..rawptr %42, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2f6, i64 0, i32 0), i64 12}, %Type_Info* %41)
	%43 = load %..rawptr, %..rawptr* %1, align 8
	%44 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-10._GenBuffers, i64 0
	%45 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%46 = bitcast void (i32, i32*)** %44 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %43, %..rawptr %46, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2f7, i64 0, i32 0), i64 12}, %Type_Info* %45)
	%47 = load %..rawptr, %..rawptr* %1, align 8
	%48 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i1)*, void (i32, i32, i32, i32, i32*, i1)** @gl-10._DebugMessageControl, i64 0
	%49 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%50 = bitcast void (i32, i32, i32, i32, i32*, i1)** %48 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %47, %..rawptr %50, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2f8, i64 0, i32 0), i64 24}, %Type_Info* %49)
	%51 = load %..rawptr, %..rawptr* %1, align 8
	%52 = getelementptr inbounds void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)*, void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** @gl-10._DebugMessageCallback, i64 0
	%53 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 117
	%54 = bitcast void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** %52 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %51, %..rawptr %54, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2f9, i64 0, i32 0), i64 25}, %Type_Info* %53)
	%55 = load %..rawptr, %..rawptr* %1, align 8
	%56 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-10._GetShaderiv, i64 0
	%57 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 122
	%58 = bitcast void (i32, i32, i32*)** %56 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %55, %..rawptr %58, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2fa, i64 0, i32 0), i64 13}, %Type_Info* %57)
	%59 = load %..rawptr, %..rawptr* %1, align 8
	%60 = getelementptr inbounds void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-10._GetShaderInfoLog, i64 0
	%61 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 125
	%62 = bitcast void (i32, i32, i32*, i8*)** %60 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %59, %..rawptr %62, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$2fb, i64 0, i32 0), i64 18}, %Type_Info* %61)
	%63 = load %..rawptr, %..rawptr* %1, align 8
	%64 = getelementptr inbounds i8* (i32, i32)*, i8* (i32, i32)** @gl-10._GetStringi, i64 0
	%65 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 127
	%66 = bitcast i8* (i32, i32)** %64 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %63, %..rawptr %66, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$2fc, i64 0, i32 0), i64 12}, %Type_Info* %65)
	%67 = load %..rawptr, %..rawptr* %1, align 8
	%68 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._BlendEquation, i64 0
	%69 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%70 = bitcast void (i32)** %68 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %67, %..rawptr %70, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2fd, i64 0, i32 0), i64 15}, %Type_Info* %69)
	%71 = load %..rawptr, %..rawptr* %1, align 8
	%72 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._BlendEquationSeparate, i64 0
	%73 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%74 = bitcast void (i32, i32)** %72 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %71, %..rawptr %74, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2fe, i64 0, i32 0), i64 23}, %Type_Info* %73)
	%75 = load %..rawptr, %..rawptr* %1, align 8
	%76 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._CompileShader, i64 0
	%77 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%78 = bitcast void (i32)** %76 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %75, %..rawptr %78, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2ff, i64 0, i32 0), i64 15}, %Type_Info* %77)
	%79 = load %..rawptr, %..rawptr* %1, align 8
	%80 = getelementptr inbounds i32 (i32)*, i32 (i32)** @gl-10._CreateShader, i64 0
	%81 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 133
	%82 = bitcast i32 (i32)** %80 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %79, %..rawptr %82, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$300, i64 0, i32 0), i64 14}, %Type_Info* %81)
	%83 = load %..rawptr, %..rawptr* %1, align 8
	%84 = getelementptr inbounds void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** @gl-10._ShaderSource, i64 0
	%85 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 134
	%86 = bitcast void (i32, i32, i8**, i32*)** %84 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %83, %..rawptr %86, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$301, i64 0, i32 0), i64 14}, %Type_Info* %85)
	%87 = load %..rawptr, %..rawptr* %1, align 8
	%88 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._AttachShader, i64 0
	%89 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 137
	%90 = bitcast void (i32, i32)** %88 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %87, %..rawptr %90, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$302, i64 0, i32 0), i64 14}, %Type_Info* %89)
	%91 = load %..rawptr, %..rawptr* %1, align 8
	%92 = getelementptr inbounds i32 ()*, i32 ()** @gl-10._CreateProgram, i64 0
	%93 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 139
	%94 = bitcast i32 ()** %92 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %91, %..rawptr %94, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$303, i64 0, i32 0), i64 15}, %Type_Info* %93)
	%95 = load %..rawptr, %..rawptr* %1, align 8
	%96 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._LinkProgram, i64 0
	%97 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%98 = bitcast void (i32)** %96 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %95, %..rawptr %98, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$304, i64 0, i32 0), i64 13}, %Type_Info* %97)
	%99 = load %..rawptr, %..rawptr* %1, align 8
	%100 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._UseProgram, i64 0
	%101 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%102 = bitcast void (i32)** %100 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %99, %..rawptr %102, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$305, i64 0, i32 0), i64 12}, %Type_Info* %101)
	%103 = load %..rawptr, %..rawptr* %1, align 8
	%104 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._ActiveTexture, i64 0
	%105 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%106 = bitcast void (i32)** %104 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %103, %..rawptr %106, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$306, i64 0, i32 0), i64 15}, %Type_Info* %105)
	%107 = load %..rawptr, %..rawptr* %1, align 8
	%108 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._Uniform1i, i64 0
	%109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%110 = bitcast void (i32, i32)** %108 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %107, %..rawptr %110, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$307, i64 0, i32 0), i64 11}, %Type_Info* %109)
	%111 = load %..rawptr, %..rawptr* %1, align 8
	%112 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-10._Uniform2i, i64 0
	%113 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%114 = bitcast void (i32, i32, i32)** %112 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %111, %..rawptr %114, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$308, i64 0, i32 0), i64 11}, %Type_Info* %113)
	%115 = load %..rawptr, %..rawptr* %1, align 8
	%116 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-10._Uniform3i, i64 0
	%117 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 140
	%118 = bitcast void (i32, i32, i32, i32)** %116 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %115, %..rawptr %118, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$309, i64 0, i32 0), i64 11}, %Type_Info* %117)
	%119 = load %..rawptr, %..rawptr* %1, align 8
	%120 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-10._Uniform4i, i64 0
	%121 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%122 = bitcast void (i32, i32, i32, i32, i32)** %120 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %119, %..rawptr %122, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$30a, i64 0, i32 0), i64 11}, %Type_Info* %121)
	%123 = load %..rawptr, %..rawptr* %1, align 8
	%124 = getelementptr inbounds void (i32, float)*, void (i32, float)** @gl-10._Uniform1f, i64 0
	%125 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 144
	%126 = bitcast void (i32, float)** %124 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %123, %..rawptr %126, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$30b, i64 0, i32 0), i64 11}, %Type_Info* %125)
	%127 = load %..rawptr, %..rawptr* %1, align 8
	%128 = getelementptr inbounds void (i32, float, float)*, void (i32, float, float)** @gl-10._Uniform2f, i64 0
	%129 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%130 = bitcast void (i32, float, float)** %128 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %127, %..rawptr %130, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$30c, i64 0, i32 0), i64 11}, %Type_Info* %129)
	%131 = load %..rawptr, %..rawptr* %1, align 8
	%132 = getelementptr inbounds void (i32, float, float, float)*, void (i32, float, float, float)** @gl-10._Uniform3f, i64 0
	%133 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 148
	%134 = bitcast void (i32, float, float, float)** %132 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %131, %..rawptr %134, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$30d, i64 0, i32 0), i64 11}, %Type_Info* %133)
	%135 = load %..rawptr, %..rawptr* %1, align 8
	%136 = getelementptr inbounds void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-10._Uniform4f, i64 0
	%137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%138 = bitcast void (i32, float, float, float, float)** %136 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %135, %..rawptr %138, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$30e, i64 0, i32 0), i64 11}, %Type_Info* %137)
	%139 = load %..rawptr, %..rawptr* %1, align 8
	%140 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-10._UniformMatrix4fv, i64 0
	%141 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 152
	%142 = bitcast void (i32, i32, i32, float*)** %140 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %139, %..rawptr %142, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$30f, i64 0, i32 0), i64 18}, %Type_Info* %141)
	%143 = load %..rawptr, %..rawptr* %1, align 8
	%144 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetUniformLocation, i64 0
	%145 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%146 = bitcast i32 (i32, i8*)** %144 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %143, %..rawptr %146, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$310, i64 0, i32 0), i64 20}, %Type_Info* %145)
	%147 = load %..rawptr, %..rawptr* %1, align 8
	%148 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-10._GetAttribLocation, i64 0
	%149 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%150 = bitcast i32 (i32, i8*)** %148 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %147, %..rawptr %150, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$311, i64 0, i32 0), i64 19}, %Type_Info* %149)
	%151 = load %..rawptr, %..rawptr* %1, align 8
	%152 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._PolygonMode, i64 0
	%153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%154 = bitcast void (i32, i32)** %152 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %151, %..rawptr %154, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$312, i64 0, i32 0), i64 13}, %Type_Info* %153)
	%155 = load %..rawptr, %..rawptr* %1, align 8
	%156 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._GenerateMipmap, i64 0
	%157 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%158 = bitcast void (i32)** %156 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %155, %..rawptr %158, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$313, i64 0, i32 0), i64 16}, %Type_Info* %157)
	%159 = load %..rawptr, %..rawptr* %1, align 8
	%160 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._Enable, i64 0
	%161 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%162 = bitcast void (i32)** %160 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %159, %..rawptr %162, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$314, i64 0, i32 0), i64 8}, %Type_Info* %161)
	%163 = load %..rawptr, %..rawptr* %1, align 8
	%164 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._DepthFunc, i64 0
	%165 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%166 = bitcast void (i32)** %164 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %163, %..rawptr %166, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$315, i64 0, i32 0), i64 11}, %Type_Info* %165)
	%167 = load %..rawptr, %..rawptr* %1, align 8
	%168 = getelementptr inbounds void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-10._BindFragDataLocation, i64 0
	%169 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 157
	%170 = bitcast void (i32, i32, i8*)** %168 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %167, %..rawptr %170, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$316, i64 0, i32 0), i64 22}, %Type_Info* %169)
	%171 = load %..rawptr, %..rawptr* %1, align 8
	%172 = getelementptr inbounds i8* (i32)*, i8* (i32)** @gl-10._GetString, i64 0
	%173 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 159
	%174 = bitcast i8* (i32)** %172 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %171, %..rawptr %174, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$317, i64 0, i32 0), i64 11}, %Type_Info* %173)
	%175 = load %..rawptr, %..rawptr* %1, align 8
	%176 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-10._TexImage2D, i64 0
	%177 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 160
	%178 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %176 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %175, %..rawptr %178, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$318, i64 0, i32 0), i64 12}, %Type_Info* %177)
	%179 = load %..rawptr, %..rawptr* %1, align 8
	%180 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-10._TexParameteri, i64 0
	%181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%182 = bitcast void (i32, i32, i32)** %180 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %179, %..rawptr %182, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$319, i64 0, i32 0), i64 15}, %Type_Info* %181)
	%183 = load %..rawptr, %..rawptr* %1, align 8
	%184 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._BindTexture, i64 0
	%185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%186 = bitcast void (i32, i32)** %184 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %183, %..rawptr %186, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$31a, i64 0, i32 0), i64 13}, %Type_Info* %185)
	%187 = load %..rawptr, %..rawptr* %1, align 8
	%188 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-10._GenTextures, i64 0
	%189 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%190 = bitcast void (i32, i32*)** %188 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %187, %..rawptr %190, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$31b, i64 0, i32 0), i64 13}, %Type_Info* %189)
	%191 = load %..rawptr, %..rawptr* %1, align 8
	%192 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-10._BlendFunc, i64 0
	%193 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%194 = bitcast void (i32, i32)** %192 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %191, %..rawptr %194, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$31c, i64 0, i32 0), i64 11}, %Type_Info* %193)
	%195 = load %..rawptr, %..rawptr* %1, align 8
	%196 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-10._GetIntegerv, i64 0
	%197 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 162
	%198 = bitcast void (i32, i32*)** %196 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %195, %..rawptr %198, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$31d, i64 0, i32 0), i64 13}, %Type_Info* %197)
	%199 = load %..rawptr, %..rawptr* %1, align 8
	%200 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._Disable, i64 0
	%201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%202 = bitcast void (i32)** %200 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %199, %..rawptr %202, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$31e, i64 0, i32 0), i64 9}, %Type_Info* %201)
	%203 = load %..rawptr, %..rawptr* %1, align 8
	%204 = getelementptr inbounds void (i32)*, void (i32)** @gl-10._Clear, i64 0
	%205 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%206 = bitcast void (i32)** %204 to %..rawptr
	call void @gl-10.Init.set_proc_address-0(%..rawptr %203, %..rawptr %206, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$31f, i64 0, i32 0), i64 7}, %Type_Info* %205)
	; defer
	; SelectorExpr
	%207 = load %..rawptr, %..rawptr* %1, align 8
	call ccc void @FreeLibrary(%..rawptr %207)
	ret void
}

define void @gl-10.Init.set_proc_address-0(%..rawptr %h, %..rawptr %p, %..string %name, %Type_Info* %info) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %Type_Info*, align 8
	%4 = alloca i8*, align 8
	%5 = alloca void ()*, align 8
	%6 = alloca %gl-10.DebugFunctionLoadStatus, align 8
	%7 = alloca {%gl-10.DebugFunctionLoadStatus*, i64, i64}, align 8
	%8 = alloca [1 x %gl-10.DebugFunctionLoadStatus], align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %h, %..rawptr* %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %p, %..rawptr* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %name, %..string* %2
	store %Type_Info* zeroinitializer, %Type_Info** %3
		store %Type_Info* %info, %Type_Info** %3
	; txt
	store i8* zeroinitializer, i8** %4
		; SelectorExpr
	%9 = load %..string, %..string* %2, align 8
	%10 = call i8* @strings-7.new_c_string(%..string %9)
	store i8* %10, i8** %4
	; DeferStmt
	; res
	store void ()* zeroinitializer, void ()** %5
		; SelectorExpr
	%11 = load i8*, i8** %4, align 8
	%12 = call ccc void ()* @wglGetProcAddress(i8* %11)
	store void ()* %12, void ()** %5
	; IfStmt
	%13 = load void ()*, void ()** %5, align 8
	%14 = icmp eq void ()* %13, zeroinitializer
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%15 = load %..rawptr, %..rawptr* %0, align 8
	%16 = load i8*, i8** %4, align 8
	%17 = call ccc void ()* @GetProcAddress(%..rawptr %15, i8* %16)
	store void ()* %17, void ()** %5
	br label %if.done-2

if.done-2:
	; AssignStmt
	%18 = load %..rawptr, %..rawptr* %1, align 8
	%19 = bitcast %..rawptr %18 to void ()**
	%20 = getelementptr inbounds void ()*, void ()** %19, i64 0
	%21 = load void ()*, void ()** %5, align 8
	store void ()* %21, void ()** %20
	; status
	store %gl-10.DebugFunctionLoadStatus zeroinitializer, %gl-10.DebugFunctionLoadStatus* %6
		store %gl-10.DebugFunctionLoadStatus zeroinitializer, %gl-10.DebugFunctionLoadStatus* %6
	; AssignStmt
	; SelectorExpr
	%22 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 0
	%23 = load %..string, %..string* %2, align 8
	store %..string %23, %..string* %22
	; AssignStmt
	; SelectorExpr
	%24 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 1
	%25 = load void ()*, void ()** %5, align 8
	%26 = bitcast void ()* %25 to %..rawptr
	%27 = ptrtoint %..rawptr %26 to i64
	store i64 %27, i64* %24
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 3
	store i1 false, i1* %28
	; AssignStmt
	; SelectorExpr
	%29 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 2
	%30 = load %Type_Info*, %Type_Info** %3, align 8
	store %Type_Info* %30, %Type_Info** %29
	; AssignStmt
	; SelectorExpr
	%31 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 3
	%32 = load i32, i32* %31, align 4
	%33 = add i32 %32, 1
	store i32 %33, i32* %31
	; IfStmt
	; SelectorExpr
	%34 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 1
	%35 = load i64, i64* %34, align 8
	%36 = icmp ne i64 %35, 0
	br i1 %36, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%37 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, i64 0, i32 3
	store i1 true, i1* %37
	; AssignStmt
	; SelectorExpr
	%38 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 4
	%39 = load i32, i32* %38, align 4
	%40 = add i32 %39, 1
	store i32 %40, i32* %38
	br label %if.done-4

if.done-4:
	; append
	; SelectorExpr
	%41 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 0
	%42 = bitcast {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %41 to %..rawptr
	; SelectorExpr
	%43 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 0
	%44 = load {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %43, align 8
	%45 = load %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %6, align 8
	; variadic call argument generation
	store {%gl-10.DebugFunctionLoadStatus*, i64, i64} zeroinitializer, {%gl-10.DebugFunctionLoadStatus*, i64, i64}* %7
	store [1 x %gl-10.DebugFunctionLoadStatus] zeroinitializer, [1 x %gl-10.DebugFunctionLoadStatus]* %8
	%46 = getelementptr inbounds [1 x %gl-10.DebugFunctionLoadStatus], [1 x %gl-10.DebugFunctionLoadStatus]* %8, i64 0, i32 0
	store %gl-10.DebugFunctionLoadStatus %45, %gl-10.DebugFunctionLoadStatus* %46
	%47 = getelementptr inbounds [1 x %gl-10.DebugFunctionLoadStatus], [1 x %gl-10.DebugFunctionLoadStatus]* %8, i64 0, i32 0
	%48 = getelementptr inbounds {%gl-10.DebugFunctionLoadStatus*, i64, i64}, {%gl-10.DebugFunctionLoadStatus*, i64, i64}* %7, i64 0, i32 0
	store %gl-10.DebugFunctionLoadStatus* %47, %gl-10.DebugFunctionLoadStatus** %48
	%49 = getelementptr inbounds {%gl-10.DebugFunctionLoadStatus*, i64, i64}, {%gl-10.DebugFunctionLoadStatus*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %49
	%50 = getelementptr inbounds {%gl-10.DebugFunctionLoadStatus*, i64, i64}, {%gl-10.DebugFunctionLoadStatus*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %50
	%51 = load {%gl-10.DebugFunctionLoadStatus*, i64, i64}, {%gl-10.DebugFunctionLoadStatus*, i64, i64}* %7, align 8
	%52 = extractvalue {%gl-10.DebugFunctionLoadStatus*, i64, i64} %51, 0
	%53 = extractvalue {%gl-10.DebugFunctionLoadStatus*, i64, i64} %51, 1
	%54 = bitcast %gl-10.DebugFunctionLoadStatus* %52 to %..rawptr
	%55 = call i64 @__dynamic_array_append(%..rawptr %42, i64 40, i64 8, %..rawptr %54, i64 %53)
	; defer
	; free
	%56 = load i8*, i8** %4, align 8
	%57 = bitcast i8* %56 to %..rawptr
	call void @free_ptr(%..rawptr %57)
	ret void
}

define void @debug-11.RenderDebugUI(%engine-20.Context_t* %ctx, %game-21.Context_t* %gameCtx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %game-21.Context_t*, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	store %game-21.Context_t* zeroinitializer, %game-21.Context_t** %1
		store %game-21.Context_t* %gameCtx, %game-21.Context_t** %1
	%2 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	call void @debug-11.MakeMenuBar(%engine-20.Context_t* %2)
	%3 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%4 = load %game-21.Context_t*, %game-21.Context_t** %1, align 8
	call void @debug-11.TryToRenderWindows(%engine-20.Context_t* %3, %game-21.Context_t* %4)
	ret void
}

define void @debug-11.MakeMenuBar(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %imgui-9.Vec4, align 16
	%2 = alloca i1, align 1
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; SelectorExpr
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %1
	store %imgui-9.Vec4 {float 0x3fd6666660000000, float 0x3fd6666660000000, float 0x3fd6666660000000, float 0x3fe8f5c280000000}, %imgui-9.Vec4* %1
	call ccc void @igPushStyleColor(i32 13, %imgui-9.Vec4* %1)
	; SelectorExpr
	%3 = call ccc i1 @igBeginMainMenuBar()
	; IfStmt
	; SelectorExpr
	%4 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$320, i64 0, i32 0), i64 4}, i1 true)
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$321, i64 0, i32 0), i64 11}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$322, i64 0, i32 0), i64 14})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$323, i64 0, i32 0), i64 9}, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$324, i64 0, i32 0), i64 12})
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-2

if.done-2:
	; IfStmt
	; SelectorExpr
	%5 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$325, i64 0, i32 0), i64 4}, i1 true)
	br i1 %5, label %if.then-3, label %if.done-4

if.then-3:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$326, i64 0, i32 0), i64 11}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$327, i64 0, i32 0), i64 14})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$328, i64 0, i32 0), i64 13}, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$329, i64 0, i32 0), i64 16})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$32a, i64 0, i32 0), i64 9}, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$32b, i64 0, i32 0), i64 12})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$32c, i64 0, i32 0), i64 11}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$32d, i64 0, i32 0), i64 14})
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	%6 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$32e, i64 0, i32 0), i64 5}, i1 true)
	br i1 %6, label %if.then-5, label %if.done-8

if.then-5:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$32f, i64 0, i32 0), i64 16}, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$330, i64 0, i32 0), i64 15})
	; IfStmt
	; SelectorExpr
	%7 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$331, i64 0, i32 0), i64 6}, i1 true)
	br i1 %7, label %if.then-6, label %if.done-7

if.then-6:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$332, i64 0, i32 0), i64 4}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$333, i64 0, i32 0), i64 14})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$334, i64 0, i32 0), i64 5}, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$335, i64 0, i32 0), i64 15})
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-7

if.done-7:
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-8

if.done-8:
	; IfStmt
	; SelectorExpr
	%8 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$336, i64 0, i32 0), i64 5}, i1 true)
	br i1 %8, label %if.then-9, label %if.done-10

if.then-9:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$337, i64 0, i32 0), i64 8}, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$338, i64 0, i32 0), i64 17})
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	%9 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$339, i64 0, i32 0), i64 6}, i1 true)
	br i1 %9, label %if.then-11, label %if.done-21

if.then-11:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%10 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%11 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %10, i64 0
	%12 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %11, i64 0, i32 10
	%13 = getelementptr inbounds i1, i1* %12, i64 0
	%14 = call i1 @imgui-9.Checkbox(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$33a, i64 0, i32 0), i64 14}, i1* %13)
	br i1 %14, label %if.then-12, label %if.done-16

if.then-12:
	; IfStmt
	; SelectorExpr
	%15 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%16 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %15, i64 0
	%17 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %16, i64 0, i32 10
	%18 = load i1, i1* %17, align 1
	br i1 %18, label %if.then-13, label %if.else-14

if.then-13:
	; SelectorExpr
	%19 = load i1 (i32)*, i1 (i32)** @jwgl-26.SwapIntervalEXT, align 8
	%20 = call ccc i1 %19(i32 -1)
	br label %if.done-15

if.else-14:
	; SelectorExpr
	%21 = load i1 (i32)*, i1 (i32)** @jwgl-26.SwapIntervalEXT, align 8
	%22 = call ccc i1 %21(i32 0)
	br label %if.done-15

if.done-15:
	br label %if.done-16

if.done-16:
	; b
	store i1 zeroinitializer, i1* %2
		; SelectorExpr
	%23 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$33b, i64 0, i32 0), i64 15})
	store i1 %23, i1* %2
	; IfStmt
	; SelectorExpr
	%24 = getelementptr inbounds i1, i1* %2, i64 0
	%25 = call i1 @imgui-9.Checkbox(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$33c, i64 0, i32 0), i64 12}, i1* %24)
	br i1 %25, label %if.then-17, label %if.done-18

if.then-17:
	; SelectorExpr
	%26 = load i1, i1* %2, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$33d, i64 0, i32 0), i64 15}, i1 %26)
	br label %if.done-18

if.done-18:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%27 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%28 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %27, i64 0
	%29 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %28, i64 0, i32 0
	%30 = load %engine-20.Setting_t*, %engine-20.Setting_t** %29, align 8
	%31 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %30, i64 0
	%32 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %31, i64 0, i32 0
	%33 = getelementptr inbounds i1, i1* %32, i64 0
	%34 = call i1 @imgui-9.Checkbox(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$33e, i64 0, i32 0), i64 15}, i1* %33)
	br i1 %34, label %if.then-19, label %if.done-20

if.then-19:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%35 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%36 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %35, i64 0
	%37 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %36, i64 0, i32 0
	%38 = load %engine-20.Setting_t*, %engine-20.Setting_t** %37, align 8
	%39 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %38, i64 0
	%40 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %39, i64 0, i32 0
	%41 = load i1, i1* %40, align 1
	%42 = zext i1 %41 to i32
	call ccc void @ShowCursor(i32 %42)
	br label %if.done-20

if.done-20:
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-21

if.done-21:
	; IfStmt
	; SelectorExpr
	%43 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$33f, i64 0, i32 0), i64 4}, i1 true)
	br i1 %43, label %if.then-22, label %if.done-25

if.then-22:
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$340, i64 0, i32 0), i64 15}, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$341, i64 0, i32 0), i64 18})
	call void @debug-11.MakeMenuBar.MakeMenuItem-1(%..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$342, i64 0, i32 0), i64 7}, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$343, i64 0, i32 0), i64 5}, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$344, i64 0, i32 0), i64 17})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$345, i64 0, i32 0), i64 19}, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$346, i64 0, i32 0), i64 21})
	call void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$347, i64 0, i32 0), i64 16}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$348, i64 0, i32 0), i64 14})
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	%44 = call i1 @imgui-9.MenuItem(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$349, i64 0, i32 0), i64 17}, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$34a, i64 0, i32 0), i64 9}, i1 false, i1 false)
	; IfStmt
	; SelectorExpr
	%45 = call i1 @imgui-9.MenuItem(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$34b, i64 0, i32 0), i64 4}, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$34c, i64 0, i32 0), i64 6}, i1 false, i1 true)
	br i1 %45, label %if.then-23, label %if.done-24

if.then-23:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%46 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%47 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %46, i64 0
	%48 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %47, i64 0, i32 0
	%49 = load %engine-20.Setting_t*, %engine-20.Setting_t** %48, align 8
	%50 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %49, i64 0
	%51 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %50, i64 0, i32 2
	store i1 false, i1* %51
	br label %if.done-24

if.done-24:
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-25

if.done-25:
	; SelectorExpr
	call ccc void @igEndMainMenuBar()
	; SelectorExpr
	call ccc void @igPopStyleColor(i32 1)
	ret void
}

define void @debug-11.MakeMenuBar.MakeMenuItem-0(%..string %title, %..string %id) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %title, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %id, %..string* %1
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	call void @debug-11.MakeMenuBar.MakeMenuItem-1(%..string %2, %..string zeroinitializer, %..string %3)
	ret void
}

define void @debug-11.MakeMenuBar.MakeMenuItem-1(%..string %title, %..string %shortcut, %..string %id) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %title, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %shortcut, %..string* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %id, %..string* %2
	; IfStmt
	; SelectorExpr
	%3 = load %..string, %..string* %0, align 8
	%4 = load %..string, %..string* %1, align 8
	%5 = call i1 @imgui-9.MenuItem(%..string %3, %..string %4, i1 false, i1 true)
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; SelectorExpr
	%6 = load %..string, %..string* %2, align 8
	call void @debug_windows-27.ToggleWindow(%..string %6)
	br label %if.done-2

if.done-2:
	ret void
}

define void @debug-11.TryToRenderWindows(%engine-20.Context_t* %ctx, %game-21.Context_t* %gameCtx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %game-21.Context_t*, align 8
	%2 = alloca i1, align 1
	%3 = alloca i1, align 1
	%4 = alloca i1, align 1
	%5 = alloca %..any, align 8
	%6 = alloca i1, align 1
	%7 = alloca i1, align 1
	%8 = alloca %..any, align 8
	%9 = alloca i1, align 1
	%10 = alloca %..any, align 8
	%11 = alloca i1, align 1
	%12 = alloca %..any, align 8
	%13 = alloca i1, align 1
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	store %game-21.Context_t* zeroinitializer, %game-21.Context_t** %1
		store %game-21.Context_t* %gameCtx, %game-21.Context_t** %1
	; IfStmt
	; SelectorExpr
	%14 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$34d, i64 0, i32 0), i64 14})
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; b
	store i1 zeroinitializer, i1* %2
		; SelectorExpr
	%15 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$34e, i64 0, i32 0), i64 14})
	store i1 %15, i1* %2
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%16 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%17 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %16, i64 0
	%18 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %17, i64 0, i32 3
	%19 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %18, align 8
	%20 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %19, i64 0
	%21 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %20, i64 0, i32 0
	%22 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %21, i64 0
	%23 = getelementptr inbounds i1, i1* %2, i64 0
	call void @debug_windows-27.OpenGLInfo(%gl-10.OpenGLVars_t* %22, i1* %23)
	; SelectorExpr
	%24 = load i1, i1* %2, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$34f, i64 0, i32 0), i64 14}, i1 %24)
	br label %if.done-2

if.done-2:
	; IfStmt
	; SelectorExpr
	%25 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$350, i64 0, i32 0), i64 15})
	br i1 %25, label %if.then-3, label %if.done-4

if.then-3:
	; b
	store i1 zeroinitializer, i1* %3
		; SelectorExpr
	%26 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$351, i64 0, i32 0), i64 15})
	store i1 %26, i1* %3
	; SelectorExpr
	; SelectorExpr
	%27 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%28 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %27, i64 0
	%29 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %28, i64 0, i32 1
	%30 = load %input-19.Input_t*, %input-19.Input_t** %29, align 8
	%31 = getelementptr inbounds i1, i1* %3, i64 0
	call void @debug_windows-27.ShowInputWindow(%input-19.Input_t* %30, i1* %31)
	; SelectorExpr
	%32 = load i1, i1* %3, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$352, i64 0, i32 0), i64 15}, i1 %32)
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	%33 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$353, i64 0, i32 0), i64 16})
	br i1 %33, label %if.then-5, label %if.done-6

if.then-5:
	; b
	store i1 zeroinitializer, i1* %4
		; SelectorExpr
	%34 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$354, i64 0, i32 0), i64 16})
	store i1 %34, i1* %4
	; SelectorExpr
	%35 = getelementptr inbounds i1, i1* %4, i64 0
	; SelectorExpr
	%36 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%37 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %36, i64 0
	%38 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %37, i64 0, i32 3
	%39 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %38, align 8
	%40 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %39, i64 0
	%41 = load %platform_win32-28.Data_t, %platform_win32-28.Data_t* %40, align 8
	store %..any zeroinitializer, %..any* %5
	%42 = bitcast %platform_win32-28.Data_t* %40 to %..rawptr
	%43 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 164
	%44 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %42, %..rawptr* %44
	%45 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %43, %Type_Info** %45
	%46 = load %..any, %..any* %5, align 8
	call void @debug_windows-27.ShowStructInfo(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$355, i64 0, i32 0), i64 10}, i1* %35, %..any %46)
	; SelectorExpr
	%47 = load i1, i1* %4, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$356, i64 0, i32 0), i64 16}, i1 %47)
	br label %if.done-6

if.done-6:
	; IfStmt
	; SelectorExpr
	%48 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$357, i64 0, i32 0), i64 14})
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; b
	store i1 zeroinitializer, i1* %6
		; SelectorExpr
	%49 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$358, i64 0, i32 0), i64 14})
	store i1 %49, i1* %6
	; SelectorExpr
	%50 = load %game-21.Context_t*, %game-21.Context_t** %1, align 8
	%51 = getelementptr inbounds i1, i1* %6, i64 0
	call void @debug_windows-27.ShowEntityList(%game-21.Context_t* %50, i1* %51)
	; SelectorExpr
	%52 = load i1, i1* %6, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$359, i64 0, i32 0), i64 14}, i1 %52)
	br label %if.done-8

if.done-8:
	; IfStmt
	; SelectorExpr
	%53 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$35a, i64 0, i32 0), i64 12})
	br i1 %53, label %if.then-9, label %if.done-10

if.then-9:
	; b
	store i1 zeroinitializer, i1* %7
		; SelectorExpr
	%54 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$35b, i64 0, i32 0), i64 12})
	store i1 %54, i1* %7
	; SelectorExpr
	%55 = getelementptr inbounds i1, i1* %7, i64 0
	%56 = load %game-21.Context_t*, %game-21.Context_t** %1, align 8
	%57 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %56, i64 0
	%58 = load %game-21.Context_t, %game-21.Context_t* %57, align 8
	store %..any zeroinitializer, %..any* %8
	%59 = bitcast %game-21.Context_t* %57 to %..rawptr
	%60 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%61 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %59, %..rawptr* %61
	%62 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %60, %Type_Info** %62
	%63 = load %..any, %..any* %8, align 8
	call void @debug_windows-27.ShowStructInfo(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$35c, i64 0, i32 0), i64 9}, i1* %55, %..any %63)
	; SelectorExpr
	%64 = load i1, i1* %7, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$35d, i64 0, i32 0), i64 12}, i1 %64)
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	%65 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$35e, i64 0, i32 0), i64 12})
	br i1 %65, label %if.then-11, label %if.done-12

if.then-11:
	; b
	store i1 zeroinitializer, i1* %9
		; SelectorExpr
	%66 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$35f, i64 0, i32 0), i64 12})
	store i1 %66, i1* %9
	; SelectorExpr
	%67 = getelementptr inbounds i1, i1* %9, i64 0
	; SelectorExpr
	%68 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%69 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %68, i64 0
	%70 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %69, i64 0, i32 5
	%71 = load %time-15.Data_t*, %time-15.Data_t** %70, align 8
	%72 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %71, i64 0
	%73 = load %time-15.Data_t, %time-15.Data_t* %72, align 8
	store %..any zeroinitializer, %..any* %10
	%74 = bitcast %time-15.Data_t* %72 to %..rawptr
	%75 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 233
	%76 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %74, %..rawptr* %76
	%77 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %75, %Type_Info** %77
	%78 = load %..any, %..any* %10, align 8
	call void @debug_windows-27.ShowStructInfo(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$360, i64 0, i32 0), i64 4}, i1* %67, %..any %78)
	; SelectorExpr
	%79 = load i1, i1* %9, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$361, i64 0, i32 0), i64 12}, i1 %79)
	br label %if.done-12

if.done-12:
	; IfStmt
	; SelectorExpr
	%80 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$362, i64 0, i32 0), i64 14})
	br i1 %80, label %if.then-13, label %if.done-14

if.then-13:
	; b
	store i1 zeroinitializer, i1* %11
		; SelectorExpr
	%81 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$363, i64 0, i32 0), i64 14})
	store i1 %81, i1* %11
	; SelectorExpr
	%82 = getelementptr inbounds i1, i1* %11, i64 0
	%83 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%84 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %83, i64 0
	%85 = load %engine-20.Context_t, %engine-20.Context_t* %84, align 8
	store %..any zeroinitializer, %..any* %12
	%86 = bitcast %engine-20.Context_t* %84 to %..rawptr
	%87 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 235
	%88 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %86, %..rawptr* %88
	%89 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %87, %Type_Info** %89
	%90 = load %..any, %..any* %12, align 8
	call void @debug_windows-27.ShowStructInfo(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$364, i64 0, i32 0), i64 11}, i1* %82, %..any %90)
	; SelectorExpr
	%91 = load i1, i1* %11, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$365, i64 0, i32 0), i64 14}, i1 %91)
	br label %if.done-14

if.done-14:
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$366, i64 0, i32 0), i64 14}, void (i1*)* @debug_windows-27.ShowXinputInfoWindow)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$367, i64 0, i32 0), i64 15}, void (i1*)* @debug_windows-27.ShowXinputStateWindow)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$368, i64 0, i32 0), i64 17}, void (i1*)* @debug_windows-27.ShowCatalogWindow)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$369, i64 0, i32 0), i64 21}, void (i1*)* @debug_windows-27.ShowDebugWindowStates)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$36a, i64 0, i32 0), i64 15}, void (i1*)* @debug_windows-27.StatOverlay)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$36b, i64 0, i32 0), i64 17}, void (i1*)* @console-17.DrawConsole)
	; SelectorExpr
	; SelectorExpr
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$36c, i64 0, i32 0), i64 13}, void (i1*)* @console-17.DrawLog)
	; IfStmt
	; SelectorExpr
	%92 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$36d, i64 0, i32 0), i64 14})
	br i1 %92, label %if.then-15, label %if.done-16

if.then-15:
	; b
	store i1 zeroinitializer, i1* %13
		; SelectorExpr
	%93 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$36e, i64 0, i32 0), i64 14})
	store i1 %93, i1* %13
	; SelectorExpr
	%94 = getelementptr inbounds i1, i1* %13, i64 0
	call ccc void @igShowTestWindow(i1* %94)
	; SelectorExpr
	%95 = load i1, i1* %13, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$36f, i64 0, i32 0), i64 14}, i1 %95)
	br label %if.done-16

if.done-16:
	ret void
}

define void @jimgui-12.SetStyle() {
decls-0:
	%0 = alloca %imgui-9.GuiStyle*, align 8
	; style
	store %imgui-9.GuiStyle* zeroinitializer, %imgui-9.GuiStyle** %0
		; SelectorExpr
	%1 = call ccc %imgui-9.GuiStyle* @igGetStyle()
	store %imgui-9.GuiStyle* %1, %imgui-9.GuiStyle** %0
	; AssignStmt
	; SelectorExpr
	%2 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%3 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %2, i64 0
	%4 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %3, i64 0, i32 3
	store float 0x3ff0000000000000, float* %4
	; AssignStmt
	; SelectorExpr
	%5 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%6 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %5, i64 0
	%7 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %6, i64 0, i32 5
	store float 0x3ff0000000000000, float* %7
	; AssignStmt
	; SelectorExpr
	%8 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%9 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %8, i64 0
	%10 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %9, i64 0, i32 7
	store float 0x3ff0000000000000, float* %10
	; AssignStmt
	; SelectorExpr
	%11 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%12 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %11, i64 0
	%13 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %12, i64 0, i32 16
	store float 0x3ff0000000000000, float* %13
	; AssignStmt
	; SelectorExpr
	%14 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%15 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %14, i64 0
	%16 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %15, i64 0, i32 13
	store float 0x4028000000000000, float* %16
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%17 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%18 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %17, i64 0
	%19 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %18, i64 0, i32 22
	%20 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %19, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$370, i64 0, i32 0), i64 28}, i64 34, i64 31, i64 0, i64 43)
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %20
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%21 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%22 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %21, i64 0
	%23 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %22, i64 0, i32 22
	%24 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %23, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$371, i64 0, i32 0), i64 28}, i64 35, i64 31, i64 1, i64 43)
	store %imgui-9.Vec4 {float 0x3fe428f5c0000000, float 0x3fe428f5c0000000, float 0x3fe428f5c0000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %24
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%25 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%26 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %25, i64 0
	%27 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %26, i64 0, i32 22
	%28 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %27, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$372, i64 0, i32 0), i64 28}, i64 36, i64 31, i64 2, i64 43)
	store %imgui-9.Vec4 {float 0x3fcd70a3c0000000, float 0x3fcd70a3c0000000, float 0x3fcd70a3c0000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %28
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%29 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%30 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %29, i64 0
	%31 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %30, i64 0, i32 22
	%32 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %31, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$373, i64 0, i32 0), i64 28}, i64 37, i64 31, i64 3, i64 43)
	store %imgui-9.Vec4 {float 0x3fc9999980000000, float 0x3fc9999980000000, float 0x3fc9999980000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %32
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%33 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%34 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %33, i64 0
	%35 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %34, i64 0, i32 22
	%36 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %35, i64 0, i32 4
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$374, i64 0, i32 0), i64 28}, i64 38, i64 31, i64 4, i64 43)
	store %imgui-9.Vec4 {float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3feeb851e0000000}, %imgui-9.Vec4* %36
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%37 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%38 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %37, i64 0
	%39 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %38, i64 0, i32 22
	%40 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %39, i64 0, i32 28
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$375, i64 0, i32 0), i64 28}, i64 39, i64 31, i64 28, i64 43)
	store %imgui-9.Vec4 {float 0x3fc70a3d60000000, float 0x3fc70a3d60000000, float 0x3fc70a3d60000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %40
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%41 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%42 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %41, i64 0
	%43 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %42, i64 0, i32 22
	%44 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %43, i64 0, i32 5
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$376, i64 0, i32 0), i64 28}, i64 40, i64 31, i64 5, i64 43)
	store %imgui-9.Vec4 {float 0x3fc70a3d60000000, float 0x3fc70a3d60000000, float 0x3fc70a3d60000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %44
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%45 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%46 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %45, i64 0
	%47 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %46, i64 0, i32 22
	%48 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %47, i64 0, i32 6
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$377, i64 0, i32 0), i64 28}, i64 41, i64 31, i64 6, i64 43)
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3fa47ae140000000}, %imgui-9.Vec4* %48
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%49 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%50 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %49, i64 0
	%51 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %50, i64 0, i32 22
	%52 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %51, i64 0, i32 7
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$378, i64 0, i32 0), i64 28}, i64 42, i64 31, i64 7, i64 43)
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3fd28f5c20000000}, %imgui-9.Vec4* %52
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%53 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%54 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %53, i64 0
	%55 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %54, i64 0, i32 22
	%56 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %55, i64 0, i32 10
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$379, i64 0, i32 0), i64 28}, i64 43, i64 31, i64 10, i64 43)
	store %imgui-9.Vec4 {float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %56
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%57 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%58 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %57, i64 0
	%59 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %58, i64 0, i32 22
	%60 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %59, i64 0, i32 11
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37a, i64 0, i32 0), i64 28}, i64 44, i64 31, i64 11, i64 43)
	store %imgui-9.Vec4 {float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3fd0000000000000, float 0x3fdf5c28e0000000}, %imgui-9.Vec4* %60
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%61 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%62 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %61, i64 0
	%63 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %62, i64 0, i32 22
	%64 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %63, i64 0, i32 12
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37b, i64 0, i32 0), i64 28}, i64 45, i64 31, i64 12, i64 43)
	store %imgui-9.Vec4 {float 0x3fd51eb840000000, float 0x3fd51eb840000000, float 0x3fd51eb840000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %64
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%65 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%66 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %65, i64 0
	%67 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %66, i64 0, i32 22
	%68 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %67, i64 0, i32 13
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37c, i64 0, i32 0), i64 28}, i64 46, i64 31, i64 13, i64 43)
	store %imgui-9.Vec4 {float 0x3fbc28f5c0000000, float 0x3fbc28f5c0000000, float 0x3fbc28f5c0000000, float 0x3fdae147a0000000}, %imgui-9.Vec4* %68
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%69 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%70 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %69, i64 0
	%71 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %70, i64 0, i32 22
	%72 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %71, i64 0, i32 14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37d, i64 0, i32 0), i64 28}, i64 47, i64 31, i64 14, i64 43)
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3fb47ae140000000}, %imgui-9.Vec4* %72
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%73 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%74 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %73, i64 0
	%75 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %74, i64 0, i32 22
	%76 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %75, i64 0, i32 15
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37e, i64 0, i32 0), i64 28}, i64 48, i64 31, i64 15, i64 43)
	store %imgui-9.Vec4 {float 0x3fd147ae00000000, float 0x3fd147ae00000000, float 0x3fd147ae00000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %76
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%77 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%78 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %77, i64 0
	%79 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %78, i64 0, i32 22
	%80 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %79, i64 0, i32 16
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$37f, i64 0, i32 0), i64 28}, i64 49, i64 31, i64 16, i64 43)
	store %imgui-9.Vec4 {float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fd9999980000000}, %imgui-9.Vec4* %80
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%81 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%82 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %81, i64 0
	%83 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %82, i64 0, i32 22
	%84 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %83, i64 0, i32 19
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$380, i64 0, i32 0), i64 28}, i64 50, i64 31, i64 19, i64 43)
	store %imgui-9.Vec4 {float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fee147ae0000000}, %imgui-9.Vec4* %84
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%85 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%86 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %85, i64 0
	%87 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %86, i64 0, i32 22
	%88 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %87, i64 0, i32 20
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$381, i64 0, i32 0), i64 28}, i64 51, i64 31, i64 20, i64 43)
	store %imgui-9.Vec4 {float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fee147ae0000000}, %imgui-9.Vec4* %88
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%89 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%90 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %89, i64 0
	%91 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %90, i64 0, i32 22
	%92 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %91, i64 0, i32 22
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$382, i64 0, i32 0), i64 28}, i64 52, i64 31, i64 22, i64 43)
	store %imgui-9.Vec4 {float 0x3fdae147a0000000, float 0x3fdae147a0000000, float 0x3fdae147a0000000, float 0x3fe3333320000000}, %imgui-9.Vec4* %92
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%93 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%94 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %93, i64 0
	%95 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %94, i64 0, i32 22
	%96 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %95, i64 0, i32 23
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$383, i64 0, i32 0), i64 28}, i64 53, i64 31, i64 23, i64 43)
	store %imgui-9.Vec4 {float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fd9999980000000}, %imgui-9.Vec4* %96
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%97 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%98 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %97, i64 0
	%99 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %98, i64 0, i32 22
	%100 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %99, i64 0, i32 25
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$384, i64 0, i32 0), i64 28}, i64 54, i64 31, i64 25, i64 43)
	store %imgui-9.Vec4 {float 0x3fd3d70a20000000, float 0x3fd3d70a20000000, float 0x3fd3d70a20000000, float 0x3fef5c28e0000000}, %imgui-9.Vec4* %100
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%101 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%102 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %101, i64 0
	%103 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %102, i64 0, i32 22
	%104 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %103, i64 0, i32 26
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$385, i64 0, i32 0), i64 28}, i64 55, i64 31, i64 26, i64 43)
	store %imgui-9.Vec4 {float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fe8f5c280000000, float 0x3fd9999980000000}, %imgui-9.Vec4* %104
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%105 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%106 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %105, i64 0
	%107 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %106, i64 0, i32 22
	%108 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %107, i64 0, i32 27
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$386, i64 0, i32 0), i64 28}, i64 56, i64 31, i64 27, i64 43)
	store %imgui-9.Vec4 {float 0x3fe9999980000000, float 0x3fe0000000000000, float 0x3fe0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %108
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%109 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%110 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %109, i64 0
	%111 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %110, i64 0, i32 22
	%112 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %111, i64 0, i32 41
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$387, i64 0, i32 0), i64 28}, i64 57, i64 31, i64 41, i64 43)
	store %imgui-9.Vec4 {float 0x3fe4ccccc0000000, float 0x3fd6666660000000, float 0x3fd6666660000000, float 0x3fd0a3d700000000}, %imgui-9.Vec4* %112
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%113 = load %imgui-9.GuiStyle*, %imgui-9.GuiStyle** %0, align 8
	%114 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %113, i64 0
	%115 = getelementptr inbounds %imgui-9.GuiStyle, %imgui-9.GuiStyle* %114, i64 0, i32 22
	%116 = getelementptr inbounds [43 x %imgui-9.Vec4], [43 x %imgui-9.Vec4]* %115, i64 0, i32 42
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$388, i64 0, i32 0), i64 28}, i64 58, i64 31, i64 42, i64 43)
	store %imgui-9.Vec4 {float 0x3fc9999980000000, float 0x3fc9999980000000, float 0x3fc9999980000000, float 0x3fd6666660000000}, %imgui-9.Vec4* %116
	ret void
}

define void @jimgui-12.Init(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %imgui-9.GuiIO*, align 8
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca i32, align 4
	%5 = alloca i1, align 1
	%6 = alloca %gl-10.Program, align 16
	%7 = alloca %gl-10.Program, align 16
	%8 = alloca %gl-10.Program, align 16
	%9 = alloca %gl-10.Program, align 16
	%10 = alloca %__Map_Header, align 8
	%11 = alloca %__Map_Key, align 8
	%12 = alloca i32, align 4
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Key, align 16
	%15 = alloca %gl-10.Program, align 16
	%16 = alloca %__Map_Header, align 8
	%17 = alloca %__Map_Key, align 8
	%18 = alloca i32, align 4
	%19 = alloca %__Map_Header, align 16
	%20 = alloca %__Map_Key, align 16
	%21 = alloca %gl-10.Program, align 16
	%22 = alloca %__Map_Header, align 8
	%23 = alloca %__Map_Key, align 8
	%24 = alloca i32, align 4
	%25 = alloca %__Map_Header, align 16
	%26 = alloca %__Map_Key, align 16
	%27 = alloca %gl-10.Program, align 16
	%28 = alloca %__Map_Header, align 8
	%29 = alloca %__Map_Key, align 8
	%30 = alloca i32, align 4
	%31 = alloca %__Map_Header, align 16
	%32 = alloca %__Map_Key, align 16
	%33 = alloca %gl-10.Program, align 16
	%34 = alloca %__Map_Header, align 8
	%35 = alloca %__Map_Key, align 8
	%36 = alloca i32, align 4
	%37 = alloca %__Map_Header, align 16
	%38 = alloca %__Map_Key, align 16
	%39 = alloca {i32, i1}, align 4
	%40 = alloca %__Map_Header, align 8
	%41 = alloca %__Map_Key, align 8
	%42 = alloca %__Map_Header, align 16
	%43 = alloca %__Map_Key, align 16
	%44 = alloca {i32, i1}, align 4
	%45 = alloca %__Map_Header, align 8
	%46 = alloca %__Map_Key, align 8
	%47 = alloca %__Map_Header, align 16
	%48 = alloca %__Map_Key, align 16
	%49 = alloca {i32, i1}, align 4
	%50 = alloca %__Map_Header, align 8
	%51 = alloca %__Map_Key, align 8
	%52 = alloca %__Map_Header, align 16
	%53 = alloca %__Map_Key, align 16
	%54 = alloca {i32, i1}, align 4
	%55 = alloca %__Map_Header, align 8
	%56 = alloca %__Map_Key, align 8
	%57 = alloca %__Map_Header, align 16
	%58 = alloca %__Map_Key, align 16
	%59 = alloca {i32, i1}, align 4
	%60 = alloca %__Map_Header, align 8
	%61 = alloca %__Map_Key, align 8
	%62 = alloca %__Map_Header, align 16
	%63 = alloca %__Map_Key, align 16
	%64 = alloca {i32, i1}, align 4
	%65 = alloca %__Map_Header, align 8
	%66 = alloca %__Map_Key, align 8
	%67 = alloca %__Map_Header, align 16
	%68 = alloca %__Map_Key, align 16
	%69 = alloca i8*, align 8
	%70 = alloca i32, align 4
	%71 = alloca i32, align 4
	%72 = alloca i32, align 4
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; io
	store %imgui-9.GuiIO* zeroinitializer, %imgui-9.GuiIO** %1
		; SelectorExpr
	%73 = call ccc %imgui-9.GuiIO* @igGetIO()
	store %imgui-9.GuiIO* %73, %imgui-9.GuiIO** %1
	; AssignStmt
	; SelectorExpr
	%74 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%75 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %74, i64 0
	%76 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %75, i64 0, i32 28
	; SelectorExpr
	; SelectorExpr
	%77 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%78 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %77, i64 0
	%79 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %78, i64 0, i32 3
	%80 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %79, align 8
	%81 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %80, i64 0
	%82 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %81, i64 0, i32 2
	%83 = load %..rawptr, %..rawptr* %82, align 8
	store %..rawptr %83, %..rawptr* %76
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%84 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%85 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %84, i64 0
	%86 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %85, i64 0, i32 8
	%87 = getelementptr inbounds [19 x i32], [19 x i32]* %86, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$389, i64 0, i32 0), i64 28}, i64 66, i64 28, i64 0, i64 19)
	store i32 9, i32* %87
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%88 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%89 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %88, i64 0
	%90 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %89, i64 0, i32 8
	%91 = getelementptr inbounds [19 x i32], [19 x i32]* %90, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38a, i64 0, i32 0), i64 28}, i64 67, i64 28, i64 1, i64 19)
	store i32 37, i32* %91
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%92 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%93 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %92, i64 0
	%94 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %93, i64 0, i32 8
	%95 = getelementptr inbounds [19 x i32], [19 x i32]* %94, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38b, i64 0, i32 0), i64 28}, i64 68, i64 28, i64 2, i64 19)
	store i32 39, i32* %95
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%96 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%97 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %96, i64 0
	%98 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %97, i64 0, i32 8
	%99 = getelementptr inbounds [19 x i32], [19 x i32]* %98, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38c, i64 0, i32 0), i64 28}, i64 69, i64 28, i64 3, i64 19)
	store i32 38, i32* %99
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%100 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%101 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %100, i64 0
	%102 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %101, i64 0, i32 8
	%103 = getelementptr inbounds [19 x i32], [19 x i32]* %102, i64 0, i32 4
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38d, i64 0, i32 0), i64 28}, i64 70, i64 28, i64 4, i64 19)
	store i32 40, i32* %103
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%104 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%105 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %104, i64 0
	%106 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %105, i64 0, i32 8
	%107 = getelementptr inbounds [19 x i32], [19 x i32]* %106, i64 0, i32 5
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38e, i64 0, i32 0), i64 28}, i64 71, i64 28, i64 5, i64 19)
	store i32 34, i32* %107
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%108 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%109 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %108, i64 0
	%110 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %109, i64 0, i32 8
	%111 = getelementptr inbounds [19 x i32], [19 x i32]* %110, i64 0, i32 6
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$38f, i64 0, i32 0), i64 28}, i64 72, i64 28, i64 6, i64 19)
	store i32 33, i32* %111
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%112 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%113 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %112, i64 0
	%114 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %113, i64 0, i32 8
	%115 = getelementptr inbounds [19 x i32], [19 x i32]* %114, i64 0, i32 7
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$390, i64 0, i32 0), i64 28}, i64 73, i64 28, i64 7, i64 19)
	store i32 36, i32* %115
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%116 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%117 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %116, i64 0
	%118 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %117, i64 0, i32 8
	%119 = getelementptr inbounds [19 x i32], [19 x i32]* %118, i64 0, i32 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$391, i64 0, i32 0), i64 28}, i64 74, i64 28, i64 8, i64 19)
	store i32 35, i32* %119
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%120 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%121 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %120, i64 0
	%122 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %121, i64 0, i32 8
	%123 = getelementptr inbounds [19 x i32], [19 x i32]* %122, i64 0, i32 9
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$392, i64 0, i32 0), i64 28}, i64 75, i64 28, i64 9, i64 19)
	store i32 46, i32* %123
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%124 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%125 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %124, i64 0
	%126 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %125, i64 0, i32 8
	%127 = getelementptr inbounds [19 x i32], [19 x i32]* %126, i64 0, i32 10
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$393, i64 0, i32 0), i64 28}, i64 76, i64 28, i64 10, i64 19)
	store i32 8, i32* %127
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%128 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%129 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %128, i64 0
	%130 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %129, i64 0, i32 8
	%131 = getelementptr inbounds [19 x i32], [19 x i32]* %130, i64 0, i32 11
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$394, i64 0, i32 0), i64 28}, i64 77, i64 28, i64 11, i64 19)
	store i32 13, i32* %131
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%132 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%133 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %132, i64 0
	%134 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %133, i64 0, i32 8
	%135 = getelementptr inbounds [19 x i32], [19 x i32]* %134, i64 0, i32 12
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$395, i64 0, i32 0), i64 28}, i64 78, i64 28, i64 12, i64 19)
	store i32 27, i32* %135
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%136 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%137 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %136, i64 0
	%138 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %137, i64 0, i32 8
	%139 = getelementptr inbounds [19 x i32], [19 x i32]* %138, i64 0, i32 13
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$396, i64 0, i32 0), i64 28}, i64 79, i64 28, i64 13, i64 19)
	store i32 65, i32* %139
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%140 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%141 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %140, i64 0
	%142 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %141, i64 0, i32 8
	%143 = getelementptr inbounds [19 x i32], [19 x i32]* %142, i64 0, i32 14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$397, i64 0, i32 0), i64 28}, i64 80, i64 28, i64 14, i64 19)
	store i32 67, i32* %143
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%144 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%145 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %144, i64 0
	%146 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %145, i64 0, i32 8
	%147 = getelementptr inbounds [19 x i32], [19 x i32]* %146, i64 0, i32 15
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$398, i64 0, i32 0), i64 28}, i64 81, i64 28, i64 15, i64 19)
	store i32 86, i32* %147
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%148 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%149 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %148, i64 0
	%150 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %149, i64 0, i32 8
	%151 = getelementptr inbounds [19 x i32], [19 x i32]* %150, i64 0, i32 16
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$399, i64 0, i32 0), i64 28}, i64 82, i64 28, i64 16, i64 19)
	store i32 88, i32* %151
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%152 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%153 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %152, i64 0
	%154 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %153, i64 0, i32 8
	%155 = getelementptr inbounds [19 x i32], [19 x i32]* %154, i64 0, i32 17
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$39a, i64 0, i32 0), i64 28}, i64 83, i64 28, i64 17, i64 19)
	store i32 89, i32* %155
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%156 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%157 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %156, i64 0
	%158 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %157, i64 0, i32 8
	%159 = getelementptr inbounds [19 x i32], [19 x i32]* %158, i64 0, i32 18
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$39b, i64 0, i32 0), i64 28}, i64 84, i64 28, i64 18, i64 19)
	store i32 90, i32* %159
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%160 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%161 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %160, i64 0
	%162 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %161, i64 0, i32 4
	%163 = load %jimgui-12.State_t*, %jimgui-12.State_t** %162, align 8
	%164 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %163, i64 0
	%165 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %164, i64 0, i32 0
	; SelectorExpr
	%166 = call %gl-10.Program @gl-10.CreateProgram()
	store %gl-10.Program %166, %gl-10.Program* %165
	; vertexShader
	store i32 zeroinitializer, i32* %2
		; ok1
	store i1 zeroinitializer, i1* %3
		; SelectorExpr
	%167 = call {i32, i1} @gl_util-39.CreateAndCompileShader(i32 35633, %..string {i8* getelementptr inbounds ([320 x i8], [320 x i8]* @__str$39c, i64 0, i32 0), i64 320})
	%168 = extractvalue {i32, i1} %167, 0
	%169 = extractvalue {i32, i1} %167, 1
	store i32 %168, i32* %2
	store i1 %169, i1* %3
	; fragmentShader
	store i32 zeroinitializer, i32* %4
		; ok2
	store i1 zeroinitializer, i1* %5
		; SelectorExpr
	%170 = call {i32, i1} @gl_util-39.CreateAndCompileShader(i32 35632, %..string {i8* getelementptr inbounds ([235 x i8], [235 x i8]* @__str$39d, i64 0, i32 0), i64 235})
	%171 = extractvalue {i32, i1} %170, 0
	%172 = extractvalue {i32, i1} %170, 1
	store i32 %171, i32* %4
	store i1 %172, i1* %5
	; IfStmt
	%173 = load i1, i1* %3, align 1
	br i1 %173, label %cmp.or-1, label %if.then-2

cmp.or-1:
	%174 = load i1, i1* %5, align 1
	br i1 %174, label %if.done-3, label %if.then-2

if.then-2:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$39e, i64 0, i32 0), i64 28}, i64 118, i64 15, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$39f, i64 0, i32 0), i64 6})
	br label %if.done-3

if.done-3:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%175 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%176 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %175, i64 0
	%177 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %176, i64 0, i32 4
	%178 = load %jimgui-12.State_t*, %jimgui-12.State_t** %177, align 8
	%179 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %178, i64 0
	%180 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %179, i64 0, i32 0
	%181 = load %gl-10.Program, %gl-10.Program* %180, align 8
	%182 = load i32, i32* %2, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %6
	store %gl-10.Program %181, %gl-10.Program* %6
	call void @gl-10.AttachShader(%gl-10.Program* %6, i32 %182)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%183 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%184 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %183, i64 0
	%185 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %184, i64 0, i32 4
	%186 = load %jimgui-12.State_t*, %jimgui-12.State_t** %185, align 8
	%187 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %186, i64 0
	%188 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %187, i64 0, i32 0
	%189 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %188, i64 0, i32 3
	%190 = load i32, i32* %2, align 4
	store i32 %190, i32* %189
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%191 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%192 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %191, i64 0
	%193 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %192, i64 0, i32 4
	%194 = load %jimgui-12.State_t*, %jimgui-12.State_t** %193, align 8
	%195 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %194, i64 0
	%196 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %195, i64 0, i32 0
	%197 = load %gl-10.Program, %gl-10.Program* %196, align 8
	%198 = load i32, i32* %4, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %7
	store %gl-10.Program %197, %gl-10.Program* %7
	call void @gl-10.AttachShader(%gl-10.Program* %7, i32 %198)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%199 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%200 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %199, i64 0
	%201 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %200, i64 0, i32 4
	%202 = load %jimgui-12.State_t*, %jimgui-12.State_t** %201, align 8
	%203 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %202, i64 0
	%204 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %203, i64 0, i32 0
	%205 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %204, i64 0, i32 4
	%206 = load i32, i32* %4, align 4
	store i32 %206, i32* %205
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%207 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%208 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %207, i64 0
	%209 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %208, i64 0, i32 4
	%210 = load %jimgui-12.State_t*, %jimgui-12.State_t** %209, align 8
	%211 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %210, i64 0
	%212 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %211, i64 0, i32 0
	%213 = load %gl-10.Program, %gl-10.Program* %212, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %8
	store %gl-10.Program %213, %gl-10.Program* %8
	call void @gl-10.LinkProgram(%gl-10.Program* %8)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%214 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%215 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %214, i64 0
	%216 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %215, i64 0, i32 4
	%217 = load %jimgui-12.State_t*, %jimgui-12.State_t** %216, align 8
	%218 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %217, i64 0
	%219 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %218, i64 0, i32 0
	%220 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %219, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%221 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%222 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %221, i64 0
	%223 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %222, i64 0, i32 4
	%224 = load %jimgui-12.State_t*, %jimgui-12.State_t** %223, align 8
	%225 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %224, i64 0
	%226 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %225, i64 0, i32 0
	%227 = load %gl-10.Program, %gl-10.Program* %226, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %9
	store %gl-10.Program %227, %gl-10.Program* %9
	%228 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %9, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3a0, i64 0, i32 0), i64 7})
	store %__Map_Header zeroinitializer, %__Map_Header* %10
	%229 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 0
	%230 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %220 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %230, %raw-6.Dynamic_Map** %229
	%231 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 1
	store i1 true, i1* %231
	%232 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 2
	store i64 40, i64* %232
	%233 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 3
	store i64 8, i64* %233
	%234 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 4
	store i64 32, i64* %234
	%235 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 5
	store i64 4, i64* %235
	%236 = load %__Map_Header, %__Map_Header* %10, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %11
	%237 = getelementptr inbounds %__Map_Key, %__Map_Key* %11, i64 0, i32 0
	store i64 2829778445906215252, i64* %237
	%238 = getelementptr inbounds %__Map_Key, %__Map_Key* %11, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3a1, i64 0, i32 0), i64 7}, %..string* %238
	%239 = load %__Map_Key, %__Map_Key* %11, align 8
	store i32 zeroinitializer, i32* %12
	store i32 %228, i32* %12
	%240 = bitcast i32* %12 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %236, %__Map_Header* %13
	store %__Map_Key zeroinitializer, %__Map_Key* %14
	store %__Map_Key %239, %__Map_Key* %14
	call void @__dynamic_map_set(%__Map_Header* %13, %__Map_Key* %14, %..rawptr %240)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%241 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%242 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %241, i64 0
	%243 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %242, i64 0, i32 4
	%244 = load %jimgui-12.State_t*, %jimgui-12.State_t** %243, align 8
	%245 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %244, i64 0
	%246 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %245, i64 0, i32 0
	%247 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %246, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%248 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%249 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %248, i64 0
	%250 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %249, i64 0, i32 4
	%251 = load %jimgui-12.State_t*, %jimgui-12.State_t** %250, align 8
	%252 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %251, i64 0
	%253 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %252, i64 0, i32 0
	%254 = load %gl-10.Program, %gl-10.Program* %253, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %15
	store %gl-10.Program %254, %gl-10.Program* %15
	%255 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %15, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3a2, i64 0, i32 0), i64 7})
	store %__Map_Header zeroinitializer, %__Map_Header* %16
	%256 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 0
	%257 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %247 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %257, %raw-6.Dynamic_Map** %256
	%258 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 1
	store i1 true, i1* %258
	%259 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 2
	store i64 40, i64* %259
	%260 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 3
	store i64 8, i64* %260
	%261 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 4
	store i64 32, i64* %261
	%262 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 5
	store i64 4, i64* %262
	%263 = load %__Map_Header, %__Map_Header* %16, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %17
	%264 = getelementptr inbounds %__Map_Key, %__Map_Key* %17, i64 0, i32 0
	store i64 -9017138883755609675, i64* %264
	%265 = getelementptr inbounds %__Map_Key, %__Map_Key* %17, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3a3, i64 0, i32 0), i64 7}, %..string* %265
	%266 = load %__Map_Key, %__Map_Key* %17, align 8
	store i32 zeroinitializer, i32* %18
	store i32 %255, i32* %18
	%267 = bitcast i32* %18 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	store %__Map_Header %263, %__Map_Header* %19
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	store %__Map_Key %266, %__Map_Key* %20
	call void @__dynamic_map_set(%__Map_Header* %19, %__Map_Key* %20, %..rawptr %267)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%268 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%269 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %268, i64 0
	%270 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %269, i64 0, i32 4
	%271 = load %jimgui-12.State_t*, %jimgui-12.State_t** %270, align 8
	%272 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %271, i64 0
	%273 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %272, i64 0, i32 0
	%274 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %273, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%275 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%276 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %275, i64 0
	%277 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %276, i64 0, i32 4
	%278 = load %jimgui-12.State_t*, %jimgui-12.State_t** %277, align 8
	%279 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %278, i64 0
	%280 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %279, i64 0, i32 0
	%281 = load %gl-10.Program, %gl-10.Program* %280, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %21
	store %gl-10.Program %281, %gl-10.Program* %21
	%282 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %21, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$3a4, i64 0, i32 0), i64 8})
	store %__Map_Header zeroinitializer, %__Map_Header* %22
	%283 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 0
	%284 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %274 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %284, %raw-6.Dynamic_Map** %283
	%285 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 1
	store i1 true, i1* %285
	%286 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 2
	store i64 40, i64* %286
	%287 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 3
	store i64 8, i64* %287
	%288 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 4
	store i64 32, i64* %288
	%289 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 5
	store i64 4, i64* %289
	%290 = load %__Map_Header, %__Map_Header* %22, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %23
	%291 = getelementptr inbounds %__Map_Key, %__Map_Key* %23, i64 0, i32 0
	store i64 -4512294542364210646, i64* %291
	%292 = getelementptr inbounds %__Map_Key, %__Map_Key* %23, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$3a5, i64 0, i32 0), i64 8}, %..string* %292
	%293 = load %__Map_Key, %__Map_Key* %23, align 8
	store i32 zeroinitializer, i32* %24
	store i32 %282, i32* %24
	%294 = bitcast i32* %24 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %25
	store %__Map_Header %290, %__Map_Header* %25
	store %__Map_Key zeroinitializer, %__Map_Key* %26
	store %__Map_Key %293, %__Map_Key* %26
	call void @__dynamic_map_set(%__Map_Header* %25, %__Map_Key* %26, %..rawptr %294)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%295 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%296 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %295, i64 0
	%297 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %296, i64 0, i32 4
	%298 = load %jimgui-12.State_t*, %jimgui-12.State_t** %297, align 8
	%299 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %298, i64 0
	%300 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %299, i64 0, i32 0
	%301 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %300, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%302 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%303 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %302, i64 0
	%304 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %303, i64 0, i32 4
	%305 = load %jimgui-12.State_t*, %jimgui-12.State_t** %304, align 8
	%306 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %305, i64 0
	%307 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %306, i64 0, i32 0
	%308 = load %gl-10.Program, %gl-10.Program* %307, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %27
	store %gl-10.Program %308, %gl-10.Program* %27
	%309 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %27, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$3a6, i64 0, i32 0), i64 2})
	store %__Map_Header zeroinitializer, %__Map_Header* %28
	%310 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 0
	%311 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %301 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %311, %raw-6.Dynamic_Map** %310
	%312 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 1
	store i1 true, i1* %312
	%313 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 2
	store i64 40, i64* %313
	%314 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 3
	store i64 8, i64* %314
	%315 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 4
	store i64 32, i64* %315
	%316 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 5
	store i64 4, i64* %316
	%317 = load %__Map_Header, %__Map_Header* %28, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %29
	%318 = getelementptr inbounds %__Map_Key, %__Map_Key* %29, i64 0, i32 0
	store i64 662345837686521650, i64* %318
	%319 = getelementptr inbounds %__Map_Key, %__Map_Key* %29, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$3a7, i64 0, i32 0), i64 2}, %..string* %319
	%320 = load %__Map_Key, %__Map_Key* %29, align 8
	store i32 zeroinitializer, i32* %30
	store i32 %309, i32* %30
	%321 = bitcast i32* %30 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %31
	store %__Map_Header %317, %__Map_Header* %31
	store %__Map_Key zeroinitializer, %__Map_Key* %32
	store %__Map_Key %320, %__Map_Key* %32
	call void @__dynamic_map_set(%__Map_Header* %31, %__Map_Key* %32, %..rawptr %321)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%322 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%323 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %322, i64 0
	%324 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %323, i64 0, i32 4
	%325 = load %jimgui-12.State_t*, %jimgui-12.State_t** %324, align 8
	%326 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %325, i64 0
	%327 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %326, i64 0, i32 0
	%328 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %327, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%329 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%330 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %329, i64 0
	%331 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %330, i64 0, i32 4
	%332 = load %jimgui-12.State_t*, %jimgui-12.State_t** %331, align 8
	%333 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %332, i64 0
	%334 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %333, i64 0, i32 0
	%335 = load %gl-10.Program, %gl-10.Program* %334, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %33
	store %gl-10.Program %335, %gl-10.Program* %33
	%336 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %33, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3a8, i64 0, i32 0), i64 5})
	store %__Map_Header zeroinitializer, %__Map_Header* %34
	%337 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 0
	%338 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %328 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %338, %raw-6.Dynamic_Map** %337
	%339 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 1
	store i1 true, i1* %339
	%340 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 2
	store i64 40, i64* %340
	%341 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 3
	store i64 8, i64* %341
	%342 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 4
	store i64 32, i64* %342
	%343 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 5
	store i64 4, i64* %343
	%344 = load %__Map_Header, %__Map_Header* %34, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %35
	%345 = getelementptr inbounds %__Map_Key, %__Map_Key* %35, i64 0, i32 0
	store i64 3769135706557701272, i64* %345
	%346 = getelementptr inbounds %__Map_Key, %__Map_Key* %35, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3a9, i64 0, i32 0), i64 5}, %..string* %346
	%347 = load %__Map_Key, %__Map_Key* %35, align 8
	store i32 zeroinitializer, i32* %36
	store i32 %336, i32* %36
	%348 = bitcast i32* %36 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %37
	store %__Map_Header %344, %__Map_Header* %37
	store %__Map_Key zeroinitializer, %__Map_Key* %38
	store %__Map_Key %347, %__Map_Key* %38
	call void @__dynamic_map_set(%__Map_Header* %37, %__Map_Key* %38, %..rawptr %348)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%349 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%350 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %349, i64 0
	%351 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %350, i64 0, i32 4
	%352 = load %jimgui-12.State_t*, %jimgui-12.State_t** %351, align 8
	%353 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %352, i64 0
	%354 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %353, i64 0, i32 2
	; SelectorExpr
	%355 = call i32 @gl-10.GenBuffer()
	store i32 %355, i32* %354
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%356 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%357 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %356, i64 0
	%358 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %357, i64 0, i32 4
	%359 = load %jimgui-12.State_t*, %jimgui-12.State_t** %358, align 8
	%360 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %359, i64 0
	%361 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %360, i64 0, i32 3
	; SelectorExpr
	%362 = call i32 @gl-10.GenBuffer()
	store i32 %362, i32* %361
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%363 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%364 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %363, i64 0
	%365 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %364, i64 0, i32 4
	%366 = load %jimgui-12.State_t*, %jimgui-12.State_t** %365, align 8
	%367 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %366, i64 0
	%368 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %367, i64 0, i32 4
	; SelectorExpr
	%369 = call i32 @gl-10.GenVertexArray()
	store i32 %369, i32* %368
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%370 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%371 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %370, i64 0
	%372 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %371, i64 0, i32 4
	%373 = load %jimgui-12.State_t*, %jimgui-12.State_t** %372, align 8
	%374 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %373, i64 0
	%375 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %374, i64 0, i32 2
	%376 = load i32, i32* %375, align 4
	call void @gl-10.BindBuffer-779(i32 %376)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%377 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%378 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %377, i64 0
	%379 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %378, i64 0, i32 4
	%380 = load %jimgui-12.State_t*, %jimgui-12.State_t** %379, align 8
	%381 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %380, i64 0
	%382 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %381, i64 0, i32 3
	%383 = load i32, i32* %382, align 4
	call void @gl-10.BindBuffer-780(i32 %383)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%384 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%385 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %384, i64 0
	%386 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %385, i64 0, i32 4
	%387 = load %jimgui-12.State_t*, %jimgui-12.State_t** %386, align 8
	%388 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %387, i64 0
	%389 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %388, i64 0, i32 4
	%390 = load i32, i32* %389, align 4
	call void @gl-10.BindVertexArray(i32 %390)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%391 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%392 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %391, i64 0
	%393 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %392, i64 0, i32 4
	%394 = load %jimgui-12.State_t*, %jimgui-12.State_t** %393, align 8
	%395 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %394, i64 0
	%396 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %395, i64 0, i32 0
	%397 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %396, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %39
	store %__Map_Header zeroinitializer, %__Map_Header* %40
	%398 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 0
	%399 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %397 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %399, %raw-6.Dynamic_Map** %398
	%400 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 1
	store i1 true, i1* %400
	%401 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 2
	store i64 40, i64* %401
	%402 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 3
	store i64 8, i64* %402
	%403 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 4
	store i64 32, i64* %403
	%404 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 5
	store i64 4, i64* %404
	%405 = load %__Map_Header, %__Map_Header* %40, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %41
	%406 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 0
	store i64 -4512294542364210646, i64* %406
	%407 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$3aa, i64 0, i32 0), i64 8}, %..string* %407
	%408 = load %__Map_Key, %__Map_Key* %41, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %42
	store %__Map_Header %405, %__Map_Header* %42
	store %__Map_Key zeroinitializer, %__Map_Key* %43
	store %__Map_Key %408, %__Map_Key* %43
	%409 = call %..rawptr @__dynamic_map_get(%__Map_Header* %42, %__Map_Key* %43)
	%410 = icmp ne %..rawptr %409, null
	%411 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 1
	store i1 %410, i1* %411
	br i1 %410, label %map.get.then-4, label %map.get.done-5

map.get.then-4:
	%412 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 0
	%413 = bitcast %..rawptr %409 to i32*
	%414 = load i32, i32* %413, align 4
	store i32 %414, i32* %412
	br label %map.get.done-5

map.get.done-5:
	%415 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 0
	%416 = load i32, i32* %415, align 4
	%417 = bitcast i32 %416 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %417)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%418 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%419 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %418, i64 0
	%420 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %419, i64 0, i32 4
	%421 = load %jimgui-12.State_t*, %jimgui-12.State_t** %420, align 8
	%422 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %421, i64 0
	%423 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %422, i64 0, i32 0
	%424 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %423, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %44
	store %__Map_Header zeroinitializer, %__Map_Header* %45
	%425 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 0
	%426 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %424 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %426, %raw-6.Dynamic_Map** %425
	%427 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 1
	store i1 true, i1* %427
	%428 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 2
	store i64 40, i64* %428
	%429 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 3
	store i64 8, i64* %429
	%430 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 4
	store i64 32, i64* %430
	%431 = getelementptr inbounds %__Map_Header, %__Map_Header* %45, i64 0, i32 5
	store i64 4, i64* %431
	%432 = load %__Map_Header, %__Map_Header* %45, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %46
	%433 = getelementptr inbounds %__Map_Key, %__Map_Key* %46, i64 0, i32 0
	store i64 662345837686521650, i64* %433
	%434 = getelementptr inbounds %__Map_Key, %__Map_Key* %46, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$3ab, i64 0, i32 0), i64 2}, %..string* %434
	%435 = load %__Map_Key, %__Map_Key* %46, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %47
	store %__Map_Header %432, %__Map_Header* %47
	store %__Map_Key zeroinitializer, %__Map_Key* %48
	store %__Map_Key %435, %__Map_Key* %48
	%436 = call %..rawptr @__dynamic_map_get(%__Map_Header* %47, %__Map_Key* %48)
	%437 = icmp ne %..rawptr %436, null
	%438 = getelementptr inbounds {i32, i1}, {i32, i1}* %44, i64 0, i32 1
	store i1 %437, i1* %438
	br i1 %437, label %map.get.then-6, label %map.get.done-7

map.get.then-6:
	%439 = getelementptr inbounds {i32, i1}, {i32, i1}* %44, i64 0, i32 0
	%440 = bitcast %..rawptr %436 to i32*
	%441 = load i32, i32* %440, align 4
	store i32 %441, i32* %439
	br label %map.get.done-7

map.get.done-7:
	%442 = getelementptr inbounds {i32, i1}, {i32, i1}* %44, i64 0, i32 0
	%443 = load i32, i32* %442, align 4
	%444 = bitcast i32 %443 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %444)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%445 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%446 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %445, i64 0
	%447 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %446, i64 0, i32 4
	%448 = load %jimgui-12.State_t*, %jimgui-12.State_t** %447, align 8
	%449 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %448, i64 0
	%450 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %449, i64 0, i32 0
	%451 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %450, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %49
	store %__Map_Header zeroinitializer, %__Map_Header* %50
	%452 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 0
	%453 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %451 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %453, %raw-6.Dynamic_Map** %452
	%454 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 1
	store i1 true, i1* %454
	%455 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 2
	store i64 40, i64* %455
	%456 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 3
	store i64 8, i64* %456
	%457 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 4
	store i64 32, i64* %457
	%458 = getelementptr inbounds %__Map_Header, %__Map_Header* %50, i64 0, i32 5
	store i64 4, i64* %458
	%459 = load %__Map_Header, %__Map_Header* %50, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %51
	%460 = getelementptr inbounds %__Map_Key, %__Map_Key* %51, i64 0, i32 0
	store i64 3769135706557701272, i64* %460
	%461 = getelementptr inbounds %__Map_Key, %__Map_Key* %51, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3ac, i64 0, i32 0), i64 5}, %..string* %461
	%462 = load %__Map_Key, %__Map_Key* %51, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %52
	store %__Map_Header %459, %__Map_Header* %52
	store %__Map_Key zeroinitializer, %__Map_Key* %53
	store %__Map_Key %462, %__Map_Key* %53
	%463 = call %..rawptr @__dynamic_map_get(%__Map_Header* %52, %__Map_Key* %53)
	%464 = icmp ne %..rawptr %463, null
	%465 = getelementptr inbounds {i32, i1}, {i32, i1}* %49, i64 0, i32 1
	store i1 %464, i1* %465
	br i1 %464, label %map.get.then-8, label %map.get.done-9

map.get.then-8:
	%466 = getelementptr inbounds {i32, i1}, {i32, i1}* %49, i64 0, i32 0
	%467 = bitcast %..rawptr %463 to i32*
	%468 = load i32, i32* %467, align 4
	store i32 %468, i32* %466
	br label %map.get.done-9

map.get.done-9:
	%469 = getelementptr inbounds {i32, i1}, {i32, i1}* %49, i64 0, i32 0
	%470 = load i32, i32* %469, align 4
	%471 = bitcast i32 %470 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %471)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%472 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%473 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %472, i64 0
	%474 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %473, i64 0, i32 4
	%475 = load %jimgui-12.State_t*, %jimgui-12.State_t** %474, align 8
	%476 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %475, i64 0
	%477 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %476, i64 0, i32 0
	%478 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %477, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %54
	store %__Map_Header zeroinitializer, %__Map_Header* %55
	%479 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 0
	%480 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %478 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %480, %raw-6.Dynamic_Map** %479
	%481 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 1
	store i1 true, i1* %481
	%482 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 2
	store i64 40, i64* %482
	%483 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 3
	store i64 8, i64* %483
	%484 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 4
	store i64 32, i64* %484
	%485 = getelementptr inbounds %__Map_Header, %__Map_Header* %55, i64 0, i32 5
	store i64 4, i64* %485
	%486 = load %__Map_Header, %__Map_Header* %55, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %56
	%487 = getelementptr inbounds %__Map_Key, %__Map_Key* %56, i64 0, i32 0
	store i64 -4512294542364210646, i64* %487
	%488 = getelementptr inbounds %__Map_Key, %__Map_Key* %56, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$3ad, i64 0, i32 0), i64 8}, %..string* %488
	%489 = load %__Map_Key, %__Map_Key* %56, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %57
	store %__Map_Header %486, %__Map_Header* %57
	store %__Map_Key zeroinitializer, %__Map_Key* %58
	store %__Map_Key %489, %__Map_Key* %58
	%490 = call %..rawptr @__dynamic_map_get(%__Map_Header* %57, %__Map_Key* %58)
	%491 = icmp ne %..rawptr %490, null
	%492 = getelementptr inbounds {i32, i1}, {i32, i1}* %54, i64 0, i32 1
	store i1 %491, i1* %492
	br i1 %491, label %map.get.then-10, label %map.get.done-11

map.get.then-10:
	%493 = getelementptr inbounds {i32, i1}, {i32, i1}* %54, i64 0, i32 0
	%494 = bitcast %..rawptr %490 to i32*
	%495 = load i32, i32* %494, align 4
	store i32 %495, i32* %493
	br label %map.get.done-11

map.get.done-11:
	%496 = getelementptr inbounds {i32, i1}, {i32, i1}* %54, i64 0, i32 0
	%497 = load i32, i32* %496, align 4
	%498 = bitcast i32 %497 to i32
	call void @gl-10.VertexAttribPointer(i32 %498, i32 2, i32 5126, i1 false, i32 20, %..rawptr null)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%499 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%500 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %499, i64 0
	%501 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %500, i64 0, i32 4
	%502 = load %jimgui-12.State_t*, %jimgui-12.State_t** %501, align 8
	%503 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %502, i64 0
	%504 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %503, i64 0, i32 0
	%505 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %504, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %59
	store %__Map_Header zeroinitializer, %__Map_Header* %60
	%506 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 0
	%507 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %505 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %507, %raw-6.Dynamic_Map** %506
	%508 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 1
	store i1 true, i1* %508
	%509 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 2
	store i64 40, i64* %509
	%510 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 3
	store i64 8, i64* %510
	%511 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 4
	store i64 32, i64* %511
	%512 = getelementptr inbounds %__Map_Header, %__Map_Header* %60, i64 0, i32 5
	store i64 4, i64* %512
	%513 = load %__Map_Header, %__Map_Header* %60, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %61
	%514 = getelementptr inbounds %__Map_Key, %__Map_Key* %61, i64 0, i32 0
	store i64 662345837686521650, i64* %514
	%515 = getelementptr inbounds %__Map_Key, %__Map_Key* %61, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$3ae, i64 0, i32 0), i64 2}, %..string* %515
	%516 = load %__Map_Key, %__Map_Key* %61, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %62
	store %__Map_Header %513, %__Map_Header* %62
	store %__Map_Key zeroinitializer, %__Map_Key* %63
	store %__Map_Key %516, %__Map_Key* %63
	%517 = call %..rawptr @__dynamic_map_get(%__Map_Header* %62, %__Map_Key* %63)
	%518 = icmp ne %..rawptr %517, null
	%519 = getelementptr inbounds {i32, i1}, {i32, i1}* %59, i64 0, i32 1
	store i1 %518, i1* %519
	br i1 %518, label %map.get.then-12, label %map.get.done-13

map.get.then-12:
	%520 = getelementptr inbounds {i32, i1}, {i32, i1}* %59, i64 0, i32 0
	%521 = bitcast %..rawptr %517 to i32*
	%522 = load i32, i32* %521, align 4
	store i32 %522, i32* %520
	br label %map.get.done-13

map.get.done-13:
	%523 = getelementptr inbounds {i32, i1}, {i32, i1}* %59, i64 0, i32 0
	%524 = load i32, i32* %523, align 4
	%525 = bitcast i32 %524 to i32
	call void @gl-10.VertexAttribPointer(i32 %525, i32 2, i32 5126, i1 false, i32 20, %..rawptr inttoptr (i64 8 to %..rawptr))
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%526 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%527 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %526, i64 0
	%528 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %527, i64 0, i32 4
	%529 = load %jimgui-12.State_t*, %jimgui-12.State_t** %528, align 8
	%530 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %529, i64 0
	%531 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %530, i64 0, i32 0
	%532 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %531, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %64
	store %__Map_Header zeroinitializer, %__Map_Header* %65
	%533 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 0
	%534 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %532 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %534, %raw-6.Dynamic_Map** %533
	%535 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 1
	store i1 true, i1* %535
	%536 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 2
	store i64 40, i64* %536
	%537 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 3
	store i64 8, i64* %537
	%538 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 4
	store i64 32, i64* %538
	%539 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 5
	store i64 4, i64* %539
	%540 = load %__Map_Header, %__Map_Header* %65, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %66
	%541 = getelementptr inbounds %__Map_Key, %__Map_Key* %66, i64 0, i32 0
	store i64 3769135706557701272, i64* %541
	%542 = getelementptr inbounds %__Map_Key, %__Map_Key* %66, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3af, i64 0, i32 0), i64 5}, %..string* %542
	%543 = load %__Map_Key, %__Map_Key* %66, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %67
	store %__Map_Header %540, %__Map_Header* %67
	store %__Map_Key zeroinitializer, %__Map_Key* %68
	store %__Map_Key %543, %__Map_Key* %68
	%544 = call %..rawptr @__dynamic_map_get(%__Map_Header* %67, %__Map_Key* %68)
	%545 = icmp ne %..rawptr %544, null
	%546 = getelementptr inbounds {i32, i1}, {i32, i1}* %64, i64 0, i32 1
	store i1 %545, i1* %546
	br i1 %545, label %map.get.then-14, label %map.get.done-15

map.get.then-14:
	%547 = getelementptr inbounds {i32, i1}, {i32, i1}* %64, i64 0, i32 0
	%548 = bitcast %..rawptr %544 to i32*
	%549 = load i32, i32* %548, align 4
	store i32 %549, i32* %547
	br label %map.get.done-15

map.get.done-15:
	%550 = getelementptr inbounds {i32, i1}, {i32, i1}* %64, i64 0, i32 0
	%551 = load i32, i32* %550, align 4
	%552 = bitcast i32 %551 to i32
	call void @gl-10.VertexAttribPointer(i32 %552, i32 4, i32 5121, i1 true, i32 20, %..rawptr inttoptr (i64 16 to %..rawptr))
	; pixels
	store i8* zeroinitializer, i8** %69
		; width
	store i32 zeroinitializer, i32* %70
		; height
	store i32 zeroinitializer, i32* %71
		; bytePer
	store i32 zeroinitializer, i32* %72
		; SelectorExpr
	; SelectorExpr
	%553 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%554 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %553, i64 0
	%555 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %554, i64 0, i32 12
	%556 = load %imgui-9.FontAtlas*, %imgui-9.FontAtlas** %555, align 8
	%557 = getelementptr inbounds i8*, i8** %69, i64 0
	%558 = getelementptr inbounds i32, i32* %70, i64 0
	%559 = getelementptr inbounds i32, i32* %71, i64 0
	%560 = getelementptr inbounds i32, i32* %72, i64 0
	call ccc void @ImFontAtlas_GetTexDataAsRGBA32(%imgui-9.FontAtlas* %556, i8** %557, i32* %558, i32* %559, i32* %560)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%561 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%562 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %561, i64 0
	%563 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %562, i64 0, i32 4
	%564 = load %jimgui-12.State_t*, %jimgui-12.State_t** %563, align 8
	%565 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %564, i64 0
	%566 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %565, i64 0, i32 5
	; SelectorExpr
	%567 = call i32 @gl-10.GenTexture()
	store i32 %567, i32* %566
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%568 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%569 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %568, i64 0
	%570 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %569, i64 0, i32 4
	%571 = load %jimgui-12.State_t*, %jimgui-12.State_t** %570, align 8
	%572 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %571, i64 0
	%573 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %572, i64 0, i32 5
	%574 = load i32, i32* %573, align 4
	call void @gl-10.BindTexture(i32 3553, i32 %574)
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10241, i32 9729)
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10240, i32 9729)
	; SelectorExpr
	%575 = load i32, i32* %70, align 4
	%576 = load i32, i32* %71, align 4
	%577 = load i8*, i8** %69, align 8
	%578 = bitcast i8* %577 to %..rawptr
	call void @gl-10.TexImage2D(i32 3553, i32 0, i32 6408, i32 %575, i32 %576, i32 6408, i32 5121, %..rawptr %578)
	; SelectorExpr
	; SelectorExpr
	%579 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %1, align 8
	%580 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %579, i64 0
	%581 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %580, i64 0, i32 12
	%582 = load %imgui-9.FontAtlas*, %imgui-9.FontAtlas** %581, align 8
	; SelectorExpr
	; SelectorExpr
	%583 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%584 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %583, i64 0
	%585 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %584, i64 0, i32 4
	%586 = load %jimgui-12.State_t*, %jimgui-12.State_t** %585, align 8
	%587 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %586, i64 0
	%588 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %587, i64 0, i32 5
	%589 = load i32, i32* %588, align 4
	%590 = zext i32 %589 to i64
	%591 = inttoptr i64 %590 to %..rawptr
	call ccc void @ImFontAtlas_SetTexID(%imgui-9.FontAtlas* %582, %..rawptr %591)
	call void @jimgui-12.SetStyle()
	ret void
}

define void @jimgui-12.BeginNewFrame(double %deltaTime, %engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca double, align 8
	%1 = alloca %engine-20.Context_t*, align 8
	%2 = alloca %imgui-9.GuiIO*, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	store double zeroinitializer, double* %0
		store double %deltaTime, double* %0
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %1
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %1
	; io
	store %imgui-9.GuiIO* zeroinitializer, %imgui-9.GuiIO** %2
		; SelectorExpr
	%9 = call ccc %imgui-9.GuiIO* @igGetIO()
	store %imgui-9.GuiIO* %9, %imgui-9.GuiIO** %2
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%10 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%11 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %10, i64 0
	%12 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %11, i64 0, i32 0
	%13 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %12, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%14 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%15 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %14, i64 0
	%16 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %15, i64 0, i32 8
	%17 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %16, i64 0, i32 1, i32 0
	%18 = load float, float* %17, align 4
	store float %18, float* %13
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%19 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%20 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %19, i64 0
	%21 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %20, i64 0, i32 0
	%22 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %21, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	%23 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%24 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %23, i64 0
	%25 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %24, i64 0, i32 8
	%26 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %25, i64 0, i32 1, i32 1
	%27 = load float, float* %26, align 4
	store float %27, float* %22
	; IfStmt
	; SelectorExpr
	%28 = call ccc %..rawptr @GetActiveWindow()
	; SelectorExpr
	%29 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%30 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %29, i64 0
	%31 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %30, i64 0, i32 28
	%32 = load %..rawptr, %..rawptr* %31, align 8
	%33 = icmp eq %..rawptr %28, %32
	br i1 %33, label %if.then-1, label %if.else-13

if.then-1:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%34 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%35 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %34, i64 0
	%36 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %35, i64 0, i32 29
	%37 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %36, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%38 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%39 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %38, i64 0
	%40 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %39, i64 0, i32 1
	%41 = load %input-19.Input_t*, %input-19.Input_t** %40, align 8
	%42 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %41, i64 0
	%43 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %42, i64 0, i32 3
	%44 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %43, i64 0, i32 1, i32 0
	%45 = load float, float* %44, align 4
	store float %45, float* %37
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%46 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%47 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %46, i64 0
	%48 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %47, i64 0, i32 29
	%49 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %48, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%50 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%51 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %50, i64 0
	%52 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %51, i64 0, i32 1
	%53 = load %input-19.Input_t*, %input-19.Input_t** %52, align 8
	%54 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %53, i64 0
	%55 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %54, i64 0, i32 3
	%56 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %55, i64 0, i32 1, i32 1
	%57 = load float, float* %56, align 4
	store float %57, float* %49
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%58 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%59 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %58, i64 0
	%60 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %59, i64 0, i32 30
	%61 = getelementptr inbounds [5 x i1], [5 x i1]* %60, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b0, i64 0, i32 0), i64 28}, i64 175, i64 22, i64 0, i64 5)
	; SelectorExpr
	%62 = call i1 @windows-35.is_key_down(i32 1)
	store i1 %62, i1* %61
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%63 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%64 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %63, i64 0
	%65 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %64, i64 0, i32 30
	%66 = getelementptr inbounds [5 x i1], [5 x i1]* %65, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b1, i64 0, i32 0), i64 28}, i64 176, i64 22, i64 1, i64 5)
	; SelectorExpr
	%67 = call i1 @windows-35.is_key_down(i32 2)
	store i1 %67, i1* %66
	; AssignStmt
	; SelectorExpr
	%68 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%69 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %68, i64 0
	%70 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %69, i64 0, i32 31
	; SelectorExpr
	; SelectorExpr
	%71 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%72 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %71, i64 0
	%73 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %72, i64 0, i32 4
	%74 = load %jimgui-12.State_t*, %jimgui-12.State_t** %73, align 8
	%75 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %74, i64 0
	%76 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %75, i64 0, i32 1
	%77 = load i32, i32* %76, align 4
	%78 = sitofp i32 %77 to float
	store float %78, float* %70
	; AssignStmt
	; SelectorExpr
	%79 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%80 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %79, i64 0
	%81 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %80, i64 0, i32 33
	; SelectorExpr
	%82 = call i1 @windows-35.is_key_down(i32 162)
	; SelectorExpr
	%83 = call i1 @windows-35.is_key_down(i32 162)
	br i1 %83, label %logical.cmp.done-3, label %logical.cmp.rhs-2

logical.cmp.rhs-2:
	; SelectorExpr
	%84 = call i1 @windows-35.is_key_down(i32 163)
	br label %logical.cmp.done-3

logical.cmp.done-3:
	%85 = phi i1 [ true, %if.then-1 ], [ %84, %logical.cmp.rhs-2 ]
	store i1 %85, i1* %81
	; AssignStmt
	; SelectorExpr
	%86 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%87 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %86, i64 0
	%88 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %87, i64 0, i32 34
	; SelectorExpr
	%89 = call i1 @windows-35.is_key_down(i32 160)
	; SelectorExpr
	%90 = call i1 @windows-35.is_key_down(i32 160)
	br i1 %90, label %logical.cmp.done-5, label %logical.cmp.rhs-4

logical.cmp.rhs-4:
	; SelectorExpr
	%91 = call i1 @windows-35.is_key_down(i32 161)
	br label %logical.cmp.done-5

logical.cmp.done-5:
	%92 = phi i1 [ true, %logical.cmp.done-3 ], [ %91, %logical.cmp.rhs-4 ]
	store i1 %92, i1* %88
	; AssignStmt
	; SelectorExpr
	%93 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%94 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %93, i64 0
	%95 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %94, i64 0, i32 35
	; SelectorExpr
	%96 = call i1 @windows-35.is_key_down(i32 164)
	; SelectorExpr
	%97 = call i1 @windows-35.is_key_down(i32 164)
	br i1 %97, label %logical.cmp.done-7, label %logical.cmp.rhs-6

logical.cmp.rhs-6:
	; SelectorExpr
	%98 = call i1 @windows-35.is_key_down(i32 165)
	br label %logical.cmp.done-7

logical.cmp.done-7:
	%99 = phi i1 [ true, %logical.cmp.done-5 ], [ %98, %logical.cmp.rhs-6 ]
	store i1 %99, i1* %95
	; AssignStmt
	; SelectorExpr
	%100 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%101 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %100, i64 0
	%102 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %101, i64 0, i32 36
	; SelectorExpr
	%103 = call i1 @windows-35.is_key_down(i32 91)
	; SelectorExpr
	%104 = call i1 @windows-35.is_key_down(i32 91)
	br i1 %104, label %logical.cmp.done-9, label %logical.cmp.rhs-8

logical.cmp.rhs-8:
	; SelectorExpr
	%105 = call i1 @windows-35.is_key_down(i32 92)
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%106 = phi i1 [ true, %logical.cmp.done-7 ], [ %105, %logical.cmp.rhs-8 ]
	store i1 %106, i1* %102
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %3
		store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	br label %for.interval.loop-10

for.interval.loop-10:
	%107 = load i64, i64* %4, align 8
	%108 = icmp sle i64 %107, 257
	br i1 %108, label %for.interval.body-11, label %for.interval.done-12

for.interval.body-11:
	%109 = load i64, i64* %4, align 8
	%110 = load i64, i64* %5, align 8
	%111 = load i64, i64* %4, align 8
	%112 = add i64 %111, 1
	store i64 %112, i64* %4
	%113 = load i64, i64* %5, align 8
	%114 = add i64 %113, 1
	store i64 %114, i64* %5
	store i64 %109, i64* %3
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%115 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%116 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %115, i64 0
	%117 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %116, i64 0, i32 37
	%118 = load i64, i64* %3, align 8
	%119 = trunc i64 %118 to i32
	%120 = getelementptr inbounds [512 x i1], [512 x i1]* %117, i64 0, i32 %119
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b2, i64 0, i32 0), i64 28}, i64 186, i64 25, i64 %118, i64 512)
	; SelectorExpr
	%121 = load i64, i64* %3, align 8
	%122 = trunc i64 %121 to i32
	%123 = call i1 @windows-35.is_key_down(i32 %122)
	store i1 %123, i1* %120
	br label %for.interval.loop-10

for.interval.done-12:
	br label %if.done-17

if.else-13:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%124 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%125 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %124, i64 0
	%126 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %125, i64 0, i32 30
	%127 = getelementptr inbounds [5 x i1], [5 x i1]* %126, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b3, i64 0, i32 0), i64 28}, i64 189, i64 22, i64 0, i64 5)
	store i1 false, i1* %127
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%128 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%129 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %128, i64 0
	%130 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %129, i64 0, i32 30
	%131 = getelementptr inbounds [5 x i1], [5 x i1]* %130, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b4, i64 0, i32 0), i64 28}, i64 190, i64 22, i64 1, i64 5)
	store i1 false, i1* %131
	; AssignStmt
	; SelectorExpr
	%132 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%133 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %132, i64 0
	%134 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %133, i64 0, i32 33
	store i1 false, i1* %134
	; AssignStmt
	; SelectorExpr
	%135 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%136 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %135, i64 0
	%137 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %136, i64 0, i32 34
	store i1 false, i1* %137
	; AssignStmt
	; SelectorExpr
	%138 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%139 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %138, i64 0
	%140 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %139, i64 0, i32 35
	store i1 false, i1* %140
	; AssignStmt
	; SelectorExpr
	%141 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%142 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %141, i64 0
	%143 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %142, i64 0, i32 36
	store i1 false, i1* %143
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %6
		store i64 zeroinitializer, i64* %7
	store i64 0, i64* %7
	store i64 zeroinitializer, i64* %8
	store i64 0, i64* %8
	br label %for.interval.loop-14

for.interval.loop-14:
	%144 = load i64, i64* %7, align 8
	%145 = icmp sle i64 %144, 256
	br i1 %145, label %for.interval.body-15, label %for.interval.done-16

for.interval.body-15:
	%146 = load i64, i64* %7, align 8
	%147 = load i64, i64* %8, align 8
	%148 = load i64, i64* %7, align 8
	%149 = add i64 %148, 1
	store i64 %149, i64* %7
	%150 = load i64, i64* %8, align 8
	%151 = add i64 %150, 1
	store i64 %151, i64* %8
	store i64 %146, i64* %6
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%152 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%153 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %152, i64 0
	%154 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %153, i64 0, i32 37
	%155 = load i64, i64* %6, align 8
	%156 = trunc i64 %155 to i32
	%157 = getelementptr inbounds [512 x i1], [512 x i1]* %154, i64 0, i32 %156
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b5, i64 0, i32 0), i64 28}, i64 197, i64 25, i64 %155, i64 512)
	store i1 false, i1* %157
	br label %for.interval.loop-14

for.interval.done-16:
	br label %if.done-17

if.done-17:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%158 = load %engine-20.Context_t*, %engine-20.Context_t** %1, align 8
	%159 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %158, i64 0
	%160 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %159, i64 0, i32 4
	%161 = load %jimgui-12.State_t*, %jimgui-12.State_t** %160, align 8
	%162 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %161, i64 0
	%163 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %162, i64 0, i32 1
	store i32 0, i32* %163
	; AssignStmt
	; SelectorExpr
	%164 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%165 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %164, i64 0
	%166 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %165, i64 0, i32 1
	%167 = load double, double* %0, align 8
	%168 = fptrunc double %167 to float
	store float %168, float* %166
	; SelectorExpr
	call ccc void @igNewFrame()
	ret void
}

define void @jimgui-12.RenderProc(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %imgui-9.DrawData*, align 8
	%2 = alloca %imgui-9.GuiIO*, align 8
	%3 = alloca %windows-35.Rect, align 4
	%4 = alloca i32, align 4
	%5 = alloca i32, align 4
	%6 = alloca [4 x i32], align 4
	%7 = alloca [4 x i32], align 4
	%8 = alloca [4 x [4 x float]], align 4
	%9 = alloca [4 x [4 x float]], align 4
	%10 = alloca [4 x float], align 4
	%11 = alloca [4 x float], align 4
	%12 = alloca %gl-10.Program, align 16
	%13 = alloca {i32, i1}, align 4
	%14 = alloca %__Map_Header, align 8
	%15 = alloca %__Map_Key, align 8
	%16 = alloca %__Map_Header, align 16
	%17 = alloca %__Map_Key, align 16
	%18 = alloca {i32, i1}, align 4
	%19 = alloca %__Map_Header, align 8
	%20 = alloca %__Map_Key, align 8
	%21 = alloca %__Map_Header, align 16
	%22 = alloca %__Map_Key, align 16
	%23 = alloca {%imgui-9.DrawList**, i64, i64}, align 8
	%24 = alloca {%imgui-9.DrawList**, i64, i64}, align 8
	%25 = alloca i32, align 4
	%26 = alloca %imgui-9.DrawList*, align 8
	%27 = alloca i16*, align 8
	%28 = alloca i32, align 4
	%29 = alloca %imgui-9.DrawCmd*, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; SelectorExpr
	call ccc void @igRender()
	; data
	store %imgui-9.DrawData* zeroinitializer, %imgui-9.DrawData** %1
		; SelectorExpr
	%30 = call ccc %imgui-9.DrawData* @igGetDrawData()
	store %imgui-9.DrawData* %30, %imgui-9.DrawData** %1
	; io
	store %imgui-9.GuiIO* zeroinitializer, %imgui-9.GuiIO** %2
		; SelectorExpr
	%31 = call ccc %imgui-9.GuiIO* @igGetIO()
	store %imgui-9.GuiIO* %31, %imgui-9.GuiIO** %2
	; rect
	store %windows-35.Rect zeroinitializer, %windows-35.Rect* %3
		; SelectorExpr
	; SelectorExpr
	%32 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%33 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %32, i64 0
	%34 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %33, i64 0, i32 28
	%35 = load %..rawptr, %..rawptr* %34, align 8
	%36 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %3, i64 0
	%37 = call ccc i32 @GetClientRect(%..rawptr %35, %windows-35.Rect* %36)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%38 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%39 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %38, i64 0
	%40 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %39, i64 0, i32 0
	%41 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %40, i64 0, i32 0
	; SelectorExpr
	%42 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %3, i64 0, i32 2
	%43 = load i32, i32* %42, align 4
	%44 = sitofp i32 %43 to float
	store float %44, float* %41
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%45 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%46 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %45, i64 0
	%47 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %46, i64 0, i32 0
	%48 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %47, i64 0, i32 1
	; SelectorExpr
	%49 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %3, i64 0, i32 3
	%50 = load i32, i32* %49, align 4
	%51 = sitofp i32 %50 to float
	store float %51, float* %48
	; width
	store i32 zeroinitializer, i32* %4
		; SelectorExpr
	; SelectorExpr
	%52 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%53 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %52, i64 0
	%54 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %53, i64 0, i32 0
	%55 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %54, i64 0, i32 0
	%56 = load float, float* %55, align 4
	; SelectorExpr
	; SelectorExpr
	%57 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%58 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %57, i64 0
	%59 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %58, i64 0, i32 15
	%60 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %59, i64 0, i32 0
	%61 = load float, float* %60, align 4
	%62 = fmul float %56, %61
	%63 = fptosi float %62 to i32
	store i32 %63, i32* %4
	; height
	store i32 zeroinitializer, i32* %5
		; SelectorExpr
	; SelectorExpr
	%64 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%65 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %64, i64 0
	%66 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %65, i64 0, i32 0
	%67 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %66, i64 0, i32 1
	%68 = load float, float* %67, align 4
	; SelectorExpr
	; SelectorExpr
	%69 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%70 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %69, i64 0
	%71 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %70, i64 0, i32 15
	%72 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %71, i64 0, i32 1
	%73 = load float, float* %72, align 4
	%74 = fmul float %68, %73
	%75 = fptosi float %74 to i32
	store i32 %75, i32* %5
	; IfStmt
	%76 = load i32, i32* %5, align 4
	%77 = icmp eq i32 %76, 0
	br i1 %77, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%78 = load i32, i32* %4, align 4
	%79 = icmp eq i32 %78, 0
	br i1 %79, label %if.then-2, label %if.done-3

if.then-2:
	br label %if.done-3

if.done-3:
	; lastViewport
	store [4 x i32] zeroinitializer, [4 x i32]* %6
		; lastScissor
	store [4 x i32] zeroinitializer, [4 x i32]* %7
		; SelectorExpr
	; IndexExpr
	%80 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b6, i64 0, i32 0), i64 28}, i64 225, i64 62, i64 0, i64 4)
	%81 = getelementptr inbounds i32, i32* %80, i64 0
	call void @gl-10.GetInteger-815(i32 2978, i32* %81)
	; SelectorExpr
	; IndexExpr
	%82 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b7, i64 0, i32 0), i64 28}, i64 226, i64 64, i64 0, i64 4)
	%83 = getelementptr inbounds i32, i32* %82, i64 0
	call void @gl-10.GetInteger-815(i32 3089, i32* %83)
	; SelectorExpr
	call void @gl-10.Enable(i32 3042)
	; SelectorExpr
	call void @gl-10.BlendFunc(i32 770, i32 771)
	; SelectorExpr
	call void @gl-10.BlendEquation(i32 32774)
	; SelectorExpr
	call void @gl-10.Disable(i32 2884)
	; SelectorExpr
	call void @gl-10.Disable(i32 2929)
	; SelectorExpr
	call void @gl-10.Enable(i32 3089)
	; SelectorExpr
	call void @gl-10.ActiveTexture(i32 33984)
	; SelectorExpr
	%84 = load i32, i32* %4, align 4
	%85 = load i32, i32* %5, align 4
	call ccc void @glViewport(i32 0, i32 0, i32 %84, i32 %85)
	; ortho_projection
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %8
		; CompoundLit
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %9
	store [4 x [4 x float]] [[4 x float] zeroinitializer, [4 x float] zeroinitializer, [4 x float] [float 0x0000000000000000, float 0x0000000000000000, float 0xbff0000000000000, float 0x0000000000000000], [4 x float] [float 0xbff0000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000]], [4 x [4 x float]]* %9
	; CompoundLit
	store [4 x float] zeroinitializer, [4 x float]* %10
	store [4 x float] [float zeroinitializer, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000], [4 x float]* %10
	; SelectorExpr
	; SelectorExpr
	%86 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%87 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %86, i64 0
	%88 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %87, i64 0, i32 0
	%89 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %88, i64 0, i32 0
	%90 = load float, float* %89, align 4
	%91 = fdiv float 0x4000000000000000, %90
	%92 = getelementptr inbounds [4 x float], [4 x float]* %10, i64 0, i32 0
	store float %91, float* %92
	%93 = load [4 x float], [4 x float]* %10, align 4
	%94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %9, i64 0, i32 0
	store [4 x float] %93, [4 x float]* %94
	; CompoundLit
	store [4 x float] zeroinitializer, [4 x float]* %11
	store [4 x float] [float 0x0000000000000000, float zeroinitializer, float 0x0000000000000000, float 0x0000000000000000], [4 x float]* %11
	; SelectorExpr
	; SelectorExpr
	%95 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %2, align 8
	%96 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %95, i64 0
	%97 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %96, i64 0, i32 0
	%98 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %97, i64 0, i32 1
	%99 = load float, float* %98, align 4
	%100 = fsub float 0x0000000000000000, %99
	%101 = fdiv float 0x4000000000000000, %100
	%102 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i32 1
	store float %101, float* %102
	%103 = load [4 x float], [4 x float]* %11, align 4
	%104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %9, i64 0, i32 1
	store [4 x float] %103, [4 x float]* %104
	%105 = load [4 x [4 x float]], [4 x [4 x float]]* %9, align 4
	store [4 x [4 x float]] %105, [4 x [4 x float]]* %8
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%106 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%107 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %106, i64 0
	%108 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %107, i64 0, i32 4
	%109 = load %jimgui-12.State_t*, %jimgui-12.State_t** %108, align 8
	%110 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %109, i64 0
	%111 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %110, i64 0, i32 0
	%112 = load %gl-10.Program, %gl-10.Program* %111, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %12
	store %gl-10.Program %112, %gl-10.Program* %12
	call void @gl-10.UseProgram(%gl-10.Program* %12)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%113 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%114 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %113, i64 0
	%115 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %114, i64 0, i32 4
	%116 = load %jimgui-12.State_t*, %jimgui-12.State_t** %115, align 8
	%117 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %116, i64 0
	%118 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %117, i64 0, i32 0
	%119 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %118, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %13
	store %__Map_Header zeroinitializer, %__Map_Header* %14
	%120 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 0
	%121 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %119 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %121, %raw-6.Dynamic_Map** %120
	%122 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 1
	store i1 true, i1* %122
	%123 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 2
	store i64 40, i64* %123
	%124 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 3
	store i64 8, i64* %124
	%125 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 4
	store i64 32, i64* %125
	%126 = getelementptr inbounds %__Map_Header, %__Map_Header* %14, i64 0, i32 5
	store i64 4, i64* %126
	%127 = load %__Map_Header, %__Map_Header* %14, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %15
	%128 = getelementptr inbounds %__Map_Key, %__Map_Key* %15, i64 0, i32 0
	store i64 2829778445906215252, i64* %128
	%129 = getelementptr inbounds %__Map_Key, %__Map_Key* %15, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3b8, i64 0, i32 0), i64 7}, %..string* %129
	%130 = load %__Map_Key, %__Map_Key* %15, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %16
	store %__Map_Header %127, %__Map_Header* %16
	store %__Map_Key zeroinitializer, %__Map_Key* %17
	store %__Map_Key %130, %__Map_Key* %17
	%131 = call %..rawptr @__dynamic_map_get(%__Map_Header* %16, %__Map_Key* %17)
	%132 = icmp ne %..rawptr %131, null
	%133 = getelementptr inbounds {i32, i1}, {i32, i1}* %13, i64 0, i32 1
	store i1 %132, i1* %133
	br i1 %132, label %map.get.then-4, label %map.get.done-5

map.get.then-4:
	%134 = getelementptr inbounds {i32, i1}, {i32, i1}* %13, i64 0, i32 0
	%135 = bitcast %..rawptr %131 to i32*
	%136 = load i32, i32* %135, align 4
	store i32 %136, i32* %134
	br label %map.get.done-5

map.get.done-5:
	%137 = getelementptr inbounds {i32, i1}, {i32, i1}* %13, i64 0, i32 0
	%138 = load i32, i32* %137, align 4
	call void @gl-10.Uniform-787(i32 %138, i32 0)
	; SelectorExpr
	%139 = load void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-10._UniformMatrix4fv, align 8
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%140 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%141 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %140, i64 0
	%142 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %141, i64 0, i32 4
	%143 = load %jimgui-12.State_t*, %jimgui-12.State_t** %142, align 8
	%144 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %143, i64 0
	%145 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %144, i64 0, i32 0
	%146 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %145, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %18
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	%147 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 0
	%148 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %146 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %148, %raw-6.Dynamic_Map** %147
	%149 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 1
	store i1 true, i1* %149
	%150 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 2
	store i64 40, i64* %150
	%151 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 3
	store i64 8, i64* %151
	%152 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 4
	store i64 32, i64* %152
	%153 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 5
	store i64 4, i64* %153
	%154 = load %__Map_Header, %__Map_Header* %19, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	%155 = getelementptr inbounds %__Map_Key, %__Map_Key* %20, i64 0, i32 0
	store i64 -9017138883755609675, i64* %155
	%156 = getelementptr inbounds %__Map_Key, %__Map_Key* %20, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3b9, i64 0, i32 0), i64 7}, %..string* %156
	%157 = load %__Map_Key, %__Map_Key* %20, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %21
	store %__Map_Header %154, %__Map_Header* %21
	store %__Map_Key zeroinitializer, %__Map_Key* %22
	store %__Map_Key %157, %__Map_Key* %22
	%158 = call %..rawptr @__dynamic_map_get(%__Map_Header* %21, %__Map_Key* %22)
	%159 = icmp ne %..rawptr %158, null
	%160 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 1
	store i1 %159, i1* %160
	br i1 %159, label %map.get.then-6, label %map.get.done-7

map.get.then-6:
	%161 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 0
	%162 = bitcast %..rawptr %158 to i32*
	%163 = load i32, i32* %162, align 4
	store i32 %163, i32* %161
	br label %map.get.done-7

map.get.done-7:
	%164 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 0
	%165 = load i32, i32* %164, align 4
	; IndexExpr
	; IndexExpr
	%166 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %8, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3ba, i64 0, i32 0), i64 28}, i64 247, i64 98, i64 0, i64 4)
	%167 = getelementptr inbounds [4 x float], [4 x float]* %166, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3bb, i64 0, i32 0), i64 28}, i64 247, i64 101, i64 0, i64 4)
	%168 = getelementptr inbounds float, float* %167, i64 0
	call ccc void %139(i32 %165, i32 1, i32 0, float* %168)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%169 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%170 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %169, i64 0
	%171 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %170, i64 0, i32 4
	%172 = load %jimgui-12.State_t*, %jimgui-12.State_t** %171, align 8
	%173 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %172, i64 0
	%174 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %173, i64 0, i32 4
	%175 = load i32, i32* %174, align 4
	call void @gl-10.BindVertexArray(i32 %175)
	; newList
	store {%imgui-9.DrawList**, i64, i64} zeroinitializer, {%imgui-9.DrawList**, i64, i64}* %23
		; slice_ptr
	; SelectorExpr
	%176 = load %imgui-9.DrawData*, %imgui-9.DrawData** %1, align 8
	%177 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %176, i64 0
	%178 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %177, i64 0, i32 1
	%179 = load %imgui-9.DrawList**, %imgui-9.DrawList*** %178, align 8
	; SelectorExpr
	%180 = load %imgui-9.DrawData*, %imgui-9.DrawData** %1, align 8
	%181 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %180, i64 0
	%182 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %181, i64 0, i32 2
	%183 = load i32, i32* %182, align 4
	%184 = sext i32 %183 to i64
	store {%imgui-9.DrawList**, i64, i64} zeroinitializer, {%imgui-9.DrawList**, i64, i64}* %24
	%185 = getelementptr inbounds {%imgui-9.DrawList**, i64, i64}, {%imgui-9.DrawList**, i64, i64}* %24, i64 0, i32 0
	store %imgui-9.DrawList** %179, %imgui-9.DrawList*** %185
	%186 = getelementptr inbounds {%imgui-9.DrawList**, i64, i64}, {%imgui-9.DrawList**, i64, i64}* %24, i64 0, i32 1
	store i64 %184, i64* %186
	%187 = getelementptr inbounds {%imgui-9.DrawList**, i64, i64}, {%imgui-9.DrawList**, i64, i64}* %24, i64 0, i32 2
	store i64 %184, i64* %187
	%188 = load {%imgui-9.DrawList**, i64, i64}, {%imgui-9.DrawList**, i64, i64}* %24, align 8
	store {%imgui-9.DrawList**, i64, i64} %188, {%imgui-9.DrawList**, i64, i64}* %23
	; ForStmt
	; n
	store i32 zeroinitializer, i32* %25
		store i32 0, i32* %25
	br label %for.loop-8

for.loop-8:
	%189 = load i32, i32* %25, align 4
	; SelectorExpr
	%190 = load %imgui-9.DrawData*, %imgui-9.DrawData** %1, align 8
	%191 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %190, i64 0
	%192 = getelementptr inbounds %imgui-9.DrawData, %imgui-9.DrawData* %191, i64 0, i32 2
	%193 = load i32, i32* %192, align 4
	%194 = icmp slt i32 %189, %193
	br i1 %194, label %for.body-9, label %for.done-13

for.body-9:
	; list
	store %imgui-9.DrawList* zeroinitializer, %imgui-9.DrawList** %26
		; IndexExpr
	%195 = load {%imgui-9.DrawList**, i64, i64}, {%imgui-9.DrawList**, i64, i64}* %23, align 8
	%196 = extractvalue {%imgui-9.DrawList**, i64, i64} %195, 0
	%197 = extractvalue {%imgui-9.DrawList**, i64, i64} %195, 1
	%198 = load i32, i32* %25, align 4
	%199 = sext i32 %198 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3bc, i64 0, i32 0), i64 28}, i64 252, i64 25, i64 %199, i64 %197)
	%200 = getelementptr inbounds %imgui-9.DrawList*, %imgui-9.DrawList** %196, i64 %199
	%201 = load %imgui-9.DrawList*, %imgui-9.DrawList** %200, align 8
	store %imgui-9.DrawList* %201, %imgui-9.DrawList** %26
	; idxBufferOffset
	store i16* zeroinitializer, i16** %27
		store i16* zeroinitializer, i16** %27
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%202 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%203 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %202, i64 0
	%204 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %203, i64 0, i32 4
	%205 = load %jimgui-12.State_t*, %jimgui-12.State_t** %204, align 8
	%206 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %205, i64 0
	%207 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %206, i64 0, i32 2
	%208 = load i32, i32* %207, align 4
	call void @gl-10.BindBuffer-779(i32 %208)
	; SelectorExpr
	; SelectorExpr
	%209 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%210 = call ccc i32 @ImDrawList_GetVertexBufferSize(%imgui-9.DrawList* %209)
	%211 = mul i32 %210, 20
	; SelectorExpr
	%212 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%213 = call ccc %imgui-9.DrawVert* @ImDrawList_GetVertexPtr(%imgui-9.DrawList* %212, i32 0)
	%214 = bitcast %imgui-9.DrawVert* %213 to %..rawptr
	call void @gl-10.BufferData-773(i32 34962, i32 %211, %..rawptr %214, i32 35040)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%215 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%216 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %215, i64 0
	%217 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %216, i64 0, i32 4
	%218 = load %jimgui-12.State_t*, %jimgui-12.State_t** %217, align 8
	%219 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %218, i64 0
	%220 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %219, i64 0, i32 3
	%221 = load i32, i32* %220, align 4
	call void @gl-10.BindBuffer-780(i32 %221)
	; SelectorExpr
	; SelectorExpr
	%222 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%223 = call ccc i32 @ImDrawList_GetIndexBufferSize(%imgui-9.DrawList* %222)
	%224 = mul i32 %223, 2
	; SelectorExpr
	%225 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%226 = call ccc i16* @ImDrawList_GetIndexPtr(%imgui-9.DrawList* %225, i32 0)
	%227 = bitcast i16* %226 to %..rawptr
	call void @gl-10.BufferData-773(i32 34963, i32 %224, %..rawptr %227, i32 35040)
	; ForStmt
	; j
	store i32 zeroinitializer, i32* %28
		store i32 0, i32* %28
	br label %for.loop-10

for.loop-10:
	%228 = load i32, i32* %28, align 4
	; SelectorExpr
	%229 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%230 = call ccc i32 @ImDrawList_GetCmdSize(%imgui-9.DrawList* %229)
	%231 = icmp slt i32 %228, %230
	br i1 %231, label %for.body-11, label %for.done-12

for.body-11:
	; cmd
	store %imgui-9.DrawCmd* zeroinitializer, %imgui-9.DrawCmd** %29
		; SelectorExpr
	%232 = load %imgui-9.DrawList*, %imgui-9.DrawList** %26, align 8
	%233 = load i32, i32* %28, align 4
	%234 = call ccc %imgui-9.DrawCmd* @ImDrawList_GetCmdPtr(%imgui-9.DrawList* %232, i32 %233)
	store %imgui-9.DrawCmd* %234, %imgui-9.DrawCmd** %29
	; SelectorExpr
	; SelectorExpr
	%235 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%236 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %235, i64 0
	%237 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %236, i64 0, i32 2
	%238 = load %..rawptr, %..rawptr* %237, align 8
	%239 = ptrtoint %..rawptr %238 to i64
	%240 = trunc i64 %239 to i32
	call void @gl-10.BindTexture(i32 3553, i32 %240)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%241 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%242 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %241, i64 0
	%243 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %242, i64 0, i32 1
	%244 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %243, i64 0, i32 0
	%245 = load float, float* %244, align 4
	%246 = fptosi float %245 to i32
	%247 = load i32, i32* %5, align 4
	; SelectorExpr
	; SelectorExpr
	%248 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%249 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %248, i64 0
	%250 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %249, i64 0, i32 1
	%251 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %250, i64 0, i32 3
	%252 = load float, float* %251, align 4
	%253 = fptosi float %252 to i32
	%254 = sub i32 %247, %253
	; SelectorExpr
	; SelectorExpr
	%255 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%256 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %255, i64 0
	%257 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %256, i64 0, i32 1
	%258 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %257, i64 0, i32 2
	%259 = load float, float* %258, align 4
	; SelectorExpr
	; SelectorExpr
	%260 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%261 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %260, i64 0
	%262 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %261, i64 0, i32 1
	%263 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %262, i64 0, i32 0
	%264 = load float, float* %263, align 4
	%265 = fsub float %259, %264
	%266 = fptosi float %265 to i32
	; SelectorExpr
	; SelectorExpr
	%267 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%268 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %267, i64 0
	%269 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %268, i64 0, i32 1
	%270 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %269, i64 0, i32 3
	%271 = load float, float* %270, align 4
	; SelectorExpr
	; SelectorExpr
	%272 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%273 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %272, i64 0
	%274 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %273, i64 0, i32 1
	%275 = getelementptr inbounds %imgui-9.Vec4, %imgui-9.Vec4* %274, i64 0, i32 1
	%276 = load float, float* %275, align 4
	%277 = fsub float %271, %276
	%278 = fptosi float %277 to i32
	call ccc void @glScissor(i32 %246, i32 %254, i32 %266, i32 %278)
	; SelectorExpr
	; SelectorExpr
	%279 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%280 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %279, i64 0
	%281 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %280, i64 0, i32 0
	%282 = load i32, i32* %281, align 4
	%283 = bitcast i32 %282 to i32
	%284 = load i16*, i16** %27, align 8
	%285 = bitcast i16* %284 to %..rawptr
	call void @gl-10.DrawElements(i32 4, i32 %283, i32 5123, %..rawptr %285)
	; AssignStmt
	; SelectorExpr
	%286 = load %imgui-9.DrawCmd*, %imgui-9.DrawCmd** %29, align 8
	%287 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %286, i64 0
	%288 = getelementptr inbounds %imgui-9.DrawCmd, %imgui-9.DrawCmd* %287, i64 0, i32 0
	%289 = load i32, i32* %288, align 4
	%290 = load i16*, i16** %27, align 8
	%291 = zext i32 %289 to i64
	%292 = getelementptr inbounds i16, i16* %290, i64 %291
	store i16* %292, i16** %27
	; AssignStmt
	%293 = load i32, i32* %28, align 4
	%294 = add i32 %293, 1
	store i32 %294, i32* %28
	br label %for.loop-10

for.done-12:
	; AssignStmt
	%295 = load i32, i32* %25, align 4
	%296 = add i32 %295, 1
	store i32 %296, i32* %25
	br label %for.loop-8

for.done-13:
	; SelectorExpr
	; IndexExpr
	%297 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3bd, i64 0, i32 0), i64 28}, i64 271, i64 28, i64 0, i64 4)
	%298 = load i32, i32* %297, align 4
	; IndexExpr
	%299 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3be, i64 0, i32 0), i64 28}, i64 271, i64 44, i64 1, i64 4)
	%300 = load i32, i32* %299, align 4
	; IndexExpr
	%301 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3bf, i64 0, i32 0), i64 28}, i64 271, i64 60, i64 2, i64 4)
	%302 = load i32, i32* %301, align 4
	; IndexExpr
	%303 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c0, i64 0, i32 0), i64 28}, i64 271, i64 76, i64 3, i64 4)
	%304 = load i32, i32* %303, align 4
	call ccc void @glScissor(i32 %298, i32 %300, i32 %302, i32 %304)
	; SelectorExpr
	; IndexExpr
	%305 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c1, i64 0, i32 0), i64 28}, i64 272, i64 30, i64 0, i64 4)
	%306 = load i32, i32* %305, align 4
	; IndexExpr
	%307 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c2, i64 0, i32 0), i64 28}, i64 272, i64 47, i64 1, i64 4)
	%308 = load i32, i32* %307, align 4
	; IndexExpr
	%309 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i32 2
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c3, i64 0, i32 0), i64 28}, i64 272, i64 64, i64 2, i64 4)
	%310 = load i32, i32* %309, align 4
	; IndexExpr
	%311 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i32 3
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c4, i64 0, i32 0), i64 28}, i64 272, i64 81, i64 3, i64 4)
	%312 = load i32, i32* %311, align 4
	call ccc void @glViewport(i32 %306, i32 %308, i32 %310, i32 %312)
	ret void
}

define void @xinput-13.Enable(i1 %enable) {
decls-0:
	%0 = alloca i1, align 1
	store i1 zeroinitializer, i1* %0
		store i1 %enable, i1* %0
	; IfStmt
	%1 = load void (i32)*, void (i32)** @xinput-13._Enable, align 8
	%2 = icmp ne void (i32)* %1, zeroinitializer
	br i1 %2, label %if.then-1, label %if.else-2

if.then-1:
	%3 = load void (i32)*, void (i32)** @xinput-13._Enable, align 8
	%4 = load i1, i1* %0, align 1
	%5 = zext i1 %4 to i32
	call ccc void %3(i32 %5)
	br label %if.done-3

if.else-2:
	br label %if.done-3

if.done-3:
	ret void
}

define {%xinput-13.Capabilities, i32} @xinput-13.GetCapabilities-916(i32 %user) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca {%xinput-13.Capabilities, i32}, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %user, i32* %0
	; ReturnStmt
	%2 = load i32, i32* %0, align 4
	%3 = call {%xinput-13.Capabilities, i32} @xinput-13.GetCapabilities-917(i32 %2, i1 false)
	%4 = extractvalue {%xinput-13.Capabilities, i32} %3, 0
	%5 = extractvalue {%xinput-13.Capabilities, i32} %3, 1
	store {%xinput-13.Capabilities, i32} zeroinitializer, {%xinput-13.Capabilities, i32}* %1
	%6 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %1, i64 0, i32 0
	store %xinput-13.Capabilities %4, %xinput-13.Capabilities* %6
	%7 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %1, i64 0, i32 1
	store i32 %5, i32* %7
	%8 = load {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %1, align 4
	ret {%xinput-13.Capabilities, i32} %8
}

define {%xinput-13.Capabilities, i32} @xinput-13.GetCapabilities-917(i32 %user, i1 %onlyGamepads) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i1, align 1
	%2 = alloca %xinput-13.Capabilities, align 2
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	%5 = alloca {%xinput-13.Capabilities, i32}, align 4
	%6 = alloca {%xinput-13.Capabilities, i32}, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %user, i32* %0
	store i1 zeroinitializer, i1* %1
		store i1 %onlyGamepads, i1* %1
	; IfStmt
	%7 = load i32 (i32, i32, %xinput-13.Capabilities*)*, i32 (i32, i32, %xinput-13.Capabilities*)** @xinput-13._GetCapabilities, align 8
	%8 = icmp ne i32 (i32, i32, %xinput-13.Capabilities*)* %7, zeroinitializer
	br i1 %8, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %2
		store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %2
	; _u
	store i32 zeroinitializer, i32* %3
		%9 = load i32, i32* %0, align 4
	store i32 %9, i32* %3
	; err
	store i32 zeroinitializer, i32* %4
		%10 = load i32 (i32, i32, %xinput-13.Capabilities*)*, i32 (i32, i32, %xinput-13.Capabilities*)** @xinput-13._GetCapabilities, align 8
	%11 = load i32, i32* %0, align 4
	%12 = load i1, i1* %1, align 1
	%13 = zext i1 %12 to i32
	%14 = getelementptr inbounds %xinput-13.Capabilities, %xinput-13.Capabilities* %2, i64 0
	%15 = call ccc i32 %10(i32 %11, i32 %13, %xinput-13.Capabilities* %14)
	store i32 %15, i32* %4
	; ReturnStmt
	%16 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %2, align 2
	%17 = load i32, i32* %4, align 4
	store {%xinput-13.Capabilities, i32} zeroinitializer, {%xinput-13.Capabilities, i32}* %5
	%18 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %5, i64 0, i32 0
	store %xinput-13.Capabilities %16, %xinput-13.Capabilities* %18
	%19 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %5, i64 0, i32 1
	store i32 %17, i32* %19
	%20 = load {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %5, align 4
	ret {%xinput-13.Capabilities, i32} %20

if.else-2:
	br label %if.done-3

if.done-3:
	; ReturnStmt
	store {%xinput-13.Capabilities, i32} zeroinitializer, {%xinput-13.Capabilities, i32}* %6
	%21 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %6, i64 0, i32 0
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %21
	%22 = getelementptr inbounds {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %6, i64 0, i32 1
	store i32 1167, i32* %22
	%23 = load {%xinput-13.Capabilities, i32}, {%xinput-13.Capabilities, i32}* %6, align 4
	ret {%xinput-13.Capabilities, i32} %23
}

define {%xinput-13.State, i32} @xinput-13.GetState(i32 %user) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %xinput-13.State, align 4
	%2 = alloca i32, align 4
	%3 = alloca {%xinput-13.State, i32}, align 4
	%4 = alloca {%xinput-13.State, i32}, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %user, i32* %0
	; IfStmt
	%5 = load i32 (i32, %xinput-13.State*)*, i32 (i32, %xinput-13.State*)** @xinput-13._GetState, align 8
	%6 = icmp ne i32 (i32, %xinput-13.State*)* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.else-2

if.then-1:
	; res
	store %xinput-13.State zeroinitializer, %xinput-13.State* %1
		store %xinput-13.State zeroinitializer, %xinput-13.State* %1
	; err
	store i32 zeroinitializer, i32* %2
		%7 = load i32 (i32, %xinput-13.State*)*, i32 (i32, %xinput-13.State*)** @xinput-13._GetState, align 8
	%8 = load i32, i32* %0, align 4
	%9 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %1, i64 0
	%10 = call ccc i32 %7(i32 %8, %xinput-13.State* %9)
	store i32 %10, i32* %2
	; ReturnStmt
	%11 = load %xinput-13.State, %xinput-13.State* %1, align 4
	%12 = load i32, i32* %2, align 4
	store {%xinput-13.State, i32} zeroinitializer, {%xinput-13.State, i32}* %3
	%13 = getelementptr inbounds {%xinput-13.State, i32}, {%xinput-13.State, i32}* %3, i64 0, i32 0
	store %xinput-13.State %11, %xinput-13.State* %13
	%14 = getelementptr inbounds {%xinput-13.State, i32}, {%xinput-13.State, i32}* %3, i64 0, i32 1
	store i32 %12, i32* %14
	%15 = load {%xinput-13.State, i32}, {%xinput-13.State, i32}* %3, align 4
	ret {%xinput-13.State, i32} %15

if.else-2:
	br label %if.done-3

if.done-3:
	; ReturnStmt
	store {%xinput-13.State, i32} zeroinitializer, {%xinput-13.State, i32}* %4
	%16 = getelementptr inbounds {%xinput-13.State, i32}, {%xinput-13.State, i32}* %4, i64 0, i32 0
	store %xinput-13.State zeroinitializer, %xinput-13.State* %16
	%17 = getelementptr inbounds {%xinput-13.State, i32}, {%xinput-13.State, i32}* %4, i64 0, i32 1
	store i32 1167, i32* %17
	%18 = load {%xinput-13.State, i32}, {%xinput-13.State, i32}* %4, align 4
	ret {%xinput-13.State, i32} %18
}

define i1 @xinput-13.Init() {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..rawptr, align 8
	%4 = alloca %..rawptr, align 8
	; lib1_4
	store %..string zeroinitializer, %..string* %0
		store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$3c5, i64 0, i32 0), i64 14}, %..string* %0
	; lib1_3
	store %..string zeroinitializer, %..string* %1
		store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$3c6, i64 0, i32 0), i64 14}, %..string* %1
	; lib9_1_0
	store %..string zeroinitializer, %..string* %2
		store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$3c7, i64 0, i32 0), i64 16}, %..string* %2
	; lib
	store %..rawptr zeroinitializer, %..rawptr* %3
		; SelectorExpr
	; IndexExpr
	%5 = load %..string, %..string* %0, align 8
	%6 = extractvalue %..string %5, 0
	%7 = extractvalue %..string %5, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c8, i64 0, i32 0), i64 28}, i64 247, i64 39, i64 0, i64 %7)
	%8 = getelementptr inbounds i8, i8* %6, i64 0
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	%10 = call ccc %..rawptr @LoadLibraryA(i8* %9)
	store %..rawptr %10, %..rawptr* %3
	; AssignStmt
	store i64 1, i64* @xinput-13.Version
	; IfStmt
	%11 = load %..rawptr, %..rawptr* %3, align 8
	%12 = icmp eq %..rawptr %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	; IndexExpr
	%13 = load %..string, %..string* %1, align 8
	%14 = extractvalue %..string %13, 0
	%15 = extractvalue %..string %13, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c9, i64 0, i32 0), i64 28}, i64 251, i64 42, i64 0, i64 %15)
	%16 = getelementptr inbounds i8, i8* %14, i64 0
	%17 = getelementptr inbounds i8, i8* %16, i64 0
	%18 = call ccc %..rawptr @LoadLibraryA(i8* %17)
	store %..rawptr %18, %..rawptr* %3
	; AssignStmt
	store i64 2, i64* @xinput-13.Version
	br label %if.done-2

if.done-2:
	; IfStmt
	%19 = load %..rawptr, %..rawptr* %3, align 8
	%20 = icmp eq %..rawptr %19, zeroinitializer
	br i1 %20, label %if.then-3, label %if.done-4

if.then-3:
	; lib
	store %..rawptr zeroinitializer, %..rawptr* %4
		; SelectorExpr
	; IndexExpr
	%21 = load %..string, %..string* %2, align 8
	%22 = extractvalue %..string %21, 0
	%23 = extractvalue %..string %21, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3ca, i64 0, i32 0), i64 28}, i64 256, i64 45, i64 0, i64 %23)
	%24 = getelementptr inbounds i8, i8* %22, i64 0
	%25 = getelementptr inbounds i8, i8* %24, i64 0
	%26 = call ccc %..rawptr @LoadLibraryA(i8* %25)
	store %..rawptr %26, %..rawptr* %4
	; AssignStmt
	store i64 3, i64* @xinput-13.Version
	br label %if.done-4

if.done-4:
	; IfStmt
	%27 = load %..rawptr, %..rawptr* %3, align 8
	%28 = icmp eq %..rawptr %27, zeroinitializer
	br i1 %28, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	store i64 4, i64* @xinput-13.Version
	; ReturnStmt
	ret i1 false

if.done-6:
	; AssignStmt
	; SelectorExpr
	%29 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 1
	%30 = load %..rawptr, %..rawptr* %3, align 8
	%31 = ptrtoint %..rawptr %30 to i64
	store i64 %31, i64* %29
	%32 = load %..rawptr, %..rawptr* %3, align 8
	%33 = getelementptr inbounds void (i32)*, void (i32)** @xinput-13._Enable, i64 0
	%34 = bitcast void (i32)** %33 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %32, %..rawptr %34, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$3cb, i64 0, i32 0), i64 12})
	%35 = load %..rawptr, %..rawptr* %3, align 8
	%36 = getelementptr inbounds i32 (i32, i8, %xinput-13.BatteryInformation*)*, i32 (i32, i8, %xinput-13.BatteryInformation*)** @xinput-13._GetBatteryInformation, i64 0
	%37 = bitcast i32 (i32, i8, %xinput-13.BatteryInformation*)** %36 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %35, %..rawptr %37, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3cc, i64 0, i32 0), i64 27})
	%38 = load %..rawptr, %..rawptr* %3, align 8
	%39 = getelementptr inbounds i32 (i32, i32, %xinput-13.Capabilities*)*, i32 (i32, i32, %xinput-13.Capabilities*)** @xinput-13._GetCapabilities, i64 0
	%40 = bitcast i32 (i32, i32, %xinput-13.Capabilities*)** %39 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %38, %..rawptr %40, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3cd, i64 0, i32 0), i64 21})
	%41 = load %..rawptr, %..rawptr* %3, align 8
	%42 = getelementptr inbounds i32 (i32, i32, %xinput-13.KeyStroke*)*, i32 (i32, i32, %xinput-13.KeyStroke*)** @xinput-13._GetKeystroke, i64 0
	%43 = bitcast i32 (i32, i32, %xinput-13.KeyStroke*)** %42 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %41, %..rawptr %43, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$3ce, i64 0, i32 0), i64 18})
	%44 = load %..rawptr, %..rawptr* %3, align 8
	%45 = getelementptr inbounds i32 (i32, %xinput-13.State*)*, i32 (i32, %xinput-13.State*)** @xinput-13._GetState, i64 0
	%46 = bitcast i32 (i32, %xinput-13.State*)** %45 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %44, %..rawptr %46, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$3cf, i64 0, i32 0), i64 14})
	%47 = load %..rawptr, %..rawptr* %3, align 8
	%48 = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** @xinput-13._SetState, i64 0
	%49 = bitcast i32 (i32, i32)** %48 to %..rawptr
	call void @xinput-13.Init.set_proc_address-0(%..rawptr %47, %..rawptr %49, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$3d0, i64 0, i32 0), i64 14})
	; ReturnStmt
	ret i1 true
}

define void @xinput-13.Init.set_proc_address-0(%..rawptr %h, %..rawptr %p, %..string %name) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..string, align 8
	%3 = alloca i8*, align 8
	%4 = alloca void ()*, align 8
	%5 = alloca %xinput-13.DebugFunctionLoadStatus, align 8
	%6 = alloca {%xinput-13.DebugFunctionLoadStatus*, i64, i64}, align 8
	%7 = alloca [1 x %xinput-13.DebugFunctionLoadStatus], align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %h, %..rawptr* %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %p, %..rawptr* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %name, %..string* %2
	; txt
	store i8* zeroinitializer, i8** %3
		; SelectorExpr
	%8 = load %..string, %..string* %2, align 8
	%9 = call i8* @strings-7.new_c_string(%..string %8)
	store i8* %9, i8** %3
	; DeferStmt
	; res
	store void ()* zeroinitializer, void ()** %4
		; SelectorExpr
	%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = load i8*, i8** %3, align 8
	%12 = call ccc void ()* @GetProcAddress(%..rawptr %10, i8* %11)
	store void ()* %12, void ()** %4
	; AssignStmt
	%13 = load %..rawptr, %..rawptr* %1, align 8
	%14 = bitcast %..rawptr %13 to void ()**
	%15 = getelementptr inbounds void ()*, void ()** %14, i64 0
	%16 = load void ()*, void ()** %4, align 8
	store void ()* %16, void ()** %15
	; status
	store %xinput-13.DebugFunctionLoadStatus zeroinitializer, %xinput-13.DebugFunctionLoadStatus* %5
		store %xinput-13.DebugFunctionLoadStatus zeroinitializer, %xinput-13.DebugFunctionLoadStatus* %5
	; AssignStmt
	; SelectorExpr
	%17 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, i64 0, i32 0
	%18 = load %..string, %..string* %2, align 8
	store %..string %18, %..string* %17
	; AssignStmt
	; SelectorExpr
	%19 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, i64 0, i32 1
	%20 = load void ()*, void ()** %4, align 8
	%21 = bitcast void ()* %20 to %..rawptr
	%22 = ptrtoint %..rawptr %21 to i64
	store i64 %22, i64* %19
	; AssignStmt
	; SelectorExpr
	%23 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, i64 0, i32 3
	store i1 false, i1* %23
	; SelectorExpr
	%24 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 2
	%25 = load i32, i32* %24, align 4
	%26 = add i32 %25, 1
	store i32 %26, i32* %24
	; IfStmt
	; SelectorExpr
	%27 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, i64 0, i32 1
	%28 = load i64, i64* %27, align 8
	%29 = icmp ne i64 %28, 0
	br i1 %29, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%30 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, i64 0, i32 3
	store i1 true, i1* %30
	; SelectorExpr
	%31 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 3
	%32 = load i32, i32* %31, align 4
	%33 = add i32 %32, 1
	store i32 %33, i32* %31
	br label %if.done-2

if.done-2:
	; append
	; SelectorExpr
	%34 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 0
	%35 = bitcast {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %34 to %..rawptr
	; SelectorExpr
	%36 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 0
	%37 = load {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %36, align 8
	%38 = load %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %5, align 8
	; variadic call argument generation
	store {%xinput-13.DebugFunctionLoadStatus*, i64, i64} zeroinitializer, {%xinput-13.DebugFunctionLoadStatus*, i64, i64}* %6
	store [1 x %xinput-13.DebugFunctionLoadStatus] zeroinitializer, [1 x %xinput-13.DebugFunctionLoadStatus]* %7
	%39 = getelementptr inbounds [1 x %xinput-13.DebugFunctionLoadStatus], [1 x %xinput-13.DebugFunctionLoadStatus]* %7, i64 0, i32 0
	store %xinput-13.DebugFunctionLoadStatus %38, %xinput-13.DebugFunctionLoadStatus* %39
	%40 = getelementptr inbounds [1 x %xinput-13.DebugFunctionLoadStatus], [1 x %xinput-13.DebugFunctionLoadStatus]* %7, i64 0, i32 0
	%41 = getelementptr inbounds {%xinput-13.DebugFunctionLoadStatus*, i64, i64}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64}* %6, i64 0, i32 0
	store %xinput-13.DebugFunctionLoadStatus* %40, %xinput-13.DebugFunctionLoadStatus** %41
	%42 = getelementptr inbounds {%xinput-13.DebugFunctionLoadStatus*, i64, i64}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %42
	%43 = getelementptr inbounds {%xinput-13.DebugFunctionLoadStatus*, i64, i64}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %43
	%44 = load {%xinput-13.DebugFunctionLoadStatus*, i64, i64}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64}* %6, align 8
	%45 = extractvalue {%xinput-13.DebugFunctionLoadStatus*, i64, i64} %44, 0
	%46 = extractvalue {%xinput-13.DebugFunctionLoadStatus*, i64, i64} %44, 1
	%47 = bitcast %xinput-13.DebugFunctionLoadStatus* %45 to %..rawptr
	%48 = call i64 @__dynamic_array_append(%..rawptr %35, i64 40, i64 8, %..rawptr %47, i64 %46)
	; defer
	; free
	%49 = load i8*, i8** %3, align 8
	%50 = bitcast i8* %49 to %..rawptr
	call void @free_ptr(%..rawptr %50)
	ret void
}

define %render-14.VirtualScreen_t* @render-14.CreateVirtualScreen(i64 %w, i64 %h) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %render-14.VirtualScreen_t*, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %w, i64* %0
	store i64 zeroinitializer, i64* %1
		store i64 %h, i64* %1
	; screen
	store %render-14.VirtualScreen_t* zeroinitializer, %render-14.VirtualScreen_t** %2
		; new
	%3 = call %..rawptr @alloc_align(i64 16, i64 8)
	%4 = bitcast %..rawptr %3 to %render-14.VirtualScreen_t*
	store %render-14.VirtualScreen_t* %4, %render-14.VirtualScreen_t** %2
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%5 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	%6 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %5, i64 0
	%7 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %6, i64 0, i32 0
	%8 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, i64 0, i32 1, i32 0
	store float 0x4094000000000000, float* %8
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%9 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	%10 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %9, i64 0
	%11 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %10, i64 0, i32 0
	%12 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %11, i64 0, i32 1, i32 1
	store float 0x4086800000000000, float* %12
	; AssignStmt
	; SelectorExpr
	%13 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	%14 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %13, i64 0
	%15 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %14, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	%16 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	%17 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %16, i64 0
	%18 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %17, i64 0, i32 0
	%19 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %18, i64 0, i32 1, i32 0
	%20 = load float, float* %19, align 4
	; SelectorExpr
	; SelectorExpr
	%21 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	%22 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %21, i64 0
	%23 = getelementptr inbounds %render-14.VirtualScreen_t, %render-14.VirtualScreen_t* %22, i64 0, i32 0
	%24 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %23, i64 0, i32 1, i32 1
	%25 = load float, float* %24, align 4
	%26 = fdiv float %20, %25
	store float %26, float* %15
	; ReturnStmt
	%27 = load %render-14.VirtualScreen_t*, %render-14.VirtualScreen_t** %2, align 8
	ret %render-14.VirtualScreen_t* %27
}

define [4 x [4 x float]] @render-14.CalculateOrtho(i64 %window, i64 %scaleFactor, float %far, float %near) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca float, align 4
	%7 = alloca float, align 4
	%8 = alloca float, align 4
	%9 = alloca float, align 4
	%10 = alloca [4 x [4 x float]], align 4
	%11 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%12 = alloca [4 x [4 x float]], align 16
	%13 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %0
		%14 = bitcast {[0 x <8 x i8>], [2 x float]}* %0 to i64*
	store i64 %window, i64* %14
	%15 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %1
		%16 = bitcast {[0 x <8 x i8>], [2 x float]}* %1 to i64*
	store i64 %scaleFactor, i64* %16
	%17 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	store float zeroinitializer, float* %2
		store float %far, float* %2
	store float zeroinitializer, float* %3
		store float %near, float* %3
	; w
	store float zeroinitializer, float* %4
		; SelectorExpr
	%18 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 0
	%19 = load float, float* %18, align 4
	store float %19, float* %4
	; h
	store float zeroinitializer, float* %5
		; SelectorExpr
	%20 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%21 = load float, float* %20, align 4
	store float %21, float* %5
	; l
	store float zeroinitializer, float* %6
		%22 = load float, float* %4, align 4
	%23 = fdiv float %22, 0x4000000000000000
	%24 = fsub float 0x0000000000000000, %23
	store float %24, float* %6
	; r
	store float zeroinitializer, float* %7
		%25 = load float, float* %4, align 4
	%26 = fdiv float %25, 0x4000000000000000
	store float %26, float* %7
	; b
	store float zeroinitializer, float* %8
		%27 = load float, float* %5, align 4
	%28 = fdiv float %27, 0x4000000000000000
	store float %28, float* %8
	; t
	store float zeroinitializer, float* %9
		%29 = load float, float* %5, align 4
	%30 = fdiv float %29, 0x4000000000000000
	%31 = fsub float 0x0000000000000000, %30
	store float %31, float* %9
	; proj
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %10
		; SelectorExpr
	%32 = load float, float* %6, align 4
	%33 = load float, float* %7, align 4
	%34 = load float, float* %9, align 4
	%35 = load float, float* %8, align 4
	%36 = load float, float* %2, align 4
	%37 = load float, float* %3, align 4
	%38 = call [4 x [4 x float]] @math-8.ortho3d(float %32, float %33, float %34, float %35, float %36, float %37)
	store [4 x [4 x float]] %38, [4 x [4 x float]]* %10
	; ReturnStmt
	; SelectorExpr
	%39 = load [4 x [4 x float]], [4 x [4 x float]]* %10, align 4
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %11
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %11
	; SelectorExpr
	%40 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 0
	%41 = load float, float* %40, align 4
	%42 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, i64 0, i32 1, i32 0
	store float %41, float* %42
	; SelectorExpr
	%43 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 1
	%44 = load float, float* %43, align 4
	%45 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, i64 0, i32 1, i32 1
	store float %44, float* %45
	%46 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %12
	store [4 x [4 x float]] %39, [4 x [4 x float]]* %12
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %13
	store {[0 x <8 x i8>], [3 x float]} %46, {[0 x <8 x i8>], [3 x float]}* %13
	%47 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %12, {[0 x <8 x i8>], [3 x float]}* %13)
	ret [4 x [4 x float]] %47
}

define [4 x [4 x float]] @render-14.CreateViewMatrixFromCamera(%render-14.Camera_t* %camera) {
decls-0:
	%0 = alloca [4 x [4 x float]], align 4
	%1 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%2 = alloca [4 x [4 x float]], align 16
	%3 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%4 = alloca [4 x [4 x float]], align 4
	%5 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%6 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%7 = alloca [4 x [4 x float]], align 16
	%8 = alloca [4 x [4 x float]], align 16
	%9 = load %render-14.Camera_t, %render-14.Camera_t* %camera, align 8
	; view
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %0
		; SelectorExpr
	; SelectorExpr
	%10 = call [4 x [4 x float]] @math-8.mat4_identity()
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %1
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %1
	; SelectorExpr
	%11 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* %camera, i64 0, i32 2
	%12 = load float, float* %11, align 4
	%13 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 0
	store float %12, float* %13
	; SelectorExpr
	%14 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* %camera, i64 0, i32 2
	%15 = load float, float* %14, align 4
	%16 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, i64 0, i32 1, i32 1
	store float %15, float* %16
	%17 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %1, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %2
	store [4 x [4 x float]] %10, [4 x [4 x float]]* %2
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %3
	store {[0 x <8 x i8>], [3 x float]} %17, {[0 x <8 x i8>], [3 x float]}* %3
	%18 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %2, {[0 x <8 x i8>], [3 x float]}* %3)
	store [4 x [4 x float]] %18, [4 x [4 x float]]* %0
	; tr
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %4
		; SelectorExpr
	; SelectorExpr
	%19 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* %camera, i64 0, i32 0
	%20 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %19, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %5
	%21 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %19, i64 0, i32 1, i32 0
	%22 = load float, float* %21, align 4
	%23 = fsub float 0x0000000000000000, %22
	%24 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 0
	store float %23, float* %24
	%25 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %19, i64 0, i32 1, i32 1
	%26 = load float, float* %25, align 4
	%27 = fsub float 0x0000000000000000, %26
	%28 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 1
	store float %27, float* %28
	%29 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %19, i64 0, i32 1, i32 2
	%30 = load float, float* %29, align 4
	%31 = fsub float 0x0000000000000000, %30
	%32 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 2
	store float %31, float* %32
	; vector.arith.end
	%33 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %6
	store {[0 x <8 x i8>], [3 x float]} %33, {[0 x <8 x i8>], [3 x float]}* %6
	%34 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %6)
	store [4 x [4 x float]] %34, [4 x [4 x float]]* %4
	; ReturnStmt
	; SelectorExpr
	%35 = load [4 x [4 x float]], [4 x [4 x float]]* %0, align 4
	%36 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %7
	store [4 x [4 x float]] %35, [4 x [4 x float]]* %7
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %8
	store [4 x [4 x float]] %36, [4 x [4 x float]]* %8
	%37 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %7, [4 x [4 x float]]* %8)
	ret [4 x [4 x float]] %37
}

define void @render-14.Draw(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %gl-10.Program, align 16
	%2 = alloca [4 x [4 x float]], align 4
	%3 = alloca %render-14.Camera_t, align 16
	%4 = alloca [4 x [4 x float]], align 4
	%5 = alloca {i32, i1}, align 4
	%6 = alloca %__Map_Header, align 8
	%7 = alloca %__Map_Key, align 8
	%8 = alloca %__Map_Header, align 16
	%9 = alloca %__Map_Key, align 16
	%10 = alloca [4 x [4 x float]], align 16
	%11 = alloca {i32, i1}, align 4
	%12 = alloca %__Map_Header, align 8
	%13 = alloca %__Map_Key, align 8
	%14 = alloca %__Map_Header, align 16
	%15 = alloca %__Map_Key, align 16
	%16 = alloca [4 x [4 x float]], align 16
	%17 = alloca %gl-10.Program, align 16
	%18 = alloca {i32, i1}, align 4
	%19 = alloca %__Map_Header, align 8
	%20 = alloca %__Map_Key, align 8
	%21 = alloca %__Map_Header, align 16
	%22 = alloca %__Map_Key, align 16
	%23 = alloca [4 x [4 x float]], align 16
	%24 = alloca {i32, i1}, align 4
	%25 = alloca %__Map_Header, align 8
	%26 = alloca %__Map_Key, align 8
	%27 = alloca %__Map_Header, align 16
	%28 = alloca %__Map_Key, align 16
	%29 = alloca [4 x [4 x float]], align 16
	%30 = alloca {i32, i1}, align 4
	%31 = alloca %__Map_Header, align 8
	%32 = alloca %__Map_Key, align 8
	%33 = alloca %__Map_Header, align 16
	%34 = alloca %__Map_Key, align 16
	%35 = alloca %gl-10.Program, align 16
	%36 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%37 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%38 = alloca %gl-10.Program, align 16
	%39 = alloca {i32, i1}, align 4
	%40 = alloca %__Map_Header, align 8
	%41 = alloca %__Map_Key, align 8
	%42 = alloca %__Map_Header, align 16
	%43 = alloca %__Map_Key, align 16
	%44 = alloca [4 x [4 x float]], align 16
	%45 = alloca {i32, i1}, align 4
	%46 = alloca %__Map_Header, align 8
	%47 = alloca %__Map_Key, align 8
	%48 = alloca %__Map_Header, align 16
	%49 = alloca %__Map_Key, align 16
	%50 = alloca [4 x [4 x float]], align 16
	%51 = alloca [4 x [4 x float]], align 16
	%52 = alloca [4 x [4 x float]], align 16
	%53 = alloca %render-14.DrawRegion, align 16
	%54 = alloca %render-14.Camera_t, align 16
	%55 = alloca %gl-10.Program, align 16
	%56 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%57 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; SelectorExpr
	call void @gl-10.Enable(i32 2929)
	; SelectorExpr
	call void @gl-10.Enable(i32 3042)
	; SelectorExpr
	call void @gl-10.DepthFunc(i32 515)
	; SelectorExpr
	call void @gl-10.BlendFunc(i32 770, i32 771)
	; SelectorExpr
	%58 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %1
	store %gl-10.Program %58, %gl-10.Program* %1
	call void @gl-10.UseProgram(%gl-10.Program* %1)
	; SelectorExpr
	%59 = load i32, i32* @render-14.mainvao, align 4
	call void @gl-10.BindVertexArray(i32 %59)
	; view
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %2
		%60 = load %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, align 8
	store %render-14.Camera_t zeroinitializer, %render-14.Camera_t* %3
	store %render-14.Camera_t %60, %render-14.Camera_t* %3
	%61 = call [4 x [4 x float]] @render-14.CreateViewMatrixFromCamera(%render-14.Camera_t* %3)
	store [4 x [4 x float]] %61, [4 x [4 x float]]* %2
	; proj
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %4
		; SelectorExpr
	%62 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%63 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %62, i64 0
	%64 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %63, i64 0, i32 8
	%65 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %64, align 8
	; SelectorExpr
	%66 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%67 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %66, i64 0
	%68 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %67, i64 0, i32 7
	%69 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %68, align 8
	; SelectorExpr
	%70 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 4
	%71 = load float, float* %70, align 4
	; SelectorExpr
	%72 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 3
	%73 = load float, float* %72, align 4
	%74 = bitcast {[0 x <8 x i8>], [2 x float]}* %64 to i64*
	%75 = load i64, i64* %74, align 8
	%76 = bitcast {[0 x <8 x i8>], [2 x float]}* %68 to i64*
	%77 = load i64, i64* %76, align 8
	%78 = call [4 x [4 x float]] @render-14.CalculateOrtho(i64 %75, i64 %77, float %71, float %73)
	store [4 x [4 x float]] %78, [4 x [4 x float]]* %4
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%79 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %5
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	%80 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 0
	%81 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %79 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %81, %raw-6.Dynamic_Map** %80
	%82 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 1
	store i1 true, i1* %82
	%83 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 2
	store i64 40, i64* %83
	%84 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 3
	store i64 8, i64* %84
	%85 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 4
	store i64 32, i64* %85
	%86 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 5
	store i64 4, i64* %86
	%87 = load %__Map_Header, %__Map_Header* %6, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %7
	%88 = getelementptr inbounds %__Map_Key, %__Map_Key* %7, i64 0, i32 0
	store i64 9176635129918533432, i64* %88
	%89 = getelementptr inbounds %__Map_Key, %__Map_Key* %7, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d1, i64 0, i32 0), i64 4}, %..string* %89
	%90 = load %__Map_Key, %__Map_Key* %7, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %8
	store %__Map_Header %87, %__Map_Header* %8
	store %__Map_Key zeroinitializer, %__Map_Key* %9
	store %__Map_Key %90, %__Map_Key* %9
	%91 = call %..rawptr @__dynamic_map_get(%__Map_Header* %8, %__Map_Key* %9)
	%92 = icmp ne %..rawptr %91, null
	%93 = getelementptr inbounds {i32, i1}, {i32, i1}* %5, i64 0, i32 1
	store i1 %92, i1* %93
	br i1 %92, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%94 = getelementptr inbounds {i32, i1}, {i32, i1}* %5, i64 0, i32 0
	%95 = bitcast %..rawptr %91 to i32*
	%96 = load i32, i32* %95, align 4
	store i32 %96, i32* %94
	br label %map.get.done-2

map.get.done-2:
	%97 = getelementptr inbounds {i32, i1}, {i32, i1}* %5, i64 0, i32 0
	%98 = load i32, i32* %97, align 4
	%99 = load [4 x [4 x float]], [4 x [4 x float]]* %2, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %10
	store [4 x [4 x float]] %99, [4 x [4 x float]]* %10
	call void @gl-10.UniformMatrix4fv(i32 %98, [4 x [4 x float]]* %10, i1 false)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%100 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %11
	store %__Map_Header zeroinitializer, %__Map_Header* %12
	%101 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 0
	%102 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %100 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %102, %raw-6.Dynamic_Map** %101
	%103 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 1
	store i1 true, i1* %103
	%104 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 2
	store i64 40, i64* %104
	%105 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 3
	store i64 8, i64* %105
	%106 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 4
	store i64 32, i64* %106
	%107 = getelementptr inbounds %__Map_Header, %__Map_Header* %12, i64 0, i32 5
	store i64 4, i64* %107
	%108 = load %__Map_Header, %__Map_Header* %12, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %13
	%109 = getelementptr inbounds %__Map_Key, %__Map_Key* %13, i64 0, i32 0
	store i64 -5764445782238813962, i64* %109
	%110 = getelementptr inbounds %__Map_Key, %__Map_Key* %13, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d2, i64 0, i32 0), i64 4}, %..string* %110
	%111 = load %__Map_Key, %__Map_Key* %13, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %14
	store %__Map_Header %108, %__Map_Header* %14
	store %__Map_Key zeroinitializer, %__Map_Key* %15
	store %__Map_Key %111, %__Map_Key* %15
	%112 = call %..rawptr @__dynamic_map_get(%__Map_Header* %14, %__Map_Key* %15)
	%113 = icmp ne %..rawptr %112, null
	%114 = getelementptr inbounds {i32, i1}, {i32, i1}* %11, i64 0, i32 1
	store i1 %113, i1* %114
	br i1 %113, label %map.get.then-3, label %map.get.done-4

map.get.then-3:
	%115 = getelementptr inbounds {i32, i1}, {i32, i1}* %11, i64 0, i32 0
	%116 = bitcast %..rawptr %112 to i32*
	%117 = load i32, i32* %116, align 4
	store i32 %117, i32* %115
	br label %map.get.done-4

map.get.done-4:
	%118 = getelementptr inbounds {i32, i1}, {i32, i1}* %11, i64 0, i32 0
	%119 = load i32, i32* %118, align 4
	%120 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %16
	store [4 x [4 x float]] %120, [4 x [4 x float]]* %16
	call void @gl-10.UniformMatrix4fv(i32 %119, [4 x [4 x float]]* %16, i1 false)
	; SelectorExpr
	%121 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %17
	store %gl-10.Program %121, %gl-10.Program* %17
	call void @gl-10.UseProgram(%gl-10.Program* %17)
	; SelectorExpr
	%122 = load i32, i32* @render-14.basicvao, align 4
	call void @gl-10.BindVertexArray(i32 %122)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%123 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %18
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	%124 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 0
	%125 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %123 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %125, %raw-6.Dynamic_Map** %124
	%126 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 1
	store i1 true, i1* %126
	%127 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 2
	store i64 40, i64* %127
	%128 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 3
	store i64 8, i64* %128
	%129 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 4
	store i64 32, i64* %129
	%130 = getelementptr inbounds %__Map_Header, %__Map_Header* %19, i64 0, i32 5
	store i64 4, i64* %130
	%131 = load %__Map_Header, %__Map_Header* %19, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	%132 = getelementptr inbounds %__Map_Key, %__Map_Key* %20, i64 0, i32 0
	store i64 9176635129918533432, i64* %132
	%133 = getelementptr inbounds %__Map_Key, %__Map_Key* %20, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d3, i64 0, i32 0), i64 4}, %..string* %133
	%134 = load %__Map_Key, %__Map_Key* %20, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %21
	store %__Map_Header %131, %__Map_Header* %21
	store %__Map_Key zeroinitializer, %__Map_Key* %22
	store %__Map_Key %134, %__Map_Key* %22
	%135 = call %..rawptr @__dynamic_map_get(%__Map_Header* %21, %__Map_Key* %22)
	%136 = icmp ne %..rawptr %135, null
	%137 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 1
	store i1 %136, i1* %137
	br i1 %136, label %map.get.then-5, label %map.get.done-6

map.get.then-5:
	%138 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 0
	%139 = bitcast %..rawptr %135 to i32*
	%140 = load i32, i32* %139, align 4
	store i32 %140, i32* %138
	br label %map.get.done-6

map.get.done-6:
	%141 = getelementptr inbounds {i32, i1}, {i32, i1}* %18, i64 0, i32 0
	%142 = load i32, i32* %141, align 4
	%143 = load [4 x [4 x float]], [4 x [4 x float]]* %2, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %23
	store [4 x [4 x float]] %143, [4 x [4 x float]]* %23
	call void @gl-10.UniformMatrix4fv(i32 %142, [4 x [4 x float]]* %23, i1 false)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%144 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %24
	store %__Map_Header zeroinitializer, %__Map_Header* %25
	%145 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 0
	%146 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %144 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %146, %raw-6.Dynamic_Map** %145
	%147 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 1
	store i1 true, i1* %147
	%148 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 2
	store i64 40, i64* %148
	%149 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 3
	store i64 8, i64* %149
	%150 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 4
	store i64 32, i64* %150
	%151 = getelementptr inbounds %__Map_Header, %__Map_Header* %25, i64 0, i32 5
	store i64 4, i64* %151
	%152 = load %__Map_Header, %__Map_Header* %25, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %26
	%153 = getelementptr inbounds %__Map_Key, %__Map_Key* %26, i64 0, i32 0
	store i64 -5764445782238813962, i64* %153
	%154 = getelementptr inbounds %__Map_Key, %__Map_Key* %26, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d4, i64 0, i32 0), i64 4}, %..string* %154
	%155 = load %__Map_Key, %__Map_Key* %26, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %27
	store %__Map_Header %152, %__Map_Header* %27
	store %__Map_Key zeroinitializer, %__Map_Key* %28
	store %__Map_Key %155, %__Map_Key* %28
	%156 = call %..rawptr @__dynamic_map_get(%__Map_Header* %27, %__Map_Key* %28)
	%157 = icmp ne %..rawptr %156, null
	%158 = getelementptr inbounds {i32, i1}, {i32, i1}* %24, i64 0, i32 1
	store i1 %157, i1* %158
	br i1 %157, label %map.get.then-7, label %map.get.done-8

map.get.then-7:
	%159 = getelementptr inbounds {i32, i1}, {i32, i1}* %24, i64 0, i32 0
	%160 = bitcast %..rawptr %156 to i32*
	%161 = load i32, i32* %160, align 4
	store i32 %161, i32* %159
	br label %map.get.done-8

map.get.done-8:
	%162 = getelementptr inbounds {i32, i1}, {i32, i1}* %24, i64 0, i32 0
	%163 = load i32, i32* %162, align 4
	%164 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %29
	store [4 x [4 x float]] %164, [4 x [4 x float]]* %29
	call void @gl-10.UniformMatrix4fv(i32 %163, [4 x [4 x float]]* %29, i1 false)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%165 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %30
	store %__Map_Header zeroinitializer, %__Map_Header* %31
	%166 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 0
	%167 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %165 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %167, %raw-6.Dynamic_Map** %166
	%168 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 1
	store i1 true, i1* %168
	%169 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 2
	store i64 40, i64* %169
	%170 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 3
	store i64 8, i64* %170
	%171 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 4
	store i64 32, i64* %171
	%172 = getelementptr inbounds %__Map_Header, %__Map_Header* %31, i64 0, i32 5
	store i64 4, i64* %172
	%173 = load %__Map_Header, %__Map_Header* %31, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %32
	%174 = getelementptr inbounds %__Map_Key, %__Map_Key* %32, i64 0, i32 0
	store i64 3769135706557701272, i64* %174
	%175 = getelementptr inbounds %__Map_Key, %__Map_Key* %32, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3d5, i64 0, i32 0), i64 5}, %..string* %175
	%176 = load %__Map_Key, %__Map_Key* %32, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %33
	store %__Map_Header %173, %__Map_Header* %33
	store %__Map_Key zeroinitializer, %__Map_Key* %34
	store %__Map_Key %176, %__Map_Key* %34
	%177 = call %..rawptr @__dynamic_map_get(%__Map_Header* %33, %__Map_Key* %34)
	%178 = icmp ne %..rawptr %177, null
	%179 = getelementptr inbounds {i32, i1}, {i32, i1}* %30, i64 0, i32 1
	store i1 %178, i1* %179
	br i1 %178, label %map.get.then-9, label %map.get.done-10

map.get.then-9:
	%180 = getelementptr inbounds {i32, i1}, {i32, i1}* %30, i64 0, i32 0
	%181 = bitcast %..rawptr %177 to i32*
	%182 = load i32, i32* %181, align 4
	store i32 %182, i32* %180
	br label %map.get.done-10

map.get.done-10:
	%183 = getelementptr inbounds {i32, i1}, {i32, i1}* %30, i64 0, i32 0
	%184 = load i32, i32* %183, align 4
	call void @gl-10.Uniform-794(i32 %184, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000)
	%185 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	; SelectorExpr
	; SelectorExpr
	%186 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%187 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %186, i64 0
	%188 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %187, i64 0, i32 5
	%189 = load %time-15.Data_t*, %time-15.Data_t** %188, align 8
	%190 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %189, i64 0
	%191 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %190, i64 0, i32 3
	%192 = load double, double* %191, align 8
	%193 = fmul double %192, 0x4034000000000000
	%194 = fptrunc double %193 to float
	store %gl-10.Program zeroinitializer, %gl-10.Program* %35
	store %gl-10.Program %185, %gl-10.Program* %35
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %36
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %36
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %37
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x3fe0000000000000, float 0x3fe0000000000000, float 0x3fe0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %37
	call void @render-14.Draw.TestRender-0(%gl-10.Program* %35, {[0 x <8 x i8>], [3 x float]}* %36, float %194, {[0 x <8 x i8>], [3 x float]}* %37)
	; SelectorExpr
	%195 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %38
	store %gl-10.Program %195, %gl-10.Program* %38
	call void @gl-10.UseProgram(%gl-10.Program* %38)
	; SelectorExpr
	%196 = load i32, i32* @render-14.mainvao, align 4
	call void @gl-10.BindVertexArray(i32 %196)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%197 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %39
	store %__Map_Header zeroinitializer, %__Map_Header* %40
	%198 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 0
	%199 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %197 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %199, %raw-6.Dynamic_Map** %198
	%200 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 1
	store i1 true, i1* %200
	%201 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 2
	store i64 40, i64* %201
	%202 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 3
	store i64 8, i64* %202
	%203 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 4
	store i64 32, i64* %203
	%204 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 5
	store i64 4, i64* %204
	%205 = load %__Map_Header, %__Map_Header* %40, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %41
	%206 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 0
	store i64 9176635129918533432, i64* %206
	%207 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d6, i64 0, i32 0), i64 4}, %..string* %207
	%208 = load %__Map_Key, %__Map_Key* %41, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %42
	store %__Map_Header %205, %__Map_Header* %42
	store %__Map_Key zeroinitializer, %__Map_Key* %43
	store %__Map_Key %208, %__Map_Key* %43
	%209 = call %..rawptr @__dynamic_map_get(%__Map_Header* %42, %__Map_Key* %43)
	%210 = icmp ne %..rawptr %209, null
	%211 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 1
	store i1 %210, i1* %211
	br i1 %210, label %map.get.then-11, label %map.get.done-12

map.get.then-11:
	%212 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 0
	%213 = bitcast %..rawptr %209 to i32*
	%214 = load i32, i32* %213, align 4
	store i32 %214, i32* %212
	br label %map.get.done-12

map.get.done-12:
	%215 = getelementptr inbounds {i32, i1}, {i32, i1}* %39, i64 0, i32 0
	%216 = load i32, i32* %215, align 4
	%217 = load [4 x [4 x float]], [4 x [4 x float]]* %2, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %44
	store [4 x [4 x float]] %217, [4 x [4 x float]]* %44
	call void @gl-10.UniformMatrix4fv(i32 %216, [4 x [4 x float]]* %44, i1 false)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%218 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %45
	store %__Map_Header zeroinitializer, %__Map_Header* %46
	%219 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 0
	%220 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %218 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %220, %raw-6.Dynamic_Map** %219
	%221 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 1
	store i1 true, i1* %221
	%222 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 2
	store i64 40, i64* %222
	%223 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 3
	store i64 8, i64* %223
	%224 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 4
	store i64 32, i64* %224
	%225 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 5
	store i64 4, i64* %225
	%226 = load %__Map_Header, %__Map_Header* %46, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %47
	%227 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 0
	store i64 -5764445782238813962, i64* %227
	%228 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3d7, i64 0, i32 0), i64 4}, %..string* %228
	%229 = load %__Map_Key, %__Map_Key* %47, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %48
	store %__Map_Header %226, %__Map_Header* %48
	store %__Map_Key zeroinitializer, %__Map_Key* %49
	store %__Map_Key %229, %__Map_Key* %49
	%230 = call %..rawptr @__dynamic_map_get(%__Map_Header* %48, %__Map_Key* %49)
	%231 = icmp ne %..rawptr %230, null
	%232 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 1
	store i1 %231, i1* %232
	br i1 %231, label %map.get.then-13, label %map.get.done-14

map.get.then-13:
	%233 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%234 = bitcast %..rawptr %230 to i32*
	%235 = load i32, i32* %234, align 4
	store i32 %235, i32* %233
	br label %map.get.done-14

map.get.done-14:
	%236 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%237 = load i32, i32* %236, align 4
	%238 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %50
	store [4 x [4 x float]] %238, [4 x [4 x float]]* %50
	call void @gl-10.UniformMatrix4fv(i32 %237, [4 x [4 x float]]* %50, i1 false)
	; SelectorExpr
	%239 = load i32, i32* @render-14.cursorT, align 4
	call void @gl-10.BindTexture(i32 3553, i32 %239)
	%240 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	; SelectorExpr
	; SelectorExpr
	%241 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%242 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %241, i64 0
	%243 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %242, i64 0, i32 1
	%244 = load %input-19.Input_t*, %input-19.Input_t** %243, align 8
	%245 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %244, i64 0
	%246 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %245, i64 0, i32 3
	%247 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %246, align 8
	%248 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	%249 = load [4 x [4 x float]], [4 x [4 x float]]* %2, align 4
	; SelectorExpr
	%250 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%251 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %250, i64 0
	%252 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %251, i64 0, i32 9
	%253 = load %render-14.DrawRegion, %render-14.DrawRegion* %252, align 4
	%254 = load %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, align 8
	%255 = bitcast {[0 x <8 x i8>], [2 x float]}* %246 to i64*
	%256 = load i64, i64* %255, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %51
	store [4 x [4 x float]] %248, [4 x [4 x float]]* %51
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %52
	store [4 x [4 x float]] %249, [4 x [4 x float]]* %52
	store %render-14.DrawRegion zeroinitializer, %render-14.DrawRegion* %53
	store %render-14.DrawRegion %253, %render-14.DrawRegion* %53
	store %render-14.Camera_t zeroinitializer, %render-14.Camera_t* %54
	store %render-14.Camera_t %254, %render-14.Camera_t* %54
	%257 = call {[0 x <8 x i8>], [3 x float]} @render-14.Draw.ScreenToWorld-2(i64 %256, [4 x [4 x float]]* %51, [4 x [4 x float]]* %52, %render-14.DrawRegion* %53, %render-14.Camera_t* %54)
	; SelectorExpr
	; SelectorExpr
	%258 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%259 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %258, i64 0
	%260 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %259, i64 0, i32 5
	%261 = load %time-15.Data_t*, %time-15.Data_t** %260, align 8
	%262 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %261, i64 0
	%263 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %262, i64 0, i32 3
	%264 = load double, double* %263, align 8
	%265 = fmul double %264, 0x4069000000000000
	%266 = fptrunc double %265 to float
	store %gl-10.Program zeroinitializer, %gl-10.Program* %55
	store %gl-10.Program %240, %gl-10.Program* %55
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %56
	store {[0 x <8 x i8>], [3 x float]} %257, {[0 x <8 x i8>], [3 x float]}* %56
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %57
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x3fd9999980000000, float 0x3fd9999980000000, float 0x3fd9999980000000]}, {[0 x <8 x i8>], [3 x float]}* %57
	call void @render-14.Draw.TestRender-0(%gl-10.Program* %55, {[0 x <8 x i8>], [3 x float]}* %56, float %266, {[0 x <8 x i8>], [3 x float]}* %57)
	ret void
}

define void @render-14.Draw.TestRender-0(%gl-10.Program* %program, {[0 x <8 x i8>], [3 x float]}* %pos, float %angle, {[0 x <8 x i8>], [3 x float]}* %scale) {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca [4 x [4 x float]], align 4
	%2 = alloca [4 x [4 x float]], align 16
	%3 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%4 = alloca [4 x [4 x float]], align 4
	%5 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%6 = alloca [4 x [4 x float]], align 4
	%7 = alloca [4 x [4 x float]], align 16
	%8 = alloca [4 x [4 x float]], align 16
	%9 = alloca [4 x [4 x float]], align 4
	%10 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%11 = alloca [4 x [4 x float]], align 16
	%12 = alloca [4 x [4 x float]], align 16
	%13 = alloca [4 x [4 x float]], align 4
	%14 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%15 = alloca [4 x [4 x float]], align 16
	%16 = alloca [4 x [4 x float]], align 16
	%17 = alloca {i32, i1}, align 4
	%18 = alloca %__Map_Header, align 8
	%19 = alloca %__Map_Key, align 8
	%20 = alloca %__Map_Header, align 16
	%21 = alloca %__Map_Key, align 16
	%22 = alloca [4 x [4 x float]], align 16
	%23 = load %gl-10.Program, %gl-10.Program* %program, align 8
	%24 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %pos, align 8
	store float zeroinitializer, float* %0
		store float %angle, float* %0
	%25 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %scale, align 8
	; matScale
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %1
		; SelectorExpr
	; SelectorExpr
	%26 = call [4 x [4 x float]] @math-8.mat4_identity()
	%27 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %scale, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %2
	store [4 x [4 x float]] %26, [4 x [4 x float]]* %2
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %3
	store {[0 x <8 x i8>], [3 x float]} %27, {[0 x <8 x i8>], [3 x float]}* %3
	%28 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %2, {[0 x <8 x i8>], [3 x float]}* %3)
	store [4 x [4 x float]] %28, [4 x [4 x float]]* %1
	; rotation
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %4
		; SelectorExpr
	; SelectorExpr
	%29 = load float, float* %0, align 4
	%30 = call float @math-8.to_radians(float %29)
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %5
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %5
	%31 = call [4 x [4 x float]] @math-8.mat4_rotate({[0 x <8 x i8>], [3 x float]}* %5, float %30)
	store [4 x [4 x float]] %31, [4 x [4 x float]]* %4
	; model
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %6
		; SelectorExpr
	%32 = load [4 x [4 x float]], [4 x [4 x float]]* %1, align 4
	%33 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %7
	store [4 x [4 x float]] %32, [4 x [4 x float]]* %7
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %8
	store [4 x [4 x float]] %33, [4 x [4 x float]]* %8
	%34 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %7, [4 x [4 x float]]* %8)
	store [4 x [4 x float]] %34, [4 x [4 x float]]* %6
	; offset
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %9
		; SelectorExpr
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %10
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0xbfe0000000000000, float 0xbfe0000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %10
	%35 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %10)
	store [4 x [4 x float]] %35, [4 x [4 x float]]* %9
	; AssignStmt
	; SelectorExpr
	%36 = load [4 x [4 x float]], [4 x [4 x float]]* %6, align 4
	%37 = load [4 x [4 x float]], [4 x [4 x float]]* %9, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %11
	store [4 x [4 x float]] %36, [4 x [4 x float]]* %11
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %12
	store [4 x [4 x float]] %37, [4 x [4 x float]]* %12
	%38 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %11, [4 x [4 x float]]* %12)
	store [4 x [4 x float]] %38, [4 x [4 x float]]* %6
	; translation
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %13
		; SelectorExpr
	%39 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %pos, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %14
	store {[0 x <8 x i8>], [3 x float]} %39, {[0 x <8 x i8>], [3 x float]}* %14
	%40 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %14)
	store [4 x [4 x float]] %40, [4 x [4 x float]]* %13
	; AssignStmt
	; SelectorExpr
	%41 = load [4 x [4 x float]], [4 x [4 x float]]* %13, align 4
	%42 = load [4 x [4 x float]], [4 x [4 x float]]* %6, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %15
	store [4 x [4 x float]] %41, [4 x [4 x float]]* %15
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %16
	store [4 x [4 x float]] %42, [4 x [4 x float]]* %16
	%43 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %15, [4 x [4 x float]]* %16)
	store [4 x [4 x float]] %43, [4 x [4 x float]]* %6
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%44 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %program, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %17
	store %__Map_Header zeroinitializer, %__Map_Header* %18
	%45 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 0
	%46 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %44 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %46, %raw-6.Dynamic_Map** %45
	%47 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 1
	store i1 true, i1* %47
	%48 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 2
	store i64 40, i64* %48
	%49 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 3
	store i64 8, i64* %49
	%50 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 4
	store i64 32, i64* %50
	%51 = getelementptr inbounds %__Map_Header, %__Map_Header* %18, i64 0, i32 5
	store i64 4, i64* %51
	%52 = load %__Map_Header, %__Map_Header* %18, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %19
	%53 = getelementptr inbounds %__Map_Key, %__Map_Key* %19, i64 0, i32 0
	store i64 6747846868581204634, i64* %53
	%54 = getelementptr inbounds %__Map_Key, %__Map_Key* %19, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3d8, i64 0, i32 0), i64 5}, %..string* %54
	%55 = load %__Map_Key, %__Map_Key* %19, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %20
	store %__Map_Header %52, %__Map_Header* %20
	store %__Map_Key zeroinitializer, %__Map_Key* %21
	store %__Map_Key %55, %__Map_Key* %21
	%56 = call %..rawptr @__dynamic_map_get(%__Map_Header* %20, %__Map_Key* %21)
	%57 = icmp ne %..rawptr %56, null
	%58 = getelementptr inbounds {i32, i1}, {i32, i1}* %17, i64 0, i32 1
	store i1 %57, i1* %58
	br i1 %57, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%59 = getelementptr inbounds {i32, i1}, {i32, i1}* %17, i64 0, i32 0
	%60 = bitcast %..rawptr %56 to i32*
	%61 = load i32, i32* %60, align 4
	store i32 %61, i32* %59
	br label %map.get.done-2

map.get.done-2:
	%62 = getelementptr inbounds {i32, i1}, {i32, i1}* %17, i64 0, i32 0
	%63 = load i32, i32* %62, align 4
	%64 = load [4 x [4 x float]], [4 x [4 x float]]* %6, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %22
	store [4 x [4 x float]] %64, [4 x [4 x float]]* %22
	call void @gl-10.UniformMatrix4fv(i32 %63, [4 x [4 x float]]* %22, i1 false)
	; SelectorExpr
	call void @gl-10.DrawElements(i32 4, i32 6, i32 5125, %..rawptr zeroinitializer)
	ret void
}

define float @render-14.Draw.MapToRange-1(float %t, float %min, float %max) {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	store float zeroinitializer, float* %0
		store float %t, float* %0
	store float zeroinitializer, float* %1
		store float %min, float* %1
	store float zeroinitializer, float* %2
		store float %max, float* %2
	; ReturnStmt
	%3 = load float, float* %0, align 4
	%4 = load float, float* %1, align 4
	%5 = fsub float %3, %4
	%6 = load float, float* %2, align 4
	%7 = load float, float* %1, align 4
	%8 = fsub float %6, %7
	%9 = fdiv float %5, %8
	ret float %9
}

define {[0 x <8 x i8>], [3 x float]} @render-14.Draw.ScreenToWorld-2(i64 %screenPos, [4 x [4 x float]]* %proj, [4 x [4 x float]]* %view, %render-14.DrawRegion* %area, %render-14.Camera_t* %cam) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%4 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%5 = alloca [4 x [4 x float]], align 16
	%6 = alloca [4 x [4 x float]], align 16
	%7 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%8 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%9 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%10 = alloca [4 x [4 x float]], align 16
	%11 = alloca [4 x [4 x float]], align 16
	%12 = alloca {[0 x <16 x i8>], [4 x float]}, align 16
	%13 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %0
		%14 = bitcast {[0 x <8 x i8>], [2 x float]}* %0 to i64*
	store i64 %screenPos, i64* %14
	%15 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
	%16 = load [4 x [4 x float]], [4 x [4 x float]]* %proj, align 4
	%17 = load [4 x [4 x float]], [4 x [4 x float]]* %view, align 4
	%18 = load %render-14.DrawRegion, %render-14.DrawRegion* %area, align 4
	%19 = load %render-14.Camera_t, %render-14.Camera_t* %cam, align 8
	; u
	store float zeroinitializer, float* %1
		; SelectorExpr
	%20 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 0
	%21 = load float, float* %20, align 4
	; SelectorExpr
	%22 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 0
	%23 = load i32, i32* %22, align 4
	%24 = sitofp i32 %23 to float
	; SelectorExpr
	%25 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 0
	%26 = load i32, i32* %25, align 4
	; SelectorExpr
	%27 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 2
	%28 = load i32, i32* %27, align 4
	%29 = add i32 %26, %28
	%30 = sitofp i32 %29 to float
	%31 = call float @render-14.Draw.MapToRange-1(float %21, float %24, float %30)
	store float %31, float* %1
	; v
	store float zeroinitializer, float* %2
		; SelectorExpr
	%32 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%33 = load float, float* %32, align 4
	; SelectorExpr
	%34 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 1
	%35 = load i32, i32* %34, align 4
	%36 = sitofp i32 %35 to float
	; SelectorExpr
	%37 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 1
	%38 = load i32, i32* %37, align 4
	; SelectorExpr
	%39 = getelementptr inbounds %render-14.DrawRegion, %render-14.DrawRegion* %area, i64 0, i32 3
	%40 = load i32, i32* %39, align 4
	%41 = add i32 %38, %40
	%42 = sitofp i32 %41 to float
	%43 = call float @render-14.Draw.MapToRange-1(float %33, float %36, float %42)
	store float %43, float* %2
	; p
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %3
		; CompoundLit
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %4
	store {[0 x <16 x i8>], [4 x float]} {[0 x <16 x i8>] zeroinitializer, [4 x float][float zeroinitializer, float zeroinitializer, float 0xbff0000000000000, float 0x3ff0000000000000]}, {[0 x <16 x i8>], [4 x float]}* %4
	%44 = load float, float* %1, align 4
	%45 = fmul float %44, 0x4000000000000000
	%46 = fsub float %45, 0x3ff0000000000000
	%47 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %4, i64 0, i32 1, i32 0
	store float %46, float* %47
	%48 = load float, float* %2, align 4
	%49 = fmul float %48, 0x4000000000000000
	%50 = fsub float %49, 0x3ff0000000000000
	%51 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %4, i64 0, i32 1, i32 1
	store float %50, float* %51
	%52 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %4, align 16
	store {[0 x <16 x i8>], [4 x float]} %52, {[0 x <16 x i8>], [4 x float]}* %3
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%53 = load [4 x [4 x float]], [4 x [4 x float]]* %proj, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %5
	store [4 x [4 x float]] %53, [4 x [4 x float]]* %5
	%54 = call [4 x [4 x float]] @math-8.inverse([4 x [4 x float]]* %5)
	%55 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %3, align 16
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %6
	store [4 x [4 x float]] %54, [4 x [4 x float]]* %6
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %7
	store {[0 x <16 x i8>], [4 x float]} %55, {[0 x <16 x i8>], [4 x float]}* %7
	%56 = call {[0 x <16 x i8>], [4 x float]} @math-8.mul-339([4 x [4 x float]]* %6, {[0 x <16 x i8>], [4 x float]}* %7)
	store {[0 x <16 x i8>], [4 x float]} %56, {[0 x <16 x i8>], [4 x float]}* %3
	; AssignStmt
	; CompoundLit
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %8
	store {[0 x <16 x i8>], [4 x float]} {[0 x <16 x i8>] zeroinitializer, [4 x float][float zeroinitializer, float zeroinitializer, float 0xbff0000000000000, float 0x0000000000000000]}, {[0 x <16 x i8>], [4 x float]}* %8
	; SelectorExpr
	%57 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %3, i64 0, i32 1, i32 0
	%58 = load float, float* %57, align 4
	%59 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %8, i64 0, i32 1, i32 0
	store float %58, float* %59
	; SelectorExpr
	%60 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %3, i64 0, i32 1, i32 1
	%61 = load float, float* %60, align 4
	%62 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %8, i64 0, i32 1, i32 1
	store float %61, float* %62
	%63 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %8, align 16
	store {[0 x <16 x i8>], [4 x float]} %63, {[0 x <16 x i8>], [4 x float]}* %3
	; world
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %9
		; SelectorExpr
	; SelectorExpr
	%64 = load [4 x [4 x float]], [4 x [4 x float]]* %view, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %10
	store [4 x [4 x float]] %64, [4 x [4 x float]]* %10
	%65 = call [4 x [4 x float]] @math-8.inverse([4 x [4 x float]]* %10)
	%66 = load {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %3, align 16
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %11
	store [4 x [4 x float]] %65, [4 x [4 x float]]* %11
	store {[0 x <16 x i8>], [4 x float]} zeroinitializer, {[0 x <16 x i8>], [4 x float]}* %12
	store {[0 x <16 x i8>], [4 x float]} %66, {[0 x <16 x i8>], [4 x float]}* %12
	%67 = call {[0 x <16 x i8>], [4 x float]} @math-8.mul-339([4 x [4 x float]]* %11, {[0 x <16 x i8>], [4 x float]}* %12)
	store {[0 x <16 x i8>], [4 x float]} %67, {[0 x <16 x i8>], [4 x float]}* %9
	; ReturnStmt
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %13
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %13
	; SelectorExpr
	%68 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %9, i64 0, i32 1, i32 0
	%69 = load float, float* %68, align 4
	; SelectorExpr
	; SelectorExpr
	%70 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* %cam, i64 0, i32 0
	%71 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %70, i64 0, i32 1, i32 0
	%72 = load float, float* %71, align 4
	%73 = fadd float %69, %72
	%74 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 0
	store float %73, float* %74
	; SelectorExpr
	%75 = getelementptr inbounds {[0 x <16 x i8>], [4 x float]}, {[0 x <16 x i8>], [4 x float]}* %9, i64 0, i32 1, i32 1
	%76 = load float, float* %75, align 4
	%77 = fsub float 0x0000000000000000, %76
	; SelectorExpr
	; SelectorExpr
	%78 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* %cam, i64 0, i32 0
	%79 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %78, i64 0, i32 1, i32 1
	%80 = load float, float* %79, align 4
	%81 = fadd float %77, %80
	%82 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 1
	store float %81, float* %82
	%83 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, align 8
	ret {[0 x <8 x i8>], [3 x float]} %83
}

define void @render-14.Init(%catalog-16.Catalog* %shaderCat, %catalog-16.Catalog* %textureCat) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %catalog-16.Catalog*, align 8
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %shaderCat, %catalog-16.Catalog** %0
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %1
		store %catalog-16.Catalog* %textureCat, %catalog-16.Catalog** %1
	; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 0
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x0000000000000000, float 0x402e000000000000]}, {[0 x <8 x i8>], [3 x float]}* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 2
	store float 0x4049000000000000, float* %3
	; AssignStmt
	; SelectorExpr
	%4 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 3
	store float 0x3fb9999980000000, float* %4
	; AssignStmt
	; SelectorExpr
	%5 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 4
	store float 0x4049000000000000, float* %5
	; AssignStmt
	; SelectorExpr
	%6 = getelementptr inbounds %render-14.Camera_t, %render-14.Camera_t* @render-14.Camera, i64 0, i32 1
	store float 0x4046800000000000, float* %6
	%7 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%8 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	call void @render-14.Test(%catalog-16.Catalog* %7, %catalog-16.Catalog* %8)
	%9 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	call void @render-14.Test2(%catalog-16.Catalog* %9)
	ret void
}

define void @render-14.Test2(%catalog-16.Catalog* %shaderCat) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %asset-25.Asset*, align 8
	%2 = alloca i64, align 8
	%3 = alloca %asset-25.Asset*, align 8
	%4 = alloca i64, align 8
	%5 = alloca %asset-25.Asset.Shader*, align 8
	%6 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%7 = alloca %asset-25.Asset.Shader*, align 8
	%8 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%9 = alloca %asset-25.Asset.Shader, align 16
	%10 = alloca %asset-25.Asset.Shader, align 16
	%11 = alloca %gl-10.Program, align 16
	%12 = alloca i32, align 4
	%13 = alloca i32, align 4
	%14 = alloca [12 x float], align 4
	%15 = alloca [6 x i32], align 4
	%16 = alloca %gl-10.Program, align 16
	%17 = alloca %__Map_Header, align 8
	%18 = alloca %__Map_Key, align 8
	%19 = alloca i32, align 4
	%20 = alloca %__Map_Header, align 16
	%21 = alloca %__Map_Key, align 16
	%22 = alloca %gl-10.Program, align 16
	%23 = alloca %__Map_Header, align 8
	%24 = alloca %__Map_Key, align 8
	%25 = alloca i32, align 4
	%26 = alloca %__Map_Header, align 16
	%27 = alloca %__Map_Key, align 16
	%28 = alloca %gl-10.Program, align 16
	%29 = alloca %__Map_Header, align 8
	%30 = alloca %__Map_Key, align 8
	%31 = alloca i32, align 4
	%32 = alloca %__Map_Header, align 16
	%33 = alloca %__Map_Key, align 16
	%34 = alloca %gl-10.Program, align 16
	%35 = alloca %__Map_Header, align 8
	%36 = alloca %__Map_Key, align 8
	%37 = alloca i32, align 4
	%38 = alloca %__Map_Header, align 16
	%39 = alloca %__Map_Key, align 16
	%40 = alloca %gl-10.Program, align 16
	%41 = alloca %__Map_Header, align 8
	%42 = alloca %__Map_Key, align 8
	%43 = alloca i32, align 4
	%44 = alloca %__Map_Header, align 16
	%45 = alloca %__Map_Key, align 16
	%46 = alloca {i32, i1}, align 4
	%47 = alloca %__Map_Header, align 8
	%48 = alloca %__Map_Key, align 8
	%49 = alloca %__Map_Header, align 16
	%50 = alloca %__Map_Key, align 16
	%51 = alloca {i32, i1}, align 4
	%52 = alloca %__Map_Header, align 8
	%53 = alloca %__Map_Key, align 8
	%54 = alloca %__Map_Header, align 16
	%55 = alloca %__Map_Key, align 16
	%56 = alloca %gl-10.Program, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %shaderCat, %catalog-16.Catalog** %0
	; vertexAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %1
		; ok1
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%57 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%58 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %57, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$3d9, i64 0, i32 0), i64 10})
	%59 = extractvalue {%asset-25.Asset*, i64} %58, 0
	%60 = extractvalue {%asset-25.Asset*, i64} %58, 1
	store %asset-25.Asset* %59, %asset-25.Asset** %1
	store i64 %60, i64* %2
	; fragAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %3
		; ok2
	store i64 zeroinitializer, i64* %4
		; SelectorExpr
	%61 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%62 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %61, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$3da, i64 0, i32 0), i64 10})
	%63 = extractvalue {%asset-25.Asset*, i64} %62, 0
	%64 = extractvalue {%asset-25.Asset*, i64} %62, 1
	store %asset-25.Asset* %63, %asset-25.Asset** %3
	store i64 %64, i64* %4
	; vertex
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %5
		%65 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %6
	%66 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %65, i64 0, i32 4 ; UnionTagPtr
	%67 = load i64, i64* %66, align 8
	%68 = icmp eq i64 %67, 2
	br i1 %68, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%69 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %6, i64 0, i32 0
	%70 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %6, i64 0, i32 1
	%71 = bitcast %asset-25.Asset* %65 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %71, %asset-25.Asset.Shader** %69
	store i1 true, i1* %70
	br label %union_cast.end-2

union_cast.end-2:
	%72 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %6, i64 0, i32 1
	%73 = load i1, i1* %72, align 1
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%75 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %73, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3db, i64 0, i32 0), i64 28}, i64 169, i64 15, %Type_Info* %74, %Type_Info* %75)
	%76 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %6, i64 0, i32 0
	%77 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %76, align 8
	store %asset-25.Asset.Shader* %77, %asset-25.Asset.Shader** %5
	; frag
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %7
		%78 = load %asset-25.Asset*, %asset-25.Asset** %3, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %8
	%79 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %78, i64 0, i32 4 ; UnionTagPtr
	%80 = load i64, i64* %79, align 8
	%81 = icmp eq i64 %80, 2
	br i1 %81, label %union_cast.ok-3, label %union_cast.end-4

union_cast.ok-3:
	%82 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %8, i64 0, i32 0
	%83 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %8, i64 0, i32 1
	%84 = bitcast %asset-25.Asset* %78 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %84, %asset-25.Asset.Shader** %82
	store i1 true, i1* %83
	br label %union_cast.end-4

union_cast.end-4:
	%85 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %8, i64 0, i32 1
	%86 = load i1, i1* %85, align 1
	%87 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%88 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %86, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3dc, i64 0, i32 0), i64 28}, i64 170, i64 13, %Type_Info* %87, %Type_Info* %88)
	%89 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %8, i64 0, i32 0
	%90 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %89, align 8
	store %asset-25.Asset.Shader* %90, %asset-25.Asset.Shader** %7
	; AssignStmt
	; SelectorExpr
	%91 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %5, align 8
	%92 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %91, i64 0
	%93 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %92, align 8
	%94 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %7, align 8
	%95 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %94, i64 0
	%96 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %95, align 8
	store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %9
	store %asset-25.Asset.Shader %93, %asset-25.Asset.Shader* %9
	store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %10
	store %asset-25.Asset.Shader %96, %asset-25.Asset.Shader* %10
	%97 = call %gl-10.Program @gl_util-39.CreateProgram(%asset-25.Asset.Shader* %9, %asset-25.Asset.Shader* %10)
	store %gl-10.Program %97, %gl-10.Program* @render-14.basicProgram
	; SelectorExpr
	%98 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %11
	store %gl-10.Program %98, %gl-10.Program* %11
	call void @gl-10.UseProgram(%gl-10.Program* %11)
	; AssignStmt
	; SelectorExpr
	%99 = call i32 @gl-10.GenVertexArray()
	store i32 %99, i32* @render-14.basicvao
	; SelectorExpr
	%100 = load i32, i32* @render-14.basicvao, align 4
	call void @gl-10.BindVertexArray(i32 %100)
	; vbo
	store i32 zeroinitializer, i32* %12
		; SelectorExpr
	%101 = call i32 @gl-10.GenVBO()
	store i32 %101, i32* %12
	; SelectorExpr
	%102 = load i32, i32* %12, align 4
	call void @gl-10.BindBuffer-779(i32 %102)
	; ebo
	store i32 zeroinitializer, i32* %13
		; SelectorExpr
	%103 = call i32 @gl-10.GenEBO()
	store i32 %103, i32* %13
	; SelectorExpr
	%104 = load i32, i32* %13, align 4
	call void @gl-10.BindBuffer-780(i32 %104)
	; vertices
	store [12 x float] zeroinitializer, [12 x float]* %14
		store [12 x float] [float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000], [12 x float]* %14
	; elements
	store [6 x i32] zeroinitializer, [6 x i32]* %15
		store [6 x i32] [i32 0, i32 1, i32 3, i32 1, i32 2, i32 3], [6 x i32]* %15
	; SelectorExpr
	; IndexExpr
	%105 = getelementptr inbounds [12 x float], [12 x float]* %14, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3dd, i64 0, i32 0), i64 28}, i64 195, i64 76, i64 0, i64 12)
	%106 = getelementptr inbounds float, float* %105, i64 0
	%107 = bitcast float* %106 to %..rawptr
	call void @gl-10.BufferData-773(i32 34962, i32 48, %..rawptr %107, i32 35044)
	; SelectorExpr
	; IndexExpr
	%108 = getelementptr inbounds [6 x i32], [6 x i32]* %15, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3de, i64 0, i32 0), i64 28}, i64 196, i64 83, i64 0, i64 6)
	%109 = getelementptr inbounds i32, i32* %108, i64 0
	%110 = bitcast i32* %109 to %..rawptr
	call void @gl-10.BufferData-773(i32 34963, i32 24, %..rawptr %110, i32 35044)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%111 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	; SelectorExpr
	%112 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %16
	store %gl-10.Program %112, %gl-10.Program* %16
	%113 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %16, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3df, i64 0, i32 0), i64 5})
	store %__Map_Header zeroinitializer, %__Map_Header* %17
	%114 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 0
	%115 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %111 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %115, %raw-6.Dynamic_Map** %114
	%116 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 1
	store i1 true, i1* %116
	%117 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 2
	store i64 40, i64* %117
	%118 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 3
	store i64 8, i64* %118
	%119 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 4
	store i64 32, i64* %119
	%120 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 5
	store i64 4, i64* %120
	%121 = load %__Map_Header, %__Map_Header* %17, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %18
	%122 = getelementptr inbounds %__Map_Key, %__Map_Key* %18, i64 0, i32 0
	store i64 6747846868581204634, i64* %122
	%123 = getelementptr inbounds %__Map_Key, %__Map_Key* %18, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3e0, i64 0, i32 0), i64 5}, %..string* %123
	%124 = load %__Map_Key, %__Map_Key* %18, align 8
	store i32 zeroinitializer, i32* %19
	store i32 %113, i32* %19
	%125 = bitcast i32* %19 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %20
	store %__Map_Header %121, %__Map_Header* %20
	store %__Map_Key zeroinitializer, %__Map_Key* %21
	store %__Map_Key %124, %__Map_Key* %21
	call void @__dynamic_map_set(%__Map_Header* %20, %__Map_Key* %21, %..rawptr %125)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%126 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	; SelectorExpr
	%127 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %22
	store %gl-10.Program %127, %gl-10.Program* %22
	%128 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %22, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3e1, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %23
	%129 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 0
	%130 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %126 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %130, %raw-6.Dynamic_Map** %129
	%131 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 1
	store i1 true, i1* %131
	%132 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 2
	store i64 40, i64* %132
	%133 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 3
	store i64 8, i64* %133
	%134 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 4
	store i64 32, i64* %134
	%135 = getelementptr inbounds %__Map_Header, %__Map_Header* %23, i64 0, i32 5
	store i64 4, i64* %135
	%136 = load %__Map_Header, %__Map_Header* %23, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %24
	%137 = getelementptr inbounds %__Map_Key, %__Map_Key* %24, i64 0, i32 0
	store i64 9176635129918533432, i64* %137
	%138 = getelementptr inbounds %__Map_Key, %__Map_Key* %24, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3e2, i64 0, i32 0), i64 4}, %..string* %138
	%139 = load %__Map_Key, %__Map_Key* %24, align 8
	store i32 zeroinitializer, i32* %25
	store i32 %128, i32* %25
	%140 = bitcast i32* %25 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %26
	store %__Map_Header %136, %__Map_Header* %26
	store %__Map_Key zeroinitializer, %__Map_Key* %27
	store %__Map_Key %139, %__Map_Key* %27
	call void @__dynamic_map_set(%__Map_Header* %26, %__Map_Key* %27, %..rawptr %140)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%141 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	; SelectorExpr
	%142 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %28
	store %gl-10.Program %142, %gl-10.Program* %28
	%143 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %28, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3e3, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %29
	%144 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 0
	%145 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %141 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %145, %raw-6.Dynamic_Map** %144
	%146 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 1
	store i1 true, i1* %146
	%147 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 2
	store i64 40, i64* %147
	%148 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 3
	store i64 8, i64* %148
	%149 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 4
	store i64 32, i64* %149
	%150 = getelementptr inbounds %__Map_Header, %__Map_Header* %29, i64 0, i32 5
	store i64 4, i64* %150
	%151 = load %__Map_Header, %__Map_Header* %29, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %30
	%152 = getelementptr inbounds %__Map_Key, %__Map_Key* %30, i64 0, i32 0
	store i64 -5764445782238813962, i64* %152
	%153 = getelementptr inbounds %__Map_Key, %__Map_Key* %30, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3e4, i64 0, i32 0), i64 4}, %..string* %153
	%154 = load %__Map_Key, %__Map_Key* %30, align 8
	store i32 zeroinitializer, i32* %31
	store i32 %143, i32* %31
	%155 = bitcast i32* %31 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %32
	store %__Map_Header %151, %__Map_Header* %32
	store %__Map_Key zeroinitializer, %__Map_Key* %33
	store %__Map_Key %154, %__Map_Key* %33
	call void @__dynamic_map_set(%__Map_Header* %32, %__Map_Key* %33, %..rawptr %155)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%156 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 0
	; SelectorExpr
	%157 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %34
	store %gl-10.Program %157, %gl-10.Program* %34
	%158 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %34, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3e5, i64 0, i32 0), i64 5})
	store %__Map_Header zeroinitializer, %__Map_Header* %35
	%159 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 0
	%160 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %156 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %160, %raw-6.Dynamic_Map** %159
	%161 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 1
	store i1 true, i1* %161
	%162 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 2
	store i64 40, i64* %162
	%163 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 3
	store i64 8, i64* %163
	%164 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 4
	store i64 32, i64* %164
	%165 = getelementptr inbounds %__Map_Header, %__Map_Header* %35, i64 0, i32 5
	store i64 4, i64* %165
	%166 = load %__Map_Header, %__Map_Header* %35, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %36
	%167 = getelementptr inbounds %__Map_Key, %__Map_Key* %36, i64 0, i32 0
	store i64 3769135706557701272, i64* %167
	%168 = getelementptr inbounds %__Map_Key, %__Map_Key* %36, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3e6, i64 0, i32 0), i64 5}, %..string* %168
	%169 = load %__Map_Key, %__Map_Key* %36, align 8
	store i32 zeroinitializer, i32* %37
	store i32 %158, i32* %37
	%170 = bitcast i32* %37 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %38
	store %__Map_Header %166, %__Map_Header* %38
	store %__Map_Key zeroinitializer, %__Map_Key* %39
	store %__Map_Key %169, %__Map_Key* %39
	call void @__dynamic_map_set(%__Map_Header* %38, %__Map_Key* %39, %..rawptr %170)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%171 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.basicProgram, i64 0, i32 1
	; SelectorExpr
	%172 = load %gl-10.Program, %gl-10.Program* @render-14.basicProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %40
	store %gl-10.Program %172, %gl-10.Program* %40
	%173 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %40, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3e7, i64 0, i32 0), i64 7})
	store %__Map_Header zeroinitializer, %__Map_Header* %41
	%174 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 0
	%175 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %171 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %175, %raw-6.Dynamic_Map** %174
	%176 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 1
	store i1 true, i1* %176
	%177 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 2
	store i64 40, i64* %177
	%178 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 3
	store i64 8, i64* %178
	%179 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 4
	store i64 32, i64* %179
	%180 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 5
	store i64 4, i64* %180
	%181 = load %__Map_Header, %__Map_Header* %41, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %42
	%182 = getelementptr inbounds %__Map_Key, %__Map_Key* %42, i64 0, i32 0
	store i64 8598072406147938328, i64* %182
	%183 = getelementptr inbounds %__Map_Key, %__Map_Key* %42, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3e8, i64 0, i32 0), i64 7}, %..string* %183
	%184 = load %__Map_Key, %__Map_Key* %42, align 8
	store i32 zeroinitializer, i32* %43
	store i32 %173, i32* %43
	%185 = bitcast i32* %43 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %44
	store %__Map_Header %181, %__Map_Header* %44
	store %__Map_Key zeroinitializer, %__Map_Key* %45
	store %__Map_Key %184, %__Map_Key* %45
	call void @__dynamic_map_set(%__Map_Header* %44, %__Map_Key* %45, %..rawptr %185)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%186 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %46
	store %__Map_Header zeroinitializer, %__Map_Header* %47
	%187 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 0
	%188 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %186 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %188, %raw-6.Dynamic_Map** %187
	%189 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 1
	store i1 true, i1* %189
	%190 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 2
	store i64 40, i64* %190
	%191 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 3
	store i64 8, i64* %191
	%192 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 4
	store i64 32, i64* %192
	%193 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 5
	store i64 4, i64* %193
	%194 = load %__Map_Header, %__Map_Header* %47, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %48
	%195 = getelementptr inbounds %__Map_Key, %__Map_Key* %48, i64 0, i32 0
	store i64 8598072406147938328, i64* %195
	%196 = getelementptr inbounds %__Map_Key, %__Map_Key* %48, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3e9, i64 0, i32 0), i64 7}, %..string* %196
	%197 = load %__Map_Key, %__Map_Key* %48, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %49
	store %__Map_Header %194, %__Map_Header* %49
	store %__Map_Key zeroinitializer, %__Map_Key* %50
	store %__Map_Key %197, %__Map_Key* %50
	%198 = call %..rawptr @__dynamic_map_get(%__Map_Header* %49, %__Map_Key* %50)
	%199 = icmp ne %..rawptr %198, null
	%200 = getelementptr inbounds {i32, i1}, {i32, i1}* %46, i64 0, i32 1
	store i1 %199, i1* %200
	br i1 %199, label %map.get.then-5, label %map.get.done-6

map.get.then-5:
	%201 = getelementptr inbounds {i32, i1}, {i32, i1}* %46, i64 0, i32 0
	%202 = bitcast %..rawptr %198 to i32*
	%203 = load i32, i32* %202, align 4
	store i32 %203, i32* %201
	br label %map.get.done-6

map.get.done-6:
	%204 = getelementptr inbounds {i32, i1}, {i32, i1}* %46, i64 0, i32 0
	%205 = load i32, i32* %204, align 4
	%206 = bitcast i32 %205 to i32
	call void @gl-10.VertexAttribPointer(i32 %206, i32 3, i32 5126, i1 false, i32 12, %..rawptr zeroinitializer)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%207 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %51
	store %__Map_Header zeroinitializer, %__Map_Header* %52
	%208 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 0
	%209 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %207 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %209, %raw-6.Dynamic_Map** %208
	%210 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 1
	store i1 true, i1* %210
	%211 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 2
	store i64 40, i64* %211
	%212 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 3
	store i64 8, i64* %212
	%213 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 4
	store i64 32, i64* %213
	%214 = getelementptr inbounds %__Map_Header, %__Map_Header* %52, i64 0, i32 5
	store i64 4, i64* %214
	%215 = load %__Map_Header, %__Map_Header* %52, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %53
	%216 = getelementptr inbounds %__Map_Key, %__Map_Key* %53, i64 0, i32 0
	store i64 8598072406147938328, i64* %216
	%217 = getelementptr inbounds %__Map_Key, %__Map_Key* %53, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$3ea, i64 0, i32 0), i64 7}, %..string* %217
	%218 = load %__Map_Key, %__Map_Key* %53, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %54
	store %__Map_Header %215, %__Map_Header* %54
	store %__Map_Key zeroinitializer, %__Map_Key* %55
	store %__Map_Key %218, %__Map_Key* %55
	%219 = call %..rawptr @__dynamic_map_get(%__Map_Header* %54, %__Map_Key* %55)
	%220 = icmp ne %..rawptr %219, null
	%221 = getelementptr inbounds {i32, i1}, {i32, i1}* %51, i64 0, i32 1
	store i1 %220, i1* %221
	br i1 %220, label %map.get.then-7, label %map.get.done-8

map.get.then-7:
	%222 = getelementptr inbounds {i32, i1}, {i32, i1}* %51, i64 0, i32 0
	%223 = bitcast %..rawptr %219 to i32*
	%224 = load i32, i32* %223, align 4
	store i32 %224, i32* %222
	br label %map.get.done-8

map.get.done-8:
	%225 = getelementptr inbounds {i32, i1}, {i32, i1}* %51, i64 0, i32 0
	%226 = load i32, i32* %225, align 4
	%227 = bitcast i32 %226 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %227)
	; SelectorExpr
	%228 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %56
	store %gl-10.Program %228, %gl-10.Program* %56
	call void @gl-10.BindFragDataLocation(%gl-10.Program* %56, i32 0, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$3eb, i64 0, i32 0), i64 9})
	ret void
}

define void @render-14.Test(%catalog-16.Catalog* %shaderCat, %catalog-16.Catalog* %textureCat) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %catalog-16.Catalog*, align 8
	%2 = alloca %asset-25.Asset*, align 8
	%3 = alloca i64, align 8
	%4 = alloca %asset-25.Asset*, align 8
	%5 = alloca i64, align 8
	%6 = alloca %asset-25.Asset*, align 8
	%7 = alloca i64, align 8
	%8 = alloca %asset-25.Asset*, align 8
	%9 = alloca i64, align 8
	%10 = alloca %asset-25.Asset*, align 8
	%11 = alloca i64, align 8
	%12 = alloca %asset-25.Asset*, align 8
	%13 = alloca %asset-25.Asset.Shader*, align 8
	%14 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%15 = alloca %asset-25.Asset.Shader*, align 8
	%16 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%17 = alloca %asset-25.Asset.Texture*, align 8
	%18 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%19 = alloca %asset-25.Asset.Texture*, align 8
	%20 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%21 = alloca %asset-25.Asset.Texture*, align 8
	%22 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%23 = alloca %asset-25.Asset.Texture*, align 8
	%24 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%25 = alloca {i32*, i64, i64}, align 8
	%26 = alloca [1 x i32], align 4
	%27 = alloca {i32*, i64, i64}, align 8
	%28 = alloca [1 x i32], align 4
	%29 = alloca %gl-10.Program, align 16
	%30 = alloca %gl-10.Program, align 16
	%31 = alloca %gl-10.Program, align 16
	%32 = alloca %gl-10.Program, align 16
	%33 = alloca i32, align 4
	%34 = alloca i32, align 4
	%35 = alloca float, align 4
	%36 = alloca float, align 4
	%37 = alloca [20 x float], align 4
	%38 = alloca [20 x float], align 4
	%39 = alloca [6 x i32], align 4
	%40 = alloca %gl-10.Program, align 16
	%41 = alloca %__Map_Header, align 8
	%42 = alloca %__Map_Key, align 8
	%43 = alloca i32, align 4
	%44 = alloca %__Map_Header, align 16
	%45 = alloca %__Map_Key, align 16
	%46 = alloca %gl-10.Program, align 16
	%47 = alloca %__Map_Header, align 8
	%48 = alloca %__Map_Key, align 8
	%49 = alloca i32, align 4
	%50 = alloca %__Map_Header, align 16
	%51 = alloca %__Map_Key, align 16
	%52 = alloca %gl-10.Program, align 16
	%53 = alloca %__Map_Header, align 8
	%54 = alloca %__Map_Key, align 8
	%55 = alloca i32, align 4
	%56 = alloca %__Map_Header, align 16
	%57 = alloca %__Map_Key, align 16
	%58 = alloca %gl-10.Program, align 16
	%59 = alloca %__Map_Header, align 8
	%60 = alloca %__Map_Key, align 8
	%61 = alloca i32, align 4
	%62 = alloca %__Map_Header, align 16
	%63 = alloca %__Map_Key, align 16
	%64 = alloca %gl-10.Program, align 16
	%65 = alloca %__Map_Header, align 8
	%66 = alloca %__Map_Key, align 8
	%67 = alloca i32, align 4
	%68 = alloca %__Map_Header, align 16
	%69 = alloca %__Map_Key, align 16
	%70 = alloca {i32, i1}, align 4
	%71 = alloca %__Map_Header, align 8
	%72 = alloca %__Map_Key, align 8
	%73 = alloca %__Map_Header, align 16
	%74 = alloca %__Map_Key, align 16
	%75 = alloca {i32, i1}, align 4
	%76 = alloca %__Map_Header, align 8
	%77 = alloca %__Map_Key, align 8
	%78 = alloca %__Map_Header, align 16
	%79 = alloca %__Map_Key, align 16
	%80 = alloca {i32, i1}, align 4
	%81 = alloca %__Map_Header, align 8
	%82 = alloca %__Map_Key, align 8
	%83 = alloca %__Map_Header, align 16
	%84 = alloca %__Map_Key, align 16
	%85 = alloca {i32, i1}, align 4
	%86 = alloca %__Map_Header, align 8
	%87 = alloca %__Map_Key, align 8
	%88 = alloca %__Map_Header, align 16
	%89 = alloca %__Map_Key, align 16
	%90 = alloca %gl-10.Program, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %shaderCat, %catalog-16.Catalog** %0
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %1
		store %catalog-16.Catalog* %textureCat, %catalog-16.Catalog** %1
	; vertexAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %2
		; ok1
	store i64 zeroinitializer, i64* %3
		; SelectorExpr
	%91 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%92 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %91, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$3ec, i64 0, i32 0), i64 9})
	%93 = extractvalue {%asset-25.Asset*, i64} %92, 0
	%94 = extractvalue {%asset-25.Asset*, i64} %92, 1
	store %asset-25.Asset* %93, %asset-25.Asset** %2
	store i64 %94, i64* %3
	; fragAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %4
		; ok2
	store i64 zeroinitializer, i64* %5
		; SelectorExpr
	%95 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%96 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %95, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$3ed, i64 0, i32 0), i64 9})
	%97 = extractvalue {%asset-25.Asset*, i64} %96, 0
	%98 = extractvalue {%asset-25.Asset*, i64} %96, 1
	store %asset-25.Asset* %97, %asset-25.Asset** %4
	store i64 %98, i64* %5
	; kickAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %6
		; ok3
	store i64 zeroinitializer, i64* %7
		; SelectorExpr
	%99 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	%100 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %99, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3ee, i64 0, i32 0), i64 20})
	%101 = extractvalue {%asset-25.Asset*, i64} %100, 0
	%102 = extractvalue {%asset-25.Asset*, i64} %100, 1
	store %asset-25.Asset* %101, %asset-25.Asset** %6
	store i64 %102, i64* %7
	; holdAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %8
		; ok4
	store i64 zeroinitializer, i64* %9
		; SelectorExpr
	%103 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	%104 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %103, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3ef, i64 0, i32 0), i64 20})
	%105 = extractvalue {%asset-25.Asset*, i64} %104, 0
	%106 = extractvalue {%asset-25.Asset*, i64} %104, 1
	store %asset-25.Asset* %105, %asset-25.Asset** %8
	store i64 %106, i64* %9
	; backAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %10
		; ok5
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%107 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	%108 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %107, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3f0, i64 0, i32 0), i64 4})
	%109 = extractvalue {%asset-25.Asset*, i64} %108, 0
	%110 = extractvalue {%asset-25.Asset*, i64} %108, 1
	store %asset-25.Asset* %109, %asset-25.Asset** %10
	store i64 %110, i64* %11
	; cursorAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %12
		; SelectorExpr
	%111 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	%112 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %111, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$3f1, i64 0, i32 0), i64 6})
	%113 = extractvalue {%asset-25.Asset*, i64} %112, 0
	%114 = extractvalue {%asset-25.Asset*, i64} %112, 1
	store %asset-25.Asset* %113, %asset-25.Asset** %12
	; IfStmt
	%115 = load i64, i64* %3, align 8
	%116 = icmp ne i64 %115, 0
	br i1 %116, label %if.then-3, label %cmp.or-1

cmp.or-1:
	%117 = load i64, i64* %5, align 8
	%118 = icmp ne i64 %117, 0
	br i1 %118, label %if.then-3, label %cmp.or-2

cmp.or-2:
	%119 = load i64, i64* %7, align 8
	%120 = icmp ne i64 %119, 0
	br i1 %120, label %if.then-3, label %if.done-4

if.then-3:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f2, i64 0, i32 0), i64 28}, i64 222, i64 15, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$3f3, i64 0, i32 0), i64 32})
	br label %if.done-4

if.done-4:
	; vertex
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %13
		%121 = load %asset-25.Asset*, %asset-25.Asset** %2, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %14
	%122 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %121, i64 0, i32 4 ; UnionTagPtr
	%123 = load i64, i64* %122, align 8
	%124 = icmp eq i64 %123, 2
	br i1 %124, label %union_cast.ok-5, label %union_cast.end-6

union_cast.ok-5:
	%125 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %14, i64 0, i32 0
	%126 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %14, i64 0, i32 1
	%127 = bitcast %asset-25.Asset* %121 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %127, %asset-25.Asset.Shader** %125
	store i1 true, i1* %126
	br label %union_cast.end-6

union_cast.end-6:
	%128 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %14, i64 0, i32 1
	%129 = load i1, i1* %128, align 1
	%130 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%131 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %129, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f4, i64 0, i32 0), i64 28}, i64 225, i64 15, %Type_Info* %130, %Type_Info* %131)
	%132 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %14, i64 0, i32 0
	%133 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %132, align 8
	store %asset-25.Asset.Shader* %133, %asset-25.Asset.Shader** %13
	; frag
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %15
		%134 = load %asset-25.Asset*, %asset-25.Asset** %4, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %16
	%135 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %134, i64 0, i32 4 ; UnionTagPtr
	%136 = load i64, i64* %135, align 8
	%137 = icmp eq i64 %136, 2
	br i1 %137, label %union_cast.ok-7, label %union_cast.end-8

union_cast.ok-7:
	%138 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %16, i64 0, i32 0
	%139 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %16, i64 0, i32 1
	%140 = bitcast %asset-25.Asset* %134 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %140, %asset-25.Asset.Shader** %138
	store i1 true, i1* %139
	br label %union_cast.end-8

union_cast.end-8:
	%141 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %16, i64 0, i32 1
	%142 = load i1, i1* %141, align 1
	%143 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%144 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %142, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f5, i64 0, i32 0), i64 28}, i64 226, i64 15, %Type_Info* %143, %Type_Info* %144)
	%145 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %16, i64 0, i32 0
	%146 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %145, align 8
	store %asset-25.Asset.Shader* %146, %asset-25.Asset.Shader** %15
	; kick
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %17
		%147 = load %asset-25.Asset*, %asset-25.Asset** %6, align 8
	; cast - union_cast
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %18
	%148 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %147, i64 0, i32 4 ; UnionTagPtr
	%149 = load i64, i64* %148, align 8
	%150 = icmp eq i64 %149, 1
	br i1 %150, label %union_cast.ok-9, label %union_cast.end-10

union_cast.ok-9:
	%151 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %18, i64 0, i32 0
	%152 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %18, i64 0, i32 1
	%153 = bitcast %asset-25.Asset* %147 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %153, %asset-25.Asset.Texture** %151
	store i1 true, i1* %152
	br label %union_cast.end-10

union_cast.end-10:
	%154 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %18, i64 0, i32 1
	%155 = load i1, i1* %154, align 1
	%156 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%157 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %155, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f6, i64 0, i32 0), i64 28}, i64 227, i64 15, %Type_Info* %156, %Type_Info* %157)
	%158 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %18, i64 0, i32 0
	%159 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %158, align 8
	store %asset-25.Asset.Texture* %159, %asset-25.Asset.Texture** %17
	; hold
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %19
		%160 = load %asset-25.Asset*, %asset-25.Asset** %8, align 8
	; cast - union_cast
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %20
	%161 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %160, i64 0, i32 4 ; UnionTagPtr
	%162 = load i64, i64* %161, align 8
	%163 = icmp eq i64 %162, 1
	br i1 %163, label %union_cast.ok-11, label %union_cast.end-12

union_cast.ok-11:
	%164 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %20, i64 0, i32 0
	%165 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %20, i64 0, i32 1
	%166 = bitcast %asset-25.Asset* %160 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %166, %asset-25.Asset.Texture** %164
	store i1 true, i1* %165
	br label %union_cast.end-12

union_cast.end-12:
	%167 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %20, i64 0, i32 1
	%168 = load i1, i1* %167, align 1
	%169 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%170 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %168, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f7, i64 0, i32 0), i64 28}, i64 228, i64 15, %Type_Info* %169, %Type_Info* %170)
	%171 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %20, i64 0, i32 0
	%172 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %171, align 8
	store %asset-25.Asset.Texture* %172, %asset-25.Asset.Texture** %19
	; AssignStmt
	; SelectorExpr
	%173 = load %asset-25.Asset*, %asset-25.Asset** %10, align 8
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %21
	; cast - union_cast
	%174 = load %asset-25.Asset*, %asset-25.Asset** %10, align 8
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %22
	%175 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %174, i64 0, i32 4 ; UnionTagPtr
	%176 = load i64, i64* %175, align 8
	%177 = icmp eq i64 %176, 1
	br i1 %177, label %union_cast.ok-13, label %union_cast.end-14

union_cast.ok-13:
	%178 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %22, i64 0, i32 0
	%179 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %22, i64 0, i32 1
	%180 = bitcast %asset-25.Asset* %174 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %180, %asset-25.Asset.Texture** %178
	store i1 true, i1* %179
	br label %union_cast.end-14

union_cast.end-14:
	%181 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %22, i64 0, i32 1
	%182 = load i1, i1* %181, align 1
	%183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%184 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %182, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f8, i64 0, i32 0), i64 28}, i64 229, i64 12, %Type_Info* %183, %Type_Info* %184)
	%185 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %22, i64 0, i32 0
	%186 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %185, align 8
	store %asset-25.Asset.Texture* %186, %asset-25.Asset.Texture** %21
	%187 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %21, align 8
	%188 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %187, i64 0
	%189 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %188, i64 0, i32 2
	%190 = load i32, i32* %189, align 4
	store i32 %190, i32* @render-14.back
	; AssignStmt
	; SelectorExpr
	%191 = load %asset-25.Asset*, %asset-25.Asset** %12, align 8
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %23
	; cast - union_cast
	%192 = load %asset-25.Asset*, %asset-25.Asset** %12, align 8
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %24
	%193 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %192, i64 0, i32 4 ; UnionTagPtr
	%194 = load i64, i64* %193, align 8
	%195 = icmp eq i64 %194, 1
	br i1 %195, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%196 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %24, i64 0, i32 0
	%197 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %24, i64 0, i32 1
	%198 = bitcast %asset-25.Asset* %192 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %198, %asset-25.Asset.Texture** %196
	store i1 true, i1* %197
	br label %union_cast.end-16

union_cast.end-16:
	%199 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %24, i64 0, i32 1
	%200 = load i1, i1* %199, align 1
	%201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%202 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %200, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f9, i64 0, i32 0), i64 28}, i64 230, i64 15, %Type_Info* %201, %Type_Info* %202)
	%203 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %24, i64 0, i32 0
	%204 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %203, align 8
	store %asset-25.Asset.Texture* %204, %asset-25.Asset.Texture** %23
	%205 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %23, align 8
	%206 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %205, i64 0
	%207 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %206, i64 0, i32 2
	%208 = load i32, i32* %207, align 4
	store i32 %208, i32* @render-14.cursorT
	; append
	%209 = bitcast {i32*, i64, i64,%Allocator}* @render-14.textures to %..rawptr
	%210 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* @render-14.textures, align 8
	; SelectorExpr
	%211 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %19, align 8
	%212 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %211, i64 0
	%213 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %212, i64 0, i32 2
	%214 = load i32, i32* %213, align 4
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %25
	store [1 x i32] zeroinitializer, [1 x i32]* %26
	%215 = getelementptr inbounds [1 x i32], [1 x i32]* %26, i64 0, i32 0
	store i32 %214, i32* %215
	%216 = getelementptr inbounds [1 x i32], [1 x i32]* %26, i64 0, i32 0
	%217 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %25, i64 0, i32 0
	store i32* %216, i32** %217
	%218 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %25, i64 0, i32 1
	store i64 1, i64* %218
	%219 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %25, i64 0, i32 2
	store i64 1, i64* %219
	%220 = load {i32*, i64, i64}, {i32*, i64, i64}* %25, align 8
	%221 = extractvalue {i32*, i64, i64} %220, 0
	%222 = extractvalue {i32*, i64, i64} %220, 1
	%223 = bitcast i32* %221 to %..rawptr
	%224 = call i64 @__dynamic_array_append(%..rawptr %209, i64 4, i64 4, %..rawptr %223, i64 %222)
	; append
	%225 = bitcast {i32*, i64, i64,%Allocator}* @render-14.textures to %..rawptr
	%226 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* @render-14.textures, align 8
	; SelectorExpr
	%227 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %17, align 8
	%228 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %227, i64 0
	%229 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %228, i64 0, i32 2
	%230 = load i32, i32* %229, align 4
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %27
	store [1 x i32] zeroinitializer, [1 x i32]* %28
	%231 = getelementptr inbounds [1 x i32], [1 x i32]* %28, i64 0, i32 0
	store i32 %230, i32* %231
	%232 = getelementptr inbounds [1 x i32], [1 x i32]* %28, i64 0, i32 0
	%233 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %27, i64 0, i32 0
	store i32* %232, i32** %233
	%234 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %27, i64 0, i32 1
	store i64 1, i64* %234
	%235 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %27, i64 0, i32 2
	store i64 1, i64* %235
	%236 = load {i32*, i64, i64}, {i32*, i64, i64}* %27, align 8
	%237 = extractvalue {i32*, i64, i64} %236, 0
	%238 = extractvalue {i32*, i64, i64} %236, 1
	%239 = bitcast i32* %237 to %..rawptr
	%240 = call i64 @__dynamic_array_append(%..rawptr %225, i64 4, i64 4, %..rawptr %239, i64 %238)
	; AssignStmt
	; SelectorExpr
	%241 = call %gl-10.Program @gl-10.CreateProgram()
	store %gl-10.Program %241, %gl-10.Program* @render-14.mainProgram
	; SelectorExpr
	%242 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	; SelectorExpr
	%243 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %13, align 8
	%244 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %243, i64 0
	%245 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %244, i64 0, i32 2
	%246 = load i32, i32* %245, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %29
	store %gl-10.Program %242, %gl-10.Program* %29
	call void @gl-10.AttachShader(%gl-10.Program* %29, i32 %246)
	; SelectorExpr
	%247 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	; SelectorExpr
	%248 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %15, align 8
	%249 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %248, i64 0
	%250 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %249, i64 0, i32 2
	%251 = load i32, i32* %250, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %30
	store %gl-10.Program %247, %gl-10.Program* %30
	call void @gl-10.AttachShader(%gl-10.Program* %30, i32 %251)
	; AssignStmt
	; SelectorExpr
	%252 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 3
	; SelectorExpr
	%253 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %13, align 8
	%254 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %253, i64 0
	%255 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %254, i64 0, i32 2
	%256 = load i32, i32* %255, align 4
	store i32 %256, i32* %252
	; AssignStmt
	; SelectorExpr
	%257 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 4
	; SelectorExpr
	%258 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %15, align 8
	%259 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %258, i64 0
	%260 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %259, i64 0, i32 2
	%261 = load i32, i32* %260, align 4
	store i32 %261, i32* %257
	; SelectorExpr
	%262 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %31
	store %gl-10.Program %262, %gl-10.Program* %31
	call void @gl-10.LinkProgram(%gl-10.Program* %31)
	; SelectorExpr
	%263 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %32
	store %gl-10.Program %263, %gl-10.Program* %32
	call void @gl-10.UseProgram(%gl-10.Program* %32)
	; AssignStmt
	; SelectorExpr
	%264 = call i32 @gl-10.GenVertexArray()
	store i32 %264, i32* @render-14.mainvao
	; SelectorExpr
	%265 = load i32, i32* @render-14.mainvao, align 4
	call void @gl-10.BindVertexArray(i32 %265)
	; vbo
	store i32 zeroinitializer, i32* %33
		; SelectorExpr
	%266 = call i32 @gl-10.GenVBO()
	store i32 %266, i32* %33
	; SelectorExpr
	%267 = load i32, i32* %33, align 4
	call void @gl-10.BindBuffer-779(i32 %267)
	; ebo
	store i32 zeroinitializer, i32* %34
		; SelectorExpr
	%268 = call i32 @gl-10.GenEBO()
	store i32 %268, i32* %34
	; SelectorExpr
	%269 = load i32, i32* %34, align 4
	call void @gl-10.BindBuffer-780(i32 %269)
	; height
	store float zeroinitializer, float* %35
		; SelectorExpr
	%270 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %17, align 8
	%271 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %270, i64 0
	%272 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %271, i64 0, i32 4
	%273 = load i32, i32* %272, align 4
	%274 = sitofp i32 %273 to float
	%275 = fdiv float %274, 0x4050000000000000
	store float %275, float* %35
	; width
	store float zeroinitializer, float* %36
		; SelectorExpr
	%276 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %17, align 8
	%277 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %276, i64 0
	%278 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %277, i64 0, i32 3
	%279 = load i32, i32* %278, align 4
	%280 = sitofp i32 %279 to float
	%281 = fdiv float %280, 0x4050000000000000
	store float %281, float* %36
	; vertices
	store [20 x float] zeroinitializer, [20 x float]* %37
		; CompoundLit
	store [20 x float] zeroinitializer, [20 x float]* %38
	store [20 x float] [float zeroinitializer, float zeroinitializer, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float zeroinitializer, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float zeroinitializer, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000], [20 x float]* %38
	%282 = load float, float* %36, align 4
	%283 = getelementptr inbounds [20 x float], [20 x float]* %38, i64 0, i32 0
	store float %282, float* %283
	%284 = load float, float* %35, align 4
	%285 = getelementptr inbounds [20 x float], [20 x float]* %38, i64 0, i32 1
	store float %284, float* %285
	%286 = load float, float* %36, align 4
	%287 = getelementptr inbounds [20 x float], [20 x float]* %38, i64 0, i32 5
	store float %286, float* %287
	%288 = load float, float* %35, align 4
	%289 = getelementptr inbounds [20 x float], [20 x float]* %38, i64 0, i32 16
	store float %288, float* %289
	%290 = load [20 x float], [20 x float]* %38, align 4
	store [20 x float] %290, [20 x float]* %37
	; elements
	store [6 x i32] zeroinitializer, [6 x i32]* %39
		store [6 x i32] [i32 0, i32 1, i32 3, i32 1, i32 2, i32 3], [6 x i32]* %39
	; SelectorExpr
	; IndexExpr
	%291 = getelementptr inbounds [20 x float], [20 x float]* %37, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3fa, i64 0, i32 0), i64 28}, i64 269, i64 76, i64 0, i64 20)
	%292 = getelementptr inbounds float, float* %291, i64 0
	%293 = bitcast float* %292 to %..rawptr
	call void @gl-10.BufferData-773(i32 34962, i32 80, %..rawptr %293, i32 35044)
	; SelectorExpr
	; IndexExpr
	%294 = getelementptr inbounds [6 x i32], [6 x i32]* %39, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3fb, i64 0, i32 0), i64 28}, i64 270, i64 83, i64 0, i64 6)
	%295 = getelementptr inbounds i32, i32* %294, i64 0
	%296 = bitcast i32* %295 to %..rawptr
	call void @gl-10.BufferData-773(i32 34963, i32 24, %..rawptr %296, i32 35044)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%297 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	; SelectorExpr
	%298 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %40
	store %gl-10.Program %298, %gl-10.Program* %40
	%299 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %40, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3fc, i64 0, i32 0), i64 5})
	store %__Map_Header zeroinitializer, %__Map_Header* %41
	%300 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 0
	%301 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %297 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %301, %raw-6.Dynamic_Map** %300
	%302 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 1
	store i1 true, i1* %302
	%303 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 2
	store i64 40, i64* %303
	%304 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 3
	store i64 8, i64* %304
	%305 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 4
	store i64 32, i64* %305
	%306 = getelementptr inbounds %__Map_Header, %__Map_Header* %41, i64 0, i32 5
	store i64 4, i64* %306
	%307 = load %__Map_Header, %__Map_Header* %41, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %42
	%308 = getelementptr inbounds %__Map_Key, %__Map_Key* %42, i64 0, i32 0
	store i64 6747846868581204634, i64* %308
	%309 = getelementptr inbounds %__Map_Key, %__Map_Key* %42, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$3fd, i64 0, i32 0), i64 5}, %..string* %309
	%310 = load %__Map_Key, %__Map_Key* %42, align 8
	store i32 zeroinitializer, i32* %43
	store i32 %299, i32* %43
	%311 = bitcast i32* %43 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %44
	store %__Map_Header %307, %__Map_Header* %44
	store %__Map_Key zeroinitializer, %__Map_Key* %45
	store %__Map_Key %310, %__Map_Key* %45
	call void @__dynamic_map_set(%__Map_Header* %44, %__Map_Key* %45, %..rawptr %311)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%312 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	; SelectorExpr
	%313 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %46
	store %gl-10.Program %313, %gl-10.Program* %46
	%314 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %46, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3fe, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %47
	%315 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 0
	%316 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %312 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %316, %raw-6.Dynamic_Map** %315
	%317 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 1
	store i1 true, i1* %317
	%318 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 2
	store i64 40, i64* %318
	%319 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 3
	store i64 8, i64* %319
	%320 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 4
	store i64 32, i64* %320
	%321 = getelementptr inbounds %__Map_Header, %__Map_Header* %47, i64 0, i32 5
	store i64 4, i64* %321
	%322 = load %__Map_Header, %__Map_Header* %47, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %48
	%323 = getelementptr inbounds %__Map_Key, %__Map_Key* %48, i64 0, i32 0
	store i64 9176635129918533432, i64* %323
	%324 = getelementptr inbounds %__Map_Key, %__Map_Key* %48, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$3ff, i64 0, i32 0), i64 4}, %..string* %324
	%325 = load %__Map_Key, %__Map_Key* %48, align 8
	store i32 zeroinitializer, i32* %49
	store i32 %314, i32* %49
	%326 = bitcast i32* %49 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %50
	store %__Map_Header %322, %__Map_Header* %50
	store %__Map_Key zeroinitializer, %__Map_Key* %51
	store %__Map_Key %325, %__Map_Key* %51
	call void @__dynamic_map_set(%__Map_Header* %50, %__Map_Key* %51, %..rawptr %326)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%327 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 0
	; SelectorExpr
	%328 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %52
	store %gl-10.Program %328, %gl-10.Program* %52
	%329 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %52, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$400, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %53
	%330 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 0
	%331 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %327 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %331, %raw-6.Dynamic_Map** %330
	%332 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 1
	store i1 true, i1* %332
	%333 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 2
	store i64 40, i64* %333
	%334 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 3
	store i64 8, i64* %334
	%335 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 4
	store i64 32, i64* %335
	%336 = getelementptr inbounds %__Map_Header, %__Map_Header* %53, i64 0, i32 5
	store i64 4, i64* %336
	%337 = load %__Map_Header, %__Map_Header* %53, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %54
	%338 = getelementptr inbounds %__Map_Key, %__Map_Key* %54, i64 0, i32 0
	store i64 -5764445782238813962, i64* %338
	%339 = getelementptr inbounds %__Map_Key, %__Map_Key* %54, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$401, i64 0, i32 0), i64 4}, %..string* %339
	%340 = load %__Map_Key, %__Map_Key* %54, align 8
	store i32 zeroinitializer, i32* %55
	store i32 %329, i32* %55
	%341 = bitcast i32* %55 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %56
	store %__Map_Header %337, %__Map_Header* %56
	store %__Map_Key zeroinitializer, %__Map_Key* %57
	store %__Map_Key %340, %__Map_Key* %57
	call void @__dynamic_map_set(%__Map_Header* %56, %__Map_Key* %57, %..rawptr %341)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%342 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	; SelectorExpr
	%343 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %58
	store %gl-10.Program %343, %gl-10.Program* %58
	%344 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %58, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$402, i64 0, i32 0), i64 8})
	store %__Map_Header zeroinitializer, %__Map_Header* %59
	%345 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 0
	%346 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %342 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %346, %raw-6.Dynamic_Map** %345
	%347 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 1
	store i1 true, i1* %347
	%348 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 2
	store i64 40, i64* %348
	%349 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 3
	store i64 8, i64* %349
	%350 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 4
	store i64 32, i64* %350
	%351 = getelementptr inbounds %__Map_Header, %__Map_Header* %59, i64 0, i32 5
	store i64 4, i64* %351
	%352 = load %__Map_Header, %__Map_Header* %59, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %60
	%353 = getelementptr inbounds %__Map_Key, %__Map_Key* %60, i64 0, i32 0
	store i64 -4512294542364210646, i64* %353
	%354 = getelementptr inbounds %__Map_Key, %__Map_Key* %60, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$403, i64 0, i32 0), i64 8}, %..string* %354
	%355 = load %__Map_Key, %__Map_Key* %60, align 8
	store i32 zeroinitializer, i32* %61
	store i32 %344, i32* %61
	%356 = bitcast i32* %61 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %62
	store %__Map_Header %352, %__Map_Header* %62
	store %__Map_Key zeroinitializer, %__Map_Key* %63
	store %__Map_Key %355, %__Map_Key* %63
	call void @__dynamic_map_set(%__Map_Header* %62, %__Map_Key* %63, %..rawptr %356)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%357 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	; SelectorExpr
	%358 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %64
	store %gl-10.Program %358, %gl-10.Program* %64
	%359 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %64, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$404, i64 0, i32 0), i64 2})
	store %__Map_Header zeroinitializer, %__Map_Header* %65
	%360 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 0
	%361 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %357 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %361, %raw-6.Dynamic_Map** %360
	%362 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 1
	store i1 true, i1* %362
	%363 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 2
	store i64 40, i64* %363
	%364 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 3
	store i64 8, i64* %364
	%365 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 4
	store i64 32, i64* %365
	%366 = getelementptr inbounds %__Map_Header, %__Map_Header* %65, i64 0, i32 5
	store i64 4, i64* %366
	%367 = load %__Map_Header, %__Map_Header* %65, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %66
	%368 = getelementptr inbounds %__Map_Key, %__Map_Key* %66, i64 0, i32 0
	store i64 662345837686521650, i64* %368
	%369 = getelementptr inbounds %__Map_Key, %__Map_Key* %66, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$405, i64 0, i32 0), i64 2}, %..string* %369
	%370 = load %__Map_Key, %__Map_Key* %66, align 8
	store i32 zeroinitializer, i32* %67
	store i32 %359, i32* %67
	%371 = bitcast i32* %67 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %68
	store %__Map_Header %367, %__Map_Header* %68
	store %__Map_Key zeroinitializer, %__Map_Key* %69
	store %__Map_Key %370, %__Map_Key* %69
	call void @__dynamic_map_set(%__Map_Header* %68, %__Map_Key* %69, %..rawptr %371)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%372 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %70
	store %__Map_Header zeroinitializer, %__Map_Header* %71
	%373 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 0
	%374 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %372 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %374, %raw-6.Dynamic_Map** %373
	%375 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 1
	store i1 true, i1* %375
	%376 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 2
	store i64 40, i64* %376
	%377 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 3
	store i64 8, i64* %377
	%378 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 4
	store i64 32, i64* %378
	%379 = getelementptr inbounds %__Map_Header, %__Map_Header* %71, i64 0, i32 5
	store i64 4, i64* %379
	%380 = load %__Map_Header, %__Map_Header* %71, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %72
	%381 = getelementptr inbounds %__Map_Key, %__Map_Key* %72, i64 0, i32 0
	store i64 -4512294542364210646, i64* %381
	%382 = getelementptr inbounds %__Map_Key, %__Map_Key* %72, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$406, i64 0, i32 0), i64 8}, %..string* %382
	%383 = load %__Map_Key, %__Map_Key* %72, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %73
	store %__Map_Header %380, %__Map_Header* %73
	store %__Map_Key zeroinitializer, %__Map_Key* %74
	store %__Map_Key %383, %__Map_Key* %74
	%384 = call %..rawptr @__dynamic_map_get(%__Map_Header* %73, %__Map_Key* %74)
	%385 = icmp ne %..rawptr %384, null
	%386 = getelementptr inbounds {i32, i1}, {i32, i1}* %70, i64 0, i32 1
	store i1 %385, i1* %386
	br i1 %385, label %map.get.then-17, label %map.get.done-18

map.get.then-17:
	%387 = getelementptr inbounds {i32, i1}, {i32, i1}* %70, i64 0, i32 0
	%388 = bitcast %..rawptr %384 to i32*
	%389 = load i32, i32* %388, align 4
	store i32 %389, i32* %387
	br label %map.get.done-18

map.get.done-18:
	%390 = getelementptr inbounds {i32, i1}, {i32, i1}* %70, i64 0, i32 0
	%391 = load i32, i32* %390, align 4
	%392 = bitcast i32 %391 to i32
	call void @gl-10.VertexAttribPointer(i32 %392, i32 3, i32 5126, i1 false, i32 20, %..rawptr zeroinitializer)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%393 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %75
	store %__Map_Header zeroinitializer, %__Map_Header* %76
	%394 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 0
	%395 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %393 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %395, %raw-6.Dynamic_Map** %394
	%396 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 1
	store i1 true, i1* %396
	%397 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 2
	store i64 40, i64* %397
	%398 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 3
	store i64 8, i64* %398
	%399 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 4
	store i64 32, i64* %399
	%400 = getelementptr inbounds %__Map_Header, %__Map_Header* %76, i64 0, i32 5
	store i64 4, i64* %400
	%401 = load %__Map_Header, %__Map_Header* %76, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %77
	%402 = getelementptr inbounds %__Map_Key, %__Map_Key* %77, i64 0, i32 0
	store i64 662345837686521650, i64* %402
	%403 = getelementptr inbounds %__Map_Key, %__Map_Key* %77, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$407, i64 0, i32 0), i64 2}, %..string* %403
	%404 = load %__Map_Key, %__Map_Key* %77, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %78
	store %__Map_Header %401, %__Map_Header* %78
	store %__Map_Key zeroinitializer, %__Map_Key* %79
	store %__Map_Key %404, %__Map_Key* %79
	%405 = call %..rawptr @__dynamic_map_get(%__Map_Header* %78, %__Map_Key* %79)
	%406 = icmp ne %..rawptr %405, null
	%407 = getelementptr inbounds {i32, i1}, {i32, i1}* %75, i64 0, i32 1
	store i1 %406, i1* %407
	br i1 %406, label %map.get.then-19, label %map.get.done-20

map.get.then-19:
	%408 = getelementptr inbounds {i32, i1}, {i32, i1}* %75, i64 0, i32 0
	%409 = bitcast %..rawptr %405 to i32*
	%410 = load i32, i32* %409, align 4
	store i32 %410, i32* %408
	br label %map.get.done-20

map.get.done-20:
	%411 = getelementptr inbounds {i32, i1}, {i32, i1}* %75, i64 0, i32 0
	%412 = load i32, i32* %411, align 4
	%413 = bitcast i32 %412 to i32
	call void @gl-10.VertexAttribPointer(i32 %413, i32 2, i32 5126, i1 false, i32 20, %..rawptr inttoptr (i64 12 to %..rawptr))
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%414 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %80
	store %__Map_Header zeroinitializer, %__Map_Header* %81
	%415 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 0
	%416 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %414 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %416, %raw-6.Dynamic_Map** %415
	%417 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 1
	store i1 true, i1* %417
	%418 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 2
	store i64 40, i64* %418
	%419 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 3
	store i64 8, i64* %419
	%420 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 4
	store i64 32, i64* %420
	%421 = getelementptr inbounds %__Map_Header, %__Map_Header* %81, i64 0, i32 5
	store i64 4, i64* %421
	%422 = load %__Map_Header, %__Map_Header* %81, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %82
	%423 = getelementptr inbounds %__Map_Key, %__Map_Key* %82, i64 0, i32 0
	store i64 -4512294542364210646, i64* %423
	%424 = getelementptr inbounds %__Map_Key, %__Map_Key* %82, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$408, i64 0, i32 0), i64 8}, %..string* %424
	%425 = load %__Map_Key, %__Map_Key* %82, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %83
	store %__Map_Header %422, %__Map_Header* %83
	store %__Map_Key zeroinitializer, %__Map_Key* %84
	store %__Map_Key %425, %__Map_Key* %84
	%426 = call %..rawptr @__dynamic_map_get(%__Map_Header* %83, %__Map_Key* %84)
	%427 = icmp ne %..rawptr %426, null
	%428 = getelementptr inbounds {i32, i1}, {i32, i1}* %80, i64 0, i32 1
	store i1 %427, i1* %428
	br i1 %427, label %map.get.then-21, label %map.get.done-22

map.get.then-21:
	%429 = getelementptr inbounds {i32, i1}, {i32, i1}* %80, i64 0, i32 0
	%430 = bitcast %..rawptr %426 to i32*
	%431 = load i32, i32* %430, align 4
	store i32 %431, i32* %429
	br label %map.get.done-22

map.get.done-22:
	%432 = getelementptr inbounds {i32, i1}, {i32, i1}* %80, i64 0, i32 0
	%433 = load i32, i32* %432, align 4
	%434 = bitcast i32 %433 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %434)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%435 = getelementptr inbounds %gl-10.Program, %gl-10.Program* @render-14.mainProgram, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %85
	store %__Map_Header zeroinitializer, %__Map_Header* %86
	%436 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 0
	%437 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %435 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %437, %raw-6.Dynamic_Map** %436
	%438 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 1
	store i1 true, i1* %438
	%439 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 2
	store i64 40, i64* %439
	%440 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 3
	store i64 8, i64* %440
	%441 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 4
	store i64 32, i64* %441
	%442 = getelementptr inbounds %__Map_Header, %__Map_Header* %86, i64 0, i32 5
	store i64 4, i64* %442
	%443 = load %__Map_Header, %__Map_Header* %86, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %87
	%444 = getelementptr inbounds %__Map_Key, %__Map_Key* %87, i64 0, i32 0
	store i64 662345837686521650, i64* %444
	%445 = getelementptr inbounds %__Map_Key, %__Map_Key* %87, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$409, i64 0, i32 0), i64 2}, %..string* %445
	%446 = load %__Map_Key, %__Map_Key* %87, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %88
	store %__Map_Header %443, %__Map_Header* %88
	store %__Map_Key zeroinitializer, %__Map_Key* %89
	store %__Map_Key %446, %__Map_Key* %89
	%447 = call %..rawptr @__dynamic_map_get(%__Map_Header* %88, %__Map_Key* %89)
	%448 = icmp ne %..rawptr %447, null
	%449 = getelementptr inbounds {i32, i1}, {i32, i1}* %85, i64 0, i32 1
	store i1 %448, i1* %449
	br i1 %448, label %map.get.then-23, label %map.get.done-24

map.get.then-23:
	%450 = getelementptr inbounds {i32, i1}, {i32, i1}* %85, i64 0, i32 0
	%451 = bitcast %..rawptr %447 to i32*
	%452 = load i32, i32* %451, align 4
	store i32 %452, i32* %450
	br label %map.get.done-24

map.get.done-24:
	%453 = getelementptr inbounds {i32, i1}, {i32, i1}* %85, i64 0, i32 0
	%454 = load i32, i32* %453, align 4
	%455 = bitcast i32 %454 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %455)
	; SelectorExpr
	%456 = load %gl-10.Program, %gl-10.Program* @render-14.mainProgram, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %90
	store %gl-10.Program %456, %gl-10.Program* %90
	call void @gl-10.BindFragDataLocation(%gl-10.Program* %90, i32 0, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$40a, i64 0, i32 0), i64 8})
	ret void
}

define %time-15.Data_t* @time-15.CreateData() {
decls-0:
	%0 = alloca %time-15.Data_t*, align 8
	; res
	store %time-15.Data_t* zeroinitializer, %time-15.Data_t** %0
		; new
	%1 = call %..rawptr @alloc_align(i64 56, i64 8)
	%2 = bitcast %..rawptr %1 to %time-15.Data_t*
	store %time-15.Data_t* %2, %time-15.Data_t** %0
	; SelectorExpr
	; SelectorExpr
	%3 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%4 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %3, i64 0
	%5 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %4, i64 0, i32 5
	%6 = getelementptr inbounds i64, i64* %5, i64 0
	%7 = call ccc i32 @QueryPerformanceFrequency(i64* %6)
	; SelectorExpr
	; SelectorExpr
	%8 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%9 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %8, i64 0
	%10 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %9, i64 0, i32 6
	%11 = getelementptr inbounds i64, i64* %10, i64 0
	%12 = call ccc i32 @QueryPerformanceCounter(i64* %11)
	; AssignStmt
	; SelectorExpr
	%13 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%14 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %13, i64 0
	%15 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %14, i64 0, i32 0
	store double 0x3ff0000000000000, double* %15
	; ReturnStmt
	%16 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	ret %time-15.Data_t* %16
}

define void @time-15.Update(%time-15.Data_t* %data) {
decls-0:
	%0 = alloca %time-15.Data_t*, align 8
	%1 = alloca i64, align 8
	store %time-15.Data_t* zeroinitializer, %time-15.Data_t** %0
		store %time-15.Data_t* %data, %time-15.Data_t** %0
	; newTime
	store i64 zeroinitializer, i64* %1
		; SelectorExpr
	%2 = getelementptr inbounds i64, i64* %1, i64 0
	%3 = call ccc i32 @QueryPerformanceCounter(i64* %2)
	; AssignStmt
	; SelectorExpr
	%4 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%5 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %4, i64 0
	%6 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %5, i64 0, i32 2
	%7 = load i64, i64* %1, align 8
	; SelectorExpr
	%8 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%9 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %8, i64 0
	%10 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %9, i64 0, i32 6
	%11 = load i64, i64* %10, align 8
	%12 = sub i64 %7, %11
	%13 = sitofp i64 %12 to double
	store double %13, double* %6
	; AssignStmt
	; SelectorExpr
	%14 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%15 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %14, i64 0
	%16 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %15, i64 0, i32 6
	%17 = load i64, i64* %1, align 8
	store i64 %17, i64* %16
	; AssignStmt
	; SelectorExpr
	%18 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%19 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %18, i64 0
	%20 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %19, i64 0, i32 2
	; SelectorExpr
	%21 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%22 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %21, i64 0
	%23 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %22, i64 0, i32 5
	%24 = load i64, i64* %23, align 8
	%25 = sitofp i64 %24 to double
	%26 = load double, double* %20, align 8
	%27 = fdiv double %26, %25
	store double %27, double* %20
	; AssignStmt
	; SelectorExpr
	%28 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%29 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %28, i64 0
	%30 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %29, i64 0, i32 1
	; SelectorExpr
	%31 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%32 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %31, i64 0
	%33 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %32, i64 0, i32 2
	%34 = load double, double* %33, align 8
	; SelectorExpr
	%35 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%36 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %35, i64 0
	%37 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %36, i64 0, i32 0
	%38 = load double, double* %37, align 8
	%39 = fmul double %34, %38
	store double %39, double* %30
	; AssignStmt
	; SelectorExpr
	%40 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%41 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %40, i64 0
	%42 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %41, i64 0, i32 3
	; SelectorExpr
	%43 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%44 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %43, i64 0
	%45 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %44, i64 0, i32 2
	%46 = load double, double* %45, align 8
	%47 = load double, double* %42, align 8
	%48 = fadd double %47, %46
	store double %48, double* %42
	; SelectorExpr
	%49 = load %time-15.Data_t*, %time-15.Data_t** %0, align 8
	%50 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %49, i64 0
	%51 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %50, i64 0, i32 4
	%52 = load i64, i64* %51, align 8
	%53 = add i64 %52, 1
	store i64 %53, i64* %51
	ret void
}

define {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-957(i64 %kind, %..string %path, %..string %acceptedExtensions) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %..string, align 8
	%3 = alloca {%catalog-16.Catalog*, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %kind, i64* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %path, %..string* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %acceptedExtensions, %..string* %2
	; ReturnStmt
	%4 = load i64, i64* %0, align 8
	%5 = load %..string, %..string* %1, align 8
	%6 = load %..string, %..string* %1, align 8
	%7 = load %..string, %..string* %2, align 8
	%8 = call {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-958(i64 %4, %..string %5, %..string %6, %..string %7)
	%9 = extractvalue {%catalog-16.Catalog*, i64} %8, 0
	%10 = extractvalue {%catalog-16.Catalog*, i64} %8, 1
	store {%catalog-16.Catalog*, i64} zeroinitializer, {%catalog-16.Catalog*, i64}* %3
	%11 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %3, i64 0, i32 0
	store %catalog-16.Catalog* %9, %catalog-16.Catalog** %11
	%12 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %3, i64 0, i32 1
	store i64 %10, i64* %12
	%13 = load {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %3, align 8
	ret {%catalog-16.Catalog*, i64} %13
}

define {%catalog-16.Catalog*, i64} @catalog-16.CreateNew-958(i64 %kind, %..string %identifier, %..string %path, %..string %acceptedExtensions) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %..string, align 8
	%4 = alloca i8*, align 8
	%5 = alloca i32, align 4
	%6 = alloca %catalog-16.Catalog*, align 8
	%7 = alloca {i8*, i64, i64}, align 8
	%8 = alloca {i8*, i64, i64}, align 8
	%9 = alloca {i8*, i64, i64}, align 8
	%10 = alloca %..any, align 8
	%11 = alloca %..any, align 8
	%12 = alloca %..string, align 8
	%13 = alloca {%..any*, i64, i64}, align 8
	%14 = alloca [2 x %..any], align 8
	%15 = alloca %jwin32-38.FindData, align 4
	%16 = alloca {i8*, i64, i64}, align 8
	%17 = alloca %..any, align 8
	%18 = alloca %..any, align 8
	%19 = alloca %..string, align 8
	%20 = alloca {%..any*, i64, i64}, align 8
	%21 = alloca [2 x %..any], align 8
	%22 = alloca %..rawptr, align 8
	%23 = alloca {i8*, i64, i64}, align 8
	%24 = alloca {i8*, i64, i64}, align 8
	%25 = alloca {i8*, i64, i64}, align 8
	%26 = alloca %..string, align 8
	%27 = alloca %..string, align 8
	%28 = alloca i64, align 8
	%29 = alloca %asset-25.FileInfo_t, align 8
	%30 = alloca %jwin32-38.FindData, align 16
	%31 = alloca %asset-25.FileInfo_t, align 16
	%32 = alloca %asset-25.FileInfo_t, align 16
	%33 = alloca %asset-25.FileInfo_t, align 16
	%34 = alloca %..any, align 8
	%35 = alloca {%..any*, i64, i64}, align 8
	%36 = alloca [1 x %..any], align 8
	%37 = alloca {%..string*, i64, i64}, align 8
	%38 = alloca [1 x %..string], align 8
	%39 = alloca {%catalog-16.Catalog**, i64, i64}, align 8
	%40 = alloca [1 x %catalog-16.Catalog*], align 8
	%41 = alloca {%catalog-16.Catalog*, i64}, align 8
	%42 = alloca {%catalog-16.Catalog*, i64}, align 8
	%43 = alloca {%catalog-16.Catalog*, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %kind, i64* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %identifier, %..string* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %path, %..string* %2
	store %..string zeroinitializer, %..string* %3
		store %..string %acceptedExtensions, %..string* %3
	; pstr
	store i8* zeroinitializer, i8** %4
		; SelectorExpr
	%44 = load %..string, %..string* %2, align 8
	%45 = call i8* @strings-7.new_c_string(%..string %44)
	store i8* %45, i8** %4
	; DeferStmt
	; attr
	store i32 zeroinitializer, i32* %5
		; SelectorExpr
	%46 = load i8*, i8** %4, align 8
	%47 = call ccc i32 @GetFileAttributesA(i8* %46)
	store i32 %47, i32* %5
	; IfStmt
	%48 = load i32, i32* %5, align 4
	%49 = call i1 @catalog-16._IsDirectory(i32 %48)
	br i1 %49, label %if.then-1, label %if.else-28

if.then-1:
	; res
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %6
		; new
	%50 = call %..rawptr @alloc_align(i64 184, i64 8)
	%51 = bitcast %..rawptr %50 to %catalog-16.Catalog*
	store %catalog-16.Catalog* %51, %catalog-16.Catalog** %6
	; AssignStmt
	; SelectorExpr
	%52 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%53 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %52, i64 0
	%54 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %53, i64 0, i32 2
	%55 = load %..string, %..string* %1, align 8
	store %..string %55, %..string* %54
	; buf
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %7
		; make
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$40b, i64 0, i32 0), i64 29}, i64 115, i64 33, i64 0, i64 260, i64 260)
	%56 = mul i64 1, 260
	%57 = call %..rawptr @alloc_align(i64 %56, i64 1)
	%58 = bitcast %..rawptr %57 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %8
	%59 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 0
	store i8* %58, i8** %59
	%60 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 1
	store i64 260, i64* %60
	%61 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 2
	store i64 260, i64* %61
	%62 = load {i8*, i64, i64}, {i8*, i64, i64}* %8, align 8
	store {i8*, i64, i64} %62, {i8*, i64, i64}* %7
	; AssignStmt
	; SelectorExpr
	%63 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%64 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %63, i64 0
	%65 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %64, i64 0, i32 3
	; SelectorExpr
	; SliceExpr
	%66 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%67 = extractvalue {i8*, i64, i64} %66, 1
	%68 = extractvalue {i8*, i64, i64} %66, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$40c, i64 0, i32 0), i64 29}, i64 116, i64 35, i64 0, i64 %67, i64 %68)
	%69 = extractvalue {i8*, i64, i64} %66, 0
	%70 = getelementptr inbounds i8, i8* %69, i64 0
	%71 = sub i64 %67, 0
	%72 = sub i64 %68, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %9
	%73 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 0
	store i8* %70, i8** %73
	%74 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 1
	store i64 %71, i64* %74
	%75 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 2
	store i64 %72, i64* %75
	%76 = load {i8*, i64, i64}, {i8*, i64, i64}* %9, align 8
	%77 = load %..string, %..string* %2, align 8
	; TernaryExpr
	; IndexExpr
	%78 = load %..string, %..string* %2, align 8
	%79 = extractvalue %..string %78, 0
	%80 = extractvalue %..string %78, 1
	%81 = load %..string, %..string* %2, align 8
	%82 = extractvalue %..string %81, 1
	%83 = sub i64 %82, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$40d, i64 0, i32 0), i64 29}, i64 116, i64 60, i64 %83, i64 %80)
	%84 = getelementptr inbounds i8, i8* %79, i64 %83
	%85 = load i8, i8* %84, align 1
	%86 = icmp eq i8 %85, 47
	br i1 %86, label %if.then-2, label %if.else-3

if.then-2:
	br label %if.done-4

if.else-3:
	br label %if.done-4

if.done-4:
	%87 = phi %..string [ zeroinitializer, %if.then-2 ], [ {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$40e, i64 0, i32 0), i64 1}, %if.else-3 ]
	store %..any zeroinitializer, %..any* %10
	%88 = bitcast %..string* %2 to %..rawptr
	%89 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%90 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %88, %..rawptr* %90
	%91 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %89, %Type_Info** %91
	%92 = load %..any, %..any* %10, align 8
	store %..any zeroinitializer, %..any* %11
	store %..string zeroinitializer, %..string* %12
	store %..string %87, %..string* %12
	%93 = bitcast %..string* %12 to %..rawptr
	%94 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%95 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %93, %..rawptr* %95
	%96 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %94, %Type_Info** %96
	%97 = load %..any, %..any* %11, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	store [2 x %..any] zeroinitializer, [2 x %..any]* %14
	%98 = getelementptr inbounds [2 x %..any], [2 x %..any]* %14, i64 0, i32 0
	store %..any %92, %..any* %98
	%99 = getelementptr inbounds [2 x %..any], [2 x %..any]* %14, i64 0, i32 1
	store %..any %97, %..any* %99
	%100 = getelementptr inbounds [2 x %..any], [2 x %..any]* %14, i64 0, i32 0
	%101 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 0
	store %..any* %100, %..any** %101
	%102 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 1
	store i64 2, i64* %102
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 2
	store i64 2, i64* %103
	%104 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	%105 = call %..string @fmt-4.bprintf({i8*, i64, i64} %76, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$40f, i64 0, i32 0), i64 4}, {%..any*, i64, i64} %104)
	store %..string %105, %..string* %65
	; AssignStmt
	; SelectorExpr
	%106 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%107 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %106, i64 0
	%108 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %107, i64 0, i32 4
	%109 = load i64, i64* %0, align 8
	store i64 %109, i64* %108
	%110 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%111 = load %..string, %..string* %3, align 8
	call void @catalog-16.CreateNew-958.ExtractAcceptedExtensions-3(%catalog-16.Catalog* %110, %..string %111)
	; data
	store %jwin32-38.FindData zeroinitializer, %jwin32-38.FindData* %15
		store %jwin32-38.FindData zeroinitializer, %jwin32-38.FindData* %15
	; SelectorExpr
	; SliceExpr
	%112 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%113 = extractvalue {i8*, i64, i64} %112, 1
	%114 = extractvalue {i8*, i64, i64} %112, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$410, i64 0, i32 0), i64 29}, i64 120, i64 24, i64 0, i64 %113, i64 %114)
	%115 = extractvalue {i8*, i64, i64} %112, 0
	%116 = getelementptr inbounds i8, i8* %115, i64 0
	%117 = sub i64 %113, 0
	%118 = sub i64 %114, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %16
	%119 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 0
	store i8* %116, i8** %119
	%120 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 1
	store i64 %117, i64* %120
	%121 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 2
	store i64 %118, i64* %121
	%122 = load {i8*, i64, i64}, {i8*, i64, i64}* %16, align 8
	%123 = load %..string, %..string* %2, align 8
	; TernaryExpr
	; IndexExpr
	%124 = load %..string, %..string* %2, align 8
	%125 = extractvalue %..string %124, 0
	%126 = extractvalue %..string %124, 1
	%127 = load %..string, %..string* %2, align 8
	%128 = extractvalue %..string %127, 1
	%129 = sub i64 %128, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$411, i64 0, i32 0), i64 29}, i64 120, i64 49, i64 %129, i64 %126)
	%130 = getelementptr inbounds i8, i8* %125, i64 %129
	%131 = load i8, i8* %130, align 1
	%132 = icmp eq i8 %131, 92
	br i1 %132, label %if.then-5, label %if.else-6

if.then-5:
	br label %if.done-7

if.else-6:
	br label %if.done-7

if.done-7:
	%133 = phi %..string [ {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$412, i64 0, i32 0), i64 1}, %if.then-5 ], [ {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$413, i64 0, i32 0), i64 2}, %if.else-6 ]
	store %..any zeroinitializer, %..any* %17
	%134 = bitcast %..string* %2 to %..rawptr
	%135 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%136 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %134, %..rawptr* %136
	%137 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %135, %Type_Info** %137
	%138 = load %..any, %..any* %17, align 8
	store %..any zeroinitializer, %..any* %18
	store %..string zeroinitializer, %..string* %19
	store %..string %133, %..string* %19
	%139 = bitcast %..string* %19 to %..rawptr
	%140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%141 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 0
	store %..rawptr %139, %..rawptr* %141
	%142 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 1
	store %Type_Info* %140, %Type_Info** %142
	%143 = load %..any, %..any* %18, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %20
	store [2 x %..any] zeroinitializer, [2 x %..any]* %21
	%144 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	store %..any %138, %..any* %144
	%145 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 1
	store %..any %143, %..any* %145
	%146 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	%147 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 0
	store %..any* %146, %..any** %147
	%148 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 1
	store i64 2, i64* %148
	%149 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 2
	store i64 2, i64* %149
	%150 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %20, align 8
	%151 = call %..string @fmt-4.bprintf({i8*, i64, i64} %122, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$414, i64 0, i32 0), i64 4}, {%..any*, i64, i64} %150)
	; fileH
	store %..rawptr zeroinitializer, %..rawptr* %22
		; SelectorExpr
	; IndexExpr
	%152 = load {i8*, i64, i64}, {i8*, i64, i64}* %7, align 8
	%153 = extractvalue {i8*, i64, i64} %152, 0
	%154 = extractvalue {i8*, i64, i64} %152, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$415, i64 0, i32 0), i64 29}, i64 121, i64 41, i64 0, i64 %154)
	%155 = getelementptr inbounds i8, i8* %153, i64 0
	%156 = getelementptr inbounds i8, i8* %155, i64 0
	%157 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %15, i64 0
	%158 = call ccc %..rawptr @FindFirstFileA(i8* %156, %jwin32-38.FindData* %157)
	store %..rawptr %158, %..rawptr* %22
	; IfStmt
	%159 = load %..rawptr, %..rawptr* %22, align 8
	%160 = icmp ne %..rawptr %159, inttoptr (i64 18446744073709551615 to %..rawptr)
	br i1 %160, label %if.then-8, label %if.else-26

if.then-8:
	; ForStmt
	br label %for.loop-9

for.loop-9:
	; SelectorExpr
	%161 = load %..rawptr, %..rawptr* %22, align 8
	%162 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %15, i64 0
	%163 = call ccc i32 @FindNextFileA(%..rawptr %161, %jwin32-38.FindData* %162)
	%164 = icmp eq i32 %163, 1
	br i1 %164, label %for.body-10, label %for.done-25

for.body-10:
	; IfStmt
	; SelectorExpr
	%165 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %15, i64 0, i32 0
	%166 = load i32, i32* %165, align 4
	%167 = call i1 @catalog-16._IsDirectory(i32 %166)
	br i1 %167, label %if.then-11, label %if.done-12

if.then-11:
	; continue
	br label %for.loop-9

if.done-12:
	; nameBuf
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %23
		; make
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$416, i64 0, i32 0), i64 29}, i64 128, i64 41, i64 0, i64 260, i64 260)
	%168 = mul i64 1, 260
	%169 = call %..rawptr @alloc_align(i64 %168, i64 1)
	%170 = bitcast %..rawptr %169 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %24
	%171 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %24, i64 0, i32 0
	store i8* %170, i8** %171
	%172 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %24, i64 0, i32 1
	store i64 260, i64* %172
	%173 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %24, i64 0, i32 2
	store i64 260, i64* %173
	%174 = load {i8*, i64, i64}, {i8*, i64, i64}* %24, align 8
	store {i8*, i64, i64} %174, {i8*, i64, i64}* %23
	; copy
	%175 = load {i8*, i64, i64}, {i8*, i64, i64}* %23, align 8
	; SliceExpr
	; SelectorExpr
	%176 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %15, i64 0, i32 8
	%177 = load [260 x i8], [260 x i8]* %176, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$417, i64 0, i32 0), i64 29}, i64 129, i64 44, i64 0, i64 260, i64 260)
	%178 = getelementptr inbounds [260 x i8], [260 x i8]* %176, i64 0, i32 0
	%179 = getelementptr inbounds i8, i8* %178, i64 0
	%180 = sub i64 260, 0
	%181 = sub i64 260, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %25
	%182 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %25, i64 0, i32 0
	store i8* %179, i8** %182
	%183 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %25, i64 0, i32 1
	store i64 %180, i64* %183
	%184 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %25, i64 0, i32 2
	store i64 %181, i64* %184
	%185 = load {i8*, i64, i64}, {i8*, i64, i64}* %25, align 8
	%186 = extractvalue {i8*, i64, i64} %175, 0
	%187 = bitcast i8* %186 to %..rawptr
	%188 = extractvalue {i8*, i64, i64} %185, 0
	%189 = bitcast i8* %188 to %..rawptr
	%190 = extractvalue {i8*, i64, i64} %175, 1
	%191 = extractvalue {i8*, i64, i64} %185, 1
	%192 = icmp slt i64 %190, %191
	%193 = select i1 %192, i64 %190, i64 %191
	%194 = mul i64 %193, 1
	%195 = call %..rawptr @__mem_copy(%..rawptr %187, %..rawptr %189, i64 %194)
	; str
	store %..string zeroinitializer, %..string* %26
		; SelectorExpr
	; IndexExpr
	%196 = load {i8*, i64, i64}, {i8*, i64, i64}* %23, align 8
	%197 = extractvalue {i8*, i64, i64} %196, 0
	%198 = extractvalue {i8*, i64, i64} %196, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$418, i64 0, i32 0), i64 29}, i64 130, i64 56, i64 0, i64 %198)
	%199 = getelementptr inbounds i8, i8* %197, i64 0
	%200 = getelementptr inbounds i8, i8* %199, i64 0
	%201 = call %..string @strings-7.to_odin_string(i8* %200)
	store %..string %201, %..string* %26
	; RangeStmt
	; ext
	store %..string zeroinitializer, %..string* %27
		; SelectorExpr
	%202 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%203 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %202, i64 0
	%204 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %203, i64 0, i32 1
	%205 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %204, i64 0, i32 1
	store i64 zeroinitializer, i64* %28
	store i64 -1, i64* %28
	br label %for.index.loop-13

for.index.loop-13:
	%206 = load i64, i64* %28, align 8
	%207 = add i64 %206, 1
	store i64 %207, i64* %28
	%208 = load i64, i64* %205, align 8
	%209 = icmp slt i64 %207, %208
	br i1 %209, label %for.index.body-14, label %for.index.done-24

for.index.body-14:
	%210 = load i64, i64* %28, align 8
	%211 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %204, i64 0, i32 0
	%212 = load %..string*, %..string** %211, align 8
	%213 = getelementptr inbounds %..string, %..string* %212, i64 %210
	%214 = load %..string, %..string* %213, align 8
	store %..string %214, %..string* %27
	; IfStmt
	%215 = load %..string, %..string* %26, align 8
	%216 = call %..string @catalog-16._GetFileExtension(%..string %215)
	%217 = load %..string, %..string* %27, align 8
	%218 = call i1 @__string_eq(%..string %216, %..string %217)
	br i1 %218, label %if.then-15, label %if.done-23

if.then-15:
	; file
	store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %29
		; SelectorExpr
	%219 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%220 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %219, i64 0
	%221 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %220, i64 0, i32 3
	%222 = load %..string, %..string* %221, align 8
	%223 = load %..string, %..string* %26, align 8
	%224 = load %jwin32-38.FindData, %jwin32-38.FindData* %15, align 4
	store %jwin32-38.FindData zeroinitializer, %jwin32-38.FindData* %30
	store %jwin32-38.FindData %224, %jwin32-38.FindData* %30
	%225 = call %asset-25.FileInfo_t @catalog-16._CreateFileInfo(%..string %222, %..string %223, %jwin32-38.FindData* %30)
	store %asset-25.FileInfo_t %225, %asset-25.FileInfo_t* %29
	; AssignStmt
	; SelectorExpr
	%226 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%227 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %226, i64 0
	%228 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %227, i64 0, i32 6
	; SelectorExpr
	%229 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %29, i64 0, i32 3
	%230 = load i64, i64* %229, align 8
	%231 = bitcast i64 %230 to i64
	%232 = load i64, i64* %228, align 8
	%233 = add i64 %232, %231
	store i64 %233, i64* %228
	; MatchStmt
	%234 = load i64, i64* %0, align 8
	%235 = icmp eq i64 %234, 0
	br i1 %235, label %match.case.body-17, label %match.case.next-16

match.case.next-16:
	%236 = icmp eq i64 %234, 1
	br i1 %236, label %match.fall.body-19, label %match.case.next-18

match.case.body-17:
	%237 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%238 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %29, align 8
	store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %31
	store %asset-25.FileInfo_t %238, %asset-25.FileInfo_t* %31
	call void @catalog-16.CreateNew-958.AddTexture-0(%catalog-16.Catalog* %237, %asset-25.FileInfo_t* %31)
	br label %match.done-22

match.case.next-18:
	%239 = icmp eq i64 %234, 2
	br i1 %239, label %match.fall.body-21, label %match.case.next-20

match.fall.body-19:
	%240 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%241 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %29, align 8
	store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %32
	store %asset-25.FileInfo_t %241, %asset-25.FileInfo_t* %32
	call void @catalog-16.CreateNew-958.AddShader-1(%catalog-16.Catalog* %240, %asset-25.FileInfo_t* %32)
	br label %match.done-22

match.case.next-20:
	; SelectorExpr
	%242 = load i64, i64* %0, align 8
	store %..any zeroinitializer, %..any* %34
	%243 = bitcast i64* %0 to %..rawptr
	%244 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 304
	%245 = getelementptr inbounds %..any, %..any* %34, i64 0, i32 0
	store %..rawptr %243, %..rawptr* %245
	%246 = getelementptr inbounds %..any, %..any* %34, i64 0, i32 1
	store %Type_Info* %244, %Type_Info** %246
	%247 = load %..any, %..any* %34, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %35
	store [1 x %..any] zeroinitializer, [1 x %..any]* %36
	%248 = getelementptr inbounds [1 x %..any], [1 x %..any]* %36, i64 0, i32 0
	store %..any %247, %..any* %248
	%249 = getelementptr inbounds [1 x %..any], [1 x %..any]* %36, i64 0, i32 0
	%250 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %35, i64 0, i32 0
	store %..any* %249, %..any** %250
	%251 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %35, i64 0, i32 1
	store i64 1, i64* %251
	%252 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %35, i64 0, i32 2
	store i64 1, i64* %252
	%253 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %35, align 8
	%254 = call i64 @fmt-4.println({%..any*, i64, i64} %253)
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$419, i64 0, i32 0), i64 29}, i64 150, i64 39, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$41a, i64 0, i32 0), i64 4})
	br label %match.done-22

match.fall.body-21:
	%255 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%256 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %29, align 8
	store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %33
	store %asset-25.FileInfo_t %256, %asset-25.FileInfo_t* %33
	call void @catalog-16.CreateNew-958.AddSound-2(%catalog-16.Catalog* %255, %asset-25.FileInfo_t* %33)
	br label %match.done-22

match.done-22:
	; break
	br label %for.index.done-24

if.done-23:
	br label %for.index.loop-13

for.index.done-24:
	; SelectorExpr
	%257 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%258 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %257, i64 0
	%259 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %258, i64 0, i32 5
	%260 = load i64, i64* %259, align 8
	%261 = add i64 %260, 1
	store i64 %261, i64* %259
	br label %for.loop-9

for.done-25:
	; SelectorExpr
	%262 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 2
	%263 = load i64, i64* %262, align 8
	%264 = add i64 %263, 1
	store i64 %264, i64* %262
	; append
	; SelectorExpr
	%265 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 0
	%266 = bitcast {%..string*, i64, i64,%Allocator}* %265 to %..rawptr
	; SelectorExpr
	%267 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 0
	%268 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %267, align 8
	; SelectorExpr
	%269 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%270 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %269, i64 0
	%271 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %270, i64 0, i32 2
	%272 = load %..string, %..string* %271, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %37
	store [1 x %..string] zeroinitializer, [1 x %..string]* %38
	%273 = getelementptr inbounds [1 x %..string], [1 x %..string]* %38, i64 0, i32 0
	store %..string %272, %..string* %273
	%274 = getelementptr inbounds [1 x %..string], [1 x %..string]* %38, i64 0, i32 0
	%275 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %37, i64 0, i32 0
	store %..string* %274, %..string** %275
	%276 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %37, i64 0, i32 1
	store i64 1, i64* %276
	%277 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %37, i64 0, i32 2
	store i64 1, i64* %277
	%278 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %37, align 8
	%279 = extractvalue {%..string*, i64, i64} %278, 0
	%280 = extractvalue {%..string*, i64, i64} %278, 1
	%281 = bitcast %..string* %279 to %..rawptr
	%282 = call i64 @__dynamic_array_append(%..rawptr %266, i64 16, i64 8, %..rawptr %281, i64 %280)
	; append
	; SelectorExpr
	%283 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 1
	%284 = bitcast {%catalog-16.Catalog**, i64, i64,%Allocator}* %283 to %..rawptr
	; SelectorExpr
	%285 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 1
	%286 = load {%catalog-16.Catalog**, i64, i64,%Allocator}, {%catalog-16.Catalog**, i64, i64,%Allocator}* %285, align 8
	%287 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	; variadic call argument generation
	store {%catalog-16.Catalog**, i64, i64} zeroinitializer, {%catalog-16.Catalog**, i64, i64}* %39
	store [1 x %catalog-16.Catalog*] zeroinitializer, [1 x %catalog-16.Catalog*]* %40
	%288 = getelementptr inbounds [1 x %catalog-16.Catalog*], [1 x %catalog-16.Catalog*]* %40, i64 0, i32 0
	store %catalog-16.Catalog* %287, %catalog-16.Catalog** %288
	%289 = getelementptr inbounds [1 x %catalog-16.Catalog*], [1 x %catalog-16.Catalog*]* %40, i64 0, i32 0
	%290 = getelementptr inbounds {%catalog-16.Catalog**, i64, i64}, {%catalog-16.Catalog**, i64, i64}* %39, i64 0, i32 0
	store %catalog-16.Catalog** %289, %catalog-16.Catalog*** %290
	%291 = getelementptr inbounds {%catalog-16.Catalog**, i64, i64}, {%catalog-16.Catalog**, i64, i64}* %39, i64 0, i32 1
	store i64 1, i64* %291
	%292 = getelementptr inbounds {%catalog-16.Catalog**, i64, i64}, {%catalog-16.Catalog**, i64, i64}* %39, i64 0, i32 2
	store i64 1, i64* %292
	%293 = load {%catalog-16.Catalog**, i64, i64}, {%catalog-16.Catalog**, i64, i64}* %39, align 8
	%294 = extractvalue {%catalog-16.Catalog**, i64, i64} %293, 0
	%295 = extractvalue {%catalog-16.Catalog**, i64, i64} %293, 1
	%296 = bitcast %catalog-16.Catalog** %294 to %..rawptr
	%297 = call i64 @__dynamic_array_append(%..rawptr %284, i64 8, i64 8, %..rawptr %296, i64 %295)
	; ReturnStmt
	%298 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	store {%catalog-16.Catalog*, i64} zeroinitializer, {%catalog-16.Catalog*, i64}* %41
	%299 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %41, i64 0, i32 0
	store %catalog-16.Catalog* %298, %catalog-16.Catalog** %299
	%300 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %41, i64 0, i32 1
	store i64 0, i64* %300
	%301 = load {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %41, align 8
	; defer
	; free
	%302 = load i8*, i8** %4, align 8
	%303 = bitcast i8* %302 to %..rawptr
	call void @free_ptr(%..rawptr %303)
	ret {%catalog-16.Catalog*, i64} %301

if.else-26:
	; free
	%304 = load %catalog-16.Catalog*, %catalog-16.Catalog** %6, align 8
	%305 = bitcast %catalog-16.Catalog* %304 to %..rawptr
	call void @free_ptr(%..rawptr %305)
	; ReturnStmt
	store {%catalog-16.Catalog*, i64} zeroinitializer, {%catalog-16.Catalog*, i64}* %42
	%306 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %42, i64 0, i32 0
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %306
	%307 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %42, i64 0, i32 1
	store i64 2, i64* %307
	%308 = load {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %42, align 8
	; defer
	; free
	%309 = load i8*, i8** %4, align 8
	%310 = bitcast i8* %309 to %..rawptr
	call void @free_ptr(%..rawptr %310)
	ret {%catalog-16.Catalog*, i64} %308

if.done-27:
	br label %if.done-29

if.else-28:
	; ReturnStmt
	store {%catalog-16.Catalog*, i64} zeroinitializer, {%catalog-16.Catalog*, i64}* %43
	%311 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %43, i64 0, i32 0
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %311
	%312 = getelementptr inbounds {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %43, i64 0, i32 1
	store i64 1, i64* %312
	%313 = load {%catalog-16.Catalog*, i64}, {%catalog-16.Catalog*, i64}* %43, align 8
	; defer
	; free
	%314 = load i8*, i8** %4, align 8
	%315 = bitcast i8* %314 to %..rawptr
	call void @free_ptr(%..rawptr %315)
	ret {%catalog-16.Catalog*, i64} %313

if.done-29:
	unreachable
}

define void @catalog-16.CreateNew-958.AddTexture-0(%catalog-16.Catalog* %res, %asset-25.FileInfo_t* %file) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %asset-25.Asset*, align 8
	%2 = alloca %asset-25.Asset.Texture, align 8
	%3 = alloca i8*, align 8
	%4 = alloca %asset-25.Asset, align 8
	%5 = alloca %__Map_Header, align 8
	%6 = alloca %__Map_Key, align 8
	%7 = alloca %asset-25.Asset*, align 8
	%8 = alloca %__Map_Header, align 16
	%9 = alloca %__Map_Key, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %res, %catalog-16.Catalog** %0
	%10 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	; asset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %1
		; new
	%11 = call %..rawptr @alloc_align(i64 424, i64 8)
	%12 = bitcast %..rawptr %11 to %asset-25.Asset*
	store %asset-25.Asset* %12, %asset-25.Asset** %1
	; texture
	store %asset-25.Asset.Texture zeroinitializer, %asset-25.Asset.Texture* %2
		store %asset-25.Asset.Texture zeroinitializer, %asset-25.Asset.Texture* %2
	; AssignStmt
	; SelectorExpr
	%13 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, i64 0, i32 0
	%14 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	store %asset-25.FileInfo_t %14, %asset-25.FileInfo_t* %13
	; AssignStmt
	; SelectorExpr
	%15 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, i64 0, i32 1
	store i1 false, i1* %15
	; c_str
	store i8* zeroinitializer, i8** %3
		; SelectorExpr
	; SelectorExpr
	%16 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, i64 0, i32 2
	%17 = load %..string, %..string* %16, align 8
	%18 = call i8* @strings-7.new_c_string(%..string %17)
	store i8* %18, i8** %3
	; DeferStmt
	; SelectorExpr
	%19 = load i8*, i8** %3, align 8
	; SelectorExpr
	%20 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, i64 0, i32 3
	%21 = getelementptr inbounds i32, i32* %20, i64 0
	; SelectorExpr
	%22 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, i64 0, i32 4
	%23 = getelementptr inbounds i32, i32* %22, i64 0
	; SelectorExpr
	%24 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, i64 0, i32 5
	%25 = getelementptr inbounds i32, i32* %24, i64 0
	%26 = call ccc i32 @stbi_info(i8* %19, i32* %21, i32* %23, i32* %25)
	; AssignStmt
	%27 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%28 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %27, i64 0
	%29 = load %asset-25.Asset.Texture, %asset-25.Asset.Texture* %2, align 8
	; union - child to parent
	store %asset-25.Asset zeroinitializer, %asset-25.Asset* %4
	%30 = bitcast %asset-25.Asset* %4 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture %29, %asset-25.Asset.Texture* %30
	%31 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %4, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %31
	%32 = load %asset-25.Asset, %asset-25.Asset* %4, align 8
	store %asset-25.Asset %32, %asset-25.Asset* %28
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%33 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%34 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %33, i64 0
	%35 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %34, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%36 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%37 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %36, i64 0
	%38 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %37, i64 0, i32 1
	%39 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %38, i64 0, i32 0
	%40 = load %..string, %..string* %39, align 8
	%41 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	%42 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 0
	%43 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %35 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %43, %raw-6.Dynamic_Map** %42
	%44 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 1
	store i1 true, i1* %44
	%45 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 2
	store i64 40, i64* %45
	%46 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 3
	store i64 8, i64* %46
	%47 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 4
	store i64 32, i64* %47
	%48 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 5
	store i64 8, i64* %48
	%49 = load %__Map_Header, %__Map_Header* %5, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	%50 = call i64 @__default_hash_string(%..string %40)
	%51 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 0
	store i64 %50, i64* %51
	%52 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 1
	store %..string %40, %..string* %52
	%53 = load %__Map_Key, %__Map_Key* %6, align 8
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %7
	store %asset-25.Asset* %41, %asset-25.Asset** %7
	%54 = bitcast %asset-25.Asset** %7 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %8
	store %__Map_Header %49, %__Map_Header* %8
	store %__Map_Key zeroinitializer, %__Map_Key* %9
	store %__Map_Key %53, %__Map_Key* %9
	call void @__dynamic_map_set(%__Map_Header* %8, %__Map_Key* %9, %..rawptr %54)
	; defer
	; free
	%55 = load i8*, i8** %3, align 8
	%56 = bitcast i8* %55 to %..rawptr
	call void @free_ptr(%..rawptr %56)
	ret void
}

define void @catalog-16.CreateNew-958.AddShader-1(%catalog-16.Catalog* %res, %asset-25.FileInfo_t* %file) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %asset-25.Asset*, align 8
	%2 = alloca %asset-25.Asset.Shader, align 8
	%3 = alloca %asset-25.Asset, align 8
	%4 = alloca %__Map_Header, align 8
	%5 = alloca %__Map_Key, align 8
	%6 = alloca %asset-25.Asset*, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %res, %catalog-16.Catalog** %0
	%9 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	; asset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %1
		; new
	%10 = call %..rawptr @alloc_align(i64 424, i64 8)
	%11 = bitcast %..rawptr %10 to %asset-25.Asset*
	store %asset-25.Asset* %11, %asset-25.Asset** %1
	; shader
	store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %2
		store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %2
	; AssignStmt
	; SelectorExpr
	%12 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 0
	%13 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	store %asset-25.FileInfo_t %13, %asset-25.FileInfo_t* %12
	; AssignStmt
	; SelectorExpr
	%14 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 1
	store i1 false, i1* %14
	; MatchStmt
	; SelectorExpr
	; SelectorExpr
	%15 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 0
	%16 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %15, i64 0, i32 1
	%17 = load %..string, %..string* %16, align 8
	%18 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$41b, i64 0, i32 0), i64 3})
	br i1 %18, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%19 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$41c, i64 0, i32 0), i64 6})
	br i1 %19, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	; AssignStmt
	; SelectorExpr
	%20 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35633, i32* %20
	br label %match.done-13

match.case.next-3:
	%21 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$41d, i64 0, i32 0), i64 5})
	br i1 %21, label %match.fall.body-6, label %match.case.next-5

match.fall.body-4:
	; AssignStmt
	; SelectorExpr
	%22 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35633, i32* %22
	br label %match.done-13

match.case.next-5:
	%23 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$41e, i64 0, i32 0), i64 3})
	br i1 %23, label %match.fall.body-8, label %match.case.next-7

match.fall.body-6:
	; AssignStmt
	; SelectorExpr
	%24 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35633, i32* %24
	br label %match.done-13

match.case.next-7:
	%25 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$41f, i64 0, i32 0), i64 5})
	br i1 %25, label %match.fall.body-10, label %match.case.next-9

match.fall.body-8:
	; AssignStmt
	; SelectorExpr
	%26 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35632, i32* %26
	br label %match.done-13

match.case.next-9:
	%27 = call i1 @__string_eq(%..string %17, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$420, i64 0, i32 0), i64 6})
	br i1 %27, label %match.fall.body-12, label %match.case.next-11

match.fall.body-10:
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35632, i32* %28
	br label %match.done-13

match.case.next-11:
	br label %match.done-13

match.fall.body-12:
	; AssignStmt
	; SelectorExpr
	%29 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, i64 0, i32 3
	store i32 35632, i32* %29
	br label %match.done-13

match.done-13:
	; AssignStmt
	%30 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%31 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %30, i64 0
	%32 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %2, align 8
	; union - child to parent
	store %asset-25.Asset zeroinitializer, %asset-25.Asset* %3
	%33 = bitcast %asset-25.Asset* %3 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader %32, %asset-25.Asset.Shader* %33
	%34 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %3, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %34
	%35 = load %asset-25.Asset, %asset-25.Asset* %3, align 8
	store %asset-25.Asset %35, %asset-25.Asset* %31
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%36 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%37 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %36, i64 0
	%38 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %37, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%39 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%40 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %39, i64 0
	%41 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %40, i64 0, i32 1
	%42 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %41, i64 0, i32 0
	%43 = load %..string, %..string* %42, align 8
	%44 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	%45 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 0
	%46 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %38 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %46, %raw-6.Dynamic_Map** %45
	%47 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 1
	store i1 true, i1* %47
	%48 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 2
	store i64 40, i64* %48
	%49 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 3
	store i64 8, i64* %49
	%50 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 4
	store i64 32, i64* %50
	%51 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 5
	store i64 8, i64* %51
	%52 = load %__Map_Header, %__Map_Header* %4, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %5
	%53 = call i64 @__default_hash_string(%..string %43)
	%54 = getelementptr inbounds %__Map_Key, %__Map_Key* %5, i64 0, i32 0
	store i64 %53, i64* %54
	%55 = getelementptr inbounds %__Map_Key, %__Map_Key* %5, i64 0, i32 1
	store %..string %43, %..string* %55
	%56 = load %__Map_Key, %__Map_Key* %5, align 8
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %6
	store %asset-25.Asset* %44, %asset-25.Asset** %6
	%57 = bitcast %asset-25.Asset** %6 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %52, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %56, %__Map_Key* %8
	call void @__dynamic_map_set(%__Map_Header* %7, %__Map_Key* %8, %..rawptr %57)
	ret void
}

define void @catalog-16.CreateNew-958.AddSound-2(%catalog-16.Catalog* %res, %asset-25.FileInfo_t* %file) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %asset-25.Asset*, align 8
	%2 = alloca %asset-25.Asset.Sound, align 8
	%3 = alloca %asset-25.Asset, align 8
	%4 = alloca %__Map_Header, align 8
	%5 = alloca %__Map_Key, align 8
	%6 = alloca %asset-25.Asset*, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %res, %catalog-16.Catalog** %0
	%9 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	; asset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %1
		; new
	%10 = call %..rawptr @alloc_align(i64 424, i64 8)
	%11 = bitcast %..rawptr %10 to %asset-25.Asset*
	store %asset-25.Asset* %11, %asset-25.Asset** %1
	; sound
	store %asset-25.Asset.Sound zeroinitializer, %asset-25.Asset.Sound* %2
		store %asset-25.Asset.Sound zeroinitializer, %asset-25.Asset.Sound* %2
	; AssignStmt
	; SelectorExpr
	%12 = getelementptr inbounds %asset-25.Asset.Sound, %asset-25.Asset.Sound* %2, i64 0, i32 0
	%13 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %file, align 8
	store %asset-25.FileInfo_t %13, %asset-25.FileInfo_t* %12
	; AssignStmt
	; SelectorExpr
	%14 = getelementptr inbounds %asset-25.Asset.Sound, %asset-25.Asset.Sound* %2, i64 0, i32 1
	store i1 false, i1* %14
	; AssignStmt
	%15 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%16 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %15, i64 0
	%17 = load %asset-25.Asset.Sound, %asset-25.Asset.Sound* %2, align 8
	; union - child to parent
	store %asset-25.Asset zeroinitializer, %asset-25.Asset* %3
	%18 = bitcast %asset-25.Asset* %3 to %asset-25.Asset.Sound*
	store %asset-25.Asset.Sound %17, %asset-25.Asset.Sound* %18
	%19 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %3, i64 0, i32 4 ; UnionTagPtr
	store i64 3, i64* %19
	%20 = load %asset-25.Asset, %asset-25.Asset* %3, align 8
	store %asset-25.Asset %20, %asset-25.Asset* %16
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%21 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%22 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %21, i64 0
	%23 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %22, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%24 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	%25 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %24, i64 0
	%26 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %25, i64 0, i32 1
	%27 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %26, i64 0, i32 0
	%28 = load %..string, %..string* %27, align 8
	%29 = load %asset-25.Asset*, %asset-25.Asset** %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	%30 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 0
	%31 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %23 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %31, %raw-6.Dynamic_Map** %30
	%32 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 1
	store i1 true, i1* %32
	%33 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 2
	store i64 40, i64* %33
	%34 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 3
	store i64 8, i64* %34
	%35 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 4
	store i64 32, i64* %35
	%36 = getelementptr inbounds %__Map_Header, %__Map_Header* %4, i64 0, i32 5
	store i64 8, i64* %36
	%37 = load %__Map_Header, %__Map_Header* %4, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %5
	%38 = call i64 @__default_hash_string(%..string %28)
	%39 = getelementptr inbounds %__Map_Key, %__Map_Key* %5, i64 0, i32 0
	store i64 %38, i64* %39
	%40 = getelementptr inbounds %__Map_Key, %__Map_Key* %5, i64 0, i32 1
	store %..string %28, %..string* %40
	%41 = load %__Map_Key, %__Map_Key* %5, align 8
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %6
	store %asset-25.Asset* %29, %asset-25.Asset** %6
	%42 = bitcast %asset-25.Asset** %6 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %37, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %41, %__Map_Key* %8
	call void @__dynamic_map_set(%__Map_Header* %7, %__Map_Key* %8, %..rawptr %42)
	ret void
}

define void @catalog-16.CreateNew-958.ExtractAcceptedExtensions-3(%catalog-16.Catalog* %res, %..string %acceptedExtensions) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	%6 = alloca {%..string*, i64, i64}, align 8
	%7 = alloca [1 x %..string], align 8
	%8 = alloca %..string, align 8
	%9 = alloca {%..string*, i64, i64}, align 8
	%10 = alloca [1 x %..string], align 8
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %res, %catalog-16.Catalog** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %acceptedExtensions, %..string* %1
	; IfStmt
	%11 = load %..string, %..string* %1, align 8
	%12 = call i1 @__string_ne(%..string %11, %..string zeroinitializer)
	br i1 %12, label %if.then-1, label %if.done-9

if.then-1:
	; strlen
	store i64 zeroinitializer, i64* %2
		%13 = load %..string, %..string* %1, align 8
	%14 = extractvalue %..string %13, 1
	store i64 %14, i64* %2
	; last
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %4
		store i64 0, i64* %4
	br label %for.loop-2

for.loop-2:
	%15 = load i64, i64* %4, align 8
	%16 = load i64, i64* %2, align 8
	%17 = icmp slt i64 %15, %16
	br i1 %17, label %for.body-3, label %for.done-8

for.body-3:
	; IfStmt
	; IndexExpr
	%18 = load %..string, %..string* %1, align 8
	%19 = extractvalue %..string %18, 0
	%20 = extractvalue %..string %18, 1
	%21 = load i64, i64* %4, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$421, i64 0, i32 0), i64 29}, i64 96, i64 39, i64 %21, i64 %20)
	%22 = getelementptr inbounds i8, i8* %19, i64 %21
	%23 = load i8, i8* %22, align 1
	%24 = icmp eq i8 %23, 44
	br i1 %24, label %if.then-4, label %if.done-5

if.then-4:
	; append
	; SelectorExpr
	%25 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%26 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %25, i64 0
	%27 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %26, i64 0, i32 1
	%28 = bitcast {%..string*, i64, i64,%Allocator}* %27 to %..rawptr
	; SelectorExpr
	%29 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%30 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %29, i64 0
	%31 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %30, i64 0, i32 1
	%32 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %31, align 8
	; SliceExpr
	%33 = load i64, i64* %3, align 8
	%34 = load i64, i64* %4, align 8
	%35 = load %..string, %..string* %1, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$422, i64 0, i32 0), i64 29}, i64 97, i64 70, i64 %33, i64 %34)
	%36 = extractvalue %..string %35, 0
	%37 = getelementptr inbounds i8, i8* %36, i64 %33
	%38 = sub i64 %34, %33
	store %..string zeroinitializer, %..string* %5
	%39 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %37, i8** %39
	%40 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %38, i64* %40
	%41 = load %..string, %..string* %5, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %6
	store [1 x %..string] zeroinitializer, [1 x %..string]* %7
	%42 = getelementptr inbounds [1 x %..string], [1 x %..string]* %7, i64 0, i32 0
	store %..string %41, %..string* %42
	%43 = getelementptr inbounds [1 x %..string], [1 x %..string]* %7, i64 0, i32 0
	%44 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6, i64 0, i32 0
	store %..string* %43, %..string** %44
	%45 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %45
	%46 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %46
	%47 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %6, align 8
	%48 = extractvalue {%..string*, i64, i64} %47, 0
	%49 = extractvalue {%..string*, i64, i64} %47, 1
	%50 = bitcast %..string* %48 to %..rawptr
	%51 = call i64 @__dynamic_array_append(%..rawptr %28, i64 16, i64 8, %..rawptr %50, i64 %49)
	; AssignStmt
	%52 = load i64, i64* %4, align 8
	%53 = add i64 %52, 1
	store i64 %53, i64* %3
	br label %if.done-5

if.done-5:
	; IfStmt
	%54 = load i64, i64* %4, align 8
	%55 = load i64, i64* %2, align 8
	%56 = sub i64 %55, 1
	%57 = icmp eq i64 %54, %56
	br i1 %57, label %if.then-6, label %if.done-7

if.then-6:
	; append
	; SelectorExpr
	%58 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%59 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %58, i64 0
	%60 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %59, i64 0, i32 1
	%61 = bitcast {%..string*, i64, i64,%Allocator}* %60 to %..rawptr
	; SelectorExpr
	%62 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%63 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %62, i64 0
	%64 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %63, i64 0, i32 1
	%65 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %64, align 8
	; SliceExpr
	%66 = load i64, i64* %3, align 8
	%67 = load i64, i64* %4, align 8
	%68 = add i64 %67, 1
	%69 = load %..string, %..string* %1, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$423, i64 0, i32 0), i64 29}, i64 102, i64 70, i64 %66, i64 %68)
	%70 = extractvalue %..string %69, 0
	%71 = getelementptr inbounds i8, i8* %70, i64 %66
	%72 = sub i64 %68, %66
	store %..string zeroinitializer, %..string* %8
	%73 = getelementptr inbounds %..string, %..string* %8, i64 0, i32 0
	store i8* %71, i8** %73
	%74 = getelementptr inbounds %..string, %..string* %8, i64 0, i32 1
	store i64 %72, i64* %74
	%75 = load %..string, %..string* %8, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %9
	store [1 x %..string] zeroinitializer, [1 x %..string]* %10
	%76 = getelementptr inbounds [1 x %..string], [1 x %..string]* %10, i64 0, i32 0
	store %..string %75, %..string* %76
	%77 = getelementptr inbounds [1 x %..string], [1 x %..string]* %10, i64 0, i32 0
	%78 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 0
	store %..string* %77, %..string** %78
	%79 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 1
	store i64 1, i64* %79
	%80 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 2
	store i64 1, i64* %80
	%81 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %9, align 8
	%82 = extractvalue {%..string*, i64, i64} %81, 0
	%83 = extractvalue {%..string*, i64, i64} %81, 1
	%84 = bitcast %..string* %82 to %..rawptr
	%85 = call i64 @__dynamic_array_append(%..rawptr %61, i64 16, i64 8, %..rawptr %84, i64 %83)
	br label %if.done-7

if.done-7:
	%86 = load i64, i64* %4, align 8
	%87 = add i64 %86, 1
	store i64 %87, i64* %4
	br label %for.loop-2

for.done-8:
	br label %if.done-9

if.done-9:
	ret void
}

define {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %catalog, %..string %assetName) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%asset-25.Asset*, i64}, align 8
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %catalog, %catalog-16.Catalog** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %assetName, %..string* %1
	; ReturnStmt
	%3 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%4 = load %..string, %..string* %1, align 8
	%5 = call {%asset-25.Asset*, i64} @catalog-16.Find-960(%catalog-16.Catalog* %3, %..string %4, i1 true)
	%6 = extractvalue {%asset-25.Asset*, i64} %5, 0
	%7 = extractvalue {%asset-25.Asset*, i64} %5, 1
	store {%asset-25.Asset*, i64} zeroinitializer, {%asset-25.Asset*, i64}* %2
	%8 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %2, i64 0, i32 0
	store %asset-25.Asset* %6, %asset-25.Asset** %8
	%9 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %9
	%10 = load {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %2, align 8
	ret {%asset-25.Asset*, i64} %10
}

define {%asset-25.Asset*, i64} @catalog-16.Find-960(%catalog-16.Catalog* %catalog, %..string %assetName, i1 %upload) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i1, align 1
	%3 = alloca i1, align 1
	%4 = alloca {%asset-25.Asset*, i1}, align 8
	%5 = alloca %__Map_Header, align 8
	%6 = alloca %__Map_Key, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	%9 = alloca %asset-25.Asset*, align 8
	%10 = alloca {%asset-25.Asset*, i1}, align 8
	%11 = alloca %__Map_Header, align 8
	%12 = alloca %__Map_Key, align 8
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Key, align 16
	%15 = alloca %asset-25.Asset.Texture*, align 8
	%16 = alloca %asset-25.Asset.Shader*, align 8
	%17 = alloca %asset-25.Asset.Sound*, align 8
	%18 = alloca %asset-25.Asset.ShaderProgram*, align 8
	%19 = alloca %asset-25.Asset*, align 8
	%20 = alloca %..any, align 8
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [1 x %..any], align 8
	%23 = alloca {%asset-25.Asset*, i64}, align 8
	%24 = alloca {%asset-25.Asset*, i64}, align 8
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %catalog, %catalog-16.Catalog** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %assetName, %..string* %1
	store i1 zeroinitializer, i1* %2
		store i1 %upload, i1* %2
	; ok
	store i1 zeroinitializer, i1* %3
		; IndexExpr
	; SelectorExpr
	%25 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%26 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %25, i64 0
	%27 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %26, i64 0, i32 0
	%28 = load %..string, %..string* %1, align 8
	store {%asset-25.Asset*, i1} zeroinitializer, {%asset-25.Asset*, i1}* %4
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	%29 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 0
	%30 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %27 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %30, %raw-6.Dynamic_Map** %29
	%31 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 1
	store i1 true, i1* %31
	%32 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 2
	store i64 40, i64* %32
	%33 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 3
	store i64 8, i64* %33
	%34 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 4
	store i64 32, i64* %34
	%35 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 5
	store i64 8, i64* %35
	%36 = load %__Map_Header, %__Map_Header* %5, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	%37 = call i64 @__default_hash_string(%..string %28)
	%38 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 0
	store i64 %37, i64* %38
	%39 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 1
	store %..string %28, %..string* %39
	%40 = load %__Map_Key, %__Map_Key* %6, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %36, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %40, %__Map_Key* %8
	%41 = call %..rawptr @__dynamic_map_get(%__Map_Header* %7, %__Map_Key* %8)
	%42 = icmp ne %..rawptr %41, null
	%43 = getelementptr inbounds {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %4, i64 0, i32 1
	store i1 %42, i1* %43
	br i1 %42, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%44 = getelementptr inbounds {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %4, i64 0, i32 0
	%45 = bitcast %..rawptr %41 to %asset-25.Asset**
	%46 = load %asset-25.Asset*, %asset-25.Asset** %45, align 8
	store %asset-25.Asset* %46, %asset-25.Asset** %44
	br label %map.get.done-2

map.get.done-2:
	%47 = load {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %4, align 8
	%48 = extractvalue {%asset-25.Asset*, i1} %47, 0
	%49 = extractvalue {%asset-25.Asset*, i1} %47, 1
	store i1 %49, i1* %3
	; IfStmt
	%50 = load i1, i1* %3, align 1
	br i1 %50, label %if.then-3, label %if.done-17

if.then-3:
	; asset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %9
		; IndexExpr
	; SelectorExpr
	%51 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%52 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %51, i64 0
	%53 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %52, i64 0, i32 0
	%54 = load %..string, %..string* %1, align 8
	store {%asset-25.Asset*, i1} zeroinitializer, {%asset-25.Asset*, i1}* %10
	store %__Map_Header zeroinitializer, %__Map_Header* %11
	%55 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 0
	%56 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %53 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %56, %raw-6.Dynamic_Map** %55
	%57 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 1
	store i1 true, i1* %57
	%58 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 2
	store i64 40, i64* %58
	%59 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 3
	store i64 8, i64* %59
	%60 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 4
	store i64 32, i64* %60
	%61 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 5
	store i64 8, i64* %61
	%62 = load %__Map_Header, %__Map_Header* %11, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %12
	%63 = call i64 @__default_hash_string(%..string %54)
	%64 = getelementptr inbounds %__Map_Key, %__Map_Key* %12, i64 0, i32 0
	store i64 %63, i64* %64
	%65 = getelementptr inbounds %__Map_Key, %__Map_Key* %12, i64 0, i32 1
	store %..string %54, %..string* %65
	%66 = load %__Map_Key, %__Map_Key* %12, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %62, %__Map_Header* %13
	store %__Map_Key zeroinitializer, %__Map_Key* %14
	store %__Map_Key %66, %__Map_Key* %14
	%67 = call %..rawptr @__dynamic_map_get(%__Map_Header* %13, %__Map_Key* %14)
	%68 = icmp ne %..rawptr %67, null
	%69 = getelementptr inbounds {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %10, i64 0, i32 1
	store i1 %68, i1* %69
	br i1 %68, label %map.get.then-4, label %map.get.done-5

map.get.then-4:
	%70 = getelementptr inbounds {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %10, i64 0, i32 0
	%71 = bitcast %..rawptr %67 to %asset-25.Asset**
	%72 = load %asset-25.Asset*, %asset-25.Asset** %71, align 8
	store %asset-25.Asset* %72, %asset-25.Asset** %70
	br label %map.get.done-5

map.get.done-5:
	%73 = getelementptr inbounds {%asset-25.Asset*, i1}, {%asset-25.Asset*, i1}* %10, i64 0, i32 0
	%74 = load %asset-25.Asset*, %asset-25.Asset** %73, align 8
	store %asset-25.Asset* %74, %asset-25.Asset** %9
	; IfStmt
	; SelectorExpr
	%75 = load %asset-25.Asset*, %asset-25.Asset** %9, align 8
	%76 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %75, i64 0
	%77 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %76, i64 0, i32 2
	%78 = load i1, i1* %77, align 1
	br i1 %78, label %if.done-16, label %if.then-6

if.then-6:
	; TypeMatchStmt
	%79 = load %asset-25.Asset*, %asset-25.Asset** %9, align 8
	; get union's tag
	%80 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %79, i64 0, i32 4 ; UnionTagPtr
	%81 = load i64, i64* %80, align 8
	%82 = bitcast %asset-25.Asset* %79 to %..rawptr
	%83 = icmp eq i64 %81, 1
	br i1 %83, label %typematch.body-8, label %typematch.next-7

typematch.next-7:
	%84 = icmp eq i64 %81, 2
	br i1 %84, label %typematch.body-10, label %typematch.next-9

typematch.body-8:
	%85 = bitcast %..rawptr %82 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %15
	store %asset-25.Asset.Texture* %85, %asset-25.Asset.Texture** %15
	%86 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %15, align 8
	call void @catalog-16.Find-960.LoadTexture-0(%asset-25.Asset.Texture* %86)
	br label %typematch.done-15

typematch.next-9:
	%87 = icmp eq i64 %81, 3
	br i1 %87, label %typematch.body-12, label %typematch.next-11

typematch.body-10:
	%88 = bitcast %..rawptr %82 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %16
	store %asset-25.Asset.Shader* %88, %asset-25.Asset.Shader** %16
	%89 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %16, align 8
	%90 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	call void @catalog-16.Find-960.LoadShader-1(%asset-25.Asset.Shader* %89, %catalog-16.Catalog* %90)
	br label %typematch.done-15

typematch.next-11:
	%91 = icmp eq i64 %81, 4
	br i1 %91, label %typematch.body-14, label %typematch.next-13

typematch.body-12:
	%92 = bitcast %..rawptr %82 to %asset-25.Asset.Sound*
	store %asset-25.Asset.Sound* zeroinitializer, %asset-25.Asset.Sound** %17
	store %asset-25.Asset.Sound* %92, %asset-25.Asset.Sound** %17
	br label %typematch.done-15

typematch.next-13:
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %19
	store %asset-25.Asset* %79, %asset-25.Asset** %19
	; SelectorExpr
	%93 = load %asset-25.Asset*, %asset-25.Asset** %19, align 8
	store %..any zeroinitializer, %..any* %20
	%94 = bitcast %asset-25.Asset** %19 to %..rawptr
	%95 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%96 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 0
	store %..rawptr %94, %..rawptr* %96
	%97 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	store %Type_Info* %95, %Type_Info** %97
	%98 = load %..any, %..any* %20, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [1 x %..any] zeroinitializer, [1 x %..any]* %22
	%99 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	store %..any %98, %..any* %99
	%100 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	%101 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %100, %..any** %101
	%102 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %102
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %103
	%104 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	call void @console-17.LogError(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$424, i64 0, i32 0), i64 36}, {%..any*, i64, i64} %104)
	br label %typematch.done-15

typematch.body-14:
	%105 = bitcast %..rawptr %82 to %asset-25.Asset.ShaderProgram*
	store %asset-25.Asset.ShaderProgram* zeroinitializer, %asset-25.Asset.ShaderProgram** %18
	store %asset-25.Asset.ShaderProgram* %105, %asset-25.Asset.ShaderProgram** %18
	br label %typematch.done-15

typematch.done-15:
	br label %if.done-16

if.done-16:
	; ReturnStmt
	%106 = load %asset-25.Asset*, %asset-25.Asset** %9, align 8
	store {%asset-25.Asset*, i64} zeroinitializer, {%asset-25.Asset*, i64}* %23
	%107 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %23, i64 0, i32 0
	store %asset-25.Asset* %106, %asset-25.Asset** %107
	%108 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %23, i64 0, i32 1
	store i64 0, i64* %108
	%109 = load {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %23, align 8
	ret {%asset-25.Asset*, i64} %109

if.done-17:
	; ReturnStmt
	store {%asset-25.Asset*, i64} zeroinitializer, {%asset-25.Asset*, i64}* %24
	%110 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %24, i64 0, i32 0
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %110
	%111 = getelementptr inbounds {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %24, i64 0, i32 1
	store i64 2, i64* %111
	%112 = load {%asset-25.Asset*, i64}, {%asset-25.Asset*, i64}* %24, align 8
	ret {%asset-25.Asset*, i64} %112
}

define void @catalog-16.Find-960.LoadTexture-0(%asset-25.Asset.Texture* %e) {
decls-0:
	%0 = alloca %asset-25.Asset.Texture*, align 8
	%1 = alloca i8*, align 8
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	%5 = alloca i8*, align 8
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %0
		store %asset-25.Asset.Texture* %e, %asset-25.Asset.Texture** %0
	; IfStmt
	; SelectorExpr
	%6 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%7 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %6, i64 0
	%8 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %7, i64 0, i32 2
	%9 = load i32, i32* %8, align 4
	%10 = icmp eq i32 %9, 0
	br i1 %10, label %cmp.and-1, label %if.done-12

cmp.and-1:
	%11 = load i1, i1* %2, align 1
	br i1 %11, label %if.then-2, label %if.done-12

if.then-2:
	; c_str
	store i8* zeroinitializer, i8** %1
		; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%12 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%13 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %12, i64 0
	%14 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %13, i64 0, i32 0
	%15 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %14, i64 0, i32 2
	%16 = load %..string, %..string* %15, align 8
	%17 = call i8* @strings-7.new_c_string(%..string %16)
	store i8* %17, i8** %1
	; DeferStmt
	; w
	store i32 zeroinitializer, i32* %2
		; h
	store i32 zeroinitializer, i32* %3
		; c
	store i32 zeroinitializer, i32* %4
		; data
	store i8* zeroinitializer, i8** %5
		; SelectorExpr
	%18 = load i8*, i8** %1, align 8
	%19 = getelementptr inbounds i32, i32* %2, i64 0
	%20 = getelementptr inbounds i32, i32* %3, i64 0
	%21 = getelementptr inbounds i32, i32* %4, i64 0
	%22 = call ccc i8* @stbi_load(i8* %18, i32* %19, i32* %20, i32* %21, i32 0)
	store i8* %22, i8** %5
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%23 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%24 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %23, i64 0
	%25 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %24, i64 0, i32 3
	%26 = load i32, i32* %2, align 4
	store i32 %26, i32* %25
	; AssignStmt
	; SelectorExpr
	%27 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%28 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %27, i64 0
	%29 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %28, i64 0, i32 4
	%30 = load i32, i32* %3, align 4
	store i32 %30, i32* %29
	; AssignStmt
	; SelectorExpr
	%31 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%32 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %31, i64 0
	%33 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %32, i64 0, i32 5
	%34 = load i32, i32* %4, align 4
	store i32 %34, i32* %33
	; AssignStmt
	; SelectorExpr
	%35 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%36 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %35, i64 0
	%37 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %36, i64 0, i32 2
	; SelectorExpr
	%38 = call i32 @gl-10.GenTexture()
	store i32 %38, i32* %37
	; SelectorExpr
	; SelectorExpr
	%39 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%40 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %39, i64 0
	%41 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %40, i64 0, i32 2
	%42 = load i32, i32* %41, align 4
	call void @gl-10.BindTexture(i32 3553, i32 %42)
	; MatchStmt
	; SelectorExpr
	%43 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%44 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %43, i64 0
	%45 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %44, i64 0, i32 5
	%46 = load i32, i32* %45, align 4
	%47 = icmp eq i32 %46, 1
	br i1 %47, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%48 = icmp eq i32 %46, 2
	br i1 %48, label %match.fall.body-6, label %match.case.next-5

match.case.body-4:
	; SelectorExpr
	; SelectorExpr
	%49 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%50 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %49, i64 0
	%51 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %50, i64 0, i32 3
	%52 = load i32, i32* %51, align 4
	; SelectorExpr
	%53 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%54 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %53, i64 0
	%55 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %54, i64 0, i32 4
	%56 = load i32, i32* %55, align 4
	%57 = load i8*, i8** %5, align 8
	%58 = bitcast i8* %57 to %..rawptr
	call void @gl-10.TexImage2D(i32 3553, i32 0, i32 6408, i32 %52, i32 %56, i32 6403, i32 5121, %..rawptr %58)
	; SelectorExpr
	call void @gl-10.GenerateMipmap(i32 3553)
	br label %match.done-11

match.case.next-5:
	%59 = icmp eq i32 %46, 3
	br i1 %59, label %match.fall.body-8, label %match.case.next-7

match.fall.body-6:
	; SelectorExpr
	; SelectorExpr
	%60 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%61 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %60, i64 0
	%62 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %61, i64 0, i32 3
	%63 = load i32, i32* %62, align 4
	; SelectorExpr
	%64 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%65 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %64, i64 0
	%66 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %65, i64 0, i32 4
	%67 = load i32, i32* %66, align 4
	%68 = load i8*, i8** %5, align 8
	%69 = bitcast i8* %68 to %..rawptr
	call void @gl-10.TexImage2D(i32 3553, i32 0, i32 6408, i32 %63, i32 %67, i32 33319, i32 5121, %..rawptr %69)
	; SelectorExpr
	call void @gl-10.GenerateMipmap(i32 3553)
	br label %match.done-11

match.case.next-7:
	%70 = icmp eq i32 %46, 4
	br i1 %70, label %match.fall.body-10, label %match.case.next-9

match.fall.body-8:
	; SelectorExpr
	; SelectorExpr
	%71 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%72 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %71, i64 0
	%73 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %72, i64 0, i32 3
	%74 = load i32, i32* %73, align 4
	; SelectorExpr
	%75 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%76 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %75, i64 0
	%77 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %76, i64 0, i32 4
	%78 = load i32, i32* %77, align 4
	%79 = load i8*, i8** %5, align 8
	%80 = bitcast i8* %79 to %..rawptr
	call void @gl-10.TexImage2D(i32 3553, i32 0, i32 6408, i32 %74, i32 %78, i32 6407, i32 5121, %..rawptr %80)
	; SelectorExpr
	call void @gl-10.GenerateMipmap(i32 3553)
	br label %match.done-11

match.case.next-9:
	br label %match.done-11

match.fall.body-10:
	; SelectorExpr
	; SelectorExpr
	%81 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%82 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %81, i64 0
	%83 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %82, i64 0, i32 3
	%84 = load i32, i32* %83, align 4
	; SelectorExpr
	%85 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %0, align 8
	%86 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %85, i64 0
	%87 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %86, i64 0, i32 4
	%88 = load i32, i32* %87, align 4
	%89 = load i8*, i8** %5, align 8
	%90 = bitcast i8* %89 to %..rawptr
	call void @gl-10.TexImage2D(i32 3553, i32 0, i32 6408, i32 %84, i32 %88, i32 6408, i32 5121, %..rawptr %90)
	; SelectorExpr
	call void @gl-10.GenerateMipmap(i32 3553)
	br label %match.done-11

match.done-11:
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10241, i32 9987)
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10240, i32 9729)
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10242, i32 33071)
	; SelectorExpr
	call void @gl-10.TexParameteri(i32 3553, i32 10243, i32 33071)
	; defer
	; SelectorExpr
	%91 = load i8*, i8** %5, align 8
	%92 = bitcast i8* %91 to %..rawptr
	call ccc void @stbi_image_free(%..rawptr %92)
	; defer
	; free
	%93 = load i8*, i8** %1, align 8
	%94 = bitcast i8* %93 to %..rawptr
	call void @free_ptr(%..rawptr %94)
	br label %if.done-12

if.done-12:
	ret void
}

define void @catalog-16.Find-960.LoadShader-1(%asset-25.Asset.Shader* %e, %catalog-16.Catalog* %cat) {
decls-0:
	%0 = alloca %asset-25.Asset.Shader*, align 8
	%1 = alloca %catalog-16.Catalog*, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %0
		store %asset-25.Asset.Shader* %e, %asset-25.Asset.Shader** %0
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %1
		store %catalog-16.Catalog* %cat, %catalog-16.Catalog** %1
	; IfStmt
	; SelectorExpr
	%3 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%4 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %3, i64 0
	%5 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %4, i64 0, i32 1
	%6 = load i1, i1* %5, align 1
	br i1 %6, label %if.done-2, label %if.then-1

if.then-1:
	; AssignStmt
	; SelectorExpr
	%7 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%8 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %7, i64 0
	%9 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %8, i64 0, i32 1
	store i1 true, i1* %9
	; data
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
		; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%10 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%11 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %10, i64 0
	%12 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %11, i64 0, i32 0
	%13 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %12, i64 0, i32 2
	%14 = load %..string, %..string* %13, align 8
	%15 = call {{i8*, i64, i64}, i1} @os-3.read_entire_file(%..string %14)
	%16 = extractvalue {{i8*, i64, i64}, i1} %15, 0
	%17 = extractvalue {{i8*, i64, i64}, i1} %15, 1
	store {i8*, i64, i64} %16, {i8*, i64, i64}* %2
	; AssignStmt
	; SelectorExpr
	%18 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%19 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %18, i64 0
	%20 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %19, i64 0, i32 5
	%21 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	store {i8*, i64, i64} %21, {i8*, i64, i64}* %20
	; AssignStmt
	; SelectorExpr
	%22 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%23 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %22, i64 0
	%24 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %23, i64 0, i32 4
	; SelectorExpr
	; IndexExpr
	%25 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%26 = extractvalue {i8*, i64, i64} %25, 0
	%27 = extractvalue {i8*, i64, i64} %25, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$425, i64 0, i32 0), i64 29}, i64 230, i64 53, i64 0, i64 %27)
	%28 = getelementptr inbounds i8, i8* %26, i64 0
	%29 = getelementptr inbounds i8, i8* %28, i64 0
	%30 = call %..string @strings-7.to_odin_string(i8* %29)
	store %..string %30, %..string* %24
	; AssignStmt
	; SelectorExpr
	%31 = load %catalog-16.Catalog*, %catalog-16.Catalog** %1, align 8
	%32 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %31, i64 0
	%33 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %32, i64 0, i32 7
	%34 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%35 = extractvalue {i8*, i64, i64} %34, 1
	%36 = bitcast i64 %35 to i64
	%37 = load i64, i64* %33, align 8
	%38 = add i64 %37, %36
	store i64 %38, i64* %33
	br label %if.done-2

if.done-2:
	; IfStmt
	; SelectorExpr
	%39 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%40 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %39, i64 0
	%41 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %40, i64 0, i32 2
	%42 = load i32, i32* %41, align 4
	%43 = icmp eq i32 %42, 0
	br i1 %43, label %cmp.and-3, label %if.done-5

cmp.and-3:
	%44 = load i1, i1* %2, align 1
	br i1 %44, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	; SelectorExpr
	%45 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%46 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %45, i64 0
	%47 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %46, i64 0, i32 2
	; SelectorExpr
	; SelectorExpr
	%48 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%49 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %48, i64 0
	%50 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %49, i64 0, i32 3
	%51 = load i32, i32* %50, align 4
	; SelectorExpr
	%52 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %0, align 8
	%53 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %52, i64 0
	%54 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %53, i64 0, i32 4
	%55 = load %..string, %..string* %54, align 8
	%56 = call {i32, i1} @gl_util-39.CreateAndCompileShader(i32 %51, %..string %55)
	%57 = extractvalue {i32, i1} %56, 0
	%58 = extractvalue {i32, i1} %56, 1
	store i32 %57, i32* %47
	br label %if.done-5

if.done-5:
	ret void
}

define %..string @catalog-16._GetFileExtension(%..string %filename) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %filename, %..string* %0
	; strLen
	store i64 zeroinitializer, i64* %1
		%5 = load %..string, %..string* %0, align 8
	%6 = extractvalue %..string %5, 1
	store i64 %6, i64* %1
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %2
		%7 = load i64, i64* %1, align 8
	%8 = sub i64 %7, 1
	store i64 %8, i64* %2
	br label %for.loop-1

for.loop-1:
	%9 = load i64, i64* %2, align 8
	%10 = icmp sgt i64 %9, 0
	br i1 %10, label %for.body-2, label %for.done-8

for.body-2:
	; IfStmt
	; IndexExpr
	%11 = load %..string, %..string* %0, align 8
	%12 = extractvalue %..string %11, 0
	%13 = extractvalue %..string %11, 1
	%14 = load i64, i64* %2, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$426, i64 0, i32 0), i64 29}, i64 273, i64 21, i64 %14, i64 %13)
	%15 = getelementptr inbounds i8, i8* %12, i64 %14
	%16 = load i8, i8* %15, align 1
	%17 = icmp eq i8 %16, 46
	br i1 %17, label %if.then-3, label %if.done-7

if.then-3:
	; res
	store %..string zeroinitializer, %..string* %3
		; SliceExpr
	%18 = load i64, i64* %2, align 8
	%19 = load i64, i64* %1, align 8
	%20 = load %..string, %..string* %0, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$427, i64 0, i32 0), i64 29}, i64 274, i64 28, i64 %18, i64 %19)
	%21 = extractvalue %..string %20, 0
	%22 = getelementptr inbounds i8, i8* %21, i64 %18
	%23 = sub i64 %19, %18
	store %..string zeroinitializer, %..string* %4
	%24 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 0
	store i8* %22, i8** %24
	%25 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 1
	store i64 %23, i64* %25
	%26 = load %..string, %..string* %4, align 8
	store %..string %26, %..string* %3
	; IfStmt
	%27 = load %..string, %..string* %3, align 8
	%28 = call i1 @__string_eq(%..string %27, %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$428, i64 0, i32 0), i64 1})
	br i1 %28, label %if.then-4, label %if.else-5

if.then-4:
	; ReturnStmt
	ret %..string zeroinitializer

if.else-5:
	; ReturnStmt
	%29 = load %..string, %..string* %3, align 8
	ret %..string %29

if.done-6:
	br label %if.done-7

if.done-7:
	%30 = load i64, i64* %2, align 8
	%31 = sub i64 %30, 1
	store i64 %31, i64* %2
	br label %for.loop-1

for.done-8:
	; ReturnStmt
	ret %..string zeroinitializer
}

define %..string @catalog-16._GetFileNameWithoutExtension(%..string %filename) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %filename, %..string* %0
	; extlen
	store i64 zeroinitializer, i64* %1
		%4 = load %..string, %..string* %0, align 8
	%5 = call %..string @catalog-16._GetFileExtension(%..string %4)
	%6 = extractvalue %..string %5, 1
	store i64 %6, i64* %1
	; namelen
	store i64 zeroinitializer, i64* %2
		%7 = load %..string, %..string* %0, align 8
	%8 = extractvalue %..string %7, 1
	store i64 %8, i64* %2
	; ReturnStmt
	; SliceExpr
	%9 = load i64, i64* %2, align 8
	%10 = load i64, i64* %1, align 8
	%11 = sub i64 %9, %10
	%12 = load %..string, %..string* %0, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$429, i64 0, i32 0), i64 29}, i64 289, i64 20, i64 0, i64 %11)
	%13 = extractvalue %..string %12, 0
	%14 = getelementptr inbounds i8, i8* %13, i64 0
	%15 = sub i64 %11, 0
	store %..string zeroinitializer, %..string* %3
	%16 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 0
	store i8* %14, i8** %16
	%17 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 1
	store i64 %15, i64* %17
	%18 = load %..string, %..string* %3, align 8
	ret %..string %18
}

define i1 @catalog-16._IsDirectory(i32 %attr) {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %attr, i32* %0
	; ReturnStmt
	%1 = load i32, i32* %0, align 4
	%2 = bitcast i32 %1 to i32
	%3 = icmp ne i32 %2, -1
	%4 = load i32, i32* %0, align 4
	%5 = bitcast i32 %4 to i32
	%6 = icmp ne i32 %5, -1
	br i1 %6, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	%7 = load i32, i32* %0, align 4
	%8 = and i32 %7, 16
	%9 = icmp eq i32 %8, 16
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%10 = phi i1 [ false, %decls-0 ], [ %9, %logical.cmp.rhs-1 ]
	ret i1 %10
}

define %asset-25.FileInfo_t @catalog-16._CreateFileInfo(%..string %path, %..string %filename, %jwin32-38.FindData* %data) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %asset-25.FileInfo_t, align 8
	%3 = alloca {i8*, i64, i64}, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [2 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %path, %..string* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %filename, %..string* %1
	%10 = load %jwin32-38.FindData, %jwin32-38.FindData* %data, align 4
	; file
	store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %2
		store %asset-25.FileInfo_t zeroinitializer, %asset-25.FileInfo_t* %2
	; AssignStmt
	; SelectorExpr
	%11 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %2, i64 0, i32 0
	%12 = load %..string, %..string* %1, align 8
	%13 = call %..string @catalog-16._GetFileNameWithoutExtension(%..string %12)
	store %..string %13, %..string* %11
	; AssignStmt
	; SelectorExpr
	%14 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %2, i64 0, i32 1
	%15 = load %..string, %..string* %1, align 8
	%16 = call %..string @catalog-16._GetFileExtension(%..string %15)
	store %..string %16, %..string* %14
	; pathBuf
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %3
		; make
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$42a, i64 0, i32 0), i64 29}, i64 301, i64 33, i64 0, i64 260, i64 260)
	%17 = mul i64 1, 260
	%18 = call %..rawptr @alloc_align(i64 %17, i64 1)
	%19 = bitcast %..rawptr %18 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%20 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %19, i8** %20
	%21 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 260, i64* %21
	%22 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 260, i64* %22
	%23 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	store {i8*, i64, i64} %23, {i8*, i64, i64}* %3
	; AssignStmt
	; SelectorExpr
	%24 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %2, i64 0, i32 2
	; SelectorExpr
	; SliceExpr
	%25 = load {i8*, i64, i64}, {i8*, i64, i64}* %3, align 8
	%26 = extractvalue {i8*, i64, i64} %25, 1
	%27 = extractvalue {i8*, i64, i64} %25, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$42b, i64 0, i32 0), i64 29}, i64 302, i64 36, i64 0, i64 %26, i64 %27)
	%28 = extractvalue {i8*, i64, i64} %25, 0
	%29 = getelementptr inbounds i8, i8* %28, i64 0
	%30 = sub i64 %26, 0
	%31 = sub i64 %27, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
	%32 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 0
	store i8* %29, i8** %32
	%33 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 1
	store i64 %30, i64* %33
	%34 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 2
	store i64 %31, i64* %34
	%35 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%36 = load %..string, %..string* %0, align 8
	%37 = load %..string, %..string* %1, align 8
	store %..any zeroinitializer, %..any* %6
	%38 = bitcast %..string* %0 to %..rawptr
	%39 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%40 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %38, %..rawptr* %40
	%41 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %39, %Type_Info** %41
	%42 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%43 = bitcast %..string* %1 to %..rawptr
	%44 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%45 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %43, %..rawptr* %45
	%46 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %44, %Type_Info** %46
	%47 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [2 x %..any] zeroinitializer, [2 x %..any]* %9
	%48 = getelementptr inbounds [2 x %..any], [2 x %..any]* %9, i64 0, i32 0
	store %..any %42, %..any* %48
	%49 = getelementptr inbounds [2 x %..any], [2 x %..any]* %9, i64 0, i32 1
	store %..any %47, %..any* %49
	%50 = getelementptr inbounds [2 x %..any], [2 x %..any]* %9, i64 0, i32 0
	%51 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %50, %..any** %51
	%52 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 2, i64* %52
	%53 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 2, i64* %53
	%54 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	%55 = call %..string @fmt-4.bprintf({i8*, i64, i64} %35, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$42c, i64 0, i32 0), i64 4}, {%..any*, i64, i64} %54)
	store %..string %55, %..string* %24
	; AssignStmt
	; SelectorExpr
	%56 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %2, i64 0, i32 3
	; SelectorExpr
	%57 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %data, i64 0, i32 4
	%58 = load i32, i32* %57, align 4
	%59 = zext i32 %58 to i64
	%60 = mul i64 %59, 4294967296
	; SelectorExpr
	%61 = getelementptr inbounds %jwin32-38.FindData, %jwin32-38.FindData* %data, i64 0, i32 5
	%62 = load i32, i32* %61, align 4
	%63 = zext i32 %62 to i64
	%64 = add i64 %60, %63
	store i64 %64, i64* %56
	; ReturnStmt
	%65 = load %asset-25.FileInfo_t, %asset-25.FileInfo_t* %2, align 8
	ret %asset-25.FileInfo_t %65
}

define void @console-17.LogError(%..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	%2 = load %..string, %..string* %0, align 8
	%3 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @console-17._InternalLog(%..string %2, i64 2, {%..any*, i64, i64} %3)
	ret void
}

define void @console-17.Log(%..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %1
	%2 = load %..string, %..string* %0, align 8
	%3 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @console-17._InternalLog(%..string %2, i64 0, {%..any*, i64, i64} %3)
	ret void
}

define void @console-17._InternalLog(%..string %fmt_, i64 %level, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1024 x i8], align 1
	%4 = alloca [1024 x i8], align 1
	%5 = alloca [1024 x i8], align 1
	%6 = alloca %..string, align 8
	%7 = alloca %..string, align 8
	%8 = alloca {i8*, i64, i64}, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca [2 x %..any], align 8
	%13 = alloca %..string, align 8
	%14 = alloca {i8*, i64, i64}, align 8
	%15 = alloca {%..string*, i64, i64}, align 8
	%16 = alloca [1 x %..string], align 8
	%17 = alloca %..any, align 8
	%18 = alloca {%..any*, i64, i64}, align 8
	%19 = alloca [1 x %..any], align 8
	%20 = alloca %console-17.LogItem, align 8
	%21 = alloca %windows-35.Filetime, align 4
	%22 = alloca %windows-35.Systemtime, align 2
	%23 = alloca {%console-17.LogItem*, i64, i64}, align 8
	%24 = alloca [1 x %console-17.LogItem], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %fmt_, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %level, i64* %1
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %2
	; buf
	store [1024 x i8] zeroinitializer, [1024 x i8]* %3
		; buf2
	store [1024 x i8] zeroinitializer, [1024 x i8]* %4
		; buf3
	store [1024 x i8] zeroinitializer, [1024 x i8]* %5
		; levelStr
	store %..string zeroinitializer, %..string* %6
		; MatchStmt
	%25 = load i64, i64* %1, align 8
	%26 = icmp eq i64 %25, 0
	br i1 %26, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%27 = icmp eq i64 %25, 2
	br i1 %27, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	; AssignStmt
	store %..string zeroinitializer, %..string* %6
	br label %match.done-7

match.case.next-3:
	%28 = icmp eq i64 %25, 1
	br i1 %28, label %match.fall.body-6, label %match.case.next-5

match.fall.body-4:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$42d, i64 0, i32 0), i64 9}, %..string* %6
	br label %match.done-7

match.case.next-5:
	br label %match.done-7

match.fall.body-6:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$42e, i64 0, i32 0), i64 4}, %..string* %6
	br label %match.done-7

match.done-7:
	; newFmt
	store %..string zeroinitializer, %..string* %7
		; SelectorExpr
	; SliceExpr
	%29 = load [1024 x i8], [1024 x i8]* %3, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$42f, i64 0, i32 0), i64 29}, i64 69, i64 30, i64 0, i64 1024, i64 1024)
	%30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i32 0
	%31 = getelementptr inbounds i8, i8* %30, i64 0
	%32 = sub i64 1024, 0
	%33 = sub i64 1024, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %8
	%34 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 0
	store i8* %31, i8** %34
	%35 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 1
	store i64 %32, i64* %35
	%36 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 2
	store i64 %33, i64* %36
	%37 = load {i8*, i64, i64}, {i8*, i64, i64}* %8, align 8
	%38 = load %..string, %..string* %6, align 8
	%39 = load %..string, %..string* %0, align 8
	store %..any zeroinitializer, %..any* %9
	%40 = bitcast %..string* %6 to %..rawptr
	%41 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%42 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %40, %..rawptr* %42
	%43 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %43
	%44 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%45 = bitcast %..string* %0 to %..rawptr
	%46 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%47 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %45, %..rawptr* %47
	%48 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %46, %Type_Info** %48
	%49 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	store [2 x %..any] zeroinitializer, [2 x %..any]* %12
	%50 = getelementptr inbounds [2 x %..any], [2 x %..any]* %12, i64 0, i32 0
	store %..any %44, %..any* %50
	%51 = getelementptr inbounds [2 x %..any], [2 x %..any]* %12, i64 0, i32 1
	store %..any %49, %..any* %51
	%52 = getelementptr inbounds [2 x %..any], [2 x %..any]* %12, i64 0, i32 0
	%53 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 0
	store %..any* %52, %..any** %53
	%54 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 1
	store i64 2, i64* %54
	%55 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 2
	store i64 2, i64* %55
	%56 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	%57 = call %..string @fmt-4.bprintf({i8*, i64, i64} %37, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$430, i64 0, i32 0), i64 4}, {%..any*, i64, i64} %56)
	store %..string %57, %..string* %7
	; tempStr
	store %..string zeroinitializer, %..string* %13
		; SelectorExpr
	; SliceExpr
	%58 = load [1024 x i8], [1024 x i8]* %4, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$431, i64 0, i32 0), i64 29}, i64 70, i64 32, i64 0, i64 1024, i64 1024)
	%59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i32 0
	%60 = getelementptr inbounds i8, i8* %59, i64 0
	%61 = sub i64 1024, 0
	%62 = sub i64 1024, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %14
	%63 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 0
	store i8* %60, i8** %63
	%64 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 1
	store i64 %61, i64* %64
	%65 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 2
	store i64 %62, i64* %65
	%66 = load {i8*, i64, i64}, {i8*, i64, i64}* %14, align 8
	%67 = load %..string, %..string* %7, align 8
	%68 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%69 = call %..string @fmt-4.bprintf({i8*, i64, i64} %66, %..string %67, {%..any*, i64, i64} %68)
	store %..string %69, %..string* %13
	; append
	; SelectorExpr
	%70 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%71 = bitcast {%..string*, i64, i64,%Allocator}* %70 to %..rawptr
	; SelectorExpr
	%72 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%73 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %72, align 8
	%74 = load %..string, %..string* %13, align 8
	%75 = call %..string @console-17._StringDup(%..string %74)
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %15
	store [1 x %..string] zeroinitializer, [1 x %..string]* %16
	%76 = getelementptr inbounds [1 x %..string], [1 x %..string]* %16, i64 0, i32 0
	store %..string %75, %..string* %76
	%77 = getelementptr inbounds [1 x %..string], [1 x %..string]* %16, i64 0, i32 0
	%78 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %15, i64 0, i32 0
	store %..string* %77, %..string** %78
	%79 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %15, i64 0, i32 1
	store i64 1, i64* %79
	%80 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %15, i64 0, i32 2
	store i64 1, i64* %80
	%81 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %15, align 8
	%82 = extractvalue {%..string*, i64, i64} %81, 0
	%83 = extractvalue {%..string*, i64, i64} %81, 1
	%84 = bitcast %..string* %82 to %..rawptr
	%85 = call i64 @__dynamic_array_append(%..rawptr %71, i64 16, i64 8, %..rawptr %84, i64 %83)
	; SelectorExpr
	%86 = load %..string, %..string* %13, align 8
	store %..any zeroinitializer, %..any* %17
	%87 = bitcast %..string* %13 to %..rawptr
	%88 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%89 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %87, %..rawptr* %89
	%90 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %88, %Type_Info** %90
	%91 = load %..any, %..any* %17, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %18
	store [1 x %..any] zeroinitializer, [1 x %..any]* %19
	%92 = getelementptr inbounds [1 x %..any], [1 x %..any]* %19, i64 0, i32 0
	store %..any %91, %..any* %92
	%93 = getelementptr inbounds [1 x %..any], [1 x %..any]* %19, i64 0, i32 0
	%94 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 0
	store %..any* %93, %..any** %94
	%95 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 1
	store i64 1, i64* %95
	%96 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 2
	store i64 1, i64* %96
	%97 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %18, align 8
	%98 = call i64 @fmt-4.printf(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$432, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %97)
	; item
	store %console-17.LogItem zeroinitializer, %console-17.LogItem* %20
		store %console-17.LogItem zeroinitializer, %console-17.LogItem* %20
	; AssignStmt
	; SelectorExpr
	%99 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %20, i64 0, i32 0
	%100 = load %..string, %..string* %13, align 8
	%101 = call %..string @console-17._StringDup(%..string %100)
	store %..string %101, %..string* %99
	; ft
	store %windows-35.Filetime zeroinitializer, %windows-35.Filetime* %21
		; st
	store %windows-35.Systemtime zeroinitializer, %windows-35.Systemtime* %22
		; SelectorExpr
	%102 = getelementptr inbounds %windows-35.Filetime, %windows-35.Filetime* %21, i64 0
	call ccc void @GetSystemTimeAsFileTime(%windows-35.Filetime* %102)
	; SelectorExpr
	%103 = getelementptr inbounds %windows-35.Filetime, %windows-35.Filetime* %21, i64 0
	%104 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %22, i64 0
	%105 = call ccc i32 @FileTimeToSystemTime(%windows-35.Filetime* %103, %windows-35.Systemtime* %104)
	; AssignStmt
	; SelectorExpr
	%106 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %20, i64 0, i32 1
	%107 = load %windows-35.Systemtime, %windows-35.Systemtime* %22, align 2
	store %windows-35.Systemtime %107, %windows-35.Systemtime* %106
	; append
	; SelectorExpr
	%108 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 3
	%109 = bitcast {%console-17.LogItem*, i64, i64,%Allocator}* %108 to %..rawptr
	; SelectorExpr
	%110 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 3
	%111 = load {%console-17.LogItem*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}* %110, align 8
	%112 = load %console-17.LogItem, %console-17.LogItem* %20, align 8
	; variadic call argument generation
	store {%console-17.LogItem*, i64, i64} zeroinitializer, {%console-17.LogItem*, i64, i64}* %23
	store [1 x %console-17.LogItem] zeroinitializer, [1 x %console-17.LogItem]* %24
	%113 = getelementptr inbounds [1 x %console-17.LogItem], [1 x %console-17.LogItem]* %24, i64 0, i32 0
	store %console-17.LogItem %112, %console-17.LogItem* %113
	%114 = getelementptr inbounds [1 x %console-17.LogItem], [1 x %console-17.LogItem]* %24, i64 0, i32 0
	%115 = getelementptr inbounds {%console-17.LogItem*, i64, i64}, {%console-17.LogItem*, i64, i64}* %23, i64 0, i32 0
	store %console-17.LogItem* %114, %console-17.LogItem** %115
	%116 = getelementptr inbounds {%console-17.LogItem*, i64, i64}, {%console-17.LogItem*, i64, i64}* %23, i64 0, i32 1
	store i64 1, i64* %116
	%117 = getelementptr inbounds {%console-17.LogItem*, i64, i64}, {%console-17.LogItem*, i64, i64}* %23, i64 0, i32 2
	store i64 1, i64* %117
	%118 = load {%console-17.LogItem*, i64, i64}, {%console-17.LogItem*, i64, i64}* %23, align 8
	%119 = extractvalue {%console-17.LogItem*, i64, i64} %118, 0
	%120 = extractvalue {%console-17.LogItem*, i64, i64} %118, 1
	%121 = bitcast %console-17.LogItem* %119 to %..rawptr
	%122 = call i64 @__dynamic_array_append(%..rawptr %109, i64 32, i64 8, %..rawptr %121, i64 %120)
	; AssignStmt
	; SelectorExpr
	%123 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 7
	store i1 true, i1* %123
	ret void
}

define void @console-17.AddCommand(%..string %name, void ({%..string*, i64, i64})* %p) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca void ({%..string*, i64, i64})*, align 8
	%2 = alloca %__Map_Header, align 8
	%3 = alloca %__Map_Key, align 8
	%4 = alloca void ({%..string*, i64, i64})*, align 8
	%5 = alloca %__Map_Header, align 16
	%6 = alloca %__Map_Key, align 16
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	store void ({%..string*, i64, i64})* zeroinitializer, void ({%..string*, i64, i64})** %1
		store void ({%..string*, i64, i64})* %p, void ({%..string*, i64, i64})** %1
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%7 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 0
	%8 = load %..string, %..string* %0, align 8
	%9 = load void ({%..string*, i64, i64})*, void ({%..string*, i64, i64})** %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 0
	%11 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}* %7 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %11, %raw-6.Dynamic_Map** %10
	%12 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 1
	store i1 true, i1* %12
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 2
	store i64 40, i64* %13
	%14 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 3
	store i64 8, i64* %14
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 4
	store i64 32, i64* %15
	%16 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 5
	store i64 8, i64* %16
	%17 = load %__Map_Header, %__Map_Header* %2, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %3
	%18 = call i64 @__default_hash_string(%..string %8)
	%19 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 0
	store i64 %18, i64* %19
	%20 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 1
	store %..string %8, %..string* %20
	%21 = load %__Map_Key, %__Map_Key* %3, align 8
	store void ({%..string*, i64, i64})* zeroinitializer, void ({%..string*, i64, i64})** %4
	store void ({%..string*, i64, i64})* %9, void ({%..string*, i64, i64})** %4
	%22 = bitcast void ({%..string*, i64, i64})** %4 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %17, %__Map_Header* %5
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	store %__Map_Key %21, %__Map_Key* %6
	call void @__dynamic_map_set(%__Map_Header* %5, %__Map_Key* %6, %..rawptr %22)
	ret void
}

define void @console-17.DefaultHelpCommand({%..string*, i64, i64} %args) {
decls-0:
	%0 = alloca {%..string*, i64, i64}, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca void ({%..string*, i64, i64})*, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..string, align 8
	%5 = alloca i64, align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %0
		store {%..string*, i64, i64} %args, {%..string*, i64, i64}* %0
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
	%9 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$433, i64 0, i32 0), i64 20}, {%..any*, i64, i64} %9)
	; RangeStmt
	; val
	store void ({%..string*, i64, i64})* zeroinitializer, void ({%..string*, i64, i64})** %2
		; key
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	%10 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 0
	%11 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}* %10, i64 0, i32 1
	%12 = getelementptr inbounds {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}* %11, i64 0, i32 1
	store %..string zeroinitializer, %..string* %4
	store i64 zeroinitializer, i64* %5
	store i64 -1, i64* %5
	br label %for.index.loop-1

for.index.loop-1:
	%13 = load i64, i64* %5, align 8
	%14 = add i64 %13, 1
	store i64 %14, i64* %5
	%15 = load i64, i64* %12, align 8
	%16 = icmp slt i64 %14, %15
	br i1 %16, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%17 = load i64, i64* %5, align 8
	%18 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}* %10, i64 0, i32 1
	%19 = getelementptr inbounds {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}* %18, i64 0, i32 0
	%20 = load {%__Map_Key, i64, void ({%..string*, i64, i64})*}*, {%__Map_Key, i64, void ({%..string*, i64, i64})*}** %19, align 8
	%21 = getelementptr inbounds {%__Map_Key, i64, void ({%..string*, i64, i64})*}, {%__Map_Key, i64, void ({%..string*, i64, i64})*}* %20, i64 %17
	%22 = getelementptr inbounds {%__Map_Key, i64, void ({%..string*, i64, i64})*}, {%__Map_Key, i64, void ({%..string*, i64, i64})*}* %21, i64 0, i32 2
	%23 = load void ({%..string*, i64, i64})*, void ({%..string*, i64, i64})** %22, align 8
	%24 = getelementptr inbounds {%__Map_Key, i64, void ({%..string*, i64, i64})*}, {%__Map_Key, i64, void ({%..string*, i64, i64})*}* %21, i64 0, i32 0
	%25 = getelementptr inbounds %__Map_Key, %__Map_Key* %24, i64 0, i32 1
	%26 = load %..string, %..string* %25, align 8
	store %..string %26, %..string* %4
	%27 = load %..string, %..string* %4, align 8
	store void ({%..string*, i64, i64})* %23, void ({%..string*, i64, i64})** %2
	store %..string %27, %..string* %3
	%28 = load %..string, %..string* %3, align 8
	store %..any zeroinitializer, %..any* %6
	%29 = bitcast %..string* %3 to %..rawptr
	%30 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%31 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %29, %..rawptr* %31
	%32 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %30, %Type_Info** %32
	%33 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%34 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %33, %..any* %34
	%35 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%36 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %35, %..any** %36
	%37 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %37
	%38 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %38
	%39 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$434, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %39)
	br label %for.index.loop-1

for.index.done-3:
	ret void
}

define void @console-17.DefaultClearCommand({%..string*, i64, i64} %args) {
decls-0:
	%0 = alloca {%..string*, i64, i64}, align 8
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %0
		store {%..string*, i64, i64} %args, {%..string*, i64, i64}* %0
	call void @console-17.ClearConsole()
	ret void
}

define void @console-17.DrawLog(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca %console-17.LogItem, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..string, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	%12 = alloca %imgui-9.Vec4, align 16
	%13 = alloca %..string, align 8
	%14 = alloca %..any, align 8
	%15 = alloca %..any, align 8
	%16 = alloca %..any, align 8
	%17 = alloca %..any, align 8
	%18 = alloca %..any, align 8
	%19 = alloca {%..any*, i64, i64}, align 8
	%20 = alloca [5 x %..any], align 8
	%21 = alloca %imgui-9.Vec4, align 16
	%22 = alloca %..any, align 8
	%23 = alloca %..any, align 8
	%24 = alloca %..any, align 8
	%25 = alloca %..any, align 8
	%26 = alloca %..any, align 8
	%27 = alloca {%..any*, i64, i64}, align 8
	%28 = alloca [5 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%29 = load i1*, i1** %0, align 8
	%30 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$435, i64 0, i32 0), i64 3}, i1* %29, i32 32)
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %1
	%31 = bitcast %imgui-9.Vec2* %1 to i64*
	%32 = load i64, i64* %31, align 8
	%33 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$436, i64 0, i32 0), i64 5}, i64 %32, i1 true, i32 0)
	; RangeStmt
	; t
	store %console-17.LogItem zeroinitializer, %console-17.LogItem* %2
		; SelectorExpr
	%34 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 3
	%35 = getelementptr inbounds {%console-17.LogItem*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}* %34, i64 0, i32 1
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-1

for.index.loop-1:
	%36 = load i64, i64* %3, align 8
	%37 = add i64 %36, 1
	store i64 %37, i64* %3
	%38 = load i64, i64* %35, align 8
	%39 = icmp slt i64 %37, %38
	br i1 %39, label %for.index.body-2, label %for.index.done-9

for.index.body-2:
	%40 = load i64, i64* %3, align 8
	%41 = getelementptr inbounds {%console-17.LogItem*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}* %34, i64 0, i32 0
	%42 = load %console-17.LogItem*, %console-17.LogItem** %41, align 8
	%43 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %42, i64 %40
	%44 = load %console-17.LogItem, %console-17.LogItem* %43, align 8
	store %console-17.LogItem %44, %console-17.LogItem* %2
	; IfStmt
	; SliceExpr
	; SelectorExpr
	%45 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 0
	%46 = load %..string, %..string* %45, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$437, i64 0, i32 0), i64 29}, i64 140, i64 22, i64 0, i64 9)
	%47 = extractvalue %..string %46, 0
	%48 = getelementptr inbounds i8, i8* %47, i64 0
	%49 = sub i64 9, 0
	store %..string zeroinitializer, %..string* %4
	%50 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 0
	store i8* %48, i8** %50
	%51 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 1
	store i64 %49, i64* %51
	%52 = load %..string, %..string* %4, align 8
	%53 = call i1 @__string_eq(%..string %52, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$438, i64 0, i32 0), i64 9})
	br i1 %53, label %if.then-3, label %if.else-4

if.then-3:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%54 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%55 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %54, i64 0, i32 4
	%56 = load i16, i16* %55, align 2
	; SelectorExpr
	; SelectorExpr
	%57 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%58 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %57, i64 0, i32 5
	%59 = load i16, i16* %58, align 2
	; SelectorExpr
	; SelectorExpr
	%60 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%61 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %60, i64 0, i32 6
	%62 = load i16, i16* %61, align 2
	; SelectorExpr
	; SelectorExpr
	%63 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%64 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %63, i64 0, i32 7
	%65 = load i16, i16* %64, align 2
	; SelectorExpr
	%66 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 0
	%67 = load %..string, %..string* %66, align 8
	store %..any zeroinitializer, %..any* %5
	%68 = bitcast i16* %55 to %..rawptr
	%69 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%70 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %68, %..rawptr* %70
	%71 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %69, %Type_Info** %71
	%72 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%73 = bitcast i16* %58 to %..rawptr
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%75 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %73, %..rawptr* %75
	%76 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %74, %Type_Info** %76
	%77 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%78 = bitcast i16* %61 to %..rawptr
	%79 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%80 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %78, %..rawptr* %80
	%81 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %79, %Type_Info** %81
	%82 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%83 = bitcast i16* %64 to %..rawptr
	%84 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%85 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %83, %..rawptr* %85
	%86 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %84, %Type_Info** %86
	%87 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%88 = bitcast %..string* %66 to %..rawptr
	%89 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%90 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %88, %..rawptr* %90
	%91 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %89, %Type_Info** %91
	%92 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%93 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %72, %..any* %93
	%94 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %77, %..any* %94
	%95 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %82, %..any* %95
	%96 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %87, %..any* %96
	%97 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %92, %..any* %97
	%98 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%99 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %98, %..any** %99
	%100 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 5, i64* %100
	%101 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 5, i64* %101
	%102 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %12
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %12
	call void @imgui-9.TextColored(%imgui-9.Vec4* %12, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$439, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %102)
	br label %if.done-8

if.else-4:
	; IfStmt
	; SliceExpr
	; SelectorExpr
	%103 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 0
	%104 = load %..string, %..string* %103, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$43a, i64 0, i32 0), i64 29}, i64 142, i64 29, i64 0, i64 4)
	%105 = extractvalue %..string %104, 0
	%106 = getelementptr inbounds i8, i8* %105, i64 0
	%107 = sub i64 4, 0
	store %..string zeroinitializer, %..string* %13
	%108 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 0
	store i8* %106, i8** %108
	%109 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 1
	store i64 %107, i64* %109
	%110 = load %..string, %..string* %13, align 8
	%111 = call i1 @__string_eq(%..string %110, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$43b, i64 0, i32 0), i64 4})
	br i1 %111, label %if.then-5, label %if.else-6

if.then-5:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%112 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%113 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %112, i64 0, i32 4
	%114 = load i16, i16* %113, align 2
	; SelectorExpr
	; SelectorExpr
	%115 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%116 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %115, i64 0, i32 5
	%117 = load i16, i16* %116, align 2
	; SelectorExpr
	; SelectorExpr
	%118 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%119 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %118, i64 0, i32 6
	%120 = load i16, i16* %119, align 2
	; SelectorExpr
	; SelectorExpr
	%121 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%122 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %121, i64 0, i32 7
	%123 = load i16, i16* %122, align 2
	; SelectorExpr
	%124 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 0
	%125 = load %..string, %..string* %124, align 8
	store %..any zeroinitializer, %..any* %14
	%126 = bitcast i16* %113 to %..rawptr
	%127 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%128 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 0
	store %..rawptr %126, %..rawptr* %128
	%129 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 1
	store %Type_Info* %127, %Type_Info** %129
	%130 = load %..any, %..any* %14, align 8
	store %..any zeroinitializer, %..any* %15
	%131 = bitcast i16* %116 to %..rawptr
	%132 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%133 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 0
	store %..rawptr %131, %..rawptr* %133
	%134 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 1
	store %Type_Info* %132, %Type_Info** %134
	%135 = load %..any, %..any* %15, align 8
	store %..any zeroinitializer, %..any* %16
	%136 = bitcast i16* %119 to %..rawptr
	%137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%138 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 0
	store %..rawptr %136, %..rawptr* %138
	%139 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 1
	store %Type_Info* %137, %Type_Info** %139
	%140 = load %..any, %..any* %16, align 8
	store %..any zeroinitializer, %..any* %17
	%141 = bitcast i16* %122 to %..rawptr
	%142 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%143 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %141, %..rawptr* %143
	%144 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %142, %Type_Info** %144
	%145 = load %..any, %..any* %17, align 8
	store %..any zeroinitializer, %..any* %18
	%146 = bitcast %..string* %124 to %..rawptr
	%147 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%148 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 0
	store %..rawptr %146, %..rawptr* %148
	%149 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 1
	store %Type_Info* %147, %Type_Info** %149
	%150 = load %..any, %..any* %18, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %19
	store [5 x %..any] zeroinitializer, [5 x %..any]* %20
	%151 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 0
	store %..any %130, %..any* %151
	%152 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 1
	store %..any %135, %..any* %152
	%153 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 2
	store %..any %140, %..any* %153
	%154 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 3
	store %..any %145, %..any* %154
	%155 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 4
	store %..any %150, %..any* %155
	%156 = getelementptr inbounds [5 x %..any], [5 x %..any]* %20, i64 0, i32 0
	%157 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %19, i64 0, i32 0
	store %..any* %156, %..any** %157
	%158 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %19, i64 0, i32 1
	store i64 5, i64* %158
	%159 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %19, i64 0, i32 2
	store i64 5, i64* %159
	%160 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %19, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %21
	store %imgui-9.Vec4 {float 0x3fe6666660000000, float 0x3fe6666660000000, float 0x3fe6666660000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %21
	call void @imgui-9.TextColored(%imgui-9.Vec4* %21, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$43c, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %160)
	br label %if.done-7

if.else-6:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%161 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%162 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %161, i64 0, i32 4
	%163 = load i16, i16* %162, align 2
	; SelectorExpr
	; SelectorExpr
	%164 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%165 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %164, i64 0, i32 5
	%166 = load i16, i16* %165, align 2
	; SelectorExpr
	; SelectorExpr
	%167 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%168 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %167, i64 0, i32 6
	%169 = load i16, i16* %168, align 2
	; SelectorExpr
	; SelectorExpr
	%170 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 1
	%171 = getelementptr inbounds %windows-35.Systemtime, %windows-35.Systemtime* %170, i64 0, i32 7
	%172 = load i16, i16* %171, align 2
	; SelectorExpr
	%173 = getelementptr inbounds %console-17.LogItem, %console-17.LogItem* %2, i64 0, i32 0
	%174 = load %..string, %..string* %173, align 8
	store %..any zeroinitializer, %..any* %22
	%175 = bitcast i16* %162 to %..rawptr
	%176 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%177 = getelementptr inbounds %..any, %..any* %22, i64 0, i32 0
	store %..rawptr %175, %..rawptr* %177
	%178 = getelementptr inbounds %..any, %..any* %22, i64 0, i32 1
	store %Type_Info* %176, %Type_Info** %178
	%179 = load %..any, %..any* %22, align 8
	store %..any zeroinitializer, %..any* %23
	%180 = bitcast i16* %165 to %..rawptr
	%181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%182 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 0
	store %..rawptr %180, %..rawptr* %182
	%183 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 1
	store %Type_Info* %181, %Type_Info** %183
	%184 = load %..any, %..any* %23, align 8
	store %..any zeroinitializer, %..any* %24
	%185 = bitcast i16* %168 to %..rawptr
	%186 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%187 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 0
	store %..rawptr %185, %..rawptr* %187
	%188 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 1
	store %Type_Info* %186, %Type_Info** %188
	%189 = load %..any, %..any* %24, align 8
	store %..any zeroinitializer, %..any* %25
	%190 = bitcast i16* %171 to %..rawptr
	%191 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%192 = getelementptr inbounds %..any, %..any* %25, i64 0, i32 0
	store %..rawptr %190, %..rawptr* %192
	%193 = getelementptr inbounds %..any, %..any* %25, i64 0, i32 1
	store %Type_Info* %191, %Type_Info** %193
	%194 = load %..any, %..any* %25, align 8
	store %..any zeroinitializer, %..any* %26
	%195 = bitcast %..string* %173 to %..rawptr
	%196 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%197 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 0
	store %..rawptr %195, %..rawptr* %197
	%198 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 1
	store %Type_Info* %196, %Type_Info** %198
	%199 = load %..any, %..any* %26, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %27
	store [5 x %..any] zeroinitializer, [5 x %..any]* %28
	%200 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 0
	store %..any %179, %..any* %200
	%201 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 1
	store %..any %184, %..any* %201
	%202 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 2
	store %..any %189, %..any* %202
	%203 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 3
	store %..any %194, %..any* %203
	%204 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 4
	store %..any %199, %..any* %204
	%205 = getelementptr inbounds [5 x %..any], [5 x %..any]* %28, i64 0, i32 0
	%206 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 0
	store %..any* %205, %..any** %206
	%207 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 1
	store i64 5, i64* %207
	%208 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 2
	store i64 5, i64* %208
	%209 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %27, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$43d, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %209)
	br label %if.done-7

if.done-7:
	br label %if.done-8

if.done-8:
	br label %for.index.loop-1

for.index.done-9:
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @console-17.DrawConsole(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca %..string, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..string, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca %imgui-9.Vec4, align 16
	%7 = alloca %..string, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca %imgui-9.Vec4, align 16
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca {i8*, i64, i64}, align 8
	%12 = alloca {i8*, i64, i64}, align 8
	%13 = alloca %imgui-9.Vec2, align 4
	%14 = alloca {i8*, i64, i64}, align 8
	%15 = alloca %..any, align 8
	%16 = alloca i64, align 8
	%17 = alloca %..any, align 8
	%18 = alloca i64, align 8
	%19 = alloca %..any, align 8
	%20 = alloca i64, align 8
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [3 x %..any], align 8
	%23 = alloca %imgui-9.Vec4, align 16
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%24 = load i1*, i1** %0, align 8
	%25 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$43e, i64 0, i32 0), i64 7}, i1* %24, i32 1056)
	; IfStmt
	; SelectorExpr
	%26 = call ccc i1 @igBeginMenuBar()
	br i1 %26, label %if.then-1, label %if.done-8

if.then-1:
	; IfStmt
	; SelectorExpr
	%27 = call i1 @imgui-9.BeginMenu(%..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$43f, i64 0, i32 0), i64 4}, i1 true)
	br i1 %27, label %if.then-2, label %if.done-7

if.then-2:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%28 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 3
	%29 = load {%console-17.LogItem*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}* %28, align 8
	%30 = extractvalue {%console-17.LogItem*, i64, i64,%Allocator} %29, 1
	%31 = icmp sgt i64 %30, 0
	%32 = call i1 @imgui-9.MenuItem(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$440, i64 0, i32 0), i64 8}, %..string zeroinitializer, i1 false, i1 %31)
	br i1 %32, label %if.then-3, label %if.done-4

if.then-3:
	; SelectorExpr
	call void @debug_windows-27.ToggleWindow(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$441, i64 0, i32 0), i64 13})
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%33 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%34 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %33, align 8
	%35 = extractvalue {%..string*, i64, i64,%Allocator} %34, 1
	%36 = icmp sgt i64 %35, 0
	%37 = call i1 @imgui-9.MenuItem(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$442, i64 0, i32 0), i64 5}, %..string zeroinitializer, i1 false, i1 %36)
	br i1 %37, label %if.then-5, label %if.done-6

if.then-5:
	call void @console-17.ClearConsole()
	br label %if.done-6

if.done-6:
	; SelectorExpr
	call ccc void @igEndMenu()
	br label %if.done-7

if.done-7:
	; SelectorExpr
	call ccc void @igEndMenuBar()
	br label %if.done-8

if.done-8:
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
	store %imgui-9.Vec2 {float 0xbff0000000000000, float 0xc044000000000000}, %imgui-9.Vec2* %1
	%38 = bitcast %imgui-9.Vec2* %1 to i64*
	%39 = load i64, i64* %38, align 8
	%40 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$443, i64 0, i32 0), i64 6}, i64 %39, i1 true, i32 0)
	; RangeStmt
	; t
	store %..string zeroinitializer, %..string* %2
		; SelectorExpr
	%41 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%42 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %41, i64 0, i32 1
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-9

for.index.loop-9:
	%43 = load i64, i64* %3, align 8
	%44 = add i64 %43, 1
	store i64 %44, i64* %3
	%45 = load i64, i64* %42, align 8
	%46 = icmp slt i64 %44, %45
	br i1 %46, label %for.index.body-10, label %for.index.done-17

for.index.body-10:
	%47 = load i64, i64* %3, align 8
	%48 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %41, i64 0, i32 0
	%49 = load %..string*, %..string** %48, align 8
	%50 = getelementptr inbounds %..string, %..string* %49, i64 %47
	%51 = load %..string, %..string* %50, align 8
	store %..string %51, %..string* %2
	; IfStmt
	; SliceExpr
	%52 = load %..string, %..string* %2, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$444, i64 0, i32 0), i64 29}, i64 173, i64 21, i64 0, i64 9)
	%53 = extractvalue %..string %52, 0
	%54 = getelementptr inbounds i8, i8* %53, i64 0
	%55 = sub i64 9, 0
	store %..string zeroinitializer, %..string* %4
	%56 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 0
	store i8* %54, i8** %56
	%57 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 1
	store i64 %55, i64* %57
	%58 = load %..string, %..string* %4, align 8
	%59 = call i1 @__string_eq(%..string %58, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$445, i64 0, i32 0), i64 9})
	br i1 %59, label %if.then-11, label %if.else-12

if.then-11:
	; SelectorExpr
	%60 = load %..string, %..string* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	%61 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %6
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %6
	call void @imgui-9.TextColored(%imgui-9.Vec4* %6, %..string %60, {%..any*, i64, i64} %61)
	br label %if.done-16

if.else-12:
	; IfStmt
	; SliceExpr
	%62 = load %..string, %..string* %2, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$446, i64 0, i32 0), i64 29}, i64 175, i64 28, i64 0, i64 4)
	%63 = extractvalue %..string %62, 0
	%64 = getelementptr inbounds i8, i8* %63, i64 0
	%65 = sub i64 4, 0
	store %..string zeroinitializer, %..string* %7
	%66 = getelementptr inbounds %..string, %..string* %7, i64 0, i32 0
	store i8* %64, i8** %66
	%67 = getelementptr inbounds %..string, %..string* %7, i64 0, i32 1
	store i64 %65, i64* %67
	%68 = load %..string, %..string* %7, align 8
	%69 = call i1 @__string_eq(%..string %68, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$447, i64 0, i32 0), i64 4})
	br i1 %69, label %if.then-13, label %if.else-14

if.then-13:
	; SelectorExpr
	%70 = load %..string, %..string* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	%71 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %9
	store %imgui-9.Vec4 {float 0x3fe6666660000000, float 0x3fe6666660000000, float 0x3fe6666660000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %9
	call void @imgui-9.TextColored(%imgui-9.Vec4* %9, %..string %70, {%..any*, i64, i64} %71)
	br label %if.done-15

if.else-14:
	; SelectorExpr
	%72 = load %..string, %..string* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	%73 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string %72, {%..any*, i64, i64} %73)
	br label %if.done-15

if.done-15:
	br label %if.done-16

if.done-16:
	br label %for.index.loop-9

for.index.done-17:
	; IfStmt
	; SelectorExpr
	%74 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 7
	%75 = load i1, i1* %74, align 1
	br i1 %75, label %if.then-18, label %if.done-19

if.then-18:
	; SelectorExpr
	call ccc void @igSetScrollHere(float 0x3fe0000000000000)
	br label %if.done-19

if.done-19:
	; AssignStmt
	; SelectorExpr
	%76 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 7
	store i1 false, i1* %76
	; SelectorExpr
	call ccc void @igEndChild()
	; IfStmt
	; SelectorExpr
	; SliceExpr
	; SelectorExpr
	%77 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 6
	%78 = load [256 x i8], [256 x i8]* %77, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$448, i64 0, i32 0), i64 29}, i64 191, i64 59, i64 0, i64 256, i64 256)
	%79 = getelementptr inbounds [256 x i8], [256 x i8]* %77, i64 0, i32 0
	%80 = getelementptr inbounds i8, i8* %79, i64 0
	%81 = sub i64 256, 0
	%82 = sub i64 256, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %11
	%83 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 0
	store i8* %80, i8** %83
	%84 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 1
	store i64 %81, i64* %84
	%85 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 2
	store i64 %82, i64* %85
	%86 = load {i8*, i64, i64}, {i8*, i64, i64}* %11, align 8
	%87 = call i1 @imgui-9.InputText(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$449, i64 0, i32 0), i64 5}, {i8*, i64, i64} %86, i32 224, i32 (%imgui-9.GuiTextEditCallbackData*)* @console-17._TextEditCallback, %..rawptr zeroinitializer)
	br i1 %87, label %if.then-20, label %if.done-21

if.then-20:
	; SelectorExpr
	call ccc void @igSetKeyboardFocusHere(i32 -1)
	; SliceExpr
	; SelectorExpr
	%88 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 6
	%89 = load [256 x i8], [256 x i8]* %88, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$44a, i64 0, i32 0), i64 29}, i64 193, i64 46, i64 0, i64 256, i64 256)
	%90 = getelementptr inbounds [256 x i8], [256 x i8]* %88, i64 0, i32 0
	%91 = getelementptr inbounds i8, i8* %90, i64 0
	%92 = sub i64 256, 0
	%93 = sub i64 256, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %12
	%94 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 0
	store i8* %91, i8** %94
	%95 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 1
	store i64 %92, i64* %95
	%96 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 2
	store i64 %93, i64* %96
	%97 = load {i8*, i64, i64}, {i8*, i64, i64}* %12, align 8
	call void @console-17.InputEnter({i8*, i64, i64} %97)
	br label %if.done-21

if.done-21:
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0xbff0000000000000)
	; IfStmt
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %13
	store %imgui-9.Vec2 {float 0xbff0000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %13
	%98 = bitcast %imgui-9.Vec2* %13 to i64*
	%99 = load i64, i64* %98, align 8
	%100 = call i1 @imgui-9.Button(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$44b, i64 0, i32 0), i64 5}, i64 %99)
	br i1 %100, label %if.then-22, label %if.done-23

if.then-22:
	; SliceExpr
	; SelectorExpr
	%101 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 6
	%102 = load [256 x i8], [256 x i8]* %101, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$44c, i64 0, i32 0), i64 29}, i64 197, i64 46, i64 0, i64 256, i64 256)
	%103 = getelementptr inbounds [256 x i8], [256 x i8]* %101, i64 0, i32 0
	%104 = getelementptr inbounds i8, i8* %103, i64 0
	%105 = sub i64 256, 0
	%106 = sub i64 256, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %14
	%107 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 0
	store i8* %104, i8** %107
	%108 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 1
	store i64 %105, i64* %108
	%109 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %14, i64 0, i32 2
	store i64 %106, i64* %109
	%110 = load {i8*, i64, i64}, {i8*, i64, i64}* %14, align 8
	call void @console-17.InputEnter({i8*, i64, i64} %110)
	br label %if.done-23

if.done-23:
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; SelectorExpr
	%111 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%112 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %111, align 8
	%113 = extractvalue {%..string*, i64, i64,%Allocator} %112, 1
	; SelectorExpr
	%114 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%115 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %114, align 8
	%116 = extractvalue {%..string*, i64, i64,%Allocator} %115, 1
	; SelectorExpr
	%117 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 3
	%118 = load {%console-17.LogItem*, i64, i64,%Allocator}, {%console-17.LogItem*, i64, i64,%Allocator}* %117, align 8
	%119 = extractvalue {%console-17.LogItem*, i64, i64,%Allocator} %118, 1
	store %..any zeroinitializer, %..any* %15
	store i64 zeroinitializer, i64* %16
	store i64 %113, i64* %16
	%120 = bitcast i64* %16 to %..rawptr
	%121 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%122 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 0
	store %..rawptr %120, %..rawptr* %122
	%123 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 1
	store %Type_Info* %121, %Type_Info** %123
	%124 = load %..any, %..any* %15, align 8
	store %..any zeroinitializer, %..any* %17
	store i64 zeroinitializer, i64* %18
	store i64 %116, i64* %18
	%125 = bitcast i64* %18 to %..rawptr
	%126 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%127 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %125, %..rawptr* %127
	%128 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %126, %Type_Info** %128
	%129 = load %..any, %..any* %17, align 8
	store %..any zeroinitializer, %..any* %19
	store i64 zeroinitializer, i64* %20
	store i64 %119, i64* %20
	%130 = bitcast i64* %20 to %..rawptr
	%131 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%132 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 0
	store %..rawptr %130, %..rawptr* %132
	%133 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 1
	store %Type_Info* %131, %Type_Info** %133
	%134 = load %..any, %..any* %19, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [3 x %..any] zeroinitializer, [3 x %..any]* %22
	%135 = getelementptr inbounds [3 x %..any], [3 x %..any]* %22, i64 0, i32 0
	store %..any %124, %..any* %135
	%136 = getelementptr inbounds [3 x %..any], [3 x %..any]* %22, i64 0, i32 1
	store %..any %129, %..any* %136
	%137 = getelementptr inbounds [3 x %..any], [3 x %..any]* %22, i64 0, i32 2
	store %..any %134, %..any* %137
	%138 = getelementptr inbounds [3 x %..any], [3 x %..any]* %22, i64 0, i32 0
	%139 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %138, %..any** %139
	%140 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 3, i64* %140
	%141 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 3, i64* %141
	%142 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %23
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3fc9999980000000}, %imgui-9.Vec4* %23
	call void @imgui-9.TextColored(%imgui-9.Vec4* %23, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$44d, i64 0, i32 0), i64 34}, {%..any*, i64, i64} %142)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @console-17.InputEnter({i8*, i64, i64} %input) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca %..string, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca %..string, align 8
	%6 = alloca {%..any*, i64, i64}, align 8
	%7 = alloca {%..string*, i64, i64}, align 8
	%8 = alloca [1 x %..string], align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..string, align 8
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca [1 x %..any], align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %input, {i8*, i64, i64}* %0
	; IfStmt
	; IndexExpr
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%14 = extractvalue {i8*, i64, i64} %13, 0
	%15 = extractvalue {i8*, i64, i64} %13, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$44e, i64 0, i32 0), i64 29}, i64 208, i64 14, i64 0, i64 %15)
	%16 = getelementptr inbounds i8, i8* %14, i64 0
	%17 = load i8, i8* %16, align 1
	%18 = icmp ne i8 %17, 0
	br i1 %18, label %cmp.and-1, label %if.done-5

cmp.and-1:
	; IndexExpr
	%19 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%20 = extractvalue {i8*, i64, i64} %19, 0
	%21 = extractvalue {i8*, i64, i64} %19, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$44f, i64 0, i32 0), i64 29}, i64 209, i64 14, i64 0, i64 %21)
	%22 = getelementptr inbounds i8, i8* %20, i64 0
	%23 = load i8, i8* %22, align 1
	%24 = icmp ne i8 %23, 32
	br i1 %24, label %if.then-2, label %if.done-5

if.then-2:
	; i
	store i64 zeroinitializer, i64* %1
		; SliceExpr
	%25 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%26 = extractvalue {i8*, i64, i64} %25, 1
	%27 = extractvalue {i8*, i64, i64} %25, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$450, i64 0, i32 0), i64 29}, i64 210, i64 35, i64 0, i64 %26, i64 %27)
	%28 = extractvalue {i8*, i64, i64} %25, 0
	%29 = getelementptr inbounds i8, i8* %28, i64 0
	%30 = sub i64 %26, 0
	%31 = sub i64 %27, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%32 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %29, i8** %32
	%33 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %30, i64* %33
	%34 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %31, i64* %34
	%35 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	%36 = call i64 @console-17._FindStringNull({i8*, i64, i64} %35)
	store i64 %36, i64* %1
	; str
	store %..string zeroinitializer, %..string* %3
		; SliceExpr
	%37 = load i64, i64* %1, align 8
	%38 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%39 = extractvalue {i8*, i64, i64} %38, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$451, i64 0, i32 0), i64 29}, i64 211, i64 28, i64 0, i64 %37, i64 %39)
	%40 = extractvalue {i8*, i64, i64} %38, 0
	%41 = getelementptr inbounds i8, i8* %40, i64 0
	%42 = sub i64 %37, 0
	%43 = sub i64 %39, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%44 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %41, i8** %44
	%45 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %42, i64* %45
	%46 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %43, i64* %46
	%47 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%48 = extractvalue {i8*, i64, i64} %47, 0
	%49 = extractvalue {i8*, i64, i64} %47, 1
	store %..string zeroinitializer, %..string* %5
	%50 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %48, i8** %50
	%51 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %49, i64* %51
	%52 = load %..string, %..string* %5, align 8
	store %..string %52, %..string* %3
	%53 = load %..string, %..string* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %6
	%54 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %6, align 8
	call void @console-17._InternalLog(%..string %53, i64 1, {%..any*, i64, i64} %54)
	; append
	; SelectorExpr
	%55 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%56 = bitcast {%..string*, i64, i64,%Allocator}* %55 to %..rawptr
	; SelectorExpr
	%57 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%58 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %57, align 8
	%59 = load %..string, %..string* %3, align 8
	%60 = call %..string @console-17._StringDup(%..string %59)
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %7
	store [1 x %..string] zeroinitializer, [1 x %..string]* %8
	%61 = getelementptr inbounds [1 x %..string], [1 x %..string]* %8, i64 0, i32 0
	store %..string %60, %..string* %61
	%62 = getelementptr inbounds [1 x %..string], [1 x %..string]* %8, i64 0, i32 0
	%63 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7, i64 0, i32 0
	store %..string* %62, %..string** %63
	%64 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %64
	%65 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %65
	%66 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %7, align 8
	%67 = extractvalue {%..string*, i64, i64} %66, 0
	%68 = extractvalue {%..string*, i64, i64} %66, 1
	%69 = bitcast %..string* %67 to %..rawptr
	%70 = call i64 @__dynamic_array_append(%..rawptr %56, i64 16, i64 8, %..rawptr %69, i64 %68)
	; IfStmt
	%71 = load %..string, %..string* %3, align 8
	%72 = call i1 @console-17.ExecuteCommand(%..string %71)
	br i1 %72, label %if.done-4, label %if.then-3

if.then-3:
	%73 = load %..string, %..string* %3, align 8
	%74 = call %..string @console-17._PullCommandName(%..string %73)
	store %..any zeroinitializer, %..any* %9
	store %..string zeroinitializer, %..string* %10
	store %..string %74, %..string* %10
	%75 = bitcast %..string* %10 to %..rawptr
	%76 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%77 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %75, %..rawptr* %77
	%78 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %76, %Type_Info** %78
	%79 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	store [1 x %..any] zeroinitializer, [1 x %..any]* %12
	%80 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	store %..any %79, %..any* %80
	%81 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	%82 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 0
	store %..any* %81, %..any** %82
	%83 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 1
	store i64 1, i64* %83
	%84 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 2
	store i64 1, i64* %84
	%85 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	call void @console-17.LogError(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$452, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %85)
	br label %if.done-4

if.done-4:
	; AssignStmt
	; IndexExpr
	%86 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%87 = extractvalue {i8*, i64, i64} %86, 0
	%88 = extractvalue {i8*, i64, i64} %86, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$453, i64 0, i32 0), i64 29}, i64 217, i64 15, i64 0, i64 %88)
	%89 = getelementptr inbounds i8, i8* %87, i64 0
	store i8 0, i8* %89
	; AssignStmt
	; SelectorExpr
	%90 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 7
	store i1 true, i1* %90
	; AssignStmt
	; SelectorExpr
	%91 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	store i64 0, i64* %91
	br label %if.done-5

if.done-5:
	ret void
}

define void @console-17.ClearConsole() {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	; RangeStmt
	; str
	store %..string zeroinitializer, %..string* %0
		; SelectorExpr
	%2 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%3 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %2, i64 0, i32 1
	store i64 zeroinitializer, i64* %1
	store i64 -1, i64* %1
	br label %for.index.loop-1

for.index.loop-1:
	%4 = load i64, i64* %1, align 8
	%5 = add i64 %4, 1
	store i64 %5, i64* %1
	%6 = load i64, i64* %3, align 8
	%7 = icmp slt i64 %5, %6
	br i1 %7, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%8 = load i64, i64* %1, align 8
	%9 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %2, i64 0, i32 0
	%10 = load %..string*, %..string** %9, align 8
	%11 = getelementptr inbounds %..string, %..string* %10, i64 %8
	%12 = load %..string, %..string* %11, align 8
	store %..string %12, %..string* %0
	; free
	%13 = load %..string, %..string* %0, align 8
	%14 = extractvalue %..string %13, 0
	%15 = bitcast i8* %14 to %..rawptr
	call void @free_ptr(%..rawptr %15)
	br label %for.index.loop-1

for.index.done-3:
	; clear
	; SelectorExpr
	%16 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 1
	%17 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %16, i64 0, i32 1
	store i64 0, i64* %17
	ret void
}

define i1 @console-17.ExecuteCommand(%..string %cmdString) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca void ({%..string*, i64, i64})*, align 8
	%3 = alloca i1, align 1
	%4 = alloca {void ({%..string*, i64, i64})*, i1}, align 8
	%5 = alloca %__Map_Header, align 8
	%6 = alloca %__Map_Key, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	%9 = alloca {%..string*, i64, i64,%Allocator}, align 8
	%10 = alloca i64, align 8
	%11 = alloca %..string, align 8
	%12 = alloca %..string, align 8
	%13 = alloca i32, align 4
	%14 = alloca i64, align 8
	%15 = alloca i64, align 8
	%16 = alloca %..string, align 8
	%17 = alloca %..string, align 8
	%18 = alloca {%..string*, i64, i64}, align 8
	%19 = alloca [1 x %..string], align 8
	%20 = alloca %..string, align 8
	%21 = alloca {%..string*, i64, i64}, align 8
	%22 = alloca [1 x %..string], align 8
	%23 = alloca {%..string*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %cmdString, %..string* %0
	; name
	store %..string zeroinitializer, %..string* %1
		%24 = load %..string, %..string* %0, align 8
	%25 = call %..string @console-17._PullCommandName(%..string %24)
	store %..string %25, %..string* %1
	; IfStmt
	; cmd
	store void ({%..string*, i64, i64})* zeroinitializer, void ({%..string*, i64, i64})** %2
		; ok
	store i1 zeroinitializer, i1* %3
		; IndexExpr
	; SelectorExpr
	%26 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 0
	%27 = load %..string, %..string* %1, align 8
	store {void ({%..string*, i64, i64})*, i1} zeroinitializer, {void ({%..string*, i64, i64})*, i1}* %4
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	%28 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 0
	%29 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, void ({%..string*, i64, i64})*}*, i64, i64,%Allocator}}* %26 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %29, %raw-6.Dynamic_Map** %28
	%30 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 1
	store i1 true, i1* %30
	%31 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 2
	store i64 40, i64* %31
	%32 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 3
	store i64 8, i64* %32
	%33 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 4
	store i64 32, i64* %33
	%34 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 5
	store i64 8, i64* %34
	%35 = load %__Map_Header, %__Map_Header* %5, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	%36 = call i64 @__default_hash_string(%..string %27)
	%37 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 0
	store i64 %36, i64* %37
	%38 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 1
	store %..string %27, %..string* %38
	%39 = load %__Map_Key, %__Map_Key* %6, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %35, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %39, %__Map_Key* %8
	%40 = call %..rawptr @__dynamic_map_get(%__Map_Header* %7, %__Map_Key* %8)
	%41 = icmp ne %..rawptr %40, null
	%42 = getelementptr inbounds {void ({%..string*, i64, i64})*, i1}, {void ({%..string*, i64, i64})*, i1}* %4, i64 0, i32 1
	store i1 %41, i1* %42
	br i1 %41, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%43 = getelementptr inbounds {void ({%..string*, i64, i64})*, i1}, {void ({%..string*, i64, i64})*, i1}* %4, i64 0, i32 0
	%44 = bitcast %..rawptr %40 to void ({%..string*, i64, i64})**
	%45 = load void ({%..string*, i64, i64})*, void ({%..string*, i64, i64})** %44, align 8
	store void ({%..string*, i64, i64})* %45, void ({%..string*, i64, i64})** %43
	br label %map.get.done-2

map.get.done-2:
	%46 = load {void ({%..string*, i64, i64})*, i1}, {void ({%..string*, i64, i64})*, i1}* %4, align 8
	%47 = extractvalue {void ({%..string*, i64, i64})*, i1} %46, 0
	%48 = extractvalue {void ({%..string*, i64, i64})*, i1} %46, 1
	store void ({%..string*, i64, i64})* %47, void ({%..string*, i64, i64})** %2
	store i1 %48, i1* %3
	%49 = load i1, i1* %3, align 1
	br i1 %49, label %if.then-3, label %if.done-13

if.then-3:
	; args
	store {%..string*, i64, i64,%Allocator} zeroinitializer, {%..string*, i64, i64,%Allocator}* %9
		; IfStmt
	%50 = load %..string, %..string* %0, align 8
	%51 = extractvalue %..string %50, 1
	%52 = load %..string, %..string* %1, align 8
	%53 = extractvalue %..string %52, 1
	%54 = icmp ne i64 %51, %53
	br i1 %54, label %if.then-4, label %if.done-12

if.then-4:
	; p
	store i64 zeroinitializer, i64* %10
		store i64 0, i64* %10
	; newStr
	store %..string zeroinitializer, %..string* %11
		; SliceExpr
	%55 = load %..string, %..string* %1, align 8
	%56 = extractvalue %..string %55, 1
	%57 = add i64 %56, 1
	%58 = load %..string, %..string* %0, align 8
	%59 = extractvalue %..string %58, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$454, i64 0, i32 0), i64 29}, i64 236, i64 32, i64 %57, i64 %59)
	%60 = extractvalue %..string %58, 0
	%61 = getelementptr inbounds i8, i8* %60, i64 %57
	%62 = sub i64 %59, %57
	store %..string zeroinitializer, %..string* %12
	%63 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 0
	store i8* %61, i8** %63
	%64 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 1
	store i64 %62, i64* %64
	%65 = load %..string, %..string* %12, align 8
	store %..string %65, %..string* %11
	; RangeStmt
	; r
	store i32 zeroinitializer, i32* %13
		; i
	store i64 zeroinitializer, i64* %14
		%66 = load %..string, %..string* %11, align 8
	%67 = extractvalue %..string %66, 1
	store i64 zeroinitializer, i64* %15
	store i64 0, i64* %15
	br label %for.string.loop-5

for.string.loop-5:
	%68 = load i64, i64* %15, align 8
	%69 = icmp slt i64 %68, %67
	br i1 %69, label %for.string.body-6, label %for.string.done-11

for.string.body-6:
	%70 = extractvalue %..string %66, 0
	%71 = getelementptr inbounds i8, i8* %70, i64 %68
	%72 = sub i64 %67, %68
	store %..string zeroinitializer, %..string* %16
	%73 = getelementptr inbounds %..string, %..string* %16, i64 0, i32 0
	store i8* %71, i8** %73
	%74 = getelementptr inbounds %..string, %..string* %16, i64 0, i32 1
	store i64 %72, i64* %74
	%75 = load %..string, %..string* %16, align 8
	%76 = call {i32, i64} @__string_decode_rune(%..string %75)
	%77 = extractvalue {i32, i64} %76, 1
	%78 = add i64 %68, %77
	store i64 %78, i64* %15
	%79 = extractvalue {i32, i64} %76, 0
	store i32 %79, i32* %13
	store i64 %68, i64* %14
	; IfStmt
	%80 = load i32, i32* %13, align 4
	%81 = icmp eq i32 %80, 32
	br i1 %81, label %if.then-7, label %if.done-8

if.then-7:
	; append
	%82 = bitcast {%..string*, i64, i64,%Allocator}* %9 to %..rawptr
	%83 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %9, align 8
	; SliceExpr
	%84 = load i64, i64* %10, align 8
	%85 = load i64, i64* %14, align 8
	%86 = add i64 %85, 1
	%87 = load %..string, %..string* %11, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$455, i64 0, i32 0), i64 29}, i64 239, i64 40, i64 %84, i64 %86)
	%88 = extractvalue %..string %87, 0
	%89 = getelementptr inbounds i8, i8* %88, i64 %84
	%90 = sub i64 %86, %84
	store %..string zeroinitializer, %..string* %17
	%91 = getelementptr inbounds %..string, %..string* %17, i64 0, i32 0
	store i8* %89, i8** %91
	%92 = getelementptr inbounds %..string, %..string* %17, i64 0, i32 1
	store i64 %90, i64* %92
	%93 = load %..string, %..string* %17, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %18
	store [1 x %..string] zeroinitializer, [1 x %..string]* %19
	%94 = getelementptr inbounds [1 x %..string], [1 x %..string]* %19, i64 0, i32 0
	store %..string %93, %..string* %94
	%95 = getelementptr inbounds [1 x %..string], [1 x %..string]* %19, i64 0, i32 0
	%96 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %18, i64 0, i32 0
	store %..string* %95, %..string** %96
	%97 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %18, i64 0, i32 1
	store i64 1, i64* %97
	%98 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %18, i64 0, i32 2
	store i64 1, i64* %98
	%99 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %18, align 8
	%100 = extractvalue {%..string*, i64, i64} %99, 0
	%101 = extractvalue {%..string*, i64, i64} %99, 1
	%102 = bitcast %..string* %100 to %..rawptr
	%103 = call i64 @__dynamic_array_append(%..rawptr %82, i64 16, i64 8, %..rawptr %102, i64 %101)
	; AssignStmt
	%104 = load i64, i64* %14, align 8
	%105 = add i64 %104, 1
	store i64 %105, i64* %10
	br label %if.done-8

if.done-8:
	; IfStmt
	%106 = load i64, i64* %14, align 8
	%107 = load %..string, %..string* %11, align 8
	%108 = extractvalue %..string %107, 1
	%109 = sub i64 %108, 1
	%110 = icmp eq i64 %106, %109
	br i1 %110, label %if.then-9, label %if.done-10

if.then-9:
	; append
	%111 = bitcast {%..string*, i64, i64,%Allocator}* %9 to %..rawptr
	%112 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %9, align 8
	; SliceExpr
	%113 = load i64, i64* %10, align 8
	%114 = load i64, i64* %14, align 8
	%115 = add i64 %114, 1
	%116 = add i64 %115, 1
	%117 = load %..string, %..string* %11, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$456, i64 0, i32 0), i64 29}, i64 244, i64 40, i64 %113, i64 %116)
	%118 = extractvalue %..string %117, 0
	%119 = getelementptr inbounds i8, i8* %118, i64 %113
	%120 = sub i64 %116, %113
	store %..string zeroinitializer, %..string* %20
	%121 = getelementptr inbounds %..string, %..string* %20, i64 0, i32 0
	store i8* %119, i8** %121
	%122 = getelementptr inbounds %..string, %..string* %20, i64 0, i32 1
	store i64 %120, i64* %122
	%123 = load %..string, %..string* %20, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %21
	store [1 x %..string] zeroinitializer, [1 x %..string]* %22
	%124 = getelementptr inbounds [1 x %..string], [1 x %..string]* %22, i64 0, i32 0
	store %..string %123, %..string* %124
	%125 = getelementptr inbounds [1 x %..string], [1 x %..string]* %22, i64 0, i32 0
	%126 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %21, i64 0, i32 0
	store %..string* %125, %..string** %126
	%127 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %127
	%128 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %128
	%129 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %21, align 8
	%130 = extractvalue {%..string*, i64, i64} %129, 0
	%131 = extractvalue {%..string*, i64, i64} %129, 1
	%132 = bitcast %..string* %130 to %..rawptr
	%133 = call i64 @__dynamic_array_append(%..rawptr %111, i64 16, i64 8, %..rawptr %132, i64 %131)
	br label %if.done-10

if.done-10:
	br label %for.string.loop-5

for.string.done-11:
	br label %if.done-12

if.done-12:
	%134 = load void ({%..string*, i64, i64})*, void ({%..string*, i64, i64})** %2, align 8
	; SliceExpr
	%135 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %9, align 8
	%136 = extractvalue {%..string*, i64, i64,%Allocator} %135, 1
	%137 = extractvalue {%..string*, i64, i64,%Allocator} %135, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$457, i64 0, i32 0), i64 29}, i64 248, i64 17, i64 0, i64 %136, i64 %137)
	%138 = extractvalue {%..string*, i64, i64,%Allocator} %135, 0
	%139 = getelementptr inbounds %..string, %..string* %138, i64 0
	%140 = sub i64 %136, 0
	%141 = sub i64 %137, 0
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %23
	%142 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %23, i64 0, i32 0
	store %..string* %139, %..string** %142
	%143 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %23, i64 0, i32 1
	store i64 %140, i64* %143
	%144 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %23, i64 0, i32 2
	store i64 %141, i64* %144
	%145 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %23, align 8
	call void %134({%..string*, i64, i64} %145)
	; ReturnStmt
	ret i1 true

if.done-13:
	; ReturnStmt
	ret i1 false
}

define ccc i32 @console-17._TextEditCallback(%imgui-9.GuiTextEditCallbackData* %data) {
decls-0:
	%0 = alloca %imgui-9.GuiTextEditCallbackData*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca {i8*, i64, i64}, align 8
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca {i8*, i64, i64}, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..string, align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca [1 x %..any], align 8
	%11 = alloca i32, align 4
	store %imgui-9.GuiTextEditCallbackData* zeroinitializer, %imgui-9.GuiTextEditCallbackData** %0
		store %imgui-9.GuiTextEditCallbackData* %data, %imgui-9.GuiTextEditCallbackData** %0
	; MatchStmt
	; SelectorExpr
	%12 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%13 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %12, i64 0
	%14 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %13, i64 0, i32 0
	%15 = load i32, i32* %14, align 4
	%16 = icmp eq i32 %15, 128
	br i1 %16, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%17 = icmp eq i32 %15, 64
	br i1 %17, label %match.fall.body-24, label %match.case.next-23

match.case.body-2:
	; prev
	store i64 zeroinitializer, i64* %1
		; SelectorExpr
	%18 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%19 = load i64, i64* %18, align 8
	store i64 %19, i64* %1
	; IfStmt
	; SelectorExpr
	%20 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%21 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %20, i64 0
	%22 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %21, i64 0, i32 5
	%23 = load i32, i32* %22, align 4
	%24 = icmp eq i32 %23, 3
	br i1 %24, label %if.then-3, label %if.else-7

if.then-3:
	; IfStmt
	; SelectorExpr
	%25 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%26 = load i64, i64* %25, align 8
	%27 = icmp eq i64 %26, 0
	br i1 %27, label %if.then-4, label %if.else-5

if.then-4:
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	; SelectorExpr
	%29 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%30 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %29, align 8
	%31 = extractvalue {%..string*, i64, i64,%Allocator} %30, 1
	store i64 %31, i64* %28
	br label %if.done-6

if.else-5:
	; SelectorExpr
	%32 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%33 = load i64, i64* %32, align 8
	%34 = sub i64 %33, 1
	store i64 %34, i64* %32
	br label %if.done-6

if.done-6:
	br label %if.done-14

if.else-7:
	; IfStmt
	; SelectorExpr
	%35 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%36 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %35, i64 0
	%37 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %36, i64 0, i32 5
	%38 = load i32, i32* %37, align 4
	%39 = icmp eq i32 %38, 4
	br i1 %39, label %if.then-8, label %if.done-13

if.then-8:
	; IfStmt
	; SelectorExpr
	%40 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%41 = load i64, i64* %40, align 8
	%42 = icmp ne i64 %41, 0
	br i1 %42, label %if.then-9, label %if.done-12

if.then-9:
	; SelectorExpr
	%43 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%44 = load i64, i64* %43, align 8
	%45 = add i64 %44, 1
	store i64 %45, i64* %43
	; IfStmt
	; SelectorExpr
	%46 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%47 = load i64, i64* %46, align 8
	; SelectorExpr
	%48 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%49 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %48, align 8
	%50 = extractvalue {%..string*, i64, i64,%Allocator} %49, 1
	%51 = icmp sgt i64 %47, %50
	br i1 %51, label %if.then-10, label %if.done-11

if.then-10:
	; AssignStmt
	; SelectorExpr
	%52 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	store i64 0, i64* %52
	br label %if.done-11

if.done-11:
	br label %if.done-12

if.done-12:
	br label %if.done-13

if.done-13:
	br label %if.done-14

if.done-14:
	; IfStmt
	%53 = load i64, i64* %1, align 8
	; SelectorExpr
	%54 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%55 = load i64, i64* %54, align 8
	%56 = icmp ne i64 %53, %55
	br i1 %56, label %if.then-15, label %if.done-22

if.then-15:
	; pos
	store i64 zeroinitializer, i64* %2
		; TernaryExpr
	; SelectorExpr
	%57 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%58 = load i64, i64* %57, align 8
	%59 = icmp sgt i64 %58, 0
	br i1 %59, label %if.then-16, label %if.else-17

if.then-16:
	; SelectorExpr
	%60 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 5
	%61 = load i64, i64* %60, align 8
	%62 = sub i64 %61, 1
	br label %if.done-18

if.else-17:
	br label %if.done-18

if.done-18:
	%63 = phi i64 [ %62, %if.then-16 ], [ -1, %if.else-17 ]
	store i64 %63, i64* %2
	; str
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	; SliceExpr
	; slice_ptr
	; SelectorExpr
	%64 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%65 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %64, i64 0
	%66 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %65, i64 0, i32 6
	%67 = load i8*, i8** %66, align 8
	; SelectorExpr
	%68 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%69 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %68, i64 0
	%70 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %69, i64 0, i32 8
	%71 = load i32, i32* %70, align 4
	%72 = sext i32 %71 to i64
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%73 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %67, i8** %73
	%74 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %72, i64* %74
	%75 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %72, i64* %75
	%76 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
	store {i8*, i64, i64} %76, {i8*, i64, i64}* %5
	%77 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%78 = extractvalue {i8*, i64, i64} %77, 1
	%79 = extractvalue {i8*, i64, i64} %77, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$458, i64 0, i32 0), i64 29}, i64 276, i64 69, i64 0, i64 %78, i64 %79)
	%80 = extractvalue {i8*, i64, i64} %77, 0
	%81 = getelementptr inbounds i8, i8* %80, i64 0
	%82 = sub i64 %78, 0
	%83 = sub i64 %79, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %6
	%84 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 0
	store i8* %81, i8** %84
	%85 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 1
	store i64 %82, i64* %85
	%86 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 2
	store i64 %83, i64* %86
	%87 = load {i8*, i64, i64}, {i8*, i64, i64}* %6, align 8
	; TernaryExpr
	%88 = load i64, i64* %2, align 8
	%89 = icmp slt i64 %88, 0
	br i1 %89, label %if.then-19, label %if.else-20

if.then-19:
	br label %if.done-21

if.else-20:
	; IndexExpr
	; SelectorExpr
	%90 = getelementptr inbounds %console-17.LogData, %console-17.LogData* @console-17._InternalData, i64 0, i32 2
	%91 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %90, align 8
	%92 = extractvalue {%..string*, i64, i64,%Allocator} %91, 0
	%93 = extractvalue {%..string*, i64, i64,%Allocator} %91, 1
	%94 = load i64, i64* %2, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$459, i64 0, i32 0), i64 29}, i64 276, i64 118, i64 %94, i64 %93)
	%95 = getelementptr inbounds %..string, %..string* %92, i64 %94
	%96 = load %..string, %..string* %95, align 8
	br label %if.done-21

if.done-21:
	%97 = phi %..string [ zeroinitializer, %if.then-19 ], [ %96, %if.else-20 ]
	store %..any zeroinitializer, %..any* %7
	store %..string zeroinitializer, %..string* %8
	store %..string %97, %..string* %8
	%98 = bitcast %..string* %8 to %..rawptr
	%99 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%100 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %98, %..rawptr* %100
	%101 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %99, %Type_Info** %101
	%102 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	store [1 x %..any] zeroinitializer, [1 x %..any]* %10
	%103 = getelementptr inbounds [1 x %..any], [1 x %..any]* %10, i64 0, i32 0
	store %..any %102, %..any* %103
	%104 = getelementptr inbounds [1 x %..any], [1 x %..any]* %10, i64 0, i32 0
	%105 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 0
	store %..any* %104, %..any** %105
	%106 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 1
	store i64 1, i64* %106
	%107 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 2
	store i64 1, i64* %107
	%108 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	%109 = call %..string @fmt-4.bprintf({i8*, i64, i64} %87, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$45a, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %108)
	store %..string %109, %..string* %3
	; strlen
	store i32 zeroinitializer, i32* %11
		%110 = load %..string, %..string* %3, align 8
	%111 = extractvalue %..string %110, 1
	%112 = sub i64 %111, 1
	%113 = trunc i64 %112 to i32
	store i32 %113, i32* %11
	; AssignStmt
	; SelectorExpr
	%114 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%115 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %114, i64 0
	%116 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %115, i64 0, i32 7
	%117 = load i32, i32* %11, align 4
	store i32 %117, i32* %116
	; AssignStmt
	; SelectorExpr
	%118 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%119 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %118, i64 0
	%120 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %119, i64 0, i32 10
	%121 = load i32, i32* %11, align 4
	store i32 %121, i32* %120
	; AssignStmt
	; SelectorExpr
	%122 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%123 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %122, i64 0
	%124 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %123, i64 0, i32 11
	%125 = load i32, i32* %11, align 4
	store i32 %125, i32* %124
	; AssignStmt
	; SelectorExpr
	%126 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%127 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %126, i64 0
	%128 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %127, i64 0, i32 12
	%129 = load i32, i32* %11, align 4
	store i32 %129, i32* %128
	; AssignStmt
	; SelectorExpr
	%130 = load %imgui-9.GuiTextEditCallbackData*, %imgui-9.GuiTextEditCallbackData** %0, align 8
	%131 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %130, i64 0
	%132 = getelementptr inbounds %imgui-9.GuiTextEditCallbackData, %imgui-9.GuiTextEditCallbackData* %131, i64 0, i32 9
	store i1 true, i1* %132
	br label %if.done-22

if.done-22:
	br label %match.done-25

match.case.next-23:
	br label %match.done-25

match.fall.body-24:
	br label %match.done-25

match.done-25:
	; ReturnStmt
	ret i32 0
}

define %..string @console-17._PullCommandName(%..string %s) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..string, align 8
	%5 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; RangeStmt
	; r
	store i32 zeroinitializer, i32* %1
		; i
	store i64 zeroinitializer, i64* %2
		%6 = load %..string, %..string* %0, align 8
	%7 = extractvalue %..string %6, 1
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.string.loop-1

for.string.loop-1:
	%8 = load i64, i64* %3, align 8
	%9 = icmp slt i64 %8, %7
	br i1 %9, label %for.string.body-2, label %for.string.done-5

for.string.body-2:
	%10 = extractvalue %..string %6, 0
	%11 = getelementptr inbounds i8, i8* %10, i64 %8
	%12 = sub i64 %7, %8
	store %..string zeroinitializer, %..string* %4
	%13 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 0
	store i8* %11, i8** %13
	%14 = getelementptr inbounds %..string, %..string* %4, i64 0, i32 1
	store i64 %12, i64* %14
	%15 = load %..string, %..string* %4, align 8
	%16 = call {i32, i64} @__string_decode_rune(%..string %15)
	%17 = extractvalue {i32, i64} %16, 1
	%18 = add i64 %8, %17
	store i64 %18, i64* %3
	%19 = extractvalue {i32, i64} %16, 0
	store i32 %19, i32* %1
	store i64 %8, i64* %2
	; IfStmt
	%20 = load i32, i32* %1, align 4
	%21 = icmp eq i32 %20, 32
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	; SliceExpr
	%22 = load i64, i64* %2, align 8
	%23 = load %..string, %..string* %0, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$45b, i64 0, i32 0), i64 29}, i64 297, i64 21, i64 0, i64 %22)
	%24 = extractvalue %..string %23, 0
	%25 = getelementptr inbounds i8, i8* %24, i64 0
	%26 = sub i64 %22, 0
	store %..string zeroinitializer, %..string* %5
	%27 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %25, i8** %27
	%28 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %26, i64* %28
	%29 = load %..string, %..string* %5, align 8
	ret %..string %29

if.done-4:
	br label %for.string.loop-1

for.string.done-5:
	; ReturnStmt
	%30 = load %..string, %..string* %0, align 8
	ret %..string %30
}

define %..string @console-17._StringDup(%..string %s) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = alloca {i8*, i64, i64}, align 8
	%3 = alloca %..string, align 8
	%4 = alloca i8*, align 8
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca %..string, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %s, %..string* %0
	; data
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		; make
	%7 = load %..string, %..string* %0, align 8
	%8 = extractvalue %..string %7, 1
	%9 = add i64 %8, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$45c, i64 0, i32 0), i64 29}, i64 305, i64 26, i64 0, i64 %9, i64 %9)
	%10 = mul i64 1, %9
	%11 = call %..rawptr @alloc_align(i64 %10, i64 1)
	%12 = bitcast %..rawptr %11 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %2
	%13 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 0
	store i8* %12, i8** %13
	%14 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 1
	store i64 %9, i64* %14
	%15 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %2, i64 0, i32 2
	store i64 %9, i64* %15
	%16 = load {i8*, i64, i64}, {i8*, i64, i64}* %2, align 8
	store {i8*, i64, i64} %16, {i8*, i64, i64}* %1
	; copy
	%17 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	; SliceExpr
	%18 = load %..string, %..string* %0, align 8
	%19 = extractvalue %..string %18, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$45d, i64 0, i32 0), i64 29}, i64 306, i64 24, i64 0, i64 %19)
	%20 = extractvalue %..string %18, 0
	%21 = getelementptr inbounds i8, i8* %20, i64 0
	%22 = sub i64 %19, 0
	store %..string zeroinitializer, %..string* %3
	%23 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 0
	store i8* %21, i8** %23
	%24 = getelementptr inbounds %..string, %..string* %3, i64 0, i32 1
	store i64 %22, i64* %24
	%25 = load %..string, %..string* %3, align 8
	%26 = extractvalue %..string %25, 0
	store i8* zeroinitializer, i8** %4
	store i8* %26, i8** %4
	%27 = extractvalue %..string %25, 1
	%28 = sub i64 %27, 0
	%29 = sub i64 %27, 0
	%30 = load i8*, i8** %4, align 8
	%31 = getelementptr inbounds i8, i8* %30, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
	%32 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 0
	store i8* %31, i8** %32
	%33 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 1
	store i64 %28, i64* %33
	%34 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 2
	store i64 %29, i64* %34
	%35 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%36 = extractvalue {i8*, i64, i64} %17, 0
	%37 = bitcast i8* %36 to %..rawptr
	%38 = extractvalue {i8*, i64, i64} %35, 0
	%39 = bitcast i8* %38 to %..rawptr
	%40 = extractvalue {i8*, i64, i64} %17, 1
	%41 = extractvalue {i8*, i64, i64} %35, 1
	%42 = icmp slt i64 %40, %41
	%43 = select i1 %42, i64 %40, i64 %41
	%44 = mul i64 %43, 1
	%45 = call %..rawptr @__mem_copy(%..rawptr %37, %..rawptr %39, i64 %44)
	; ReturnStmt
	%46 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%47 = extractvalue {i8*, i64, i64} %46, 0
	%48 = extractvalue {i8*, i64, i64} %46, 1
	store %..string zeroinitializer, %..string* %6
	%49 = getelementptr inbounds %..string, %..string* %6, i64 0, i32 0
	store i8* %47, i8** %49
	%50 = getelementptr inbounds %..string, %..string* %6, i64 0, i32 1
	store i64 %48, i64* %50
	%51 = load %..string, %..string* %6, align 8
	ret %..string %51
}

define i64 @console-17._FindStringNull({i8*, i64, i64} %s) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %s, {i8*, i64, i64}* %0
	; RangeStmt
	; r
	store i8 zeroinitializer, i8* %1
		; i
	store i64 zeroinitializer, i64* %2
		%5 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	store i64 zeroinitializer, i64* %3
	%6 = extractvalue {i8*, i64, i64} %5, 1
	store i64 %6, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-1

for.index.loop-1:
	%7 = load i64, i64* %4, align 8
	%8 = add i64 %7, 1
	store i64 %8, i64* %4
	%9 = load i64, i64* %3, align 8
	%10 = icmp slt i64 %8, %9
	br i1 %10, label %for.index.body-2, label %for.index.done-5

for.index.body-2:
	%11 = load i64, i64* %4, align 8
	%12 = extractvalue {i8*, i64, i64} %5, 0
	%13 = getelementptr inbounds i8, i8* %12, i64 %11
	%14 = load i8, i8* %13, align 1
	store i8 %14, i8* %1
	store i64 %11, i64* %2
	; IfStmt
	%15 = load i8, i8* %1, align 1
	%16 = icmp eq i8 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%17 = load i64, i64* %2, align 8
	ret i64 %17

if.done-4:
	br label %for.index.loop-1

for.index.done-5:
	; ReturnStmt
	ret i64 -1
}

define %entity-18.Entity* @entity-18.CreateSlowTower() {
decls-0:
	%0 = alloca %entity-18.Entity*, align 8
	%1 = alloca %entity-18.Entity.Tower, align 8
	%2 = alloca %entity-18.Tower.Slow, align 8
	%3 = alloca %entity-18.Tower, align 8
	%4 = alloca %entity-18.Entity, align 8
	; e
	store %entity-18.Entity* zeroinitializer, %entity-18.Entity** %0
		; new
	%5 = call %..rawptr @alloc_align(i64 128, i64 8)
	%6 = bitcast %..rawptr %5 to %entity-18.Entity*
	store %entity-18.Entity* %6, %entity-18.Entity** %0
	; t
	store %entity-18.Entity.Tower zeroinitializer, %entity-18.Entity.Tower* %1
		store %entity-18.Entity.Tower zeroinitializer, %entity-18.Entity.Tower* %1
	; s
	store %entity-18.Tower.Slow zeroinitializer, %entity-18.Tower.Slow* %2
		store %entity-18.Tower.Slow zeroinitializer, %entity-18.Tower.Slow* %2
	; AssignStmt
	; SelectorExpr
	%7 = getelementptr inbounds %entity-18.Tower.Slow, %entity-18.Tower.Slow* %2, i64 0, i32 4
	store float 0x4075600000000000, float* %7
	; AssignStmt
	; SelectorExpr
	%8 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %1, i64 0, i32 2
	%9 = load %entity-18.Tower.Slow, %entity-18.Tower.Slow* %2, align 8
	; union - child to parent
	store %entity-18.Tower zeroinitializer, %entity-18.Tower* %3
	%10 = bitcast %entity-18.Tower* %3 to %entity-18.Tower.Slow*
	store %entity-18.Tower.Slow %9, %entity-18.Tower.Slow* %10
	%11 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %3, i64 0, i32 6 ; UnionTagPtr
	store i64 2, i64* %11
	%12 = load %entity-18.Tower, %entity-18.Tower* %3, align 8
	store %entity-18.Tower %12, %entity-18.Tower* %8
	; AssignStmt
	%13 = load %entity-18.Entity*, %entity-18.Entity** %0, align 8
	%14 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %13, i64 0
	%15 = load %entity-18.Entity.Tower, %entity-18.Entity.Tower* %1, align 8
	; union - child to parent
	store %entity-18.Entity zeroinitializer, %entity-18.Entity* %4
	%16 = bitcast %entity-18.Entity* %4 to %entity-18.Entity.Tower*
	store %entity-18.Entity.Tower %15, %entity-18.Entity.Tower* %16
	%17 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %4, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %17
	%18 = load %entity-18.Entity, %entity-18.Entity* %4, align 8
	store %entity-18.Entity %18, %entity-18.Entity* %14
	%19 = load i64, i64* @entity-18.GUID, align 8
	%20 = add i64 %19, 1
	store i64 %20, i64* @entity-18.GUID
	; AssignStmt
	; SelectorExpr
	%21 = load %entity-18.Entity*, %entity-18.Entity** %0, align 8
	%22 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %21, i64 0
	%23 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %22, i64 0, i32 1
	%24 = load i64, i64* @entity-18.GUID, align 8
	store i64 %24, i64* %23
	; AssignStmt
	; SelectorExpr
	%25 = load %entity-18.Entity*, %entity-18.Entity** %0, align 8
	%26 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %25, i64 0
	%27 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %26, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$45e, i64 0, i32 0), i64 10}, %..string* %27
	; ReturnStmt
	%28 = load %entity-18.Entity*, %entity-18.Entity** %0, align 8
	ret %entity-18.Entity* %28
}

define void @entity-18.AddEntity(%entity-18.List* %list, %entity-18.Entity* %entity) {
decls-0:
	%0 = alloca %entity-18.List*, align 8
	%1 = alloca %entity-18.Entity*, align 8
	%2 = alloca %entity-18.ListItem*, align 8
	store %entity-18.List* zeroinitializer, %entity-18.List** %0
		store %entity-18.List* %list, %entity-18.List** %0
	store %entity-18.Entity* zeroinitializer, %entity-18.Entity** %1
		store %entity-18.Entity* %entity, %entity-18.Entity** %1
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%3 = load %entity-18.List*, %entity-18.List** %0, align 8
	%4 = getelementptr inbounds %entity-18.List, %entity-18.List* %3, i64 0
	%5 = getelementptr inbounds %entity-18.List, %entity-18.List* %4, i64 0, i32 0
	%6 = load %entity-18.ListItem*, %entity-18.ListItem** %5, align 8
	%7 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %6, i64 0
	%8 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %7, i64 0, i32 0
	%9 = load %entity-18.Entity*, %entity-18.Entity** %8, align 8
	%10 = icmp eq %entity-18.Entity* %9, zeroinitializer
	br i1 %10, label %if.then-1, label %if.else-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%11 = load %entity-18.List*, %entity-18.List** %0, align 8
	%12 = getelementptr inbounds %entity-18.List, %entity-18.List* %11, i64 0
	%13 = getelementptr inbounds %entity-18.List, %entity-18.List* %12, i64 0, i32 0
	%14 = load %entity-18.ListItem*, %entity-18.ListItem** %13, align 8
	%15 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %14, i64 0
	%16 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %15, i64 0, i32 0
	%17 = load %entity-18.Entity*, %entity-18.Entity** %1, align 8
	store %entity-18.Entity* %17, %entity-18.Entity** %16
	br label %if.done-3

if.else-2:
	; item
	store %entity-18.ListItem* zeroinitializer, %entity-18.ListItem** %2
		; new
	%18 = call %..rawptr @alloc_align(i64 16, i64 8)
	%19 = bitcast %..rawptr %18 to %entity-18.ListItem*
	store %entity-18.ListItem* %19, %entity-18.ListItem** %2
	; AssignStmt
	; SelectorExpr
	%20 = load %entity-18.ListItem*, %entity-18.ListItem** %2, align 8
	%21 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %20, i64 0
	%22 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %21, i64 0, i32 0
	%23 = load %entity-18.Entity*, %entity-18.Entity** %1, align 8
	store %entity-18.Entity* %23, %entity-18.Entity** %22
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%24 = load %entity-18.List*, %entity-18.List** %0, align 8
	%25 = getelementptr inbounds %entity-18.List, %entity-18.List* %24, i64 0
	%26 = getelementptr inbounds %entity-18.List, %entity-18.List* %25, i64 0, i32 1
	%27 = load %entity-18.ListItem*, %entity-18.ListItem** %26, align 8
	%28 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %27, i64 0
	%29 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %28, i64 0, i32 1
	%30 = load %entity-18.ListItem*, %entity-18.ListItem** %2, align 8
	store %entity-18.ListItem* %30, %entity-18.ListItem** %29
	; AssignStmt
	; SelectorExpr
	%31 = load %entity-18.List*, %entity-18.List** %0, align 8
	%32 = getelementptr inbounds %entity-18.List, %entity-18.List* %31, i64 0
	%33 = getelementptr inbounds %entity-18.List, %entity-18.List* %32, i64 0, i32 1
	%34 = load %entity-18.ListItem*, %entity-18.ListItem** %2, align 8
	store %entity-18.ListItem* %34, %entity-18.ListItem** %33
	br label %if.done-3

if.done-3:
	; SelectorExpr
	%35 = load %entity-18.List*, %entity-18.List** %0, align 8
	%36 = getelementptr inbounds %entity-18.List, %entity-18.List* %35, i64 0
	%37 = getelementptr inbounds %entity-18.List, %entity-18.List* %36, i64 0, i32 2
	%38 = load i64, i64* %37, align 8
	%39 = add i64 %38, 1
	store i64 %39, i64* %37
	ret void
}

define %entity-18.List* @entity-18.MakeList() {
decls-0:
	%0 = alloca %entity-18.List*, align 8
	%1 = alloca %entity-18.ListItem*, align 8
	; list
	store %entity-18.List* zeroinitializer, %entity-18.List** %0
		; new
	%2 = call %..rawptr @alloc_align(i64 24, i64 8)
	%3 = bitcast %..rawptr %2 to %entity-18.List*
	store %entity-18.List* %3, %entity-18.List** %0
	; front
	store %entity-18.ListItem* zeroinitializer, %entity-18.ListItem** %1
		; new
	%4 = call %..rawptr @alloc_align(i64 16, i64 8)
	%5 = bitcast %..rawptr %4 to %entity-18.ListItem*
	store %entity-18.ListItem* %5, %entity-18.ListItem** %1
	; AssignStmt
	; SelectorExpr
	%6 = load %entity-18.List*, %entity-18.List** %0, align 8
	%7 = getelementptr inbounds %entity-18.List, %entity-18.List* %6, i64 0
	%8 = getelementptr inbounds %entity-18.List, %entity-18.List* %7, i64 0, i32 0
	%9 = load %entity-18.ListItem*, %entity-18.ListItem** %1, align 8
	store %entity-18.ListItem* %9, %entity-18.ListItem** %8
	; AssignStmt
	; SelectorExpr
	%10 = load %entity-18.List*, %entity-18.List** %0, align 8
	%11 = getelementptr inbounds %entity-18.List, %entity-18.List* %10, i64 0
	%12 = getelementptr inbounds %entity-18.List, %entity-18.List* %11, i64 0, i32 1
	%13 = load %entity-18.ListItem*, %entity-18.ListItem** %1, align 8
	store %entity-18.ListItem* %13, %entity-18.ListItem** %12
	; AssignStmt
	; SelectorExpr
	%14 = load %entity-18.List*, %entity-18.List** %0, align 8
	%15 = getelementptr inbounds %entity-18.List, %entity-18.List* %14, i64 0
	%16 = getelementptr inbounds %entity-18.List, %entity-18.List* %15, i64 0, i32 2
	store i64 0, i64* %16
	; ReturnStmt
	%17 = load %entity-18.List*, %entity-18.List** %0, align 8
	ret %entity-18.List* %17
}

define void @input-19.Update(%input-19.Input_t* %input) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	; AssignStmt
	; SelectorExpr
	%1 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%2 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %1, i64 0
	%3 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %2, i64 0, i32 6
	store i1 false, i1* %3
	%4 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.ClearCharQueue(%input-19.Input_t* %4)
	%5 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.UpdateKeyboard(%input-19.Input_t* %5)
	%6 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.UpdateXinput(%input-19.Input_t* %6)
	ret void
}

define void @input-19.UpdateMousePosition(%input-19.Input_t* %input, %..rawptr %handle) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca %..rawptr, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %handle, %..rawptr* %1
	; AssignStmt
	; SelectorExpr
	%2 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%3 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %2, i64 0
	%4 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %3, i64 0, i32 3
	; SelectorExpr
	%5 = load %..rawptr, %..rawptr* %1, align 8
	%6 = call {[0 x <8 x i8>], [2 x float]} @platform_win32-28.GetCursorPos(%..rawptr %5)
	store {[0 x <8 x i8>], [2 x float]} %6, {[0 x <8 x i8>], [2 x float]}* %4
	ret void
}

define void @input-19.UpdateKeyboard(%input-19.Input_t* %input) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca i32, align 4
	%2 = alloca {%Type_Info.Enum*, i1}, align 8
	%3 = alloca i64, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	; RangeStmt
	; k
	store i32 zeroinitializer, i32* %1
		%4 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %2
	%5 = getelementptr inbounds %Type_Info, %Type_Info* %4, i64 0, i32 4 ; UnionTagPtr
	%6 = load i64, i64* %5, align 8
	%7 = icmp eq i64 %6, 20
	br i1 %7, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%8 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 0
	%9 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 1
	%10 = bitcast %Type_Info* %4 to %Type_Info.Enum*
	store %Type_Info.Enum* %10, %Type_Info.Enum** %8
	store i1 true, i1* %9
	br label %union_cast.end-2

union_cast.end-2:
	%11 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 1
	%12 = load i1, i1* %11, align 1
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %12, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$45f, i64 0, i32 0), i64 27}, i64 43, i64 20, %Type_Info* %13, %Type_Info* %14)
	%15 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 0
	%16 = load %Type_Info.Enum*, %Type_Info.Enum** %15, align 8
	%17 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %16, i64 0, i32 4
	%18 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %17, align 8
	%19 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %18, 0
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.enum.loop-3

for.enum.loop-3:
	%20 = load i64, i64* %3, align 8
	%21 = icmp slt i64 %20, 138
	br i1 %21, label %for.enum.body-4, label %for.enum.done-16

for.enum.body-4:
	%22 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %19, i64 %20
	%23 = load i64, i64* %3, align 8
	%24 = add i64 %23, 1
	store i64 %24, i64* %3
	%25 = bitcast {[0 x <8 x i8>], [8 x i8]}* %22 to i64*
	%26 = load i64, i64* %25, align 8
	%27 = trunc i64 %26 to i32
	store i32 %27, i32* %1
	; IfStmt
	; SelectorExpr
	%28 = load i32, i32* %1, align 4
	%29 = call ccc i16 @GetKeyState(i32 %28)
	%30 = icmp slt i16 %29, 0
	br i1 %30, label %if.then-5, label %if.else-10

if.then-5:
	; IfStmt
	; IndexExpr
	; SelectorExpr
	%31 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%32 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %31, i64 0
	%33 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %32, i64 0, i32 1
	%34 = load i32, i32* %1, align 4
	%35 = sext i32 %34 to i64
	%36 = trunc i64 %35 to i32
	%37 = getelementptr inbounds [256 x i64], [256 x i64]* %33, i64 0, i32 %36
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$460, i64 0, i32 0), i64 27}, i64 45, i64 36, i64 %35, i64 256)
	%38 = load i64, i64* %37, align 8
	%39 = icmp eq i64 %38, 2
	br i1 %39, label %if.then-7, label %cmp.or-6

cmp.or-6:
	; IndexExpr
	; SelectorExpr
	%40 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%41 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %40, i64 0
	%42 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %41, i64 0, i32 1
	%43 = load i32, i32* %1, align 4
	%44 = sext i32 %43 to i64
	%45 = trunc i64 %44 to i32
	%46 = getelementptr inbounds [256 x i64], [256 x i64]* %42, i64 0, i32 %45
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$461, i64 0, i32 0), i64 27}, i64 46, i64 36, i64 %44, i64 256)
	%47 = load i64, i64* %46, align 8
	%48 = icmp eq i64 %47, 1
	br i1 %48, label %if.then-7, label %if.else-8

if.then-7:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%49 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%50 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %49, i64 0
	%51 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %50, i64 0, i32 0
	%52 = load i32, i32* %1, align 4
	%53 = sext i32 %52 to i64
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [256 x i64], [256 x i64]* %51, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$462, i64 0, i32 0), i64 27}, i64 47, i64 33, i64 %53, i64 256)
	store i64 1, i64* %55
	br label %if.done-9

if.else-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%56 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%57 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %56, i64 0
	%58 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %57, i64 0, i32 0
	%59 = load i32, i32* %1, align 4
	%60 = sext i32 %59 to i64
	%61 = trunc i64 %60 to i32
	%62 = getelementptr inbounds [256 x i64], [256 x i64]* %58, i64 0, i32 %61
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$463, i64 0, i32 0), i64 27}, i64 49, i64 33, i64 %60, i64 256)
	store i64 2, i64* %62
	br label %if.done-9

if.done-9:
	; AssignStmt
	; SelectorExpr
	%63 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%64 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %63, i64 0
	%65 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %64, i64 0, i32 6
	store i1 true, i1* %65
	br label %if.done-15

if.else-10:
	; IfStmt
	; IndexExpr
	; SelectorExpr
	%66 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%67 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %66, i64 0
	%68 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %67, i64 0, i32 1
	%69 = load i32, i32* %1, align 4
	%70 = sext i32 %69 to i64
	%71 = trunc i64 %70 to i32
	%72 = getelementptr inbounds [256 x i64], [256 x i64]* %68, i64 0, i32 %71
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$464, i64 0, i32 0), i64 27}, i64 54, i64 36, i64 %70, i64 256)
	%73 = load i64, i64* %72, align 8
	%74 = icmp eq i64 %73, 2
	br i1 %74, label %if.then-12, label %cmp.or-11

cmp.or-11:
	; IndexExpr
	; SelectorExpr
	%75 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%76 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %75, i64 0
	%77 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %76, i64 0, i32 1
	%78 = load i32, i32* %1, align 4
	%79 = sext i32 %78 to i64
	%80 = trunc i64 %79 to i32
	%81 = getelementptr inbounds [256 x i64], [256 x i64]* %77, i64 0, i32 %80
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$465, i64 0, i32 0), i64 27}, i64 55, i64 36, i64 %79, i64 256)
	%82 = load i64, i64* %81, align 8
	%83 = icmp eq i64 %82, 1
	br i1 %83, label %if.then-12, label %if.else-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%84 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%85 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %84, i64 0
	%86 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %85, i64 0, i32 0
	%87 = load i32, i32* %1, align 4
	%88 = sext i32 %87 to i64
	%89 = trunc i64 %88 to i32
	%90 = getelementptr inbounds [256 x i64], [256 x i64]* %86, i64 0, i32 %89
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$466, i64 0, i32 0), i64 27}, i64 57, i64 33, i64 %88, i64 256)
	store i64 0, i64* %90
	br label %if.done-14

if.else-13:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%91 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%92 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %91, i64 0
	%93 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %92, i64 0, i32 0
	%94 = load i32, i32* %1, align 4
	%95 = sext i32 %94 to i64
	%96 = trunc i64 %95 to i32
	%97 = getelementptr inbounds [256 x i64], [256 x i64]* %93, i64 0, i32 %96
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$467, i64 0, i32 0), i64 27}, i64 59, i64 33, i64 %95, i64 256)
	store i64 3, i64* %97
	br label %if.done-14

if.done-14:
	br label %if.done-15

if.done-15:
	br label %for.enum.loop-3

for.enum.done-16:
	; AssignStmt
	; SelectorExpr
	%98 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%99 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %98, i64 0
	%100 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %99, i64 0, i32 1
	; SelectorExpr
	%101 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%102 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %101, i64 0
	%103 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %102, i64 0, i32 0
	%104 = load [256 x i64], [256 x i64]* %103, align 8
	store [256 x i64] %104, [256 x i64]* %100
	ret void
}

define void @input-19.UpdateXinput(%input-19.Input_t* %input) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	ret void
}

define void @input-19.SetAllInputNeutral(%input-19.Input_t* %input) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca i32, align 4
	%2 = alloca {%Type_Info.Enum*, i1}, align 8
	%3 = alloca i64, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	; RangeStmt
	; k
	store i32 zeroinitializer, i32* %1
		%4 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %2
	%5 = getelementptr inbounds %Type_Info, %Type_Info* %4, i64 0, i32 4 ; UnionTagPtr
	%6 = load i64, i64* %5, align 8
	%7 = icmp eq i64 %6, 20
	br i1 %7, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%8 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 0
	%9 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 1
	%10 = bitcast %Type_Info* %4 to %Type_Info.Enum*
	store %Type_Info.Enum* %10, %Type_Info.Enum** %8
	store i1 true, i1* %9
	br label %union_cast.end-2

union_cast.end-2:
	%11 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 1
	%12 = load i1, i1* %11, align 1
	%13 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %12, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$468, i64 0, i32 0), i64 27}, i64 74, i64 20, %Type_Info* %13, %Type_Info* %14)
	%15 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %2, i64 0, i32 0
	%16 = load %Type_Info.Enum*, %Type_Info.Enum** %15, align 8
	%17 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %16, i64 0, i32 4
	%18 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %17, align 8
	%19 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %18, 0
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.enum.loop-3

for.enum.loop-3:
	%20 = load i64, i64* %3, align 8
	%21 = icmp slt i64 %20, 138
	br i1 %21, label %for.enum.body-4, label %for.enum.done-5

for.enum.body-4:
	%22 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %19, i64 %20
	%23 = load i64, i64* %3, align 8
	%24 = add i64 %23, 1
	store i64 %24, i64* %3
	%25 = bitcast {[0 x <8 x i8>], [8 x i8]}* %22 to i64*
	%26 = load i64, i64* %25, align 8
	%27 = trunc i64 %26 to i32
	store i32 %27, i32* %1
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%28 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%29 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %28, i64 0
	%30 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %29, i64 0, i32 0
	%31 = load i32, i32* %1, align 4
	%32 = sext i32 %31 to i64
	%33 = trunc i64 %32 to i32
	%34 = getelementptr inbounds [256 x i64], [256 x i64]* %30, i64 0, i32 %33
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$469, i64 0, i32 0), i64 27}, i64 75, i64 24, i64 %32, i64 256)
	store i64 3, i64* %34
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%35 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%36 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %35, i64 0
	%37 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %36, i64 0, i32 1
	%38 = load i32, i32* %1, align 4
	%39 = sext i32 %38 to i64
	%40 = trunc i64 %39 to i32
	%41 = getelementptr inbounds [256 x i64], [256 x i64]* %37, i64 0, i32 %40
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$46a, i64 0, i32 0), i64 27}, i64 76, i64 28, i64 %39, i64 256)
	store i64 3, i64* %41
	br label %for.enum.loop-3

for.enum.done-5:
	ret void
}

define void @input-19.AddBinding-1011(%input-19.Input_t* %input, %..string %name, i32 %key) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca {%input-19.Binding, i1}, align 8
	%5 = alloca %__Map_Header, align 8
	%6 = alloca %__Map_Key, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	%9 = alloca %input-19.Binding, align 8
	%10 = alloca %__Map_Header, align 8
	%11 = alloca %__Map_Key, align 8
	%12 = alloca %input-19.Binding, align 8
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Key, align 16
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %name, %..string* %1
	store i32 zeroinitializer, i32* %2
		store i32 %key, i32* %2
	; ok
	store i1 zeroinitializer, i1* %3
		; IndexExpr
	; SelectorExpr
	%15 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%16 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %15, i64 0
	%17 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %16, i64 0, i32 2
	%18 = load %..string, %..string* %1, align 8
	store {%input-19.Binding, i1} zeroinitializer, {%input-19.Binding, i1}* %4
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 0
	%20 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %17 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %20, %raw-6.Dynamic_Map** %19
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 1
	store i1 true, i1* %21
	%22 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 2
	store i64 56, i64* %22
	%23 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 3
	store i64 8, i64* %23
	%24 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 4
	store i64 32, i64* %24
	%25 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 5
	store i64 24, i64* %25
	%26 = load %__Map_Header, %__Map_Header* %5, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	%27 = call i64 @__default_hash_string(%..string %18)
	%28 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 0
	store i64 %27, i64* %28
	%29 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 1
	store %..string %18, %..string* %29
	%30 = load %__Map_Key, %__Map_Key* %6, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %26, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %30, %__Map_Key* %8
	%31 = call %..rawptr @__dynamic_map_get(%__Map_Header* %7, %__Map_Key* %8)
	%32 = icmp ne %..rawptr %31, null
	%33 = getelementptr inbounds {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, i64 0, i32 1
	store i1 %32, i1* %33
	br i1 %32, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%34 = getelementptr inbounds {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, i64 0, i32 0
	%35 = bitcast %..rawptr %31 to %input-19.Binding*
	%36 = load %input-19.Binding, %input-19.Binding* %35, align 8
	store %input-19.Binding %36, %input-19.Binding* %34
	br label %map.get.done-2

map.get.done-2:
	%37 = load {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, align 8
	%38 = extractvalue {%input-19.Binding, i1} %37, 0
	%39 = extractvalue {%input-19.Binding, i1} %37, 1
	store i1 %39, i1* %3
	; IfStmt
	%40 = load i1, i1* %3, align 1
	br i1 %40, label %if.then-3, label %if.else-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%41 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%42 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %41, i64 0
	%43 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %42, i64 0, i32 2
	%44 = load %..string, %..string* %1, align 8
	%45 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %43, i64 0, i32 1
	%46 = getelementptr inbounds {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}* %45, i64 0, i32 2
	%47 = load i32, i32* %2, align 4
	%48 = sext i32 %47 to i64
	store i64 %48, i64* %46
	br label %if.done-5

if.else-4:
	; new
	store %input-19.Binding zeroinitializer, %input-19.Binding* %9
		; AssignStmt
	; SelectorExpr
	%49 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %9, i64 0, i32 0
	%50 = load %..string, %..string* %1, align 8
	store %..string %50, %..string* %49
	; AssignStmt
	; SelectorExpr
	%51 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %9, i64 0, i32 1
	%52 = load i32, i32* %2, align 4
	store i32 %52, i32* %51
	; AssignStmt
	; SelectorExpr
	%53 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %9, i64 0, i32 2
	store i16 0, i16* %53
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%54 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%55 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %54, i64 0
	%56 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %55, i64 0, i32 2
	%57 = load %..string, %..string* %1, align 8
	%58 = load %input-19.Binding, %input-19.Binding* %9, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %10
	%59 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 0
	%60 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %56 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %60, %raw-6.Dynamic_Map** %59
	%61 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 1
	store i1 true, i1* %61
	%62 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 2
	store i64 56, i64* %62
	%63 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 3
	store i64 8, i64* %63
	%64 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 4
	store i64 32, i64* %64
	%65 = getelementptr inbounds %__Map_Header, %__Map_Header* %10, i64 0, i32 5
	store i64 24, i64* %65
	%66 = load %__Map_Header, %__Map_Header* %10, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %11
	%67 = call i64 @__default_hash_string(%..string %57)
	%68 = getelementptr inbounds %__Map_Key, %__Map_Key* %11, i64 0, i32 0
	store i64 %67, i64* %68
	%69 = getelementptr inbounds %__Map_Key, %__Map_Key* %11, i64 0, i32 1
	store %..string %57, %..string* %69
	%70 = load %__Map_Key, %__Map_Key* %11, align 8
	store %input-19.Binding zeroinitializer, %input-19.Binding* %12
	store %input-19.Binding %58, %input-19.Binding* %12
	%71 = bitcast %input-19.Binding* %12 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %66, %__Map_Header* %13
	store %__Map_Key zeroinitializer, %__Map_Key* %14
	store %__Map_Key %70, %__Map_Key* %14
	call void @__dynamic_map_set(%__Map_Header* %13, %__Map_Key* %14, %..rawptr %71)
	br label %if.done-5

if.done-5:
	ret void
}

define i1 @input-19.IsButtonHeld(%input-19.Input_t* %input, %..string %name) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca %..string, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %name, %..string* %1
	; ReturnStmt
	%2 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @input-19.GetButtonState(%input-19.Input_t* %2, %..string %3)
	%5 = icmp eq i64 %4, 1
	ret i1 %5
}

define i64 @input-19.GetButtonState(%input-19.Input_t* %input, %..string %name) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %input-19.Binding, align 8
	%3 = alloca i1, align 1
	%4 = alloca {%input-19.Binding, i1}, align 8
	%5 = alloca %__Map_Header, align 8
	%6 = alloca %__Map_Key, align 8
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Key, align 16
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store %..string zeroinitializer, %..string* %1
		store %..string %name, %..string* %1
	; IfStmt
	; key
	store %input-19.Binding zeroinitializer, %input-19.Binding* %2
		; ok
	store i1 zeroinitializer, i1* %3
		; IndexExpr
	; SelectorExpr
	%9 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%10 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %9, i64 0
	%11 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %10, i64 0, i32 2
	%12 = load %..string, %..string* %1, align 8
	store {%input-19.Binding, i1} zeroinitializer, {%input-19.Binding, i1}* %4
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 0
	%14 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %11 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %14, %raw-6.Dynamic_Map** %13
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 1
	store i1 true, i1* %15
	%16 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 2
	store i64 56, i64* %16
	%17 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 3
	store i64 8, i64* %17
	%18 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 4
	store i64 32, i64* %18
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %5, i64 0, i32 5
	store i64 24, i64* %19
	%20 = load %__Map_Header, %__Map_Header* %5, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	%21 = call i64 @__default_hash_string(%..string %12)
	%22 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 0
	store i64 %21, i64* %22
	%23 = getelementptr inbounds %__Map_Key, %__Map_Key* %6, i64 0, i32 1
	store %..string %12, %..string* %23
	%24 = load %__Map_Key, %__Map_Key* %6, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %20, %__Map_Header* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %24, %__Map_Key* %8
	%25 = call %..rawptr @__dynamic_map_get(%__Map_Header* %7, %__Map_Key* %8)
	%26 = icmp ne %..rawptr %25, null
	%27 = getelementptr inbounds {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, i64 0, i32 1
	store i1 %26, i1* %27
	br i1 %26, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%28 = getelementptr inbounds {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, i64 0, i32 0
	%29 = bitcast %..rawptr %25 to %input-19.Binding*
	%30 = load %input-19.Binding, %input-19.Binding* %29, align 8
	store %input-19.Binding %30, %input-19.Binding* %28
	br label %map.get.done-2

map.get.done-2:
	%31 = load {%input-19.Binding, i1}, {%input-19.Binding, i1}* %4, align 8
	%32 = extractvalue {%input-19.Binding, i1} %31, 0
	%33 = extractvalue {%input-19.Binding, i1} %31, 1
	store %input-19.Binding %32, %input-19.Binding* %2
	store i1 %33, i1* %3
	%34 = load i1, i1* %3, align 1
	br i1 %34, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%35 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%36 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %35, i64 0
	%37 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %36, i64 0, i32 0
	; SelectorExpr
	%38 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %2, i64 0, i32 1
	%39 = load i32, i32* %38, align 4
	%40 = sext i32 %39 to i64
	%41 = trunc i64 %40 to i32
	%42 = getelementptr inbounds [256 x i64], [256 x i64]* %37, i64 0, i32 %41
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$46b, i64 0, i32 0), i64 27}, i64 120, i64 32, i64 %40, i64 256)
	%43 = load i64, i64* %42, align 8
	ret i64 %43

if.done-4:
	; ReturnStmt
	ret i64 3
}

define void @input-19.AddCharToQueue(%input-19.Input_t* %input, i32 %char) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca i32, align 4
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store i32 zeroinitializer, i32* %1
		store i32 %char, i32* %1
	ret void
}

define void @input-19.ClearCharQueue(%input-19.Input_t* %input) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	ret void
}

define %engine-20.Context_t* @engine-20.CreateContext() {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	; ctx
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		; new
	%1 = call %..rawptr @alloc_align(i64 96, i64 8)
	%2 = bitcast %..rawptr %1 to %engine-20.Context_t*
	store %engine-20.Context_t* %2, %engine-20.Context_t** %0
	; AssignStmt
	; SelectorExpr
	%3 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%4 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %3, i64 0
	%5 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %4, i64 0, i32 1
	; new
	%6 = call %..rawptr @alloc_align(i64 4288, i64 8)
	%7 = bitcast %..rawptr %6 to %input-19.Input_t*
	store %input-19.Input_t* %7, %input-19.Input_t** %5
	; AssignStmt
	; SelectorExpr
	%8 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%9 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %8, i64 0
	%10 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %9, i64 0, i32 0
	; new
	%11 = call %..rawptr @alloc_align(i64 3, i64 1)
	%12 = bitcast %..rawptr %11 to %engine-20.Setting_t*
	store %engine-20.Setting_t* %12, %engine-20.Setting_t** %10
	; AssignStmt
	; SelectorExpr
	%13 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%14 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %13, i64 0
	%15 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %14, i64 0, i32 2
	; SelectorExpr
	%16 = call %render-14.VirtualScreen_t* @render-14.CreateVirtualScreen(i64 1920, i64 1080)
	store %render-14.VirtualScreen_t* %16, %render-14.VirtualScreen_t** %15
	; AssignStmt
	; SelectorExpr
	%17 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%18 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %17, i64 0
	%19 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %18, i64 0, i32 3
	; new
	%20 = call %..rawptr @alloc_align(i64 256, i64 8)
	%21 = bitcast %..rawptr %20 to %platform_win32-28.Data_t*
	store %platform_win32-28.Data_t* %21, %platform_win32-28.Data_t** %19
	; AssignStmt
	; SelectorExpr
	%22 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%23 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %22, i64 0
	%24 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %23, i64 0, i32 4
	; new
	%25 = call %..rawptr @alloc_align(i64 200, i64 8)
	%26 = bitcast %..rawptr %25 to %jimgui-12.State_t*
	store %jimgui-12.State_t* %26, %jimgui-12.State_t** %24
	; AssignStmt
	; SelectorExpr
	%27 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%28 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %27, i64 0
	%29 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %28, i64 0, i32 5
	; SelectorExpr
	%30 = call %time-15.Data_t* @time-15.CreateData()
	store %time-15.Data_t* %30, %time-15.Data_t** %29
	; ReturnStmt
	%31 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	ret %engine-20.Context_t* %31
}

define void @engine-20.SetContextDefaults(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; AssignStmt
	; SelectorExpr
	%1 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%2 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %1, i64 0
	%3 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %2, i64 0, i32 10
	store i1 true, i1* %3
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%4 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%5 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %4, i64 0
	%6 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %5, i64 0, i32 0
	%7 = load %engine-20.Setting_t*, %engine-20.Setting_t** %6, align 8
	%8 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %7, i64 0
	%9 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %8, i64 0, i32 2
	store i1 true, i1* %9
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%10 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%11 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %10, i64 0
	%12 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %11, i64 0, i32 0
	%13 = load %engine-20.Setting_t*, %engine-20.Setting_t** %12, align 8
	%14 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %13, i64 0
	%15 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %14, i64 0, i32 1
	store i1 true, i1* %15
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%16 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%17 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %16, i64 0
	%18 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %17, i64 0, i32 0
	%19 = load %engine-20.Setting_t*, %engine-20.Setting_t** %18, align 8
	%20 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %19, i64 0
	%21 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %20, i64 0, i32 0
	store i1 true, i1* %21
	ret void
}

define void @game-21.SetupCameraBindings(%input-19.Input_t* %input_) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input_, %input-19.Input_t** %0
	; SelectorExpr
	%1 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %1, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$46c, i64 0, i32 0), i64 8}, i32 87)
	; SelectorExpr
	%2 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %2, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$46d, i64 0, i32 0), i64 10}, i32 65)
	; SelectorExpr
	%3 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %3, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$46e, i64 0, i32 0), i64 11}, i32 68)
	; SelectorExpr
	%4 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %4, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$46f, i64 0, i32 0), i64 10}, i32 83)
	; SelectorExpr
	%5 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %5, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$470, i64 0, i32 0), i64 12}, i32 69)
	; SelectorExpr
	%6 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	call void @input-19.AddBinding-1011(%input-19.Input_t* %6, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$471, i64 0, i32 0), i64 13}, i32 81)
	ret void
}

define void @game-21.CameraLogic(%engine-20.Context_t* %ctx, %renderer-24.Camera_t* %camera) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %renderer-24.Camera_t*, align 8
	%2 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%3 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%4 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%5 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%6 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%7 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%8 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%9 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%10 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%11 = alloca i64, align 8
	%12 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%13 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%14 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%15 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%16 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	store %renderer-24.Camera_t* zeroinitializer, %renderer-24.Camera_t** %1
		store %renderer-24.Camera_t* %camera, %renderer-24.Camera_t** %1
	; dir
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %2
		store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %2
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%17 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%18 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %17, i64 0
	%19 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %18, i64 0, i32 1
	%20 = load %input-19.Input_t*, %input-19.Input_t** %19, align 8
	%21 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %20, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$472, i64 0, i32 0), i64 8})
	br i1 %21, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	%22 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %3
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %3
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %4
	%23 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	%24 = load float, float* %23, align 4
	%25 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 0
	%26 = load float, float* %25, align 4
	%27 = fadd float %24, %26
	%28 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %4, i64 0, i32 1, i32 0
	store float %27, float* %28
	%29 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	%30 = load float, float* %29, align 4
	%31 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 1
	%32 = load float, float* %31, align 4
	%33 = fadd float %30, %32
	%34 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %4, i64 0, i32 1, i32 1
	store float %33, float* %34
	%35 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	%36 = load float, float* %35, align 4
	%37 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %3, i64 0, i32 1, i32 2
	%38 = load float, float* %37, align 4
	%39 = fadd float %36, %38
	%40 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %4, i64 0, i32 1, i32 2
	store float %39, float* %40
	; vector.arith.end
	%41 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %4, align 8
	store {[0 x <8 x i8>], [3 x float]} %41, {[0 x <8 x i8>], [3 x float]}* %2
	br label %if.done-2

if.done-2:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%42 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%43 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %42, i64 0
	%44 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %43, i64 0, i32 1
	%45 = load %input-19.Input_t*, %input-19.Input_t** %44, align 8
	%46 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %45, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$473, i64 0, i32 0), i64 10})
	br i1 %46, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	%47 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %5
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0xbff0000000000000, float 0x0000000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %5
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %6
	%48 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	%49 = load float, float* %48, align 4
	%50 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 0
	%51 = load float, float* %50, align 4
	%52 = fadd float %49, %51
	%53 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 0
	store float %52, float* %53
	%54 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	%55 = load float, float* %54, align 4
	%56 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 1
	%57 = load float, float* %56, align 4
	%58 = fadd float %55, %57
	%59 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 1
	store float %58, float* %59
	%60 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	%61 = load float, float* %60, align 4
	%62 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %5, i64 0, i32 1, i32 2
	%63 = load float, float* %62, align 4
	%64 = fadd float %61, %63
	%65 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 2
	store float %64, float* %65
	; vector.arith.end
	%66 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, align 8
	store {[0 x <8 x i8>], [3 x float]} %66, {[0 x <8 x i8>], [3 x float]}* %2
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%67 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%68 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %67, i64 0
	%69 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %68, i64 0, i32 1
	%70 = load %input-19.Input_t*, %input-19.Input_t** %69, align 8
	%71 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %70, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$474, i64 0, i32 0), i64 11})
	br i1 %71, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	%72 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %7
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %7
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %8
	%73 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	%74 = load float, float* %73, align 4
	%75 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 0
	%76 = load float, float* %75, align 4
	%77 = fadd float %74, %76
	%78 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %8, i64 0, i32 1, i32 0
	store float %77, float* %78
	%79 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	%80 = load float, float* %79, align 4
	%81 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 1
	%82 = load float, float* %81, align 4
	%83 = fadd float %80, %82
	%84 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %8, i64 0, i32 1, i32 1
	store float %83, float* %84
	%85 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	%86 = load float, float* %85, align 4
	%87 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %7, i64 0, i32 1, i32 2
	%88 = load float, float* %87, align 4
	%89 = fadd float %86, %88
	%90 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %8, i64 0, i32 1, i32 2
	store float %89, float* %90
	; vector.arith.end
	%91 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %8, align 8
	store {[0 x <8 x i8>], [3 x float]} %91, {[0 x <8 x i8>], [3 x float]}* %2
	br label %if.done-6

if.done-6:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%92 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%93 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %92, i64 0
	%94 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %93, i64 0, i32 1
	%95 = load %input-19.Input_t*, %input-19.Input_t** %94, align 8
	%96 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %95, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$475, i64 0, i32 0), i64 10})
	br i1 %96, label %if.then-7, label %if.done-8

if.then-7:
	; AssignStmt
	%97 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %9
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0xbff0000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %9
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %10
	%98 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	%99 = load float, float* %98, align 4
	%100 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %9, i64 0, i32 1, i32 0
	%101 = load float, float* %100, align 4
	%102 = fadd float %99, %101
	%103 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %10, i64 0, i32 1, i32 0
	store float %102, float* %103
	%104 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	%105 = load float, float* %104, align 4
	%106 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %9, i64 0, i32 1, i32 1
	%107 = load float, float* %106, align 4
	%108 = fadd float %105, %107
	%109 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %10, i64 0, i32 1, i32 1
	store float %108, float* %109
	%110 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	%111 = load float, float* %110, align 4
	%112 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %9, i64 0, i32 1, i32 2
	%113 = load float, float* %112, align 4
	%114 = fadd float %111, %113
	%115 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %10, i64 0, i32 1, i32 2
	store float %114, float* %115
	; vector.arith.end
	%116 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %10, align 8
	store {[0 x <8 x i8>], [3 x float]} %116, {[0 x <8 x i8>], [3 x float]}* %2
	br label %if.done-8

if.done-8:
	; zoom
	store i64 zeroinitializer, i64* %11
		store i64 0, i64* %11
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%117 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%118 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %117, i64 0
	%119 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %118, i64 0, i32 1
	%120 = load %input-19.Input_t*, %input-19.Input_t** %119, align 8
	%121 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %120, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$476, i64 0, i32 0), i64 12})
	br i1 %121, label %if.then-9, label %if.done-10

if.then-9:
	%122 = load i64, i64* %11, align 8
	%123 = add i64 %122, 1
	store i64 %123, i64* %11
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%124 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%125 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %124, i64 0
	%126 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %125, i64 0, i32 1
	%127 = load %input-19.Input_t*, %input-19.Input_t** %126, align 8
	%128 = call i1 @input-19.IsButtonHeld(%input-19.Input_t* %127, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$477, i64 0, i32 0), i64 13})
	br i1 %128, label %if.then-11, label %if.done-12

if.then-11:
	%129 = load i64, i64* %11, align 8
	%130 = sub i64 %129, 1
	store i64 %130, i64* %11
	br label %if.done-12

if.done-12:
	; AssignStmt
	; SelectorExpr
	%131 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%132 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %131, i64 0
	%133 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %132, i64 0, i32 2
	%134 = load i64, i64* %11, align 8
	%135 = sitofp i64 %134 to float
	%136 = fmul float %135, 0x3fe0000000000000
	%137 = load float, float* %133, align 4
	%138 = fadd float %137, %136
	store float %138, float* %133
	; IfStmt
	; SelectorExpr
	%139 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%140 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %139, i64 0
	%141 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %140, i64 0, i32 2
	%142 = load float, float* %141, align 4
	%143 = fcmp ogt float %142, 0x4059000000000000
	br i1 %143, label %if.then-13, label %if.else-14

if.then-13:
	; AssignStmt
	; SelectorExpr
	%144 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%145 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %144, i64 0
	%146 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %145, i64 0, i32 2
	store float 0x4059000000000000, float* %146
	br label %if.done-17

if.else-14:
	; IfStmt
	; SelectorExpr
	%147 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%148 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %147, i64 0
	%149 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %148, i64 0, i32 2
	%150 = load float, float* %149, align 4
	%151 = fcmp olt float %150, 0x403e000000000000
	br i1 %151, label %if.then-15, label %if.done-16

if.then-15:
	; AssignStmt
	; SelectorExpr
	%152 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%153 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %152, i64 0
	%154 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %153, i64 0, i32 2
	store float 0x403e000000000000, float* %154
	br label %if.done-16

if.done-16:
	br label %if.done-17

if.done-17:
	; AssignStmt
	; SelectorExpr
	%155 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%156 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %155, i64 0
	%157 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %156, i64 0, i32 0
	%158 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %12
	%159 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 0
	store float 0x4024000000000000, float* %159
	%160 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 1
	store float 0x4024000000000000, float* %160
	%161 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 2
	store float 0x4024000000000000, float* %161
	%162 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %13
	%163 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	%164 = load float, float* %163, align 4
	%165 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 0
	%166 = load float, float* %165, align 4
	%167 = fmul float %164, %166
	%168 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 0
	store float %167, float* %168
	%169 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	%170 = load float, float* %169, align 4
	%171 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 1
	%172 = load float, float* %171, align 4
	%173 = fmul float %170, %172
	%174 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 1
	store float %173, float* %174
	%175 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 2
	%176 = load float, float* %175, align 4
	%177 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %12, i64 0, i32 1, i32 2
	%178 = load float, float* %177, align 4
	%179 = fmul float %176, %178
	%180 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 2
	store float %179, float* %180
	; vector.arith.end
	%181 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, align 8
	; SelectorExpr
	; SelectorExpr
	%182 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%183 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %182, i64 0
	%184 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %183, i64 0, i32 5
	%185 = load %time-15.Data_t*, %time-15.Data_t** %184, align 8
	%186 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %185, i64 0
	%187 = getelementptr inbounds %time-15.Data_t, %time-15.Data_t* %186, i64 0, i32 1
	%188 = load double, double* %187, align 8
	%189 = fptrunc double %188 to float
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %14
	%190 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 0
	store float %189, float* %190
	%191 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 1
	store float %189, float* %191
	%192 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 2
	store float %189, float* %192
	%193 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %15
	%194 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 0
	%195 = load float, float* %194, align 4
	%196 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 0
	%197 = load float, float* %196, align 4
	%198 = fmul float %195, %197
	%199 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 0
	store float %198, float* %199
	%200 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 1
	%201 = load float, float* %200, align 4
	%202 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 1
	%203 = load float, float* %202, align 4
	%204 = fmul float %201, %203
	%205 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 1
	store float %204, float* %205
	%206 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %13, i64 0, i32 1, i32 2
	%207 = load float, float* %206, align 4
	%208 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %14, i64 0, i32 1, i32 2
	%209 = load float, float* %208, align 4
	%210 = fmul float %207, %209
	%211 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 2
	store float %210, float* %211
	; vector.arith.end
	%212 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, align 8
	%213 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %157, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %16
	%214 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %157, i64 0, i32 1, i32 0
	%215 = load float, float* %214, align 4
	%216 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 0
	%217 = load float, float* %216, align 4
	%218 = fadd float %215, %217
	%219 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %16, i64 0, i32 1, i32 0
	store float %218, float* %219
	%220 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %157, i64 0, i32 1, i32 1
	%221 = load float, float* %220, align 4
	%222 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 1
	%223 = load float, float* %222, align 4
	%224 = fadd float %221, %223
	%225 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %16, i64 0, i32 1, i32 1
	store float %224, float* %225
	%226 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %157, i64 0, i32 1, i32 2
	%227 = load float, float* %226, align 4
	%228 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %15, i64 0, i32 1, i32 2
	%229 = load float, float* %228, align 4
	%230 = fadd float %227, %229
	%231 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %16, i64 0, i32 1, i32 2
	store float %230, float* %231
	; vector.arith.end
	%232 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %16, align 8
	store {[0 x <8 x i8>], [3 x float]} %232, {[0 x <8 x i8>], [3 x float]}* %157
	ret void
}

define %jmap-22.Data_t* @jmap-22.CreateMap(i64 %w, i64 %h, %catalog-16.Catalog* %textureCat) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %catalog-16.Catalog*, align 8
	%3 = alloca %jmap-22.Data_t*, align 8
	%4 = alloca %asset-25.Asset*, align 8
	%5 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%6 = alloca %asset-25.Asset*, align 8
	%7 = alloca {%asset-25.Asset.Texture*, i1}, align 8
	%8 = alloca {{%jmap-22.Tile*, i64, i64}*, i64, i64}, align 8
	%9 = alloca i64, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca {%jmap-22.Tile*, i64, i64}, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i64, align 8
	%16 = alloca %jmap-22.Tile, align 8
	%17 = alloca %jmap-22.Tile, align 8
	%18 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %w, i64* %0
	store i64 zeroinitializer, i64* %1
		store i64 %h, i64* %1
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %2
		store %catalog-16.Catalog* %textureCat, %catalog-16.Catalog** %2
	; res
	store %jmap-22.Data_t* zeroinitializer, %jmap-22.Data_t** %3
		; new
	%19 = call %..rawptr @alloc_align(i64 56, i64 8)
	%20 = bitcast %..rawptr %19 to %jmap-22.Data_t*
	store %jmap-22.Data_t* %20, %jmap-22.Data_t** %3
	; AssignStmt
	; SelectorExpr
	%21 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%22 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %21, i64 0
	%23 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %22, i64 0, i32 1
	%24 = load i64, i64* %0, align 8
	store i64 %24, i64* %23
	; AssignStmt
	; SelectorExpr
	%25 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%26 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %25, i64 0
	%27 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %26, i64 0, i32 2
	%28 = load i64, i64* %1, align 8
	store i64 %28, i64* %27
	; walk
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %4
		; SelectorExpr
	%29 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%30 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %29, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$478, i64 0, i32 0), i64 20})
	%31 = extractvalue {%asset-25.Asset*, i64} %30, 0
	%32 = extractvalue {%asset-25.Asset*, i64} %30, 1
	store %asset-25.Asset* %31, %asset-25.Asset** %4
	; AssignStmt
	; SelectorExpr
	%33 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%34 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %33, i64 0
	%35 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %34, i64 0, i32 3
	%36 = load %asset-25.Asset*, %asset-25.Asset** %4, align 8
	; cast - union_cast
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %5
	%37 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %36, i64 0, i32 4 ; UnionTagPtr
	%38 = load i64, i64* %37, align 8
	%39 = icmp eq i64 %38, 1
	br i1 %39, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%40 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %5, i64 0, i32 0
	%41 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %5, i64 0, i32 1
	%42 = bitcast %asset-25.Asset* %36 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %42, %asset-25.Asset.Texture** %40
	store i1 true, i1* %41
	br label %union_cast.end-2

union_cast.end-2:
	%43 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %5, i64 0, i32 1
	%44 = load i1, i1* %43, align 1
	%45 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%46 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %44, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$479, i64 0, i32 0), i64 26}, i64 30, i64 23, %Type_Info* %45, %Type_Info* %46)
	%47 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %5, i64 0, i32 0
	%48 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %47, align 8
	store %asset-25.Asset.Texture* %48, %asset-25.Asset.Texture** %35
	; build
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %6
		; SelectorExpr
	%49 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%50 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %49, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$47a, i64 0, i32 0), i64 20})
	%51 = extractvalue {%asset-25.Asset*, i64} %50, 0
	%52 = extractvalue {%asset-25.Asset*, i64} %50, 1
	store %asset-25.Asset* %51, %asset-25.Asset** %6
	; AssignStmt
	; SelectorExpr
	%53 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%54 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %53, i64 0
	%55 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %54, i64 0, i32 4
	%56 = load %asset-25.Asset*, %asset-25.Asset** %6, align 8
	; cast - union_cast
	store {%asset-25.Asset.Texture*, i1} zeroinitializer, {%asset-25.Asset.Texture*, i1}* %7
	%57 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %56, i64 0, i32 4 ; UnionTagPtr
	%58 = load i64, i64* %57, align 8
	%59 = icmp eq i64 %58, 1
	br i1 %59, label %union_cast.ok-3, label %union_cast.end-4

union_cast.ok-3:
	%60 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %7, i64 0, i32 0
	%61 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %7, i64 0, i32 1
	%62 = bitcast %asset-25.Asset* %56 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* %62, %asset-25.Asset.Texture** %60
	store i1 true, i1* %61
	br label %union_cast.end-4

union_cast.end-4:
	%63 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %7, i64 0, i32 1
	%64 = load i1, i1* %63, align 1
	%65 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%66 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	call void @__type_assertion_check(i1 %64, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$47b, i64 0, i32 0), i64 26}, i64 33, i64 24, %Type_Info* %65, %Type_Info* %66)
	%67 = getelementptr inbounds {%asset-25.Asset.Texture*, i1}, {%asset-25.Asset.Texture*, i1}* %7, i64 0, i32 0
	%68 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %67, align 8
	store %asset-25.Asset.Texture* %68, %asset-25.Asset.Texture** %55
	; AssignStmt
	; SelectorExpr
	%69 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%70 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %69, i64 0
	%71 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %70, i64 0, i32 0
	; make
	%72 = load i64, i64* %1, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$47c, i64 0, i32 0), i64 26}, i64 36, i64 32, i64 0, i64 %72, i64 %72)
	%73 = mul i64 24, %72
	%74 = call %..rawptr @alloc_align(i64 %73, i64 8)
	%75 = bitcast %..rawptr %74 to {%jmap-22.Tile*, i64, i64}*
	store {{%jmap-22.Tile*, i64, i64}*, i64, i64} zeroinitializer, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %8
	%76 = getelementptr inbounds {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %8, i64 0, i32 0
	store {%jmap-22.Tile*, i64, i64}* %75, {%jmap-22.Tile*, i64, i64}** %76
	%77 = getelementptr inbounds {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %8, i64 0, i32 1
	store i64 %72, i64* %77
	%78 = getelementptr inbounds {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %8, i64 0, i32 2
	store i64 %72, i64* %78
	%79 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %8, align 8
	store {{%jmap-22.Tile*, i64, i64}*, i64, i64} %79, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %71
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %9
		; SelectorExpr
	%80 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%81 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %80, i64 0
	%82 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %81, i64 0, i32 0
	%83 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %82, align 8
	store i64 zeroinitializer, i64* %10
	%84 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %83, 1
	store i64 %84, i64* %10
	store i64 zeroinitializer, i64* %11
	store i64 -1, i64* %11
	br label %for.index.loop-5

for.index.loop-5:
	%85 = load i64, i64* %11, align 8
	%86 = add i64 %85, 1
	store i64 %86, i64* %11
	%87 = load i64, i64* %10, align 8
	%88 = icmp slt i64 %86, %87
	br i1 %88, label %for.index.body-6, label %for.index.done-7

for.index.body-6:
	%89 = load i64, i64* %11, align 8
	store i64 %89, i64* %9
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%90 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%91 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %90, i64 0
	%92 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %91, i64 0, i32 0
	%93 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %92, align 8
	%94 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %93, 0
	%95 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %93, 1
	%96 = load i64, i64* %9, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$47d, i64 0, i32 0), i64 26}, i64 38, i64 19, i64 %96, i64 %95)
	%97 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %94, i64 %96
	; make
	%98 = load i64, i64* %0, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$47e, i64 0, i32 0), i64 26}, i64 38, i64 37, i64 0, i64 %98, i64 %98)
	%99 = mul i64 24, %98
	%100 = call %..rawptr @alloc_align(i64 %99, i64 8)
	%101 = bitcast %..rawptr %100 to %jmap-22.Tile*
	store {%jmap-22.Tile*, i64, i64} zeroinitializer, {%jmap-22.Tile*, i64, i64}* %12
	%102 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %12, i64 0, i32 0
	store %jmap-22.Tile* %101, %jmap-22.Tile** %102
	%103 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %12, i64 0, i32 1
	store i64 %98, i64* %103
	%104 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %12, i64 0, i32 2
	store i64 %98, i64* %104
	%105 = load {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %12, align 8
	store {%jmap-22.Tile*, i64, i64} %105, {%jmap-22.Tile*, i64, i64}* %97
	br label %for.index.loop-5

for.index.done-7:
	; i
	store i64 zeroinitializer, i64* %13
		store i64 0, i64* %13
	; ForStmt
	; y
	store i64 zeroinitializer, i64* %14
		store i64 0, i64* %14
	br label %for.loop-8

for.loop-8:
	%106 = load i64, i64* %14, align 8
	%107 = load i64, i64* %1, align 8
	%108 = icmp slt i64 %106, %107
	br i1 %108, label %for.body-9, label %for.done-16

for.body-9:
	%109 = load i64, i64* %13, align 8
	%110 = add i64 %109, 1
	store i64 %110, i64* %13
	; ForStmt
	; x
	store i64 zeroinitializer, i64* %15
		store i64 0, i64* %15
	br label %for.loop-10

for.loop-10:
	%111 = load i64, i64* %15, align 8
	%112 = load i64, i64* %0, align 8
	%113 = icmp slt i64 %111, %112
	br i1 %113, label %for.body-11, label %for.done-15

for.body-11:
	%114 = load i64, i64* %13, align 8
	%115 = add i64 %114, 1
	store i64 %115, i64* %13
	; IfStmt
	%116 = load i64, i64* %13, align 8
	%117 = srem i64 %116, 2
	%118 = icmp eq i64 %117, 1
	br i1 %118, label %if.then-12, label %if.else-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; IndexExpr
	; SelectorExpr
	%119 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%120 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %119, i64 0
	%121 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %120, i64 0, i32 0
	%122 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %121, align 8
	%123 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %122, 0
	%124 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %122, 1
	%125 = load i64, i64* %14, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$47f, i64 0, i32 0), i64 26}, i64 47, i64 27, i64 %125, i64 %124)
	%126 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %123, i64 %125
	%127 = load {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %126, align 8
	%128 = extractvalue {%jmap-22.Tile*, i64, i64} %127, 0
	%129 = extractvalue {%jmap-22.Tile*, i64, i64} %127, 1
	%130 = load i64, i64* %15, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$480, i64 0, i32 0), i64 26}, i64 47, i64 30, i64 %130, i64 %129)
	%131 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %128, i64 %130
	; union - child to parent
	store %jmap-22.Tile zeroinitializer, %jmap-22.Tile* %16
	%132 = bitcast %jmap-22.Tile* %16 to %jmap-22.Tile.Walk*
	store %jmap-22.Tile.Walk zeroinitializer, %jmap-22.Tile.Walk* %132
	%133 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %16, i64 0, i32 3 ; UnionTagPtr
	store i64 2, i64* %133
	%134 = load %jmap-22.Tile, %jmap-22.Tile* %16, align 8
	store %jmap-22.Tile %134, %jmap-22.Tile* %131
	br label %if.done-14

if.else-13:
	; AssignStmt
	; IndexExpr
	; IndexExpr
	; SelectorExpr
	%135 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%136 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %135, i64 0
	%137 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %136, i64 0, i32 0
	%138 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %137, align 8
	%139 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %138, 0
	%140 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %138, 1
	%141 = load i64, i64* %14, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$481, i64 0, i32 0), i64 26}, i64 49, i64 27, i64 %141, i64 %140)
	%142 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %139, i64 %141
	%143 = load {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %142, align 8
	%144 = extractvalue {%jmap-22.Tile*, i64, i64} %143, 0
	%145 = extractvalue {%jmap-22.Tile*, i64, i64} %143, 1
	%146 = load i64, i64* %15, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$482, i64 0, i32 0), i64 26}, i64 49, i64 30, i64 %146, i64 %145)
	%147 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %144, i64 %146
	; union - child to parent
	store %jmap-22.Tile zeroinitializer, %jmap-22.Tile* %17
	%148 = bitcast %jmap-22.Tile* %17 to %jmap-22.Tile.Build*
	store %jmap-22.Tile.Build zeroinitializer, %jmap-22.Tile.Build* %148
	%149 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %17, i64 0, i32 3 ; UnionTagPtr
	store i64 1, i64* %149
	%150 = load %jmap-22.Tile, %jmap-22.Tile* %17, align 8
	store %jmap-22.Tile %150, %jmap-22.Tile* %147
	br label %if.done-14

if.done-14:
	; AssignStmt
	; SelectorExpr
	; IndexExpr
	; IndexExpr
	; SelectorExpr
	%151 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	%152 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %151, i64 0
	%153 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %152, i64 0, i32 0
	%154 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %153, align 8
	%155 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %154, 0
	%156 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %154, 1
	%157 = load i64, i64* %14, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$483, i64 0, i32 0), i64 26}, i64 51, i64 23, i64 %157, i64 %156)
	%158 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %155, i64 %157
	%159 = load {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %158, align 8
	%160 = extractvalue {%jmap-22.Tile*, i64, i64} %159, 0
	%161 = extractvalue {%jmap-22.Tile*, i64, i64} %159, 1
	%162 = load i64, i64* %15, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$484, i64 0, i32 0), i64 26}, i64 51, i64 26, i64 %162, i64 %161)
	%163 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %160, i64 %162
	%164 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %163, i64 0, i32 1
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %18
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %18
	%165 = load i64, i64* %15, align 8
	%166 = sitofp i64 %165 to float
	%167 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %18, i64 0, i32 1, i32 0
	store float %166, float* %167
	%168 = load i64, i64* %14, align 8
	%169 = sitofp i64 %168 to float
	%170 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %18, i64 0, i32 1, i32 1
	store float %169, float* %170
	%171 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %18, align 8
	store {[0 x <8 x i8>], [3 x float]} %171, {[0 x <8 x i8>], [3 x float]}* %164
	%172 = load i64, i64* %15, align 8
	%173 = add i64 %172, 1
	store i64 %173, i64* %15
	br label %for.loop-10

for.done-15:
	%174 = load i64, i64* %14, align 8
	%175 = add i64 %174, 1
	store i64 %175, i64* %14
	br label %for.loop-8

for.done-16:
	; ReturnStmt
	%176 = load %jmap-22.Data_t*, %jmap-22.Data_t** %3, align 8
	ret %jmap-22.Data_t* %176
}

define %render_queue-23.Queue* @jmap-22.DrawMap(%jmap-22.Data_t* %data) {
decls-0:
	%0 = alloca %jmap-22.Data_t*, align 8
	%1 = alloca %render_queue-23.Queue*, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %jmap-22.Tile, align 8
	%5 = alloca %renderer-24.Command.Bitmap, align 8
	%6 = alloca %jmap-22.Tile.Walk, align 8
	%7 = alloca %jmap-22.Tile.Build, align 8
	%8 = alloca %renderer-24.Command, align 8
	%9 = alloca %renderer-24.Command, align 16
	store %jmap-22.Data_t* zeroinitializer, %jmap-22.Data_t** %0
		store %jmap-22.Data_t* %data, %jmap-22.Data_t** %0
	; queue
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %1
		; SelectorExpr
	%10 = call %render_queue-23.Queue* @render_queue-23.Make()
	store %render_queue-23.Queue* %10, %render_queue-23.Queue** %1
	; ForStmt
	; y
	store i64 zeroinitializer, i64* %2
		store i64 0, i64* %2
	br label %for.loop-1

for.loop-1:
	%11 = load i64, i64* %2, align 8
	; SelectorExpr
	%12 = load %jmap-22.Data_t*, %jmap-22.Data_t** %0, align 8
	%13 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %12, i64 0
	%14 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %13, i64 0, i32 2
	%15 = load i64, i64* %14, align 8
	%16 = icmp slt i64 %11, %15
	br i1 %16, label %for.body-2, label %for.done-11

for.body-2:
	; ForStmt
	; x
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	br label %for.loop-3

for.loop-3:
	%17 = load i64, i64* %3, align 8
	; SelectorExpr
	%18 = load %jmap-22.Data_t*, %jmap-22.Data_t** %0, align 8
	%19 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %18, i64 0
	%20 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %19, i64 0, i32 1
	%21 = load i64, i64* %20, align 8
	%22 = icmp slt i64 %17, %21
	br i1 %22, label %for.body-4, label %for.done-10

for.body-4:
	; tile
	store %jmap-22.Tile zeroinitializer, %jmap-22.Tile* %4
		; IndexExpr
	; IndexExpr
	; SelectorExpr
	%23 = load %jmap-22.Data_t*, %jmap-22.Data_t** %0, align 8
	%24 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %23, i64 0
	%25 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %24, i64 0, i32 0
	%26 = load {{%jmap-22.Tile*, i64, i64}*, i64, i64}, {{%jmap-22.Tile*, i64, i64}*, i64, i64}* %25, align 8
	%27 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %26, 0
	%28 = extractvalue {{%jmap-22.Tile*, i64, i64}*, i64, i64} %26, 1
	%29 = load i64, i64* %2, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$485, i64 0, i32 0), i64 26}, i64 63, i64 32, i64 %29, i64 %28)
	%30 = getelementptr inbounds {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %27, i64 %29
	%31 = load {%jmap-22.Tile*, i64, i64}, {%jmap-22.Tile*, i64, i64}* %30, align 8
	%32 = extractvalue {%jmap-22.Tile*, i64, i64} %31, 0
	%33 = extractvalue {%jmap-22.Tile*, i64, i64} %31, 1
	%34 = load i64, i64* %3, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$486, i64 0, i32 0), i64 26}, i64 63, i64 35, i64 %34, i64 %33)
	%35 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %32, i64 %34
	%36 = load %jmap-22.Tile, %jmap-22.Tile* %35, align 8
	store %jmap-22.Tile %36, %jmap-22.Tile* %4
	; cmd
	store %renderer-24.Command.Bitmap zeroinitializer, %renderer-24.Command.Bitmap* %5
		store %renderer-24.Command.Bitmap zeroinitializer, %renderer-24.Command.Bitmap* %5
	; AssignStmt
	; SelectorExpr
	%37 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, i64 0, i32 0
	; SelectorExpr
	%38 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %4, i64 0, i32 1
	%39 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %38, align 8
	store {[0 x <8 x i8>], [3 x float]} %39, {[0 x <8 x i8>], [3 x float]}* %37
	; AssignStmt
	; SelectorExpr
	%40 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, i64 0, i32 2
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %40
	; AssignStmt
	; SelectorExpr
	%41 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, i64 0, i32 1
	store float 0x0000000000000000, float* %41
	; TypeMatchStmt
	%42 = load %jmap-22.Tile, %jmap-22.Tile* %4, align 8
	; get union's tag
	%43 = getelementptr inbounds %jmap-22.Tile, %jmap-22.Tile* %4, i64 0, i32 3 ; UnionTagPtr
	%44 = load i64, i64* %43, align 8
	%45 = bitcast %jmap-22.Tile* %4 to %..rawptr
	%46 = icmp eq i64 %44, 2
	br i1 %46, label %typematch.body-6, label %typematch.next-5

typematch.next-5:
	%47 = icmp eq i64 %44, 1
	br i1 %47, label %typematch.body-8, label %typematch.next-7

typematch.body-6:
	%48 = bitcast %..rawptr %45 to %jmap-22.Tile.Walk*
	%49 = load %jmap-22.Tile.Walk, %jmap-22.Tile.Walk* %48, align 8
	store %jmap-22.Tile.Walk zeroinitializer, %jmap-22.Tile.Walk* %6
	store %jmap-22.Tile.Walk %49, %jmap-22.Tile.Walk* %6
	; AssignStmt
	; SelectorExpr
	%50 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, i64 0, i32 3
	; SelectorExpr
	%51 = load %jmap-22.Data_t*, %jmap-22.Data_t** %0, align 8
	%52 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %51, i64 0
	%53 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %52, i64 0, i32 3
	%54 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %53, align 8
	store %asset-25.Asset.Texture* %54, %asset-25.Asset.Texture** %50
	br label %typematch.done-9

typematch.next-7:
	br label %typematch.done-9

typematch.body-8:
	%55 = bitcast %..rawptr %45 to %jmap-22.Tile.Build*
	%56 = load %jmap-22.Tile.Build, %jmap-22.Tile.Build* %55, align 8
	store %jmap-22.Tile.Build zeroinitializer, %jmap-22.Tile.Build* %7
	store %jmap-22.Tile.Build %56, %jmap-22.Tile.Build* %7
	; AssignStmt
	; SelectorExpr
	%57 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, i64 0, i32 3
	; SelectorExpr
	%58 = load %jmap-22.Data_t*, %jmap-22.Data_t** %0, align 8
	%59 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %58, i64 0
	%60 = getelementptr inbounds %jmap-22.Data_t, %jmap-22.Data_t* %59, i64 0, i32 4
	%61 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %60, align 8
	store %asset-25.Asset.Texture* %61, %asset-25.Asset.Texture** %57
	br label %typematch.done-9

typematch.done-9:
	; SelectorExpr
	%62 = load %render_queue-23.Queue*, %render_queue-23.Queue** %1, align 8
	%63 = load %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %5, align 8
	; union - child to parent
	store %renderer-24.Command zeroinitializer, %renderer-24.Command* %8
	%64 = bitcast %renderer-24.Command* %8 to %renderer-24.Command.Bitmap*
	store %renderer-24.Command.Bitmap %63, %renderer-24.Command.Bitmap* %64
	%65 = getelementptr inbounds %renderer-24.Command, %renderer-24.Command* %8, i64 0, i32 5 ; UnionTagPtr
	store i64 1, i64* %65
	%66 = load %renderer-24.Command, %renderer-24.Command* %8, align 8
	store %renderer-24.Command zeroinitializer, %renderer-24.Command* %9
	store %renderer-24.Command %66, %renderer-24.Command* %9
	call void @render_queue-23.Enqueue(%render_queue-23.Queue* %62, %renderer-24.Command* %9)
	%67 = load i64, i64* %3, align 8
	%68 = add i64 %67, 1
	store i64 %68, i64* %3
	br label %for.loop-3

for.done-10:
	%69 = load i64, i64* %2, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %2
	br label %for.loop-1

for.done-11:
	; ReturnStmt
	%71 = load %render_queue-23.Queue*, %render_queue-23.Queue** %1, align 8
	ret %render_queue-23.Queue* %71
}

define %render_queue-23.Queue* @render_queue-23.Make() {
decls-0:
	%0 = alloca %render_queue-23.Queue*, align 8
	; res
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %0
		; new
	%1 = call %..rawptr @alloc_align(i64 24, i64 8)
	%2 = bitcast %..rawptr %1 to %render_queue-23.Queue*
	store %render_queue-23.Queue* %2, %render_queue-23.Queue** %0
	; AssignStmt
	; SelectorExpr
	%3 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%4 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %3, i64 0
	%5 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %4, i64 0, i32 0
	store i64 0, i64* %5
	; AssignStmt
	; SelectorExpr
	%6 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%7 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %6, i64 0
	%8 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %7, i64 0, i32 1
	store %render_queue-23.QueueNode* zeroinitializer, %render_queue-23.QueueNode** %8
	; AssignStmt
	; SelectorExpr
	%9 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%10 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %9, i64 0
	%11 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %10, i64 0, i32 2
	store %render_queue-23.QueueNode* zeroinitializer, %render_queue-23.QueueNode** %11
	; ReturnStmt
	%12 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	ret %render_queue-23.Queue* %12
}

define void @render_queue-23.Enqueue(%render_queue-23.Queue* %queue, %renderer-24.Command* %cmd) {
decls-0:
	%0 = alloca %render_queue-23.Queue*, align 8
	%1 = alloca %render_queue-23.QueueNode*, align 8
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %0
		store %render_queue-23.Queue* %queue, %render_queue-23.Queue** %0
	%2 = load %renderer-24.Command, %renderer-24.Command* %cmd, align 8
	; node
	store %render_queue-23.QueueNode* zeroinitializer, %render_queue-23.QueueNode** %1
		; new
	%3 = call %..rawptr @alloc_align(i64 64, i64 8)
	%4 = bitcast %..rawptr %3 to %render_queue-23.QueueNode*
	store %render_queue-23.QueueNode* %4, %render_queue-23.QueueNode** %1
	; AssignStmt
	; SelectorExpr
	%5 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	%6 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %5, i64 0
	%7 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %6, i64 0, i32 0
	%8 = load %renderer-24.Command, %renderer-24.Command* %cmd, align 8
	store %renderer-24.Command %8, %renderer-24.Command* %7
	; AssignStmt
	; SelectorExpr
	%9 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	%10 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %9, i64 0
	%11 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %10, i64 0, i32 1
	store %render_queue-23.QueueNode* zeroinitializer, %render_queue-23.QueueNode** %11
	; IfStmt
	; SelectorExpr
	%12 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%13 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %12, i64 0
	%14 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %13, i64 0, i32 2
	%15 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %14, align 8
	%16 = icmp eq %render_queue-23.QueueNode* %15, zeroinitializer
	br i1 %16, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%17 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%18 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %17, i64 0
	%19 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %18, i64 0, i32 1
	%20 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	store %render_queue-23.QueueNode* %20, %render_queue-23.QueueNode** %19
	; AssignStmt
	; SelectorExpr
	%21 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%22 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %21, i64 0
	%23 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %22, i64 0, i32 2
	%24 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	store %render_queue-23.QueueNode* %24, %render_queue-23.QueueNode** %23
	; SelectorExpr
	%25 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%26 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %25, i64 0
	%27 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %26, i64 0, i32 0
	%28 = load i64, i64* %27, align 8
	%29 = add i64 %28, 1
	store i64 %29, i64* %27
	; ReturnStmt
	ret void

if.done-2:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%30 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%31 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %30, i64 0
	%32 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %31, i64 0, i32 2
	%33 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %32, align 8
	%34 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %33, i64 0
	%35 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %34, i64 0, i32 1
	%36 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	store %render_queue-23.QueueNode* %36, %render_queue-23.QueueNode** %35
	; AssignStmt
	; SelectorExpr
	%37 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%38 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %37, i64 0
	%39 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %38, i64 0, i32 2
	%40 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	store %render_queue-23.QueueNode* %40, %render_queue-23.QueueNode** %39
	; SelectorExpr
	%41 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%42 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %41, i64 0
	%43 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %42, i64 0, i32 0
	%44 = load i64, i64* %43, align 8
	%45 = add i64 %44, 1
	store i64 %45, i64* %43
	ret void
}

define {%renderer-24.Command, i1} @render_queue-23.Dequeue(%render_queue-23.Queue* %queue) {
decls-0:
	%0 = alloca %render_queue-23.Queue*, align 8
	%1 = alloca %render_queue-23.QueueNode*, align 8
	%2 = alloca %renderer-24.Command, align 8
	%3 = alloca {%renderer-24.Command, i1}, align 8
	%4 = alloca %renderer-24.Command, align 8
	%5 = alloca {%renderer-24.Command, i1}, align 8
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %0
		store %render_queue-23.Queue* %queue, %render_queue-23.Queue** %0
	; IfStmt
	%6 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%7 = call i1 @render_queue-23.IsEmpty(%render_queue-23.Queue* %6)
	br i1 %7, label %if.else-2, label %if.then-1

if.then-1:
	; node
	store %render_queue-23.QueueNode* zeroinitializer, %render_queue-23.QueueNode** %1
		; SelectorExpr
	%8 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%9 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %8, i64 0
	%10 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %9, i64 0, i32 1
	%11 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %10, align 8
	store %render_queue-23.QueueNode* %11, %render_queue-23.QueueNode** %1
	; cmd
	store %renderer-24.Command zeroinitializer, %renderer-24.Command* %2
		; SelectorExpr
	%12 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	%13 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %12, i64 0
	%14 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %13, i64 0, i32 0
	%15 = load %renderer-24.Command, %renderer-24.Command* %14, align 8
	store %renderer-24.Command %15, %renderer-24.Command* %2
	; AssignStmt
	; SelectorExpr
	%16 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%17 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %16, i64 0
	%18 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %17, i64 0, i32 1
	; SelectorExpr
	%19 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	%20 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %19, i64 0
	%21 = getelementptr inbounds %render_queue-23.QueueNode, %render_queue-23.QueueNode* %20, i64 0, i32 1
	%22 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %21, align 8
	store %render_queue-23.QueueNode* %22, %render_queue-23.QueueNode** %18
	; SelectorExpr
	%23 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%24 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %23, i64 0
	%25 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %24, i64 0, i32 0
	%26 = load i64, i64* %25, align 8
	%27 = sub i64 %26, 1
	store i64 %27, i64* %25
	; free
	%28 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %1, align 8
	%29 = bitcast %render_queue-23.QueueNode* %28 to %..rawptr
	call void @free_ptr(%..rawptr %29)
	; ReturnStmt
	%30 = load %renderer-24.Command, %renderer-24.Command* %2, align 8
	store {%renderer-24.Command, i1} zeroinitializer, {%renderer-24.Command, i1}* %3
	%31 = getelementptr inbounds {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %3, i64 0, i32 0
	store %renderer-24.Command %30, %renderer-24.Command* %31
	%32 = getelementptr inbounds {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %3, i64 0, i32 1
	store i1 true, i1* %32
	%33 = load {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %3, align 8
	ret {%renderer-24.Command, i1} %33

if.else-2:
	; ReturnStmt
	; CompoundLit
	store %renderer-24.Command zeroinitializer, %renderer-24.Command* %4
	%34 = load %renderer-24.Command, %renderer-24.Command* %4, align 8
	store {%renderer-24.Command, i1} zeroinitializer, {%renderer-24.Command, i1}* %5
	%35 = getelementptr inbounds {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %5, i64 0, i32 0
	store %renderer-24.Command %34, %renderer-24.Command* %35
	%36 = getelementptr inbounds {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %5, i64 0, i32 1
	store i1 false, i1* %36
	%37 = load {%renderer-24.Command, i1}, {%renderer-24.Command, i1}* %5, align 8
	ret {%renderer-24.Command, i1} %37

if.done-3:
	unreachable
}

define i1 @render_queue-23.IsEmpty(%render_queue-23.Queue* %queue) {
decls-0:
	%0 = alloca %render_queue-23.Queue*, align 8
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %0
		store %render_queue-23.Queue* %queue, %render_queue-23.Queue** %0
	; IfStmt
	; SelectorExpr
	%1 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%2 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %1, i64 0
	%3 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %2, i64 0, i32 1
	%4 = load %render_queue-23.QueueNode*, %render_queue-23.QueueNode** %3, align 8
	%5 = icmp eq %render_queue-23.QueueNode* %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.else-2

if.then-1:
	; ReturnStmt
	ret i1 true

if.else-2:
	; IfStmt
	; SelectorExpr
	%6 = load %render_queue-23.Queue*, %render_queue-23.Queue** %0, align 8
	%7 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %6, i64 0
	%8 = getelementptr inbounds %render_queue-23.Queue, %render_queue-23.Queue* %7, i64 0, i32 0
	%9 = load i64, i64* %8, align 8
	%10 = icmp eq i64 %9, 0
	br i1 %10, label %if.then-3, label %if.else-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.else-4:
	; ReturnStmt
	ret i1 false

if.done-5:
	br label %if.done-6

if.done-6:
	unreachable
}

define %renderer-24.State_t* @renderer-24.Init(%catalog-16.Catalog* %shaderCat) {
decls-0:
	%0 = alloca %catalog-16.Catalog*, align 8
	%1 = alloca %renderer-24.State_t*, align 8
	%2 = alloca %asset-25.Asset*, align 8
	%3 = alloca i64, align 8
	%4 = alloca %asset-25.Asset*, align 8
	%5 = alloca i64, align 8
	%6 = alloca %asset-25.Asset.Shader*, align 8
	%7 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%8 = alloca %asset-25.Asset.Shader*, align 8
	%9 = alloca {%asset-25.Asset.Shader*, i1}, align 8
	%10 = alloca %asset-25.Asset.Shader, align 16
	%11 = alloca %asset-25.Asset.Shader, align 16
	%12 = alloca %gl-10.Program, align 16
	%13 = alloca [20 x float], align 4
	%14 = alloca [6 x i32], align 4
	%15 = alloca %gl-10.Program, align 16
	%16 = alloca %__Map_Header, align 8
	%17 = alloca %__Map_Key, align 8
	%18 = alloca i32, align 4
	%19 = alloca %__Map_Header, align 16
	%20 = alloca %__Map_Key, align 16
	%21 = alloca %gl-10.Program, align 16
	%22 = alloca %__Map_Header, align 8
	%23 = alloca %__Map_Key, align 8
	%24 = alloca i32, align 4
	%25 = alloca %__Map_Header, align 16
	%26 = alloca %__Map_Key, align 16
	%27 = alloca %gl-10.Program, align 16
	%28 = alloca %__Map_Header, align 8
	%29 = alloca %__Map_Key, align 8
	%30 = alloca i32, align 4
	%31 = alloca %__Map_Header, align 16
	%32 = alloca %__Map_Key, align 16
	%33 = alloca %gl-10.Program, align 16
	%34 = alloca %__Map_Header, align 8
	%35 = alloca %__Map_Key, align 8
	%36 = alloca i32, align 4
	%37 = alloca %__Map_Header, align 16
	%38 = alloca %__Map_Key, align 16
	%39 = alloca %gl-10.Program, align 16
	%40 = alloca %__Map_Header, align 8
	%41 = alloca %__Map_Key, align 8
	%42 = alloca i32, align 4
	%43 = alloca %__Map_Header, align 16
	%44 = alloca %__Map_Key, align 16
	%45 = alloca {i32, i1}, align 4
	%46 = alloca %__Map_Header, align 8
	%47 = alloca %__Map_Key, align 8
	%48 = alloca %__Map_Header, align 16
	%49 = alloca %__Map_Key, align 16
	%50 = alloca {i32, i1}, align 4
	%51 = alloca %__Map_Header, align 8
	%52 = alloca %__Map_Key, align 8
	%53 = alloca %__Map_Header, align 16
	%54 = alloca %__Map_Key, align 16
	%55 = alloca {i32, i1}, align 4
	%56 = alloca %__Map_Header, align 8
	%57 = alloca %__Map_Key, align 8
	%58 = alloca %__Map_Header, align 16
	%59 = alloca %__Map_Key, align 16
	%60 = alloca {i32, i1}, align 4
	%61 = alloca %__Map_Header, align 8
	%62 = alloca %__Map_Key, align 8
	%63 = alloca %__Map_Header, align 16
	%64 = alloca %__Map_Key, align 16
	%65 = alloca %gl-10.Program, align 16
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %0
		store %catalog-16.Catalog* %shaderCat, %catalog-16.Catalog** %0
	; state
	store %renderer-24.State_t* zeroinitializer, %renderer-24.State_t** %1
		; new
	%66 = call %..rawptr @alloc_align(i64 368, i64 8)
	%67 = bitcast %..rawptr %66 to %renderer-24.State_t*
	store %renderer-24.State_t* %67, %renderer-24.State_t** %1
	; vertexAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %2
		; ok1
	store i64 zeroinitializer, i64* %3
		; SelectorExpr
	%68 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%69 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %68, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$487, i64 0, i32 0), i64 9})
	%70 = extractvalue {%asset-25.Asset*, i64} %69, 0
	%71 = extractvalue {%asset-25.Asset*, i64} %69, 1
	store %asset-25.Asset* %70, %asset-25.Asset** %2
	store i64 %71, i64* %3
	; fragAsset
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %4
		; ok2
	store i64 zeroinitializer, i64* %5
		; SelectorExpr
	%72 = load %catalog-16.Catalog*, %catalog-16.Catalog** %0, align 8
	%73 = call {%asset-25.Asset*, i64} @catalog-16.Find-959(%catalog-16.Catalog* %72, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$488, i64 0, i32 0), i64 9})
	%74 = extractvalue {%asset-25.Asset*, i64} %73, 0
	%75 = extractvalue {%asset-25.Asset*, i64} %73, 1
	store %asset-25.Asset* %74, %asset-25.Asset** %4
	store i64 %75, i64* %5
	; IfStmt
	%76 = load i64, i64* %3, align 8
	%77 = icmp ne i64 %76, 0
	br i1 %77, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%78 = load i64, i64* %5, align 8
	%79 = icmp ne i64 %78, 0
	br i1 %79, label %if.then-2, label %if.done-3

if.then-2:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$489, i64 0, i32 0), i64 30}, i64 50, i64 15, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$48a, i64 0, i32 0), i64 32})
	br label %if.done-3

if.done-3:
	; vertex
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %6
		%80 = load %asset-25.Asset*, %asset-25.Asset** %2, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %7
	%81 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %80, i64 0, i32 4 ; UnionTagPtr
	%82 = load i64, i64* %81, align 8
	%83 = icmp eq i64 %82, 2
	br i1 %83, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%84 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %7, i64 0, i32 0
	%85 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %7, i64 0, i32 1
	%86 = bitcast %asset-25.Asset* %80 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %86, %asset-25.Asset.Shader** %84
	store i1 true, i1* %85
	br label %union_cast.end-5

union_cast.end-5:
	%87 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %7, i64 0, i32 1
	%88 = load i1, i1* %87, align 1
	%89 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%90 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %88, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$48b, i64 0, i32 0), i64 30}, i64 53, i64 15, %Type_Info* %89, %Type_Info* %90)
	%91 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %7, i64 0, i32 0
	%92 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %91, align 8
	store %asset-25.Asset.Shader* %92, %asset-25.Asset.Shader** %6
	; frag
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %8
		%93 = load %asset-25.Asset*, %asset-25.Asset** %4, align 8
	; cast - union_cast
	store {%asset-25.Asset.Shader*, i1} zeroinitializer, {%asset-25.Asset.Shader*, i1}* %9
	%94 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %93, i64 0, i32 4 ; UnionTagPtr
	%95 = load i64, i64* %94, align 8
	%96 = icmp eq i64 %95, 2
	br i1 %96, label %union_cast.ok-6, label %union_cast.end-7

union_cast.ok-6:
	%97 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %9, i64 0, i32 0
	%98 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %9, i64 0, i32 1
	%99 = bitcast %asset-25.Asset* %93 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* %99, %asset-25.Asset.Shader** %97
	store i1 true, i1* %98
	br label %union_cast.end-7

union_cast.end-7:
	%100 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %9, i64 0, i32 1
	%101 = load i1, i1* %100, align 1
	%102 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%103 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	call void @__type_assertion_check(i1 %101, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$48c, i64 0, i32 0), i64 30}, i64 54, i64 15, %Type_Info* %102, %Type_Info* %103)
	%104 = getelementptr inbounds {%asset-25.Asset.Shader*, i1}, {%asset-25.Asset.Shader*, i1}* %9, i64 0, i32 0
	%105 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %104, align 8
	store %asset-25.Asset.Shader* %105, %asset-25.Asset.Shader** %8
	; AssignStmt
	; SelectorExpr
	%106 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%107 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %106, i64 0
	%108 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %107, i64 0, i32 0
	; SelectorExpr
	%109 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %6, align 8
	%110 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %109, i64 0
	%111 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %110, align 8
	%112 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %8, align 8
	%113 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %112, i64 0
	%114 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %113, align 8
	store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %10
	store %asset-25.Asset.Shader %111, %asset-25.Asset.Shader* %10
	store %asset-25.Asset.Shader zeroinitializer, %asset-25.Asset.Shader* %11
	store %asset-25.Asset.Shader %114, %asset-25.Asset.Shader* %11
	%115 = call %gl-10.Program @gl_util-39.CreateProgram(%asset-25.Asset.Shader* %10, %asset-25.Asset.Shader* %11)
	store %gl-10.Program %115, %gl-10.Program* %108
	; SelectorExpr
	; SelectorExpr
	%116 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%117 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %116, i64 0
	%118 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %117, i64 0, i32 0
	%119 = load %gl-10.Program, %gl-10.Program* %118, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %12
	store %gl-10.Program %119, %gl-10.Program* %12
	call void @gl-10.UseProgram(%gl-10.Program* %12)
	; AssignStmt
	; SelectorExpr
	%120 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%121 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %120, i64 0
	%122 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %121, i64 0, i32 2
	; SelectorExpr
	%123 = call i32 @gl-10.GenVertexArray()
	store i32 %123, i32* %122
	; SelectorExpr
	; SelectorExpr
	%124 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%125 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %124, i64 0
	%126 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %125, i64 0, i32 2
	%127 = load i32, i32* %126, align 4
	call void @gl-10.BindVertexArray(i32 %127)
	; AssignStmt
	; SelectorExpr
	%128 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%129 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %128, i64 0
	%130 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %129, i64 0, i32 3
	; SelectorExpr
	%131 = call i32 @gl-10.GenVBO()
	store i32 %131, i32* %130
	; SelectorExpr
	; SelectorExpr
	%132 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%133 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %132, i64 0
	%134 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %133, i64 0, i32 3
	%135 = load i32, i32* %134, align 4
	call void @gl-10.BindBuffer-779(i32 %135)
	; AssignStmt
	; SelectorExpr
	%136 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%137 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %136, i64 0
	%138 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %137, i64 0, i32 4
	; SelectorExpr
	%139 = call i32 @gl-10.GenEBO()
	store i32 %139, i32* %138
	; SelectorExpr
	; SelectorExpr
	%140 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%141 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %140, i64 0
	%142 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %141, i64 0, i32 4
	%143 = load i32, i32* %142, align 4
	call void @gl-10.BindBuffer-780(i32 %143)
	; vertices
	store [20 x float] zeroinitializer, [20 x float]* %13
		store [20 x float] [float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000], [20 x float]* %13
	; elements
	store [6 x i32] zeroinitializer, [6 x i32]* %14
		store [6 x i32] [i32 0, i32 1, i32 3, i32 1, i32 2, i32 3], [6 x i32]* %14
	; SelectorExpr
	; IndexExpr
	%144 = getelementptr inbounds [20 x float], [20 x float]* %13, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$48d, i64 0, i32 0), i64 30}, i64 78, i64 76, i64 0, i64 20)
	%145 = getelementptr inbounds float, float* %144, i64 0
	%146 = bitcast float* %145 to %..rawptr
	call void @gl-10.BufferData-773(i32 34962, i32 80, %..rawptr %146, i32 35044)
	; SelectorExpr
	; IndexExpr
	%147 = getelementptr inbounds [6 x i32], [6 x i32]* %14, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$48e, i64 0, i32 0), i64 30}, i64 79, i64 83, i64 0, i64 6)
	%148 = getelementptr inbounds i32, i32* %147, i64 0
	%149 = bitcast i32* %148 to %..rawptr
	call void @gl-10.BufferData-773(i32 34963, i32 24, %..rawptr %149, i32 35044)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%150 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%151 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %150, i64 0
	%152 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %151, i64 0, i32 0
	%153 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %152, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%154 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%155 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %154, i64 0
	%156 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %155, i64 0, i32 0
	%157 = load %gl-10.Program, %gl-10.Program* %156, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %15
	store %gl-10.Program %157, %gl-10.Program* %15
	%158 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %15, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$48f, i64 0, i32 0), i64 5})
	store %__Map_Header zeroinitializer, %__Map_Header* %16
	%159 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 0
	%160 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %153 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %160, %raw-6.Dynamic_Map** %159
	%161 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 1
	store i1 true, i1* %161
	%162 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 2
	store i64 40, i64* %162
	%163 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 3
	store i64 8, i64* %163
	%164 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 4
	store i64 32, i64* %164
	%165 = getelementptr inbounds %__Map_Header, %__Map_Header* %16, i64 0, i32 5
	store i64 4, i64* %165
	%166 = load %__Map_Header, %__Map_Header* %16, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %17
	%167 = getelementptr inbounds %__Map_Key, %__Map_Key* %17, i64 0, i32 0
	store i64 6747846868581204634, i64* %167
	%168 = getelementptr inbounds %__Map_Key, %__Map_Key* %17, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$490, i64 0, i32 0), i64 5}, %..string* %168
	%169 = load %__Map_Key, %__Map_Key* %17, align 8
	store i32 zeroinitializer, i32* %18
	store i32 %158, i32* %18
	%170 = bitcast i32* %18 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	store %__Map_Header %166, %__Map_Header* %19
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	store %__Map_Key %169, %__Map_Key* %20
	call void @__dynamic_map_set(%__Map_Header* %19, %__Map_Key* %20, %..rawptr %170)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%171 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%172 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %171, i64 0
	%173 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %172, i64 0, i32 0
	%174 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %173, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%175 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%176 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %175, i64 0
	%177 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %176, i64 0, i32 0
	%178 = load %gl-10.Program, %gl-10.Program* %177, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %21
	store %gl-10.Program %178, %gl-10.Program* %21
	%179 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %21, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$491, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %22
	%180 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 0
	%181 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %174 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %181, %raw-6.Dynamic_Map** %180
	%182 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 1
	store i1 true, i1* %182
	%183 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 2
	store i64 40, i64* %183
	%184 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 3
	store i64 8, i64* %184
	%185 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 4
	store i64 32, i64* %185
	%186 = getelementptr inbounds %__Map_Header, %__Map_Header* %22, i64 0, i32 5
	store i64 4, i64* %186
	%187 = load %__Map_Header, %__Map_Header* %22, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %23
	%188 = getelementptr inbounds %__Map_Key, %__Map_Key* %23, i64 0, i32 0
	store i64 9176635129918533432, i64* %188
	%189 = getelementptr inbounds %__Map_Key, %__Map_Key* %23, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$492, i64 0, i32 0), i64 4}, %..string* %189
	%190 = load %__Map_Key, %__Map_Key* %23, align 8
	store i32 zeroinitializer, i32* %24
	store i32 %179, i32* %24
	%191 = bitcast i32* %24 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %25
	store %__Map_Header %187, %__Map_Header* %25
	store %__Map_Key zeroinitializer, %__Map_Key* %26
	store %__Map_Key %190, %__Map_Key* %26
	call void @__dynamic_map_set(%__Map_Header* %25, %__Map_Key* %26, %..rawptr %191)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%192 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%193 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %192, i64 0
	%194 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %193, i64 0, i32 0
	%195 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %194, i64 0, i32 0
	; SelectorExpr
	; SelectorExpr
	%196 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%197 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %196, i64 0
	%198 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %197, i64 0, i32 0
	%199 = load %gl-10.Program, %gl-10.Program* %198, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %27
	store %gl-10.Program %199, %gl-10.Program* %27
	%200 = call i32 @gl-10.GetUniformLocation(%gl-10.Program* %27, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$493, i64 0, i32 0), i64 4})
	store %__Map_Header zeroinitializer, %__Map_Header* %28
	%201 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 0
	%202 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %195 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %202, %raw-6.Dynamic_Map** %201
	%203 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 1
	store i1 true, i1* %203
	%204 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 2
	store i64 40, i64* %204
	%205 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 3
	store i64 8, i64* %205
	%206 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 4
	store i64 32, i64* %206
	%207 = getelementptr inbounds %__Map_Header, %__Map_Header* %28, i64 0, i32 5
	store i64 4, i64* %207
	%208 = load %__Map_Header, %__Map_Header* %28, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %29
	%209 = getelementptr inbounds %__Map_Key, %__Map_Key* %29, i64 0, i32 0
	store i64 -5764445782238813962, i64* %209
	%210 = getelementptr inbounds %__Map_Key, %__Map_Key* %29, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$494, i64 0, i32 0), i64 4}, %..string* %210
	%211 = load %__Map_Key, %__Map_Key* %29, align 8
	store i32 zeroinitializer, i32* %30
	store i32 %200, i32* %30
	%212 = bitcast i32* %30 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %31
	store %__Map_Header %208, %__Map_Header* %31
	store %__Map_Key zeroinitializer, %__Map_Key* %32
	store %__Map_Key %211, %__Map_Key* %32
	call void @__dynamic_map_set(%__Map_Header* %31, %__Map_Key* %32, %..rawptr %212)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%213 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%214 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %213, i64 0
	%215 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %214, i64 0, i32 0
	%216 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %215, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	%217 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%218 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %217, i64 0
	%219 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %218, i64 0, i32 0
	%220 = load %gl-10.Program, %gl-10.Program* %219, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %33
	store %gl-10.Program %220, %gl-10.Program* %33
	%221 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %33, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$495, i64 0, i32 0), i64 8})
	store %__Map_Header zeroinitializer, %__Map_Header* %34
	%222 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 0
	%223 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %216 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %223, %raw-6.Dynamic_Map** %222
	%224 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 1
	store i1 true, i1* %224
	%225 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 2
	store i64 40, i64* %225
	%226 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 3
	store i64 8, i64* %226
	%227 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 4
	store i64 32, i64* %227
	%228 = getelementptr inbounds %__Map_Header, %__Map_Header* %34, i64 0, i32 5
	store i64 4, i64* %228
	%229 = load %__Map_Header, %__Map_Header* %34, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %35
	%230 = getelementptr inbounds %__Map_Key, %__Map_Key* %35, i64 0, i32 0
	store i64 -4512294542364210646, i64* %230
	%231 = getelementptr inbounds %__Map_Key, %__Map_Key* %35, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$496, i64 0, i32 0), i64 8}, %..string* %231
	%232 = load %__Map_Key, %__Map_Key* %35, align 8
	store i32 zeroinitializer, i32* %36
	store i32 %221, i32* %36
	%233 = bitcast i32* %36 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %37
	store %__Map_Header %229, %__Map_Header* %37
	store %__Map_Key zeroinitializer, %__Map_Key* %38
	store %__Map_Key %232, %__Map_Key* %38
	call void @__dynamic_map_set(%__Map_Header* %37, %__Map_Key* %38, %..rawptr %233)
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%234 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%235 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %234, i64 0
	%236 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %235, i64 0, i32 0
	%237 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %236, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	%238 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%239 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %238, i64 0
	%240 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %239, i64 0, i32 0
	%241 = load %gl-10.Program, %gl-10.Program* %240, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %39
	store %gl-10.Program %241, %gl-10.Program* %39
	%242 = call i32 @gl-10.GetAttribLocation(%gl-10.Program* %39, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$497, i64 0, i32 0), i64 2})
	store %__Map_Header zeroinitializer, %__Map_Header* %40
	%243 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 0
	%244 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %237 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %244, %raw-6.Dynamic_Map** %243
	%245 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 1
	store i1 true, i1* %245
	%246 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 2
	store i64 40, i64* %246
	%247 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 3
	store i64 8, i64* %247
	%248 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 4
	store i64 32, i64* %248
	%249 = getelementptr inbounds %__Map_Header, %__Map_Header* %40, i64 0, i32 5
	store i64 4, i64* %249
	%250 = load %__Map_Header, %__Map_Header* %40, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %41
	%251 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 0
	store i64 662345837686521650, i64* %251
	%252 = getelementptr inbounds %__Map_Key, %__Map_Key* %41, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$498, i64 0, i32 0), i64 2}, %..string* %252
	%253 = load %__Map_Key, %__Map_Key* %41, align 8
	store i32 zeroinitializer, i32* %42
	store i32 %242, i32* %42
	%254 = bitcast i32* %42 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %43
	store %__Map_Header %250, %__Map_Header* %43
	store %__Map_Key zeroinitializer, %__Map_Key* %44
	store %__Map_Key %253, %__Map_Key* %44
	call void @__dynamic_map_set(%__Map_Header* %43, %__Map_Key* %44, %..rawptr %254)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%255 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%256 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %255, i64 0
	%257 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %256, i64 0, i32 0
	%258 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %257, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %45
	store %__Map_Header zeroinitializer, %__Map_Header* %46
	%259 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 0
	%260 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %258 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %260, %raw-6.Dynamic_Map** %259
	%261 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 1
	store i1 true, i1* %261
	%262 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 2
	store i64 40, i64* %262
	%263 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 3
	store i64 8, i64* %263
	%264 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 4
	store i64 32, i64* %264
	%265 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 5
	store i64 4, i64* %265
	%266 = load %__Map_Header, %__Map_Header* %46, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %47
	%267 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 0
	store i64 -4512294542364210646, i64* %267
	%268 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$499, i64 0, i32 0), i64 8}, %..string* %268
	%269 = load %__Map_Key, %__Map_Key* %47, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %48
	store %__Map_Header %266, %__Map_Header* %48
	store %__Map_Key zeroinitializer, %__Map_Key* %49
	store %__Map_Key %269, %__Map_Key* %49
	%270 = call %..rawptr @__dynamic_map_get(%__Map_Header* %48, %__Map_Key* %49)
	%271 = icmp ne %..rawptr %270, null
	%272 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 1
	store i1 %271, i1* %272
	br i1 %271, label %map.get.then-8, label %map.get.done-9

map.get.then-8:
	%273 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%274 = bitcast %..rawptr %270 to i32*
	%275 = load i32, i32* %274, align 4
	store i32 %275, i32* %273
	br label %map.get.done-9

map.get.done-9:
	%276 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%277 = load i32, i32* %276, align 4
	%278 = bitcast i32 %277 to i32
	call void @gl-10.VertexAttribPointer(i32 %278, i32 3, i32 5126, i1 false, i32 20, %..rawptr zeroinitializer)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%279 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%280 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %279, i64 0
	%281 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %280, i64 0, i32 0
	%282 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %281, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %50
	store %__Map_Header zeroinitializer, %__Map_Header* %51
	%283 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 0
	%284 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %282 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %284, %raw-6.Dynamic_Map** %283
	%285 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 1
	store i1 true, i1* %285
	%286 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 2
	store i64 40, i64* %286
	%287 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 3
	store i64 8, i64* %287
	%288 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 4
	store i64 32, i64* %288
	%289 = getelementptr inbounds %__Map_Header, %__Map_Header* %51, i64 0, i32 5
	store i64 4, i64* %289
	%290 = load %__Map_Header, %__Map_Header* %51, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %52
	%291 = getelementptr inbounds %__Map_Key, %__Map_Key* %52, i64 0, i32 0
	store i64 662345837686521650, i64* %291
	%292 = getelementptr inbounds %__Map_Key, %__Map_Key* %52, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$49a, i64 0, i32 0), i64 2}, %..string* %292
	%293 = load %__Map_Key, %__Map_Key* %52, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %53
	store %__Map_Header %290, %__Map_Header* %53
	store %__Map_Key zeroinitializer, %__Map_Key* %54
	store %__Map_Key %293, %__Map_Key* %54
	%294 = call %..rawptr @__dynamic_map_get(%__Map_Header* %53, %__Map_Key* %54)
	%295 = icmp ne %..rawptr %294, null
	%296 = getelementptr inbounds {i32, i1}, {i32, i1}* %50, i64 0, i32 1
	store i1 %295, i1* %296
	br i1 %295, label %map.get.then-10, label %map.get.done-11

map.get.then-10:
	%297 = getelementptr inbounds {i32, i1}, {i32, i1}* %50, i64 0, i32 0
	%298 = bitcast %..rawptr %294 to i32*
	%299 = load i32, i32* %298, align 4
	store i32 %299, i32* %297
	br label %map.get.done-11

map.get.done-11:
	%300 = getelementptr inbounds {i32, i1}, {i32, i1}* %50, i64 0, i32 0
	%301 = load i32, i32* %300, align 4
	%302 = bitcast i32 %301 to i32
	call void @gl-10.VertexAttribPointer(i32 %302, i32 2, i32 5126, i1 false, i32 20, %..rawptr inttoptr (i64 12 to %..rawptr))
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%303 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%304 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %303, i64 0
	%305 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %304, i64 0, i32 0
	%306 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %305, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %55
	store %__Map_Header zeroinitializer, %__Map_Header* %56
	%307 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 0
	%308 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %306 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %308, %raw-6.Dynamic_Map** %307
	%309 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 1
	store i1 true, i1* %309
	%310 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 2
	store i64 40, i64* %310
	%311 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 3
	store i64 8, i64* %311
	%312 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 4
	store i64 32, i64* %312
	%313 = getelementptr inbounds %__Map_Header, %__Map_Header* %56, i64 0, i32 5
	store i64 4, i64* %313
	%314 = load %__Map_Header, %__Map_Header* %56, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %57
	%315 = getelementptr inbounds %__Map_Key, %__Map_Key* %57, i64 0, i32 0
	store i64 -4512294542364210646, i64* %315
	%316 = getelementptr inbounds %__Map_Key, %__Map_Key* %57, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$49b, i64 0, i32 0), i64 8}, %..string* %316
	%317 = load %__Map_Key, %__Map_Key* %57, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %58
	store %__Map_Header %314, %__Map_Header* %58
	store %__Map_Key zeroinitializer, %__Map_Key* %59
	store %__Map_Key %317, %__Map_Key* %59
	%318 = call %..rawptr @__dynamic_map_get(%__Map_Header* %58, %__Map_Key* %59)
	%319 = icmp ne %..rawptr %318, null
	%320 = getelementptr inbounds {i32, i1}, {i32, i1}* %55, i64 0, i32 1
	store i1 %319, i1* %320
	br i1 %319, label %map.get.then-12, label %map.get.done-13

map.get.then-12:
	%321 = getelementptr inbounds {i32, i1}, {i32, i1}* %55, i64 0, i32 0
	%322 = bitcast %..rawptr %318 to i32*
	%323 = load i32, i32* %322, align 4
	store i32 %323, i32* %321
	br label %map.get.done-13

map.get.done-13:
	%324 = getelementptr inbounds {i32, i1}, {i32, i1}* %55, i64 0, i32 0
	%325 = load i32, i32* %324, align 4
	%326 = bitcast i32 %325 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %326)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%327 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%328 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %327, i64 0
	%329 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %328, i64 0, i32 0
	%330 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %329, i64 0, i32 1
	store {i32, i1} zeroinitializer, {i32, i1}* %60
	store %__Map_Header zeroinitializer, %__Map_Header* %61
	%331 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 0
	%332 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %330 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %332, %raw-6.Dynamic_Map** %331
	%333 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 1
	store i1 true, i1* %333
	%334 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 2
	store i64 40, i64* %334
	%335 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 3
	store i64 8, i64* %335
	%336 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 4
	store i64 32, i64* %336
	%337 = getelementptr inbounds %__Map_Header, %__Map_Header* %61, i64 0, i32 5
	store i64 4, i64* %337
	%338 = load %__Map_Header, %__Map_Header* %61, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %62
	%339 = getelementptr inbounds %__Map_Key, %__Map_Key* %62, i64 0, i32 0
	store i64 662345837686521650, i64* %339
	%340 = getelementptr inbounds %__Map_Key, %__Map_Key* %62, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$49c, i64 0, i32 0), i64 2}, %..string* %340
	%341 = load %__Map_Key, %__Map_Key* %62, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %63
	store %__Map_Header %338, %__Map_Header* %63
	store %__Map_Key zeroinitializer, %__Map_Key* %64
	store %__Map_Key %341, %__Map_Key* %64
	%342 = call %..rawptr @__dynamic_map_get(%__Map_Header* %63, %__Map_Key* %64)
	%343 = icmp ne %..rawptr %342, null
	%344 = getelementptr inbounds {i32, i1}, {i32, i1}* %60, i64 0, i32 1
	store i1 %343, i1* %344
	br i1 %343, label %map.get.then-14, label %map.get.done-15

map.get.then-14:
	%345 = getelementptr inbounds {i32, i1}, {i32, i1}* %60, i64 0, i32 0
	%346 = bitcast %..rawptr %342 to i32*
	%347 = load i32, i32* %346, align 4
	store i32 %347, i32* %345
	br label %map.get.done-15

map.get.done-15:
	%348 = getelementptr inbounds {i32, i1}, {i32, i1}* %60, i64 0, i32 0
	%349 = load i32, i32* %348, align 4
	%350 = bitcast i32 %349 to i32
	call void @gl-10.EnableVertexAttribArray(i32 %350)
	; SelectorExpr
	; SelectorExpr
	%351 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	%352 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %351, i64 0
	%353 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %352, i64 0, i32 0
	%354 = load %gl-10.Program, %gl-10.Program* %353, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %65
	store %gl-10.Program %354, %gl-10.Program* %65
	call void @gl-10.BindFragDataLocation(%gl-10.Program* %65, i32 0, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$49d, i64 0, i32 0), i64 8})
	; ReturnStmt
	%355 = load %renderer-24.State_t*, %renderer-24.State_t** %1, align 8
	ret %renderer-24.State_t* %355
}

define [4 x [4 x float]] @renderer-24.CalculateOrtho(i64 %window, i64 %scaleFactor, float %far, float %near) {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca float, align 4
	%7 = alloca float, align 4
	%8 = alloca float, align 4
	%9 = alloca float, align 4
	%10 = alloca [4 x [4 x float]], align 4
	%11 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%12 = alloca [4 x [4 x float]], align 16
	%13 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %0
		%14 = bitcast {[0 x <8 x i8>], [2 x float]}* %0 to i64*
	store i64 %window, i64* %14
	%15 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %1
		%16 = bitcast {[0 x <8 x i8>], [2 x float]}* %1 to i64*
	store i64 %scaleFactor, i64* %16
	%17 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	store float zeroinitializer, float* %2
		store float %far, float* %2
	store float zeroinitializer, float* %3
		store float %near, float* %3
	; w
	store float zeroinitializer, float* %4
		; SelectorExpr
	%18 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 0
	%19 = load float, float* %18, align 4
	store float %19, float* %4
	; h
	store float zeroinitializer, float* %5
		; SelectorExpr
	%20 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, i64 0, i32 1, i32 1
	%21 = load float, float* %20, align 4
	store float %21, float* %5
	; l
	store float zeroinitializer, float* %6
		%22 = load float, float* %4, align 4
	%23 = fdiv float %22, 0x4000000000000000
	%24 = fsub float 0x0000000000000000, %23
	store float %24, float* %6
	; r
	store float zeroinitializer, float* %7
		%25 = load float, float* %4, align 4
	%26 = fdiv float %25, 0x4000000000000000
	store float %26, float* %7
	; b
	store float zeroinitializer, float* %8
		%27 = load float, float* %5, align 4
	%28 = fdiv float %27, 0x4000000000000000
	store float %28, float* %8
	; t
	store float zeroinitializer, float* %9
		%29 = load float, float* %5, align 4
	%30 = fdiv float %29, 0x4000000000000000
	%31 = fsub float 0x0000000000000000, %30
	store float %31, float* %9
	; proj
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %10
		; SelectorExpr
	%32 = load float, float* %6, align 4
	%33 = load float, float* %7, align 4
	%34 = load float, float* %9, align 4
	%35 = load float, float* %8, align 4
	%36 = load float, float* %2, align 4
	%37 = load float, float* %3, align 4
	%38 = call [4 x [4 x float]] @math-8.ortho3d(float %32, float %33, float %34, float %35, float %36, float %37)
	store [4 x [4 x float]] %38, [4 x [4 x float]]* %10
	; ReturnStmt
	; SelectorExpr
	%39 = load [4 x [4 x float]], [4 x [4 x float]]* %10, align 4
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %11
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %11
	; SelectorExpr
	%40 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 0
	%41 = load float, float* %40, align 4
	%42 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, i64 0, i32 1, i32 0
	store float %41, float* %42
	; SelectorExpr
	%43 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 1
	%44 = load float, float* %43, align 4
	%45 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, i64 0, i32 1, i32 1
	store float %44, float* %45
	%46 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %11, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %12
	store [4 x [4 x float]] %39, [4 x [4 x float]]* %12
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %13
	store {[0 x <8 x i8>], [3 x float]} %46, {[0 x <8 x i8>], [3 x float]}* %13
	%47 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %12, {[0 x <8 x i8>], [3 x float]}* %13)
	ret [4 x [4 x float]] %47
}

define [4 x [4 x float]] @renderer-24.CreateViewMatrixFromCamera(%renderer-24.Camera_t* %camera) {
decls-0:
	%0 = alloca %renderer-24.Camera_t*, align 8
	%1 = alloca [4 x [4 x float]], align 4
	%2 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%3 = alloca [4 x [4 x float]], align 16
	%4 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%5 = alloca [4 x [4 x float]], align 4
	%6 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%7 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%8 = alloca [4 x [4 x float]], align 16
	%9 = alloca [4 x [4 x float]], align 16
	store %renderer-24.Camera_t* zeroinitializer, %renderer-24.Camera_t** %0
		store %renderer-24.Camera_t* %camera, %renderer-24.Camera_t** %0
	; view
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %1
		; SelectorExpr
	; SelectorExpr
	%10 = call [4 x [4 x float]] @math-8.mat4_identity()
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %2
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %2
	; SelectorExpr
	%11 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %0, align 8
	%12 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %11, i64 0
	%13 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %12, i64 0, i32 2
	%14 = load float, float* %13, align 4
	%15 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 0
	store float %14, float* %15
	; SelectorExpr
	%16 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %0, align 8
	%17 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %16, i64 0
	%18 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %17, i64 0, i32 2
	%19 = load float, float* %18, align 4
	%20 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, i64 0, i32 1, i32 1
	store float %19, float* %20
	%21 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %2, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %3
	store [4 x [4 x float]] %10, [4 x [4 x float]]* %3
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %4
	store {[0 x <8 x i8>], [3 x float]} %21, {[0 x <8 x i8>], [3 x float]}* %4
	%22 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %3, {[0 x <8 x i8>], [3 x float]}* %4)
	store [4 x [4 x float]] %22, [4 x [4 x float]]* %1
	; tr
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %5
		; SelectorExpr
	; SelectorExpr
	%23 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %0, align 8
	%24 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %23, i64 0
	%25 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %24, i64 0, i32 0
	%26 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %25, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %6
	%27 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %25, i64 0, i32 1, i32 0
	%28 = load float, float* %27, align 4
	%29 = fsub float 0x0000000000000000, %28
	%30 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 0
	store float %29, float* %30
	%31 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %25, i64 0, i32 1, i32 1
	%32 = load float, float* %31, align 4
	%33 = fsub float 0x0000000000000000, %32
	%34 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 1
	store float %33, float* %34
	%35 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %25, i64 0, i32 1, i32 2
	%36 = load float, float* %35, align 4
	%37 = fsub float 0x0000000000000000, %36
	%38 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, i64 0, i32 1, i32 2
	store float %37, float* %38
	; vector.arith.end
	%39 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %6, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %7
	store {[0 x <8 x i8>], [3 x float]} %39, {[0 x <8 x i8>], [3 x float]}* %7
	%40 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %7)
	store [4 x [4 x float]] %40, [4 x [4 x float]]* %5
	; ReturnStmt
	; SelectorExpr
	%41 = load [4 x [4 x float]], [4 x [4 x float]]* %1, align 4
	%42 = load [4 x [4 x float]], [4 x [4 x float]]* %5, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %8
	store [4 x [4 x float]] %41, [4 x [4 x float]]* %8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %9
	store [4 x [4 x float]] %42, [4 x [4 x float]]* %9
	%43 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %8, [4 x [4 x float]]* %9)
	ret [4 x [4 x float]] %43
}

define void @renderer-24.RenderQueue(%engine-20.Context_t* %ctx, %renderer-24.Camera_t* %camera, %render_queue-23.Queue* %queue) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %renderer-24.Camera_t*, align 8
	%2 = alloca %render_queue-23.Queue*, align 8
	%3 = alloca [4 x [4 x float]], align 4
	%4 = alloca [4 x [4 x float]], align 4
	%5 = alloca %renderer-24.Command, align 8
	%6 = alloca %renderer-24.Command.Bitmap, align 8
	%7 = alloca float, align 4
	%8 = alloca float, align 4
	%9 = alloca %gl-10.Program, align 16
	%10 = alloca {i32, i1}, align 4
	%11 = alloca %__Map_Header, align 8
	%12 = alloca %__Map_Key, align 8
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Key, align 16
	%15 = alloca [4 x [4 x float]], align 16
	%16 = alloca {i32, i1}, align 4
	%17 = alloca %__Map_Header, align 8
	%18 = alloca %__Map_Key, align 8
	%19 = alloca %__Map_Header, align 16
	%20 = alloca %__Map_Key, align 16
	%21 = alloca [4 x [4 x float]], align 16
	%22 = alloca [4 x [4 x float]], align 4
	%23 = alloca {[0 x <8 x i8>], [3 x float]}, align 8
	%24 = alloca [4 x [4 x float]], align 16
	%25 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%26 = alloca [4 x [4 x float]], align 4
	%27 = alloca [4 x [4 x float]], align 16
	%28 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%29 = alloca [4 x [4 x float]], align 4
	%30 = alloca [4 x [4 x float]], align 16
	%31 = alloca [4 x [4 x float]], align 16
	%32 = alloca [4 x [4 x float]], align 4
	%33 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%34 = alloca [4 x [4 x float]], align 4
	%35 = alloca [4 x [4 x float]], align 16
	%36 = alloca [4 x [4 x float]], align 16
	%37 = alloca [4 x [4 x float]], align 4
	%38 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%39 = alloca [4 x [4 x float]], align 16
	%40 = alloca [4 x [4 x float]], align 16
	%41 = alloca [4 x [4 x float]], align 4
	%42 = alloca {[0 x <8 x i8>], [3 x float]}, align 16
	%43 = alloca [4 x [4 x float]], align 16
	%44 = alloca [4 x [4 x float]], align 16
	%45 = alloca {i32, i1}, align 4
	%46 = alloca %__Map_Header, align 8
	%47 = alloca %__Map_Key, align 8
	%48 = alloca %__Map_Header, align 16
	%49 = alloca %__Map_Key, align 16
	%50 = alloca [4 x [4 x float]], align 16
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	store %renderer-24.Camera_t* zeroinitializer, %renderer-24.Camera_t** %1
		store %renderer-24.Camera_t* %camera, %renderer-24.Camera_t** %1
	store %render_queue-23.Queue* zeroinitializer, %render_queue-23.Queue** %2
		store %render_queue-23.Queue* %queue, %render_queue-23.Queue** %2
	; SelectorExpr
	call void @gl-10.Enable(i32 2929)
	; SelectorExpr
	call void @gl-10.Enable(i32 3042)
	; SelectorExpr
	call void @gl-10.DepthFunc(i32 515)
	; SelectorExpr
	call void @gl-10.BlendFunc(i32 770, i32 771)
	; view
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %3
		%51 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%52 = call [4 x [4 x float]] @renderer-24.CreateViewMatrixFromCamera(%renderer-24.Camera_t* %51)
	store [4 x [4 x float]] %52, [4 x [4 x float]]* %3
	; proj
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %4
		; SelectorExpr
	%53 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%54 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %53, i64 0
	%55 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %54, i64 0, i32 8
	%56 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %55, align 8
	; SelectorExpr
	%57 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%58 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %57, i64 0
	%59 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %58, i64 0, i32 7
	%60 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %59, align 8
	; SelectorExpr
	%61 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%62 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %61, i64 0
	%63 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %62, i64 0, i32 4
	%64 = load float, float* %63, align 4
	; SelectorExpr
	%65 = load %renderer-24.Camera_t*, %renderer-24.Camera_t** %1, align 8
	%66 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %65, i64 0
	%67 = getelementptr inbounds %renderer-24.Camera_t, %renderer-24.Camera_t* %66, i64 0, i32 3
	%68 = load float, float* %67, align 4
	%69 = bitcast {[0 x <8 x i8>], [2 x float]}* %55 to i64*
	%70 = load i64, i64* %69, align 8
	%71 = bitcast {[0 x <8 x i8>], [2 x float]}* %59 to i64*
	%72 = load i64, i64* %71, align 8
	%73 = call [4 x [4 x float]] @renderer-24.CalculateOrtho(i64 %70, i64 %72, float %64, float %68)
	store [4 x [4 x float]] %73, [4 x [4 x float]]* %4
	; ForStmt
	br label %for.loop-1

for.loop-1:
	; SelectorExpr
	%74 = load %render_queue-23.Queue*, %render_queue-23.Queue** %2, align 8
	%75 = call i1 @render_queue-23.IsEmpty(%render_queue-23.Queue* %74)
	br i1 %75, label %for.done-12, label %for.body-2

for.body-2:
	; rcmd
	store %renderer-24.Command zeroinitializer, %renderer-24.Command* %5
		; SelectorExpr
	%76 = load %render_queue-23.Queue*, %render_queue-23.Queue** %2, align 8
	%77 = call {%renderer-24.Command, i1} @render_queue-23.Dequeue(%render_queue-23.Queue* %76)
	%78 = extractvalue {%renderer-24.Command, i1} %77, 0
	%79 = extractvalue {%renderer-24.Command, i1} %77, 1
	store %renderer-24.Command %78, %renderer-24.Command* %5
	; TypeMatchStmt
	%80 = load %renderer-24.Command, %renderer-24.Command* %5, align 8
	; get union's tag
	%81 = getelementptr inbounds %renderer-24.Command, %renderer-24.Command* %5, i64 0, i32 5 ; UnionTagPtr
	%82 = load i64, i64* %81, align 8
	%83 = bitcast %renderer-24.Command* %5 to %..rawptr
	%84 = icmp eq i64 %82, 1
	br i1 %84, label %typematch.body-4, label %typematch.next-3

typematch.next-3:
	br label %typematch.done-11

typematch.body-4:
	%85 = bitcast %..rawptr %83 to %renderer-24.Command.Bitmap*
	%86 = load %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %85, align 8
	store %renderer-24.Command.Bitmap zeroinitializer, %renderer-24.Command.Bitmap* %6
	store %renderer-24.Command.Bitmap %86, %renderer-24.Command.Bitmap* %6
	; height
	store float zeroinitializer, float* %7
		; SelectorExpr
	; SelectorExpr
	%87 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 3
	%88 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %87, align 8
	%89 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %88, i64 0
	%90 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %89, i64 0, i32 4
	%91 = load i32, i32* %90, align 4
	%92 = sitofp i32 %91 to float
	%93 = fdiv float %92, 0x4050000000000000
	store float %93, float* %7
	; width
	store float zeroinitializer, float* %8
		; SelectorExpr
	; SelectorExpr
	%94 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 3
	%95 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %94, align 8
	%96 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %95, i64 0
	%97 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %96, i64 0, i32 3
	%98 = load i32, i32* %97, align 4
	%99 = sitofp i32 %98 to float
	%100 = fdiv float %99, 0x4050000000000000
	store float %100, float* %8
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%101 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%102 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %101, i64 0
	%103 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %102, i64 0, i32 6
	%104 = load %renderer-24.State_t*, %renderer-24.State_t** %103, align 8
	%105 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %104, i64 0
	%106 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %105, i64 0, i32 0
	%107 = load %gl-10.Program, %gl-10.Program* %106, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %9
	store %gl-10.Program %107, %gl-10.Program* %9
	call void @gl-10.UseProgram(%gl-10.Program* %9)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%108 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%109 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %108, i64 0
	%110 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %109, i64 0, i32 6
	%111 = load %renderer-24.State_t*, %renderer-24.State_t** %110, align 8
	%112 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %111, i64 0
	%113 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %112, i64 0, i32 2
	%114 = load i32, i32* %113, align 4
	call void @gl-10.BindVertexArray(i32 %114)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%115 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%116 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %115, i64 0
	%117 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %116, i64 0, i32 6
	%118 = load %renderer-24.State_t*, %renderer-24.State_t** %117, align 8
	%119 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %118, i64 0
	%120 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %119, i64 0, i32 0
	%121 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %120, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %10
	store %__Map_Header zeroinitializer, %__Map_Header* %11
	%122 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 0
	%123 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %121 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %123, %raw-6.Dynamic_Map** %122
	%124 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 1
	store i1 true, i1* %124
	%125 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 2
	store i64 40, i64* %125
	%126 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 3
	store i64 8, i64* %126
	%127 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 4
	store i64 32, i64* %127
	%128 = getelementptr inbounds %__Map_Header, %__Map_Header* %11, i64 0, i32 5
	store i64 4, i64* %128
	%129 = load %__Map_Header, %__Map_Header* %11, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %12
	%130 = getelementptr inbounds %__Map_Key, %__Map_Key* %12, i64 0, i32 0
	store i64 9176635129918533432, i64* %130
	%131 = getelementptr inbounds %__Map_Key, %__Map_Key* %12, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$49e, i64 0, i32 0), i64 4}, %..string* %131
	%132 = load %__Map_Key, %__Map_Key* %12, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %129, %__Map_Header* %13
	store %__Map_Key zeroinitializer, %__Map_Key* %14
	store %__Map_Key %132, %__Map_Key* %14
	%133 = call %..rawptr @__dynamic_map_get(%__Map_Header* %13, %__Map_Key* %14)
	%134 = icmp ne %..rawptr %133, null
	%135 = getelementptr inbounds {i32, i1}, {i32, i1}* %10, i64 0, i32 1
	store i1 %134, i1* %135
	br i1 %134, label %map.get.then-5, label %map.get.done-6

map.get.then-5:
	%136 = getelementptr inbounds {i32, i1}, {i32, i1}* %10, i64 0, i32 0
	%137 = bitcast %..rawptr %133 to i32*
	%138 = load i32, i32* %137, align 4
	store i32 %138, i32* %136
	br label %map.get.done-6

map.get.done-6:
	%139 = getelementptr inbounds {i32, i1}, {i32, i1}* %10, i64 0, i32 0
	%140 = load i32, i32* %139, align 4
	%141 = load [4 x [4 x float]], [4 x [4 x float]]* %3, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %15
	store [4 x [4 x float]] %141, [4 x [4 x float]]* %15
	call void @gl-10.UniformMatrix4fv(i32 %140, [4 x [4 x float]]* %15, i1 false)
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%142 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%143 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %142, i64 0
	%144 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %143, i64 0, i32 6
	%145 = load %renderer-24.State_t*, %renderer-24.State_t** %144, align 8
	%146 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %145, i64 0
	%147 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %146, i64 0, i32 0
	%148 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %147, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %16
	store %__Map_Header zeroinitializer, %__Map_Header* %17
	%149 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 0
	%150 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %148 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %150, %raw-6.Dynamic_Map** %149
	%151 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 1
	store i1 true, i1* %151
	%152 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 2
	store i64 40, i64* %152
	%153 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 3
	store i64 8, i64* %153
	%154 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 4
	store i64 32, i64* %154
	%155 = getelementptr inbounds %__Map_Header, %__Map_Header* %17, i64 0, i32 5
	store i64 4, i64* %155
	%156 = load %__Map_Header, %__Map_Header* %17, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %18
	%157 = getelementptr inbounds %__Map_Key, %__Map_Key* %18, i64 0, i32 0
	store i64 -5764445782238813962, i64* %157
	%158 = getelementptr inbounds %__Map_Key, %__Map_Key* %18, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$49f, i64 0, i32 0), i64 4}, %..string* %158
	%159 = load %__Map_Key, %__Map_Key* %18, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	store %__Map_Header %156, %__Map_Header* %19
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	store %__Map_Key %159, %__Map_Key* %20
	%160 = call %..rawptr @__dynamic_map_get(%__Map_Header* %19, %__Map_Key* %20)
	%161 = icmp ne %..rawptr %160, null
	%162 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 1
	store i1 %161, i1* %162
	br i1 %161, label %map.get.then-7, label %map.get.done-8

map.get.then-7:
	%163 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 0
	%164 = bitcast %..rawptr %160 to i32*
	%165 = load i32, i32* %164, align 4
	store i32 %165, i32* %163
	br label %map.get.done-8

map.get.done-8:
	%166 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 0
	%167 = load i32, i32* %166, align 4
	%168 = load [4 x [4 x float]], [4 x [4 x float]]* %4, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %21
	store [4 x [4 x float]] %168, [4 x [4 x float]]* %21
	call void @gl-10.UniformMatrix4fv(i32 %167, [4 x [4 x float]]* %21, i1 false)
	; textureScale
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %22
		; SelectorExpr
	; SelectorExpr
	%169 = call [4 x [4 x float]] @math-8.mat4_identity()
	; CompoundLit
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %23
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float zeroinitializer, float zeroinitializer, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %23
	%170 = load float, float* %8, align 4
	%171 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %23, i64 0, i32 1, i32 0
	store float %170, float* %171
	%172 = load float, float* %7, align 4
	%173 = getelementptr inbounds {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %23, i64 0, i32 1, i32 1
	store float %172, float* %173
	%174 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %23, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %24
	store [4 x [4 x float]] %169, [4 x [4 x float]]* %24
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %25
	store {[0 x <8 x i8>], [3 x float]} %174, {[0 x <8 x i8>], [3 x float]}* %25
	%175 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %24, {[0 x <8 x i8>], [3 x float]}* %25)
	store [4 x [4 x float]] %175, [4 x [4 x float]]* %22
	; cmdScale
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %26
		; SelectorExpr
	; SelectorExpr
	%176 = call [4 x [4 x float]] @math-8.mat4_identity()
	; SelectorExpr
	%177 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 2
	%178 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %177, align 8
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %27
	store [4 x [4 x float]] %176, [4 x [4 x float]]* %27
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %28
	store {[0 x <8 x i8>], [3 x float]} %178, {[0 x <8 x i8>], [3 x float]}* %28
	%179 = call [4 x [4 x float]] @math-8.scale-343([4 x [4 x float]]* %27, {[0 x <8 x i8>], [3 x float]}* %28)
	store [4 x [4 x float]] %179, [4 x [4 x float]]* %26
	; matScale
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %29
		; SelectorExpr
	%180 = load [4 x [4 x float]], [4 x [4 x float]]* %22, align 4
	%181 = load [4 x [4 x float]], [4 x [4 x float]]* %26, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %30
	store [4 x [4 x float]] %180, [4 x [4 x float]]* %30
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %31
	store [4 x [4 x float]] %181, [4 x [4 x float]]* %31
	%182 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %30, [4 x [4 x float]]* %31)
	store [4 x [4 x float]] %182, [4 x [4 x float]]* %29
	; rotation
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %32
		; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%183 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 1
	%184 = load float, float* %183, align 4
	%185 = call float @math-8.to_radians(float %184)
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %33
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [3 x float]}* %33
	%186 = call [4 x [4 x float]] @math-8.mat4_rotate({[0 x <8 x i8>], [3 x float]}* %33, float %185)
	store [4 x [4 x float]] %186, [4 x [4 x float]]* %32
	; model
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %34
		; SelectorExpr
	%187 = load [4 x [4 x float]], [4 x [4 x float]]* %29, align 4
	%188 = load [4 x [4 x float]], [4 x [4 x float]]* %32, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %35
	store [4 x [4 x float]] %187, [4 x [4 x float]]* %35
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %36
	store [4 x [4 x float]] %188, [4 x [4 x float]]* %36
	%189 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %35, [4 x [4 x float]]* %36)
	store [4 x [4 x float]] %189, [4 x [4 x float]]* %34
	; offset
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %37
		; SelectorExpr
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %38
	store {[0 x <8 x i8>], [3 x float]} {[0 x <8 x i8>] zeroinitializer, [3 x float][float 0xbfe0000000000000, float 0xbfe0000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [3 x float]}* %38
	%190 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %38)
	store [4 x [4 x float]] %190, [4 x [4 x float]]* %37
	; AssignStmt
	; SelectorExpr
	%191 = load [4 x [4 x float]], [4 x [4 x float]]* %34, align 4
	%192 = load [4 x [4 x float]], [4 x [4 x float]]* %37, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %39
	store [4 x [4 x float]] %191, [4 x [4 x float]]* %39
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %40
	store [4 x [4 x float]] %192, [4 x [4 x float]]* %40
	%193 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %39, [4 x [4 x float]]* %40)
	store [4 x [4 x float]] %193, [4 x [4 x float]]* %34
	; translation
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %41
		; SelectorExpr
	; SelectorExpr
	%194 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 0
	%195 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %194, align 8
	store {[0 x <8 x i8>], [3 x float]} zeroinitializer, {[0 x <8 x i8>], [3 x float]}* %42
	store {[0 x <8 x i8>], [3 x float]} %195, {[0 x <8 x i8>], [3 x float]}* %42
	%196 = call [4 x [4 x float]] @math-8.mat4_translate({[0 x <8 x i8>], [3 x float]}* %42)
	store [4 x [4 x float]] %196, [4 x [4 x float]]* %41
	; AssignStmt
	; SelectorExpr
	%197 = load [4 x [4 x float]], [4 x [4 x float]]* %41, align 4
	%198 = load [4 x [4 x float]], [4 x [4 x float]]* %34, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %43
	store [4 x [4 x float]] %197, [4 x [4 x float]]* %43
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %44
	store [4 x [4 x float]] %198, [4 x [4 x float]]* %44
	%199 = call [4 x [4 x float]] @math-8.mul-338([4 x [4 x float]]* %43, [4 x [4 x float]]* %44)
	store [4 x [4 x float]] %199, [4 x [4 x float]]* %34
	; SelectorExpr
	; IndexExpr
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%200 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%201 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %200, i64 0
	%202 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %201, i64 0, i32 6
	%203 = load %renderer-24.State_t*, %renderer-24.State_t** %202, align 8
	%204 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %203, i64 0
	%205 = getelementptr inbounds %renderer-24.State_t, %renderer-24.State_t* %204, i64 0, i32 0
	%206 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %205, i64 0, i32 0
	store {i32, i1} zeroinitializer, {i32, i1}* %45
	store %__Map_Header zeroinitializer, %__Map_Header* %46
	%207 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 0
	%208 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i32}*, i64, i64,%Allocator}}* %206 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %208, %raw-6.Dynamic_Map** %207
	%209 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 1
	store i1 true, i1* %209
	%210 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 2
	store i64 40, i64* %210
	%211 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 3
	store i64 8, i64* %211
	%212 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 4
	store i64 32, i64* %212
	%213 = getelementptr inbounds %__Map_Header, %__Map_Header* %46, i64 0, i32 5
	store i64 4, i64* %213
	%214 = load %__Map_Header, %__Map_Header* %46, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %47
	%215 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 0
	store i64 6747846868581204634, i64* %215
	%216 = getelementptr inbounds %__Map_Key, %__Map_Key* %47, i64 0, i32 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4a0, i64 0, i32 0), i64 5}, %..string* %216
	%217 = load %__Map_Key, %__Map_Key* %47, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %48
	store %__Map_Header %214, %__Map_Header* %48
	store %__Map_Key zeroinitializer, %__Map_Key* %49
	store %__Map_Key %217, %__Map_Key* %49
	%218 = call %..rawptr @__dynamic_map_get(%__Map_Header* %48, %__Map_Key* %49)
	%219 = icmp ne %..rawptr %218, null
	%220 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 1
	store i1 %219, i1* %220
	br i1 %219, label %map.get.then-9, label %map.get.done-10

map.get.then-9:
	%221 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%222 = bitcast %..rawptr %218 to i32*
	%223 = load i32, i32* %222, align 4
	store i32 %223, i32* %221
	br label %map.get.done-10

map.get.done-10:
	%224 = getelementptr inbounds {i32, i1}, {i32, i1}* %45, i64 0, i32 0
	%225 = load i32, i32* %224, align 4
	%226 = load [4 x [4 x float]], [4 x [4 x float]]* %34, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %50
	store [4 x [4 x float]] %226, [4 x [4 x float]]* %50
	call void @gl-10.UniformMatrix4fv(i32 %225, [4 x [4 x float]]* %50, i1 false)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%227 = getelementptr inbounds %renderer-24.Command.Bitmap, %renderer-24.Command.Bitmap* %6, i64 0, i32 3
	%228 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %227, align 8
	%229 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %228, i64 0
	%230 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %229, i64 0, i32 2
	%231 = load i32, i32* %230, align 4
	call void @gl-10.BindTexture(i32 3553, i32 %231)
	; SelectorExpr
	call void @gl-10.DrawElements(i32 4, i32 6, i32 5125, %..rawptr zeroinitializer)
	br label %typematch.done-11

typematch.done-11:
	br label %for.loop-1

for.done-12:
	ret void
}

define %jwgl-26.Attrib @jwgl-26.DRAW_TO_WINDOW_ARB(i1 %value) {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %jwgl-26.Attrib, align 4
	store i1 zeroinitializer, i1* %0
		store i1 %value, i1* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8193, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i1, i1* %0, align 1
	%5 = zext i1 %4 to i32
	store i32 %5, i32* %3
	; ReturnStmt
	%6 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %6
}

define %jwgl-26.Attrib @jwgl-26.DOUBLE_BUFFER_ARB(i1 %value) {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %jwgl-26.Attrib, align 4
	store i1 zeroinitializer, i1* %0
		store i1 %value, i1* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8209, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i1, i1* %0, align 1
	%5 = zext i1 %4 to i32
	store i32 %5, i32* %3
	; ReturnStmt
	%6 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %6
}

define %jwgl-26.Attrib @jwgl-26.SUPPORT_OPENGL_ARB(i1 %value) {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %jwgl-26.Attrib, align 4
	store i1 zeroinitializer, i1* %0
		store i1 %value, i1* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8208, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i1, i1* %0, align 1
	%5 = zext i1 %4 to i32
	store i32 %5, i32* %3
	; ReturnStmt
	%6 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %6
}

define %jwgl-26.Attrib @jwgl-26.ACCELERATION_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8195, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.PIXEL_TYPE_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8211, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.COLOR_BITS_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8212, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.ALPHA_BITS_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8219, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.DEPTH_BITS_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8226, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.FRAMEBUFFER_SRGB_CAPABLE_ARB(i1 %value) {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %jwgl-26.Attrib, align 4
	store i1 zeroinitializer, i1* %0
		store i1 %value, i1* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8361, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i1, i1* %0, align 1
	%5 = zext i1 %4 to i32
	store i32 %5, i32* %3
	; ReturnStmt
	%6 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %6
}

define %jwgl-26.Attrib @jwgl-26.CONTEXT_MAJOR_VERSION_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8337, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.CONTEXT_MINOR_VERSION_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8338, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.CONTEXT_FLAGS_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 8340, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define %jwgl-26.Attrib @jwgl-26.CONTEXT_PROFILE_MASK_ARB(i32 %value) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %jwgl-26.Attrib, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %value, i32* %0
	; res
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %1
		; AssignStmt
	; SelectorExpr
	%2 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 0
	store i32 37158, i32* %2
	; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %1, i64 0, i32 1
	%4 = load i32, i32* %0, align 4
	store i32 %4, i32* %3
	; ReturnStmt
	%5 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %1, align 4
	ret %jwgl-26.Attrib %5
}

define {i32*, i64, i64,%Allocator} @jwgl-26.PrepareAttribArray({%jwgl-26.Attrib*, i64, i64,%Allocator} %attribList) {
decls-0:
	%0 = alloca {%jwgl-26.Attrib*, i64, i64,%Allocator}, align 8
	%1 = alloca {i32*, i64, i64,%Allocator}, align 8
	%2 = alloca %jwgl-26.Attrib, align 4
	%3 = alloca i64, align 8
	%4 = alloca {i32*, i64, i64}, align 8
	%5 = alloca [1 x i32], align 4
	%6 = alloca {i32*, i64, i64}, align 8
	%7 = alloca [1 x i32], align 4
	%8 = alloca {i32*, i64, i64}, align 8
	%9 = alloca [1 x i32], align 4
	store {%jwgl-26.Attrib*, i64, i64,%Allocator} zeroinitializer, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %0
		store {%jwgl-26.Attrib*, i64, i64,%Allocator} %attribList, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %0
	; array
	store {i32*, i64, i64,%Allocator} zeroinitializer, {i32*, i64, i64,%Allocator}* %1
		; RangeStmt
	; attr
	store %jwgl-26.Attrib zeroinitializer, %jwgl-26.Attrib* %2
		%10 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %0, i64 0, i32 1
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-1

for.index.loop-1:
	%11 = load i64, i64* %3, align 8
	%12 = add i64 %11, 1
	store i64 %12, i64* %3
	%13 = load i64, i64* %10, align 8
	%14 = icmp slt i64 %12, %13
	br i1 %14, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%15 = load i64, i64* %3, align 8
	%16 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %0, i64 0, i32 0
	%17 = load %jwgl-26.Attrib*, %jwgl-26.Attrib** %16, align 8
	%18 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %17, i64 %15
	%19 = load %jwgl-26.Attrib, %jwgl-26.Attrib* %18, align 4
	store %jwgl-26.Attrib %19, %jwgl-26.Attrib* %2
	; append
	%20 = bitcast {i32*, i64, i64,%Allocator}* %1 to %..rawptr
	%21 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %1, align 8
	; SelectorExpr
	%22 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %2, i64 0, i32 0
	%23 = load i32, i32* %22, align 4
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %4
	store [1 x i32] zeroinitializer, [1 x i32]* %5
	%24 = getelementptr inbounds [1 x i32], [1 x i32]* %5, i64 0, i32 0
	store i32 %23, i32* %24
	%25 = getelementptr inbounds [1 x i32], [1 x i32]* %5, i64 0, i32 0
	%26 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %4, i64 0, i32 0
	store i32* %25, i32** %26
	%27 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %27
	%28 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %28
	%29 = load {i32*, i64, i64}, {i32*, i64, i64}* %4, align 8
	%30 = extractvalue {i32*, i64, i64} %29, 0
	%31 = extractvalue {i32*, i64, i64} %29, 1
	%32 = bitcast i32* %30 to %..rawptr
	%33 = call i64 @__dynamic_array_append(%..rawptr %20, i64 4, i64 4, %..rawptr %32, i64 %31)
	; append
	%34 = bitcast {i32*, i64, i64,%Allocator}* %1 to %..rawptr
	%35 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %1, align 8
	; SelectorExpr
	%36 = getelementptr inbounds %jwgl-26.Attrib, %jwgl-26.Attrib* %2, i64 0, i32 1
	%37 = load i32, i32* %36, align 4
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %6
	store [1 x i32] zeroinitializer, [1 x i32]* %7
	%38 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i32 0
	store i32 %37, i32* %38
	%39 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i32 0
	%40 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 0
	store i32* %39, i32** %40
	%41 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %41
	%42 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %42
	%43 = load {i32*, i64, i64}, {i32*, i64, i64}* %6, align 8
	%44 = extractvalue {i32*, i64, i64} %43, 0
	%45 = extractvalue {i32*, i64, i64} %43, 1
	%46 = bitcast i32* %44 to %..rawptr
	%47 = call i64 @__dynamic_array_append(%..rawptr %34, i64 4, i64 4, %..rawptr %46, i64 %45)
	br label %for.index.loop-1

for.index.done-3:
	; append
	%48 = bitcast {i32*, i64, i64,%Allocator}* %1 to %..rawptr
	%49 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %1, align 8
	; variadic call argument generation
	store {i32*, i64, i64} zeroinitializer, {i32*, i64, i64}* %8
	store [1 x i32] zeroinitializer, [1 x i32]* %9
	%50 = getelementptr inbounds [1 x i32], [1 x i32]* %9, i64 0, i32 0
	store i32 0, i32* %50
	%51 = getelementptr inbounds [1 x i32], [1 x i32]* %9, i64 0, i32 0
	%52 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %8, i64 0, i32 0
	store i32* %51, i32** %52
	%53 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %8, i64 0, i32 1
	store i64 1, i64* %53
	%54 = getelementptr inbounds {i32*, i64, i64}, {i32*, i64, i64}* %8, i64 0, i32 2
	store i64 1, i64* %54
	%55 = load {i32*, i64, i64}, {i32*, i64, i64}* %8, align 8
	%56 = extractvalue {i32*, i64, i64} %55, 0
	%57 = extractvalue {i32*, i64, i64} %55, 1
	%58 = bitcast i32* %56 to %..rawptr
	%59 = call i64 @__dynamic_array_append(%..rawptr %48, i64 4, i64 4, %..rawptr %58, i64 %57)
	; ReturnStmt
	%60 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %1, align 8
	ret {i32*, i64, i64,%Allocator} %60
}

define void @jwgl-26.TryGetExtension(%jwgl-26.TryGetExtensionList* %list, %..rawptr %p, %..string %name) {
decls-0:
	%0 = alloca %jwgl-26.TryGetExtensionList*, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..string, align 8
	%3 = alloca %__Map_Header, align 8
	%4 = alloca %__Map_Key, align 8
	%5 = alloca %..rawptr, align 8
	%6 = alloca %__Map_Header, align 16
	%7 = alloca %__Map_Key, align 16
	store %jwgl-26.TryGetExtensionList* zeroinitializer, %jwgl-26.TryGetExtensionList** %0
		store %jwgl-26.TryGetExtensionList* %list, %jwgl-26.TryGetExtensionList** %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %p, %..rawptr* %1
	store %..string zeroinitializer, %..string* %2
		store %..string %name, %..string* %2
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%8 = load %jwgl-26.TryGetExtensionList*, %jwgl-26.TryGetExtensionList** %0, align 8
	%9 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %8, i64 0
	%10 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, i64 0, i32 0
	%11 = load %..string, %..string* %2, align 8
	%12 = load %..rawptr, %..rawptr* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 0
	%14 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}* %10 to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %14, %raw-6.Dynamic_Map** %13
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 1
	store i1 true, i1* %15
	%16 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 2
	store i64 40, i64* %16
	%17 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 3
	store i64 8, i64* %17
	%18 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 4
	store i64 32, i64* %18
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %3, i64 0, i32 5
	store i64 8, i64* %19
	%20 = load %__Map_Header, %__Map_Header* %3, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %4
	%21 = call i64 @__default_hash_string(%..string %11)
	%22 = getelementptr inbounds %__Map_Key, %__Map_Key* %4, i64 0, i32 0
	store i64 %21, i64* %22
	%23 = getelementptr inbounds %__Map_Key, %__Map_Key* %4, i64 0, i32 1
	store %..string %11, %..string* %23
	%24 = load %__Map_Key, %__Map_Key* %4, align 8
	store %..rawptr zeroinitializer, %..rawptr* %5
	store %..rawptr %12, %..rawptr* %5
	%25 = bitcast %..rawptr* %5 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	store %__Map_Header %20, %__Map_Header* %6
	store %__Map_Key zeroinitializer, %__Map_Key* %7
	store %__Map_Key %24, %__Map_Key* %7
	call void @__dynamic_map_set(%__Map_Header* %6, %__Map_Key* %7, %..rawptr %25)
	ret void
}

define void @jwgl-26.LoadExtensions(%..rawptr %GLContext, %..rawptr %WindowDC, %jwgl-26.TryGetExtensionList* %list) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..rawptr, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %..string, align 8
	%5 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %GLContext, %..rawptr* %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %WindowDC, %..rawptr* %1
	%6 = load %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %list, align 8
	; IfStmt
	; SelectorExpr
	%7 = load %..rawptr, %..rawptr* %1, align 8
	%8 = load %..rawptr, %..rawptr* %0, align 8
	%9 = call ccc i32 @wglMakeCurrent(%..rawptr %7, %..rawptr %8)
	%10 = icmp eq i32 %9, 1
	br i1 %10, label %if.then-1, label %if.done-5

if.then-1:
	; DeferStmt
	; RangeStmt
	; val
	store %..rawptr zeroinitializer, %..rawptr* %2
		; key
	store %..string zeroinitializer, %..string* %3
		; SelectorExpr
	%11 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %list, i64 0, i32 0
	%12 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}* %11, i64 0, i32 1
	%13 = getelementptr inbounds {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}* %12, i64 0, i32 1
	store %..string zeroinitializer, %..string* %4
	store i64 zeroinitializer, i64* %5
	store i64 -1, i64* %5
	br label %for.index.loop-2

for.index.loop-2:
	%14 = load i64, i64* %5, align 8
	%15 = add i64 %14, 1
	store i64 %15, i64* %5
	%16 = load i64, i64* %13, align 8
	%17 = icmp slt i64 %15, %16
	br i1 %17, label %for.index.body-3, label %for.index.done-4

for.index.body-3:
	%18 = load i64, i64* %5, align 8
	%19 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}}* %11, i64 0, i32 1
	%20 = getelementptr inbounds {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %..rawptr}*, i64, i64,%Allocator}* %19, i64 0, i32 0
	%21 = load {%__Map_Key, i64, %..rawptr}*, {%__Map_Key, i64, %..rawptr}** %20, align 8
	%22 = getelementptr inbounds {%__Map_Key, i64, %..rawptr}, {%__Map_Key, i64, %..rawptr}* %21, i64 %18
	%23 = getelementptr inbounds {%__Map_Key, i64, %..rawptr}, {%__Map_Key, i64, %..rawptr}* %22, i64 0, i32 2
	%24 = load %..rawptr, %..rawptr* %23, align 8
	%25 = getelementptr inbounds {%__Map_Key, i64, %..rawptr}, {%__Map_Key, i64, %..rawptr}* %22, i64 0, i32 0
	%26 = getelementptr inbounds %__Map_Key, %__Map_Key* %25, i64 0, i32 1
	%27 = load %..string, %..string* %26, align 8
	store %..string %27, %..string* %4
	%28 = load %..string, %..string* %4, align 8
	store %..rawptr %24, %..rawptr* %2
	store %..string %28, %..string* %3
	%29 = load %..rawptr, %..rawptr* %2, align 8
	%30 = load %..string, %..string* %3, align 8
	call void @jwgl-26.LoadExtensions.set_proc_address-0(%..rawptr %29, %..string %30)
	br label %for.index.loop-2

for.index.done-4:
	; defer
	; SelectorExpr
	%31 = call ccc i32 @wglMakeCurrent(%..rawptr zeroinitializer, %..rawptr zeroinitializer)
	br label %if.done-5

if.done-5:
	ret void
}

define void @jwgl-26.LoadExtensions.set_proc_address-0(%..rawptr %p, %..string %name) alwaysinline {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i8*, align 8
	%3 = alloca void ()*, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %p, %..rawptr* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %name, %..string* %1
	; txt
	store i8* zeroinitializer, i8** %2
		; SelectorExpr
	%4 = load %..string, %..string* %1, align 8
	%5 = call i8* @strings-7.new_c_string(%..string %4)
	store i8* %5, i8** %2
	; DeferStmt
	; res
	store void ()* zeroinitializer, void ()** %3
		; SelectorExpr
	%6 = load i8*, i8** %2, align 8
	%7 = call ccc void ()* @wglGetProcAddress(i8* %6)
	store void ()* %7, void ()** %3
	; assert
	%8 = load void ()*, void ()** %3, align 8
	%9 = icmp ne void ()* %8, zeroinitializer
	%10 = icmp eq i1 %9, false
	br i1 %10, label %builtin.assert.err-1, label %builtin.assert.done-2

builtin.assert.err-1:
	call void @__assert(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$4a1, i64 0, i32 0), i64 26}, i64 160, i64 20, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4a2, i64 0, i32 0), i64 10})
	br label %builtin.assert.done-2

builtin.assert.done-2:
	; AssignStmt
	%11 = load %..rawptr, %..rawptr* %0, align 8
	%12 = bitcast %..rawptr %11 to void ()**
	%13 = getelementptr inbounds void ()*, void ()** %12, i64 0
	%14 = load void ()*, void ()** %3, align 8
	store void ()* %14, void ()** %13
	; defer
	; free
	%15 = load i8*, i8** %2, align 8
	%16 = bitcast i8* %15 to %..rawptr
	call void @free_ptr(%..rawptr %16)
	ret void
}

define void @jwgl-26.GetInfo(%gl-10.OpenGLVars_t* %vars, %..rawptr %dc) {
decls-0:
	%0 = alloca %gl-10.OpenGLVars_t*, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %..string, align 8
	%3 = alloca i64, align 8
	%4 = alloca i32, align 4
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %..string, align 8
	%8 = alloca %..string, align 8
	%9 = alloca {%..string*, i64, i64}, align 8
	%10 = alloca [1 x %..string], align 8
	store %gl-10.OpenGLVars_t* zeroinitializer, %gl-10.OpenGLVars_t** %0
		store %gl-10.OpenGLVars_t* %vars, %gl-10.OpenGLVars_t** %0
	store %..rawptr zeroinitializer, %..rawptr* %1
		store %..rawptr %dc, %..rawptr* %1
	; wglExts
	store %..string zeroinitializer, %..string* %2
		; SelectorExpr
	%11 = load i8* (%..rawptr)*, i8* (%..rawptr)** @jwgl-26.GetExtensionsStringARB, align 8
	%12 = load %..rawptr, %..rawptr* %1, align 8
	%13 = call ccc i8* %11(%..rawptr %12)
	%14 = call %..string @strings-7.to_odin_string(i8* %13)
	store %..string %14, %..string* %2
	; s
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	; RangeStmt
	; r
	store i32 zeroinitializer, i32* %4
		; i
	store i64 zeroinitializer, i64* %5
		%15 = load %..string, %..string* %2, align 8
	%16 = extractvalue %..string %15, 1
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	br label %for.string.loop-1

for.string.loop-1:
	%17 = load i64, i64* %6, align 8
	%18 = icmp slt i64 %17, %16
	br i1 %18, label %for.string.body-2, label %for.string.done-5

for.string.body-2:
	%19 = extractvalue %..string %15, 0
	%20 = getelementptr inbounds i8, i8* %19, i64 %17
	%21 = sub i64 %16, %17
	store %..string zeroinitializer, %..string* %7
	%22 = getelementptr inbounds %..string, %..string* %7, i64 0, i32 0
	store i8* %20, i8** %22
	%23 = getelementptr inbounds %..string, %..string* %7, i64 0, i32 1
	store i64 %21, i64* %23
	%24 = load %..string, %..string* %7, align 8
	%25 = call {i32, i64} @__string_decode_rune(%..string %24)
	%26 = extractvalue {i32, i64} %25, 1
	%27 = add i64 %17, %26
	store i64 %27, i64* %6
	%28 = extractvalue {i32, i64} %25, 0
	store i32 %28, i32* %4
	store i64 %17, i64* %5
	; IfStmt
	%29 = load i32, i32* %4, align 4
	%30 = icmp eq i32 %29, 32
	br i1 %30, label %if.then-3, label %if.done-4

if.then-3:
	; append
	; SelectorExpr
	%31 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%32 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %31, i64 0
	%33 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %32, i64 0, i32 1
	%34 = bitcast {%..string*, i64, i64,%Allocator}* %33 to %..rawptr
	; SelectorExpr
	%35 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%36 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %35, i64 0
	%37 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %36, i64 0, i32 1
	%38 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %37, align 8
	; SliceExpr
	%39 = load i64, i64* %3, align 8
	%40 = load i64, i64* %5, align 8
	%41 = add i64 %40, 1
	%42 = load %..string, %..string* %2, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$4a3, i64 0, i32 0), i64 26}, i64 175, i64 47, i64 %39, i64 %41)
	%43 = extractvalue %..string %42, 0
	%44 = getelementptr inbounds i8, i8* %43, i64 %39
	%45 = sub i64 %41, %39
	store %..string zeroinitializer, %..string* %8
	%46 = getelementptr inbounds %..string, %..string* %8, i64 0, i32 0
	store i8* %44, i8** %46
	%47 = getelementptr inbounds %..string, %..string* %8, i64 0, i32 1
	store i64 %45, i64* %47
	%48 = load %..string, %..string* %8, align 8
	; variadic call argument generation
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %9
	store [1 x %..string] zeroinitializer, [1 x %..string]* %10
	%49 = getelementptr inbounds [1 x %..string], [1 x %..string]* %10, i64 0, i32 0
	store %..string %48, %..string* %49
	%50 = getelementptr inbounds [1 x %..string], [1 x %..string]* %10, i64 0, i32 0
	%51 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 0
	store %..string* %50, %..string** %51
	%52 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 1
	store i64 1, i64* %52
	%53 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9, i64 0, i32 2
	store i64 1, i64* %53
	%54 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %9, align 8
	%55 = extractvalue {%..string*, i64, i64} %54, 0
	%56 = extractvalue {%..string*, i64, i64} %54, 1
	%57 = bitcast %..string* %55 to %..rawptr
	%58 = call i64 @__dynamic_array_append(%..rawptr %34, i64 16, i64 8, %..rawptr %57, i64 %56)
	; AssignStmt
	; SelectorExpr
	%59 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%60 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %59, i64 0
	%61 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %60, i64 0, i32 13
	%62 = load i32, i32* %61, align 4
	%63 = add i32 %62, 1
	store i32 %63, i32* %61
	; AssignStmt
	%64 = load i64, i64* %5, align 8
	%65 = add i64 %64, 1
	store i64 %65, i64* %3
	br label %if.done-4

if.done-4:
	br label %for.string.loop-1

for.string.done-5:
	ret void
}

define i1 @debug_windows-27.GetWindowState(%..string %str) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i1, i1}, align 1
	%2 = alloca %__Map_Header, align 8
	%3 = alloca %__Map_Key, align 8
	%4 = alloca %__Map_Header, align 16
	%5 = alloca %__Map_Key, align 16
	store %..string zeroinitializer, %..string* %0
		store %..string %str, %..string* %0
	; ReturnStmt
	; IndexExpr
	%6 = load %..string, %..string* %0, align 8
	store {i1, i1} zeroinitializer, {i1, i1}* %1
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	%7 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 0
	%8 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %8, %raw-6.Dynamic_Map** %7
	%9 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 1
	store i1 true, i1* %9
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 2
	store i64 40, i64* %10
	%11 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 3
	store i64 8, i64* %11
	%12 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 4
	store i64 32, i64* %12
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 5
	store i64 1, i64* %13
	%14 = load %__Map_Header, %__Map_Header* %2, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %3
	%15 = call i64 @__default_hash_string(%..string %6)
	%16 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 0
	store i64 %15, i64* %16
	%17 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 1
	store %..string %6, %..string* %17
	%18 = load %__Map_Key, %__Map_Key* %3, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	store %__Map_Header %14, %__Map_Header* %4
	store %__Map_Key zeroinitializer, %__Map_Key* %5
	store %__Map_Key %18, %__Map_Key* %5
	%19 = call %..rawptr @__dynamic_map_get(%__Map_Header* %4, %__Map_Key* %5)
	%20 = icmp ne %..rawptr %19, null
	%21 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 1
	store i1 %20, i1* %21
	br i1 %20, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%22 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 0
	%23 = bitcast %..rawptr %19 to i1*
	%24 = load i1, i1* %23, align 1
	store i1 %24, i1* %22
	br label %map.get.done-2

map.get.done-2:
	%25 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 0
	%26 = load i1, i1* %25, align 1
	ret i1 %26
}

define void @debug_windows-27.SetWindowState(%..string %str, i1 %state) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1, align 1
	%2 = alloca %__Map_Header, align 8
	%3 = alloca %__Map_Key, align 8
	%4 = alloca i1, align 1
	%5 = alloca %__Map_Header, align 16
	%6 = alloca %__Map_Key, align 16
	store %..string zeroinitializer, %..string* %0
		store %..string %str, %..string* %0
	store i1 zeroinitializer, i1* %1
		store i1 %state, i1* %1
	; AssignStmt
	; IndexExpr
	%7 = load %..string, %..string* %0, align 8
	%8 = load i1, i1* %1, align 1
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	%9 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 0
	%10 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %10, %raw-6.Dynamic_Map** %9
	%11 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 1
	store i1 true, i1* %11
	%12 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 2
	store i64 40, i64* %12
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 3
	store i64 8, i64* %13
	%14 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 4
	store i64 32, i64* %14
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 5
	store i64 1, i64* %15
	%16 = load %__Map_Header, %__Map_Header* %2, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %3
	%17 = call i64 @__default_hash_string(%..string %7)
	%18 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 0
	store i64 %17, i64* %18
	%19 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 1
	store %..string %7, %..string* %19
	%20 = load %__Map_Key, %__Map_Key* %3, align 8
	store i1 zeroinitializer, i1* %4
	store i1 %8, i1* %4
	%21 = bitcast i1* %4 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %16, %__Map_Header* %5
	store %__Map_Key zeroinitializer, %__Map_Key* %6
	store %__Map_Key %20, %__Map_Key* %6
	call void @__dynamic_map_set(%__Map_Header* %5, %__Map_Key* %6, %..rawptr %21)
	ret void
}

define void @debug_windows-27.ToggleWindow(%..string %str) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i1, i1}, align 1
	%2 = alloca %__Map_Header, align 8
	%3 = alloca %__Map_Key, align 8
	%4 = alloca %__Map_Header, align 16
	%5 = alloca %__Map_Key, align 16
	%6 = alloca %__Map_Header, align 8
	%7 = alloca %__Map_Key, align 8
	%8 = alloca i1, align 1
	%9 = alloca %__Map_Header, align 16
	%10 = alloca %__Map_Key, align 16
	store %..string zeroinitializer, %..string* %0
		store %..string %str, %..string* %0
	; AssignStmt
	; IndexExpr
	%11 = load %..string, %..string* %0, align 8
	; IndexExpr
	%12 = load %..string, %..string* %0, align 8
	store {i1, i1} zeroinitializer, {i1, i1}* %1
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	%13 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 0
	%14 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %14, %raw-6.Dynamic_Map** %13
	%15 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 1
	store i1 true, i1* %15
	%16 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 2
	store i64 40, i64* %16
	%17 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 3
	store i64 8, i64* %17
	%18 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 4
	store i64 32, i64* %18
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %2, i64 0, i32 5
	store i64 1, i64* %19
	%20 = load %__Map_Header, %__Map_Header* %2, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %3
	%21 = call i64 @__default_hash_string(%..string %12)
	%22 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 0
	store i64 %21, i64* %22
	%23 = getelementptr inbounds %__Map_Key, %__Map_Key* %3, i64 0, i32 1
	store %..string %12, %..string* %23
	%24 = load %__Map_Key, %__Map_Key* %3, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	store %__Map_Header %20, %__Map_Header* %4
	store %__Map_Key zeroinitializer, %__Map_Key* %5
	store %__Map_Key %24, %__Map_Key* %5
	%25 = call %..rawptr @__dynamic_map_get(%__Map_Header* %4, %__Map_Key* %5)
	%26 = icmp ne %..rawptr %25, null
	%27 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 1
	store i1 %26, i1* %27
	br i1 %26, label %map.get.then-1, label %map.get.done-2

map.get.then-1:
	%28 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 0
	%29 = bitcast %..rawptr %25 to i1*
	%30 = load i1, i1* %29, align 1
	store i1 %30, i1* %28
	br label %map.get.done-2

map.get.done-2:
	%31 = getelementptr inbounds {i1, i1}, {i1, i1}* %1, i64 0, i32 0
	%32 = load i1, i1* %31, align 1
	%33 = xor i1 -1, %32
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	%34 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 0
	%35 = bitcast {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools to %raw-6.Dynamic_Map*
	store %raw-6.Dynamic_Map* %35, %raw-6.Dynamic_Map** %34
	%36 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 1
	store i1 true, i1* %36
	%37 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 2
	store i64 40, i64* %37
	%38 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 3
	store i64 8, i64* %38
	%39 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 4
	store i64 32, i64* %39
	%40 = getelementptr inbounds %__Map_Header, %__Map_Header* %6, i64 0, i32 5
	store i64 1, i64* %40
	%41 = load %__Map_Header, %__Map_Header* %6, align 8
	store %__Map_Key zeroinitializer, %__Map_Key* %7
	%42 = call i64 @__default_hash_string(%..string %11)
	%43 = getelementptr inbounds %__Map_Key, %__Map_Key* %7, i64 0, i32 0
	store i64 %42, i64* %43
	%44 = getelementptr inbounds %__Map_Key, %__Map_Key* %7, i64 0, i32 1
	store %..string %11, %..string* %44
	%45 = load %__Map_Key, %__Map_Key* %7, align 8
	store i1 zeroinitializer, i1* %8
	store i1 %33, i1* %8
	%46 = bitcast i1* %8 to %..rawptr
	store %__Map_Header zeroinitializer, %__Map_Header* %9
	store %__Map_Header %41, %__Map_Header* %9
	store %__Map_Key zeroinitializer, %__Map_Key* %10
	store %__Map_Key %45, %__Map_Key* %10
	call void @__dynamic_map_set(%__Map_Header* %9, %__Map_Key* %10, %..rawptr %46)
	ret void
}

define void @debug_windows-27.TryShowWindow(%..string %id, void (i1*)* %p) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca void (i1*)*, align 8
	%2 = alloca i1, align 1
	store %..string zeroinitializer, %..string* %0
		store %..string %id, %..string* %0
	store void (i1*)* zeroinitializer, void (i1*)** %1
		store void (i1*)* %p, void (i1*)** %1
	; IfStmt
	%3 = load %..string, %..string* %0, align 8
	%4 = call i1 @debug_windows-27.GetWindowState(%..string %3)
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; b
	store i1 zeroinitializer, i1* %2
		%5 = load %..string, %..string* %0, align 8
	%6 = call i1 @debug_windows-27.GetWindowState(%..string %5)
	store i1 %6, i1* %2
	%7 = load void (i1*)*, void (i1*)** %1, align 8
	%8 = getelementptr inbounds i1, i1* %2, i64 0
	call void %7(i1* %8)
	%9 = load %..string, %..string* %0, align 8
	%10 = load i1, i1* %2, align 1
	call void @debug_windows-27.SetWindowState(%..string %9, i1 %10)
	br label %if.done-2

if.done-2:
	ret void
}

define void @debug_windows-27.ShowStructInfo(%..string %name, i1* %show, %..any %data) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1*, align 8
	%2 = alloca %..any, align 8
	%3 = alloca %Type_Info.Struct*, align 8
	%4 = alloca {%Type_Info.Struct*, i1}, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca %Type_Info.Pointer*, align 8
	%13 = alloca {%..any*, i64, i64}, align 8
	%14 = alloca [128 x i8], align 1
	%15 = alloca %..string, align 8
	%16 = alloca {i8*, i64, i64}, align 8
	%17 = alloca %..string, align 8
	%18 = alloca %..any, align 8
	%19 = alloca %..any, align 8
	%20 = alloca {%..any*, i64, i64}, align 8
	%21 = alloca [2 x %..any], align 8
	%22 = alloca i8*, align 8
	%23 = alloca %..rawptr, align 8
	%24 = alloca %..any, align 8
	%25 = alloca %..any, align 8
	%26 = alloca %Type_Info.Boolean*, align 8
	%27 = alloca i8*, align 8
	%28 = alloca %imgui-9.Vec4, align 4
	%29 = alloca %..any, align 8
	%30 = alloca %..any, align 8
	%31 = alloca {%..any*, i64, i64}, align 8
	%32 = alloca [1 x %..any], align 8
	%33 = alloca %imgui-9.Vec4, align 16
	%34 = alloca %Type_Info*, align 8
	%35 = alloca i8*, align 8
	%36 = alloca %..any, align 8
	%37 = alloca %..any, align 8
	%38 = alloca {%..any*, i64, i64}, align 8
	%39 = alloca [1 x %..any], align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	store i1* zeroinitializer, i1** %1
		store i1* %show, i1** %1
	store %..any zeroinitializer, %..any* %2
		store %..any %data, %..any* %2
	; SelectorExpr
	%40 = load %..string, %..string* %0, align 8
	%41 = load i1*, i1** %1, align 8
	%42 = call i1 @imgui-9.Begin(%..string %40, i1* %41, i32 32)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; info
	store %Type_Info.Struct* zeroinitializer, %Type_Info.Struct** %3
		; SelectorExpr
	%43 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%44 = load %Type_Info*, %Type_Info** %43, align 8
	%45 = call %Type_Info* @type_info_base(%Type_Info* %44)
	; cast - union_cast
	store {%Type_Info.Struct*, i1} zeroinitializer, {%Type_Info.Struct*, i1}* %4
	%46 = getelementptr inbounds %Type_Info, %Type_Info* %45, i64 0, i32 4 ; UnionTagPtr
	%47 = load i64, i64* %46, align 8
	%48 = icmp eq i64 %47, 17
	br i1 %48, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%49 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %4, i64 0, i32 0
	%50 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %4, i64 0, i32 1
	%51 = bitcast %Type_Info* %45 to %Type_Info.Struct*
	store %Type_Info.Struct* %51, %Type_Info.Struct** %49
	store i1 true, i1* %50
	br label %union_cast.end-2

union_cast.end-2:
	%52 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %4, i64 0, i32 1
	%53 = load i1, i1* %52, align 1
	%54 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%55 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	call void @__type_assertion_check(i1 %53, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4a4, i64 0, i32 0), i64 35}, i64 48, i64 17, %Type_Info* %54, %Type_Info* %55)
	%56 = getelementptr inbounds {%Type_Info.Struct*, i1}, {%Type_Info.Struct*, i1}* %4, i64 0, i32 0
	%57 = load %Type_Info.Struct*, %Type_Info.Struct** %56, align 8
	store %Type_Info.Struct* %57, %Type_Info.Struct** %3
	; RangeStmt
	; n
	store %..string zeroinitializer, %..string* %5
		; i
	store i64 zeroinitializer, i64* %6
		; SelectorExpr
	%58 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%59 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %58, i64 0
	%60 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %59, i64 0, i32 2
	%61 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %60, i64 0, i32 1
	%62 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %61, align 8
	store i64 zeroinitializer, i64* %7
	%63 = extractvalue {%..string*, i64, i64} %62, 1
	store i64 %63, i64* %7
	store i64 zeroinitializer, i64* %8
	store i64 -1, i64* %8
	br label %for.index.loop-3

for.index.loop-3:
	%64 = load i64, i64* %8, align 8
	%65 = add i64 %64, 1
	store i64 %65, i64* %8
	%66 = load i64, i64* %7, align 8
	%67 = icmp slt i64 %65, %66
	br i1 %67, label %for.index.body-4, label %for.index.done-18

for.index.body-4:
	%68 = load i64, i64* %8, align 8
	%69 = extractvalue {%..string*, i64, i64} %62, 0
	%70 = getelementptr inbounds %..string, %..string* %69, i64 %68
	%71 = load %..string, %..string* %70, align 8
	store %..string %71, %..string* %5
	store i64 %68, i64* %6
	; SelectorExpr
	%72 = load %..string, %..string* %5, align 8
	store %..any zeroinitializer, %..any* %9
	%73 = bitcast %..string* %5 to %..rawptr
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%75 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %73, %..rawptr* %75
	%76 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %74, %Type_Info** %76
	%77 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%78 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %77, %..any* %78
	%79 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%80 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %79, %..any** %80
	%81 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %81
	%82 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %82
	%83 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4a5, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %83)
	; SelectorExpr
	call ccc void @igNextColumn()
	; TypeMatchStmt
	; IndexExpr
	; SelectorExpr
	%84 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%85 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %84, i64 0
	%86 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %85, i64 0, i32 2
	%87 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %86, i64 0, i32 0
	%88 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %87, align 8
	%89 = extractvalue {%Type_Info**, i64, i64} %88, 0
	%90 = extractvalue {%Type_Info**, i64, i64} %88, 1
	%91 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4a6, i64 0, i32 0), i64 35}, i64 52, i64 35, i64 %91, i64 %90)
	%92 = getelementptr inbounds %Type_Info*, %Type_Info** %89, i64 %91
	%93 = load %Type_Info*, %Type_Info** %92, align 8
	; get union's tag
	%94 = getelementptr inbounds %Type_Info, %Type_Info* %93, i64 0, i32 4 ; UnionTagPtr
	%95 = load i64, i64* %94, align 8
	%96 = bitcast %Type_Info* %93 to %..rawptr
	%97 = icmp eq i64 %95, 9
	br i1 %97, label %typematch.body-6, label %typematch.next-5

typematch.next-5:
	%98 = icmp eq i64 %95, 7
	br i1 %98, label %typematch.body-13, label %typematch.next-12

typematch.body-6:
	%99 = bitcast %..rawptr %96 to %Type_Info.Pointer*
	store %Type_Info.Pointer* zeroinitializer, %Type_Info.Pointer** %12
	store %Type_Info.Pointer* %99, %Type_Info.Pointer** %12
	; IfStmt
	; SelectorExpr
	%100 = load %Type_Info.Pointer*, %Type_Info.Pointer** %12, align 8
	%101 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %100, i64 0
	%102 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %101, i64 0, i32 2
	%103 = load %Type_Info*, %Type_Info** %102, align 8
	%104 = icmp eq %Type_Info* %103, zeroinitializer
	br i1 %104, label %if.then-7, label %if.else-8

if.then-7:
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	%105 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4a7, i64 0, i32 0), i64 6}, {%..any*, i64, i64} %105)
	br label %if.done-11

if.else-8:
	; buf
	store [128 x i8] zeroinitializer, [128 x i8]* %14
		; s
	store %..string zeroinitializer, %..string* %15
		; SelectorExpr
	; SliceExpr
	%106 = load [128 x i8], [128 x i8]* %14, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4a8, i64 0, i32 0), i64 35}, i64 58, i64 45, i64 0, i64 128, i64 128)
	%107 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i32 0
	%108 = getelementptr inbounds i8, i8* %107, i64 0
	%109 = sub i64 128, 0
	%110 = sub i64 128, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %16
	%111 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 0
	store i8* %108, i8** %111
	%112 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 1
	store i64 %109, i64* %112
	%113 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %16, i64 0, i32 2
	store i64 %110, i64* %113
	%114 = load {i8*, i64, i64}, {i8*, i64, i64}* %16, align 8
	%115 = load %..string, %..string* %5, align 8
	store %..string zeroinitializer, %..string* %17
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4a9, i64 0, i32 0), i64 10}, %..string* %17
	%116 = load %..string, %..string* %17, align 8
	store %..any zeroinitializer, %..any* %18
	%117 = bitcast %..string* %17 to %..rawptr
	%118 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%119 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 0
	store %..rawptr %117, %..rawptr* %119
	%120 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 1
	store %Type_Info* %118, %Type_Info** %120
	%121 = load %..any, %..any* %18, align 8
	store %..any zeroinitializer, %..any* %19
	%122 = bitcast %..string* %5 to %..rawptr
	%123 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%124 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 0
	store %..rawptr %122, %..rawptr* %124
	%125 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 1
	store %Type_Info* %123, %Type_Info** %125
	%126 = load %..any, %..any* %19, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %20
	store [2 x %..any] zeroinitializer, [2 x %..any]* %21
	%127 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	store %..any %121, %..any* %127
	%128 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 1
	store %..any %126, %..any* %128
	%129 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	%130 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 0
	store %..any* %129, %..any** %130
	%131 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 1
	store i64 2, i64* %131
	%132 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 2
	store i64 2, i64* %132
	%133 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %20, align 8
	%134 = call %..string @fmt-4.bprintf({i8*, i64, i64} %114, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4aa, i64 0, i32 0), i64 6}, {%..any*, i64, i64} %133)
	store %..string %134, %..string* %15
	; IfStmt
	; SelectorExpr
	%135 = load %..string, %..string* %15, align 8
	%136 = call i1 @imgui-9.CollapsingHeader(%..string %135, i32 0)
	br i1 %136, label %if.then-9, label %if.done-10

if.then-9:
	; ptr
	store i8* zeroinitializer, i8** %22
		; SelectorExpr
	%137 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%138 = load %..rawptr, %..rawptr* %137, align 8
	%139 = bitcast %..rawptr %138 to i8*
	; IndexExpr
	; SelectorExpr
	%140 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%141 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %140, i64 0
	%142 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %141, i64 0, i32 2
	%143 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %142, i64 0, i32 2
	%144 = load {i64*, i64, i64}, {i64*, i64, i64}* %143, align 8
	%145 = extractvalue {i64*, i64, i64} %144, 0
	%146 = extractvalue {i64*, i64, i64} %144, 1
	%147 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4ab, i64 0, i32 0), i64 35}, i64 60, i64 68, i64 %147, i64 %146)
	%148 = getelementptr inbounds i64, i64* %145, i64 %147
	%149 = load i64, i64* %148, align 8
	%150 = getelementptr inbounds i8, i8* %139, i64 %149
	store i8* %150, i8** %22
	; value
	store %..rawptr zeroinitializer, %..rawptr* %23
		%151 = load i8*, i8** %22, align 8
	%152 = bitcast i8* %151 to %..rawptr*
	%153 = getelementptr inbounds %..rawptr, %..rawptr* %152, i64 0
	%154 = load %..rawptr, %..rawptr* %153, align 8
	store %..rawptr %154, %..rawptr* %23
	; v
	store %..any zeroinitializer, %..any* %24
		; CompoundLit
	store %..any zeroinitializer, %..any* %25
	store %..any zeroinitializer, %..any* %25
	%155 = load %..rawptr, %..rawptr* %23, align 8
	%156 = getelementptr inbounds %..any, %..any* %25, i64 0, i32 0
	store %..rawptr %155, %..rawptr* %156
	; SelectorExpr
	%157 = load %Type_Info.Pointer*, %Type_Info.Pointer** %12, align 8
	%158 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %157, i64 0
	%159 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %158, i64 0, i32 2
	%160 = load %Type_Info*, %Type_Info** %159, align 8
	%161 = getelementptr inbounds %..any, %..any* %25, i64 0, i32 1
	store %Type_Info* %160, %Type_Info** %161
	%162 = load %..any, %..any* %25, align 8
	store %..any %162, %..any* %24
	%163 = load %..string, %..string* %5, align 8
	%164 = load %..any, %..any* %24, align 8
	call void @debug_windows-27.ShowStructInfo(%..string %163, i1* zeroinitializer, %..any %164)
	br label %if.done-10

if.done-10:
	br label %if.done-11

if.done-11:
	br label %typematch.done-17

typematch.next-12:
	store %Type_Info* zeroinitializer, %Type_Info** %34
	store %Type_Info* %93, %Type_Info** %34
	; value
	store i8* zeroinitializer, i8** %35
		; SelectorExpr
	%165 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%166 = load %..rawptr, %..rawptr* %165, align 8
	%167 = bitcast %..rawptr %166 to i8*
	; IndexExpr
	; SelectorExpr
	%168 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%169 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %168, i64 0
	%170 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %169, i64 0, i32 2
	%171 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %170, i64 0, i32 2
	%172 = load {i64*, i64, i64}, {i64*, i64, i64}* %171, align 8
	%173 = extractvalue {i64*, i64, i64} %172, 0
	%174 = extractvalue {i64*, i64, i64} %172, 1
	%175 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4ac, i64 0, i32 0), i64 35}, i64 76, i64 62, i64 %175, i64 %174)
	%176 = getelementptr inbounds i64, i64* %173, i64 %175
	%177 = load i64, i64* %176, align 8
	%178 = getelementptr inbounds i8, i8* %167, i64 %177
	store i8* %178, i8** %35
	; v
	store %..any zeroinitializer, %..any* %36
		; CompoundLit
	store %..any zeroinitializer, %..any* %37
	store %..any zeroinitializer, %..any* %37
	%179 = load i8*, i8** %35, align 8
	%180 = bitcast i8* %179 to %..rawptr
	%181 = getelementptr inbounds %..any, %..any* %37, i64 0, i32 0
	store %..rawptr %180, %..rawptr* %181
	; IndexExpr
	; SelectorExpr
	%182 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%183 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %182, i64 0
	%184 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %183, i64 0, i32 2
	%185 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %184, i64 0, i32 0
	%186 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %185, align 8
	%187 = extractvalue {%Type_Info**, i64, i64} %186, 0
	%188 = extractvalue {%Type_Info**, i64, i64} %186, 1
	%189 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4ad, i64 0, i32 0), i64 35}, i64 77, i64 56, i64 %189, i64 %188)
	%190 = getelementptr inbounds %Type_Info*, %Type_Info** %187, i64 %189
	%191 = load %Type_Info*, %Type_Info** %190, align 8
	%192 = getelementptr inbounds %..any, %..any* %37, i64 0, i32 1
	store %Type_Info* %191, %Type_Info** %192
	%193 = load %..any, %..any* %37, align 8
	store %..any %193, %..any* %36
	; SelectorExpr
	%194 = load %..any, %..any* %36, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %38
	store [1 x %..any] zeroinitializer, [1 x %..any]* %39
	%195 = getelementptr inbounds [1 x %..any], [1 x %..any]* %39, i64 0, i32 0
	store %..any %194, %..any* %195
	%196 = getelementptr inbounds [1 x %..any], [1 x %..any]* %39, i64 0, i32 0
	%197 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 0
	store %..any* %196, %..any** %197
	%198 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 1
	store i64 1, i64* %198
	%199 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 2
	store i64 1, i64* %199
	%200 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %38, align 8
	call void @imgui-9.TextWrapped(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4ae, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %200)
	br label %typematch.done-17

typematch.body-13:
	%201 = bitcast %..rawptr %96 to %Type_Info.Boolean*
	store %Type_Info.Boolean* zeroinitializer, %Type_Info.Boolean** %26
	store %Type_Info.Boolean* %201, %Type_Info.Boolean** %26
	; value
	store i8* zeroinitializer, i8** %27
		; SelectorExpr
	%202 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%203 = load %..rawptr, %..rawptr* %202, align 8
	%204 = bitcast %..rawptr %203 to i8*
	; IndexExpr
	; SelectorExpr
	%205 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%206 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %205, i64 0
	%207 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %206, i64 0, i32 2
	%208 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %207, i64 0, i32 2
	%209 = load {i64*, i64, i64}, {i64*, i64, i64}* %208, align 8
	%210 = extractvalue {i64*, i64, i64} %209, 0
	%211 = extractvalue {i64*, i64, i64} %209, 1
	%212 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4af, i64 0, i32 0), i64 35}, i64 69, i64 62, i64 %212, i64 %211)
	%213 = getelementptr inbounds i64, i64* %210, i64 %212
	%214 = load i64, i64* %213, align 8
	%215 = getelementptr inbounds i8, i8* %204, i64 %214
	store i8* %215, i8** %27
	; col
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %28
		; TernaryExpr
	%216 = load i8*, i8** %27, align 8
	%217 = getelementptr inbounds i8, i8* %216, i64 0
	%218 = load i8, i8* %217, align 1
	%219 = icmp ne i8 %218, 0
	br i1 %219, label %if.then-14, label %if.else-15

if.then-14:
	br label %if.done-16

if.else-15:
	br label %if.done-16

if.done-16:
	%220 = phi %imgui-9.Vec4 [ {float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %if.then-14 ], [ {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %if.else-15 ]
	store %imgui-9.Vec4 %220, %imgui-9.Vec4* %28
	; v
	store %..any zeroinitializer, %..any* %29
		; CompoundLit
	store %..any zeroinitializer, %..any* %30
	store %..any zeroinitializer, %..any* %30
	%221 = load i8*, i8** %27, align 8
	%222 = bitcast i8* %221 to %..rawptr
	%223 = getelementptr inbounds %..any, %..any* %30, i64 0, i32 0
	store %..rawptr %222, %..rawptr* %223
	; IndexExpr
	; SelectorExpr
	%224 = load %Type_Info.Struct*, %Type_Info.Struct** %3, align 8
	%225 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %224, i64 0
	%226 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %225, i64 0, i32 2
	%227 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %226, i64 0, i32 0
	%228 = load {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %227, align 8
	%229 = extractvalue {%Type_Info**, i64, i64} %228, 0
	%230 = extractvalue {%Type_Info**, i64, i64} %228, 1
	%231 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4b0, i64 0, i32 0), i64 35}, i64 71, i64 71, i64 %231, i64 %230)
	%232 = getelementptr inbounds %Type_Info*, %Type_Info** %229, i64 %231
	%233 = load %Type_Info*, %Type_Info** %232, align 8
	%234 = call %Type_Info* @type_info_base(%Type_Info* %233)
	%235 = getelementptr inbounds %..any, %..any* %30, i64 0, i32 1
	store %Type_Info* %234, %Type_Info** %235
	%236 = load %..any, %..any* %30, align 8
	store %..any %236, %..any* %29
	; SelectorExpr
	%237 = load %imgui-9.Vec4, %imgui-9.Vec4* %28, align 4
	%238 = load %..any, %..any* %29, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %31
	store [1 x %..any] zeroinitializer, [1 x %..any]* %32
	%239 = getelementptr inbounds [1 x %..any], [1 x %..any]* %32, i64 0, i32 0
	store %..any %238, %..any* %239
	%240 = getelementptr inbounds [1 x %..any], [1 x %..any]* %32, i64 0, i32 0
	%241 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 0
	store %..any* %240, %..any** %241
	%242 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 1
	store i64 1, i64* %242
	%243 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 2
	store i64 1, i64* %243
	%244 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %31, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %33
	store %imgui-9.Vec4 %237, %imgui-9.Vec4* %33
	call void @imgui-9.TextColored(%imgui-9.Vec4* %33, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4b1, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %244)
	br label %typematch.done-17

typematch.done-17:
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %for.index.loop-3

for.index.done-18:
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.ShowEntityList(%game-21.Context_t* %gameCtx, i1* %show) {
decls-0:
	%0 = alloca %game-21.Context_t*, align 8
	%1 = alloca i1*, align 8
	%2 = alloca %imgui-9.Vec2, align 4
	%3 = alloca %entity-18.ListItem*, align 8
	%4 = alloca [256 x i8], align 1
	%5 = alloca %..string, align 8
	%6 = alloca {i8*, i64, i64}, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca [2 x %..any], align 8
	%11 = alloca %imgui-9.Vec2, align 4
	%12 = alloca %imgui-9.Vec2, align 4
	%13 = alloca %..any, align 8
	%14 = alloca {%..any*, i64, i64}, align 8
	%15 = alloca [1 x %..any], align 8
	%16 = alloca %..any, align 8
	%17 = alloca {%..any*, i64, i64}, align 8
	%18 = alloca [1 x %..any], align 8
	%19 = alloca %entity-18.Entity.Tower*, align 8
	%20 = alloca %entity-18.Tower.Slow, align 8
	%21 = alloca %..any, align 8
	%22 = alloca {%..any*, i64, i64}, align 8
	%23 = alloca [1 x %..any], align 8
	%24 = alloca %entity-18.Tower, align 16
	%25 = alloca %entity-18.Tower.Slow, align 16
	%26 = alloca %entity-18.Tower.Basic, align 8
	%27 = alloca %..any, align 8
	%28 = alloca {%..any*, i64, i64}, align 8
	%29 = alloca [1 x %..any], align 8
	%30 = alloca %entity-18.Tower, align 16
	%31 = alloca %entity-18.Tower, align 8
	%32 = alloca %..any, align 8
	%33 = alloca {%..any*, i64, i64}, align 8
	%34 = alloca [1 x %..any], align 8
	%35 = alloca %..any, align 8
	%36 = alloca {%..any*, i64, i64}, align 8
	%37 = alloca [1 x %..any], align 8
	%38 = alloca %imgui-9.Vec4, align 16
	store %game-21.Context_t* zeroinitializer, %game-21.Context_t** %0
		store %game-21.Context_t* %gameCtx, %game-21.Context_t** %0
	store i1* zeroinitializer, i1** %1
		store i1* %show, i1** %1
	; SelectorExpr
	%39 = load i1*, i1** %1, align 8
	%40 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4b2, i64 0, i32 0), i64 11}, i1* %39, i32 32)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 false)
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %2
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0xc034000000000000}, %imgui-9.Vec2* %2
	%41 = bitcast %imgui-9.Vec2* %2 to i64*
	%42 = load i64, i64* %41, align 8
	%43 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4b3, i64 0, i32 0), i64 8}, i64 %42, i1 true, i32 0)
	; ForStmt
	; i
	store %entity-18.ListItem* zeroinitializer, %entity-18.ListItem** %3
		; SelectorExpr
	; SelectorExpr
	%44 = load %game-21.Context_t*, %game-21.Context_t** %0, align 8
	%45 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %44, i64 0
	%46 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %45, i64 0, i32 0
	%47 = load %entity-18.List*, %entity-18.List** %46, align 8
	%48 = getelementptr inbounds %entity-18.List, %entity-18.List* %47, i64 0
	%49 = getelementptr inbounds %entity-18.List, %entity-18.List* %48, i64 0, i32 0
	%50 = load %entity-18.ListItem*, %entity-18.ListItem** %49, align 8
	store %entity-18.ListItem* %50, %entity-18.ListItem** %3
	br label %for.loop-1

for.loop-1:
	%51 = load %entity-18.ListItem*, %entity-18.ListItem** %3, align 8
	%52 = icmp ne %entity-18.ListItem* %51, zeroinitializer
	br i1 %52, label %for.body-2, label %for.done-5

for.body-2:
	; buf
	store [256 x i8] zeroinitializer, [256 x i8]* %4
		; str
	store %..string zeroinitializer, %..string* %5
		; SelectorExpr
	; SliceExpr
	%53 = load [256 x i8], [256 x i8]* %4, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$4b4, i64 0, i32 0), i64 35}, i64 128, i64 39, i64 0, i64 256, i64 256)
	%54 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i32 0
	%55 = getelementptr inbounds i8, i8* %54, i64 0
	%56 = sub i64 256, 0
	%57 = sub i64 256, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %6
	%58 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 0
	store i8* %55, i8** %58
	%59 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 1
	store i64 %56, i64* %59
	%60 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 2
	store i64 %57, i64* %60
	%61 = load {i8*, i64, i64}, {i8*, i64, i64}* %6, align 8
	; SelectorExpr
	; SelectorExpr
	%62 = load %entity-18.ListItem*, %entity-18.ListItem** %3, align 8
	%63 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %62, i64 0
	%64 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %63, i64 0, i32 0
	%65 = load %entity-18.Entity*, %entity-18.Entity** %64, align 8
	%66 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %65, i64 0
	%67 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %66, i64 0, i32 2
	%68 = load %..string, %..string* %67, align 8
	; SelectorExpr
	; SelectorExpr
	%69 = load %entity-18.ListItem*, %entity-18.ListItem** %3, align 8
	%70 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %69, i64 0
	%71 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %70, i64 0, i32 0
	%72 = load %entity-18.Entity*, %entity-18.Entity** %71, align 8
	%73 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %72, i64 0
	%74 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %73, i64 0, i32 1
	%75 = load i64, i64* %74, align 8
	store %..any zeroinitializer, %..any* %7
	%76 = bitcast %..string* %67 to %..rawptr
	%77 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%78 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %76, %..rawptr* %78
	%79 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %77, %Type_Info** %79
	%80 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%81 = bitcast i64* %74 to %..rawptr
	%82 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%83 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %81, %..rawptr* %83
	%84 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %82, %Type_Info** %84
	%85 = load %..any, %..any* %8, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	store [2 x %..any] zeroinitializer, [2 x %..any]* %10
	%86 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	store %..any %80, %..any* %86
	%87 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 1
	store %..any %85, %..any* %87
	%88 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	%89 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 0
	store %..any* %88, %..any** %89
	%90 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 1
	store i64 2, i64* %90
	%91 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 2
	store i64 2, i64* %91
	%92 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	%93 = call %..string @fmt-4.bprintf({i8*, i64, i64} %61, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4b5, i64 0, i32 0), i64 6}, {%..any*, i64, i64} %92)
	store %..string %93, %..string* %5
	; IfStmt
	; SelectorExpr
	%94 = load %..string, %..string* %5, align 8
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %11
	store %imgui-9.Vec2 {float 0xbff0000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %11
	%95 = bitcast %imgui-9.Vec2* %11 to i64*
	%96 = load i64, i64* %95, align 8
	%97 = call i1 @imgui-9.Button(%..string %94, i64 %96)
	br i1 %97, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%98 = load %entity-18.ListItem*, %entity-18.ListItem** %3, align 8
	%99 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %98, i64 0
	%100 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %99, i64 0, i32 0
	%101 = load %entity-18.Entity*, %entity-18.Entity** %100, align 8
	store %entity-18.Entity* %101, %entity-18.Entity** @debug_windows-27._ChosenEntity
	br label %if.done-4

if.done-4:
	; AssignStmt
	; SelectorExpr
	%102 = load %entity-18.ListItem*, %entity-18.ListItem** %3, align 8
	%103 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %102, i64 0
	%104 = getelementptr inbounds %entity-18.ListItem, %entity-18.ListItem* %103, i64 0, i32 1
	%105 = load %entity-18.ListItem*, %entity-18.ListItem** %104, align 8
	store %entity-18.ListItem* %105, %entity-18.ListItem** %3
	br label %for.loop-1

for.done-5:
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %12
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0xc034000000000000}, %imgui-9.Vec2* %12
	%106 = bitcast %imgui-9.Vec2* %12 to i64*
	%107 = load i64, i64* %106, align 8
	%108 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4b6, i64 0, i32 0), i64 6}, i64 %107, i1 true, i32 0)
	; IfStmt
	%109 = load %entity-18.Entity*, %entity-18.Entity** @debug_windows-27._ChosenEntity, align 8
	%110 = icmp ne %entity-18.Entity* %109, zeroinitializer
	br i1 %110, label %if.then-6, label %if.done-15

if.then-6:
	; SelectorExpr
	; SelectorExpr
	%111 = load %entity-18.Entity*, %entity-18.Entity** @debug_windows-27._ChosenEntity, align 8
	%112 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %111, i64 0
	%113 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %112, i64 0, i32 1
	%114 = load i64, i64* %113, align 8
	store %..any zeroinitializer, %..any* %13
	%115 = bitcast i64* %113 to %..rawptr
	%116 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%117 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 0
	store %..rawptr %115, %..rawptr* %117
	%118 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 1
	store %Type_Info* %116, %Type_Info** %118
	%119 = load %..any, %..any* %13, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %14
	store [1 x %..any] zeroinitializer, [1 x %..any]* %15
	%120 = getelementptr inbounds [1 x %..any], [1 x %..any]* %15, i64 0, i32 0
	store %..any %119, %..any* %120
	%121 = getelementptr inbounds [1 x %..any], [1 x %..any]* %15, i64 0, i32 0
	%122 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 0
	store %..any* %121, %..any** %122
	%123 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 1
	store i64 1, i64* %123
	%124 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 2
	store i64 1, i64* %124
	%125 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %14, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4b7, i64 0, i32 0), i64 8}, {%..any*, i64, i64} %125)
	; SelectorExpr
	; SelectorExpr
	%126 = load %entity-18.Entity*, %entity-18.Entity** @debug_windows-27._ChosenEntity, align 8
	%127 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %126, i64 0
	%128 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %127, i64 0, i32 2
	%129 = load %..string, %..string* %128, align 8
	store %..any zeroinitializer, %..any* %16
	%130 = bitcast %..string* %128 to %..rawptr
	%131 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%132 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 0
	store %..rawptr %130, %..rawptr* %132
	%133 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 1
	store %Type_Info* %131, %Type_Info** %133
	%134 = load %..any, %..any* %16, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %17
	store [1 x %..any] zeroinitializer, [1 x %..any]* %18
	%135 = getelementptr inbounds [1 x %..any], [1 x %..any]* %18, i64 0, i32 0
	store %..any %134, %..any* %135
	%136 = getelementptr inbounds [1 x %..any], [1 x %..any]* %18, i64 0, i32 0
	%137 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 0
	store %..any* %136, %..any** %137
	%138 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 1
	store i64 1, i64* %138
	%139 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 2
	store i64 1, i64* %139
	%140 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %17, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4b8, i64 0, i32 0), i64 8}, {%..any*, i64, i64} %140)
	; TypeMatchStmt
	%141 = load %entity-18.Entity*, %entity-18.Entity** @debug_windows-27._ChosenEntity, align 8
	; get union's tag
	%142 = getelementptr inbounds %entity-18.Entity, %entity-18.Entity* %141, i64 0, i32 4 ; UnionTagPtr
	%143 = load i64, i64* %142, align 8
	%144 = bitcast %entity-18.Entity* %141 to %..rawptr
	%145 = icmp eq i64 %143, 1
	br i1 %145, label %typematch.body-8, label %typematch.next-7

typematch.next-7:
	br label %typematch.done-14

typematch.body-8:
	%146 = bitcast %..rawptr %144 to %entity-18.Entity.Tower*
	store %entity-18.Entity.Tower* zeroinitializer, %entity-18.Entity.Tower** %19
	store %entity-18.Entity.Tower* %146, %entity-18.Entity.Tower** %19
	; TypeMatchStmt
	; SelectorExpr
	%147 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%148 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %147, i64 0
	%149 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %148, i64 0, i32 2
	%150 = load %entity-18.Tower, %entity-18.Tower* %149, align 8
	; get union's tag
	%151 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %149, i64 0, i32 6 ; UnionTagPtr
	%152 = load i64, i64* %151, align 8
	%153 = bitcast %entity-18.Tower* %149 to %..rawptr
	%154 = icmp eq i64 %152, 2
	br i1 %154, label %typematch.body-10, label %typematch.next-9

typematch.next-9:
	%155 = icmp eq i64 %152, 1
	br i1 %155, label %typematch.body-12, label %typematch.next-11

typematch.body-10:
	%156 = bitcast %..rawptr %153 to %entity-18.Tower.Slow*
	%157 = load %entity-18.Tower.Slow, %entity-18.Tower.Slow* %156, align 8
	store %entity-18.Tower.Slow zeroinitializer, %entity-18.Tower.Slow* %20
	store %entity-18.Tower.Slow %157, %entity-18.Tower.Slow* %20
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%158 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%159 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %158, i64 0
	%160 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %159, i64 0, i32 2
	%161 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %160, i64 0, i32 6
	%162 = load i64, i64* %161, align 8
	store %..any zeroinitializer, %..any* %21
	%163 = bitcast i64* %161 to %..rawptr
	%164 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%165 = getelementptr inbounds %..any, %..any* %21, i64 0, i32 0
	store %..rawptr %163, %..rawptr* %165
	%166 = getelementptr inbounds %..any, %..any* %21, i64 0, i32 1
	store %Type_Info* %164, %Type_Info** %166
	%167 = load %..any, %..any* %21, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %22
	store [1 x %..any] zeroinitializer, [1 x %..any]* %23
	%168 = getelementptr inbounds [1 x %..any], [1 x %..any]* %23, i64 0, i32 0
	store %..any %167, %..any* %168
	%169 = getelementptr inbounds [1 x %..any], [1 x %..any]* %23, i64 0, i32 0
	%170 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %22, i64 0, i32 0
	store %..any* %169, %..any** %170
	%171 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %22, i64 0, i32 1
	store i64 1, i64* %171
	%172 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %22, i64 0, i32 2
	store i64 1, i64* %172
	%173 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %22, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4b9, i64 0, i32 0), i64 9}, {%..any*, i64, i64} %173)
	; SelectorExpr
	%174 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%175 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %174, i64 0
	%176 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %175, i64 0, i32 2
	%177 = load %entity-18.Tower, %entity-18.Tower* %176, align 8
	store %entity-18.Tower zeroinitializer, %entity-18.Tower* %24
	store %entity-18.Tower %177, %entity-18.Tower* %24
	call void @debug_windows-27.ShowEntityList.PrintNormalTower-0(%entity-18.Tower* %24)
	%178 = load %entity-18.Tower.Slow, %entity-18.Tower.Slow* %20, align 8
	store %entity-18.Tower.Slow zeroinitializer, %entity-18.Tower.Slow* %25
	store %entity-18.Tower.Slow %178, %entity-18.Tower.Slow* %25
	call void @debug_windows-27.ShowEntityList.PrintSlowTower-1(%entity-18.Tower.Slow* %25)
	br label %typematch.done-13

typematch.next-11:
	store %entity-18.Tower zeroinitializer, %entity-18.Tower* %31
	store %entity-18.Tower %150, %entity-18.Tower* %31
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%179 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%180 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %179, i64 0
	%181 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %180, i64 0, i32 2
	%182 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %181, i64 0, i32 6
	%183 = load i64, i64* %182, align 8
	store %..any zeroinitializer, %..any* %32
	%184 = bitcast i64* %182 to %..rawptr
	%185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%186 = getelementptr inbounds %..any, %..any* %32, i64 0, i32 0
	store %..rawptr %184, %..rawptr* %186
	%187 = getelementptr inbounds %..any, %..any* %32, i64 0, i32 1
	store %Type_Info* %185, %Type_Info** %187
	%188 = load %..any, %..any* %32, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %33
	store [1 x %..any] zeroinitializer, [1 x %..any]* %34
	%189 = getelementptr inbounds [1 x %..any], [1 x %..any]* %34, i64 0, i32 0
	store %..any %188, %..any* %189
	%190 = getelementptr inbounds [1 x %..any], [1 x %..any]* %34, i64 0, i32 0
	%191 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 0
	store %..any* %190, %..any** %191
	%192 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 1
	store i64 1, i64* %192
	%193 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 2
	store i64 1, i64* %193
	%194 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %33, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4ba, i64 0, i32 0), i64 9}, {%..any*, i64, i64} %194)
	br label %typematch.done-13

typematch.body-12:
	%195 = bitcast %..rawptr %153 to %entity-18.Tower.Basic*
	%196 = load %entity-18.Tower.Basic, %entity-18.Tower.Basic* %195, align 8
	store %entity-18.Tower.Basic zeroinitializer, %entity-18.Tower.Basic* %26
	store %entity-18.Tower.Basic %196, %entity-18.Tower.Basic* %26
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%197 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%198 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %197, i64 0
	%199 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %198, i64 0, i32 2
	%200 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %199, i64 0, i32 6
	%201 = load i64, i64* %200, align 8
	store %..any zeroinitializer, %..any* %27
	%202 = bitcast i64* %200 to %..rawptr
	%203 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%204 = getelementptr inbounds %..any, %..any* %27, i64 0, i32 0
	store %..rawptr %202, %..rawptr* %204
	%205 = getelementptr inbounds %..any, %..any* %27, i64 0, i32 1
	store %Type_Info* %203, %Type_Info** %205
	%206 = load %..any, %..any* %27, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %28
	store [1 x %..any] zeroinitializer, [1 x %..any]* %29
	%207 = getelementptr inbounds [1 x %..any], [1 x %..any]* %29, i64 0, i32 0
	store %..any %206, %..any* %207
	%208 = getelementptr inbounds [1 x %..any], [1 x %..any]* %29, i64 0, i32 0
	%209 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %28, i64 0, i32 0
	store %..any* %208, %..any** %209
	%210 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %28, i64 0, i32 1
	store i64 1, i64* %210
	%211 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %28, i64 0, i32 2
	store i64 1, i64* %211
	%212 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %28, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4bb, i64 0, i32 0), i64 9}, {%..any*, i64, i64} %212)
	; SelectorExpr
	%213 = load %entity-18.Entity.Tower*, %entity-18.Entity.Tower** %19, align 8
	%214 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %213, i64 0
	%215 = getelementptr inbounds %entity-18.Entity.Tower, %entity-18.Entity.Tower* %214, i64 0, i32 2
	%216 = load %entity-18.Tower, %entity-18.Tower* %215, align 8
	store %entity-18.Tower zeroinitializer, %entity-18.Tower* %30
	store %entity-18.Tower %216, %entity-18.Tower* %30
	call void @debug_windows-27.ShowEntityList.PrintNormalTower-0(%entity-18.Tower* %30)
	br label %typematch.done-13

typematch.done-13:
	br label %typematch.done-14

typematch.done-14:
	br label %if.done-15

if.done-15:
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%217 = load %game-21.Context_t*, %game-21.Context_t** %0, align 8
	%218 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %217, i64 0
	%219 = getelementptr inbounds %game-21.Context_t, %game-21.Context_t* %218, i64 0, i32 0
	%220 = load %entity-18.List*, %entity-18.List** %219, align 8
	%221 = getelementptr inbounds %entity-18.List, %entity-18.List* %220, i64 0
	%222 = getelementptr inbounds %entity-18.List, %entity-18.List* %221, i64 0, i32 2
	%223 = load i64, i64* %222, align 8
	store %..any zeroinitializer, %..any* %35
	%224 = bitcast i64* %222 to %..rawptr
	%225 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%226 = getelementptr inbounds %..any, %..any* %35, i64 0, i32 0
	store %..rawptr %224, %..rawptr* %226
	%227 = getelementptr inbounds %..any, %..any* %35, i64 0, i32 1
	store %Type_Info* %225, %Type_Info** %227
	%228 = load %..any, %..any* %35, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %36
	store [1 x %..any] zeroinitializer, [1 x %..any]* %37
	%229 = getelementptr inbounds [1 x %..any], [1 x %..any]* %37, i64 0, i32 0
	store %..any %228, %..any* %229
	%230 = getelementptr inbounds [1 x %..any], [1 x %..any]* %37, i64 0, i32 0
	%231 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 0
	store %..any* %230, %..any** %231
	%232 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 1
	store i64 1, i64* %232
	%233 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 2
	store i64 1, i64* %233
	%234 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %36, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %38
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3fc9999980000000}, %imgui-9.Vec4* %38
	call void @imgui-9.TextColored(%imgui-9.Vec4* %38, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4bc, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %234)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.ShowEntityList.PrintNormalTower-0(%entity-18.Tower* %t) {
decls-0:
	%0 = alloca %..any, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [1 x %..any], align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca %..any, align 8
	%13 = alloca {%..any*, i64, i64}, align 8
	%14 = alloca [1 x %..any], align 8
	%15 = alloca %..any, align 8
	%16 = alloca {%..any*, i64, i64}, align 8
	%17 = alloca [1 x %..any], align 8
	%18 = alloca {%..any*, i64, i64}, align 8
	%19 = load %entity-18.Tower, %entity-18.Tower* %t, align 8
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; IfStmt
	; SelectorExpr
	%20 = call i1 @imgui-9.CollapsingHeader(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4bd, i64 0, i32 0), i64 9}, i32 0)
	br i1 %20, label %if.then-1, label %if.done-2

if.then-1:
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	; SelectorExpr
	%21 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 1
	%22 = getelementptr inbounds %entity-18.Transform_t, %entity-18.Transform_t* %21, i64 0, i32 0
	%23 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %22, align 8
	store %..any zeroinitializer, %..any* %0
	%24 = bitcast {[0 x <8 x i8>], [3 x float]}* %22 to %..rawptr
	%25 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%26 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 0
	store %..rawptr %24, %..rawptr* %26
	%27 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 1
	store %Type_Info* %25, %Type_Info** %27
	%28 = load %..any, %..any* %0, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
	store [1 x %..any] zeroinitializer, [1 x %..any]* %2
	%29 = getelementptr inbounds [1 x %..any], [1 x %..any]* %2, i64 0, i32 0
	store %..any %28, %..any* %29
	%30 = getelementptr inbounds [1 x %..any], [1 x %..any]* %2, i64 0, i32 0
	%31 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 0
	store %..any* %30, %..any** %31
	%32 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 1
	store i64 1, i64* %32
	%33 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 2
	store i64 1, i64* %33
	%34 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4be, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %34)
	; SelectorExpr
	; SelectorExpr
	%35 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 1
	%36 = getelementptr inbounds %entity-18.Transform_t, %entity-18.Transform_t* %35, i64 0, i32 1
	%37 = load {[0 x <8 x i8>], [3 x float]}, {[0 x <8 x i8>], [3 x float]}* %36, align 8
	store %..any zeroinitializer, %..any* %3
	%38 = bitcast {[0 x <8 x i8>], [3 x float]}* %36 to %..rawptr
	%39 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%40 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %38, %..rawptr* %40
	%41 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %39, %Type_Info** %41
	%42 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%43 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %42, %..any* %43
	%44 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%45 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %44, %..any** %45
	%46 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %46
	%47 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %47
	%48 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4bf, i64 0, i32 0), i64 9}, {%..any*, i64, i64} %48)
	; SelectorExpr
	; SelectorExpr
	%49 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 1
	%50 = getelementptr inbounds %entity-18.Transform_t, %entity-18.Transform_t* %49, i64 0, i32 3
	%51 = load float, float* %50, align 4
	store %..any zeroinitializer, %..any* %6
	%52 = bitcast float* %50 to %..rawptr
	%53 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%54 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %52, %..rawptr* %54
	%55 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %53, %Type_Info** %55
	%56 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%57 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %56, %..any* %57
	%58 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%59 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %58, %..any** %59
	%60 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %60
	%61 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %61
	%62 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4c0, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %62)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	br label %if.done-2

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%63 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 2
	%64 = load i64, i64* %63, align 8
	store %..any zeroinitializer, %..any* %9
	%65 = bitcast i64* %63 to %..rawptr
	%66 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%67 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %65, %..rawptr* %67
	%68 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %66, %Type_Info** %68
	%69 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%70 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %69, %..any* %70
	%71 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%72 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %71, %..any** %72
	%73 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %73
	%74 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %74
	%75 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4c1, i64 0, i32 0), i64 10}, {%..any*, i64, i64} %75)
	; SelectorExpr
	; SelectorExpr
	%76 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 3
	%77 = load float, float* %76, align 4
	store %..any zeroinitializer, %..any* %12
	%78 = bitcast float* %76 to %..rawptr
	%79 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%80 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %78, %..rawptr* %80
	%81 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %79, %Type_Info** %81
	%82 = load %..any, %..any* %12, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	store [1 x %..any] zeroinitializer, [1 x %..any]* %14
	%83 = getelementptr inbounds [1 x %..any], [1 x %..any]* %14, i64 0, i32 0
	store %..any %82, %..any* %83
	%84 = getelementptr inbounds [1 x %..any], [1 x %..any]* %14, i64 0, i32 0
	%85 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 0
	store %..any* %84, %..any** %85
	%86 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 1
	store i64 1, i64* %86
	%87 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 2
	store i64 1, i64* %87
	%88 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4c2, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %88)
	; IfStmt
	; SelectorExpr
	%89 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 4
	%90 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %89, align 8
	%91 = icmp ne %asset-25.Asset.Texture* %90, zeroinitializer
	br i1 %91, label %if.then-3, label %if.else-4

if.then-3:
	; SelectorExpr
	; SelectorExpr
	%92 = getelementptr inbounds %entity-18.Tower, %entity-18.Tower* %t, i64 0, i32 4
	%93 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %92, align 8
	%94 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %93, i64 0
	%95 = load %asset-25.Asset.Texture, %asset-25.Asset.Texture* %94, align 8
	store %..any zeroinitializer, %..any* %15
	%96 = bitcast %asset-25.Asset.Texture* %94 to %..rawptr
	%97 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%98 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 0
	store %..rawptr %96, %..rawptr* %98
	%99 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 1
	store %Type_Info* %97, %Type_Info** %99
	%100 = load %..any, %..any* %15, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %16
	store [1 x %..any] zeroinitializer, [1 x %..any]* %17
	%101 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	store %..any %100, %..any* %101
	%102 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 0
	store %..any* %102, %..any** %103
	%104 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 1
	store i64 1, i64* %104
	%105 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 2
	store i64 1, i64* %105
	%106 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %16, align 8
	call void @imgui-9.TextWrapped(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4c3, i64 0, i32 0), i64 11}, {%..any*, i64, i64} %106)
	br label %if.done-5

if.else-4:
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %18
	%107 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %18, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4c4, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %107)
	br label %if.done-5

if.done-5:
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	ret void
}

define void @debug_windows-27.ShowEntityList.PrintSlowTower-1(%entity-18.Tower.Slow* %e) {
decls-0:
	%0 = alloca %..any, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca [1 x %..any], align 8
	%3 = load %entity-18.Tower.Slow, %entity-18.Tower.Slow* %e, align 8
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	; SelectorExpr
	%4 = getelementptr inbounds %entity-18.Tower.Slow, %entity-18.Tower.Slow* %e, i64 0, i32 4
	%5 = load float, float* %4, align 4
	store %..any zeroinitializer, %..any* %0
	%6 = bitcast float* %4 to %..rawptr
	%7 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%8 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 0
	store %..rawptr %6, %..rawptr* %8
	%9 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 1
	store %Type_Info* %7, %Type_Info** %9
	%10 = load %..any, %..any* %0, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
	store [1 x %..any] zeroinitializer, [1 x %..any]* %2
	%11 = getelementptr inbounds [1 x %..any], [1 x %..any]* %2, i64 0, i32 0
	store %..any %10, %..any* %11
	%12 = getelementptr inbounds [1 x %..any], [1 x %..any]* %2, i64 0, i32 0
	%13 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 0
	store %..any* %12, %..any** %13
	%14 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 1
	store i64 1, i64* %14
	%15 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %1, i64 0, i32 2
	store i64 1, i64* %15
	%16 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4c5, i64 0, i32 0), i64 13}, {%..any*, i64, i64} %16)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	ret void
}

define void @debug_windows-27.ShowDebugWindowStates(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1 x %..any], align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..any, align 8
	%6 = alloca {%..any*, i64, i64}, align 8
	%7 = alloca [2 x %..any], align 8
	%8 = alloca %..any, align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca [1 x %..any], align 8
	%11 = alloca i32, align 4
	%12 = alloca i32, align 4
	%13 = alloca %imgui-9.Vec2, align 4
	%14 = alloca i32, align 4
	%15 = alloca %imgui-9.Vec2, align 4
	%16 = alloca i1, align 1
	%17 = alloca %..string, align 8
	%18 = alloca %..string, align 8
	%19 = alloca i64, align 8
	%20 = alloca %..any, align 8
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [1 x %..any], align 8
	%23 = alloca %..any, align 8
	%24 = alloca {%..any*, i64, i64}, align 8
	%25 = alloca [1 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%26 = load i1*, i1** %0, align 8
	%27 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$4c6, i64 0, i32 0), i64 19}, i1* %26, i32 32)
	; SelectorExpr
	%28 = load i32, i32* @debug_windows-27._ChosenCatalog, align 4
	store %..any zeroinitializer, %..any* %1
	%29 = bitcast i32* @debug_windows-27._ChosenCatalog to %..rawptr
	%30 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%31 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %29, %..rawptr* %31
	%32 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %30, %Type_Info** %32
	%33 = load %..any, %..any* %1, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	store [1 x %..any] zeroinitializer, [1 x %..any]* %3
	%34 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	store %..any %33, %..any* %34
	%35 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	%36 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 0
	store %..any* %35, %..any** %36
	%37 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %37
	%38 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %38
	%39 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$4c7, i64 0, i32 0), i64 24}, {%..any*, i64, i64} %39)
	; SelectorExpr
	; SelectorExpr
	%40 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 0
	%41 = load float, float* %40, align 4
	; SelectorExpr
	%42 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 1
	%43 = load float, float* %42, align 4
	store %..any zeroinitializer, %..any* %4
	%44 = bitcast float* %40 to %..rawptr
	%45 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%46 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %44, %..rawptr* %46
	%47 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %45, %Type_Info** %47
	%48 = load %..any, %..any* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%49 = bitcast float* %42 to %..rawptr
	%50 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%51 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %49, %..rawptr* %51
	%52 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %50, %Type_Info** %52
	%53 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %6
	store [2 x %..any] zeroinitializer, [2 x %..any]* %7
	%54 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 0
	store %..any %48, %..any* %54
	%55 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 1
	store %..any %53, %..any* %55
	%56 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 0
	%57 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 0
	store %..any* %56, %..any** %57
	%58 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 1
	store i64 2, i64* %58
	%59 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 2
	store i64 2, i64* %59
	%60 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %6, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$4c8, i64 0, i32 0), i64 33}, {%..any*, i64, i64} %60)
	; SelectorExpr
	%61 = load i32, i32* @debug_windows-27._ShowID, align 4
	store %..any zeroinitializer, %..any* %8
	%62 = bitcast i32* @debug_windows-27._ShowID to %..rawptr
	%63 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%64 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %62, %..rawptr* %64
	%65 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %63, %Type_Info** %65
	%66 = load %..any, %..any* %8, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	store [1 x %..any] zeroinitializer, [1 x %..any]* %10
	%67 = getelementptr inbounds [1 x %..any], [1 x %..any]* %10, i64 0, i32 0
	store %..any %66, %..any* %67
	%68 = getelementptr inbounds [1 x %..any], [1 x %..any]* %10, i64 0, i32 0
	%69 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 0
	store %..any* %68, %..any** %69
	%70 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 1
	store i64 1, i64* %70
	%71 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 2
	store i64 1, i64* %71
	%72 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$4c9, i64 0, i32 0), i64 24}, {%..any*, i64, i64} %72)
	; SelectorExpr
	call ccc void @igSeparator()
	; _CurrentViewTexture
	store i32 zeroinitializer, i32* %11
		; _ChosenCatalog
	store i32 zeroinitializer, i32* %12
		; _PreviewSize
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %13
		store %imgui-9.Vec2 {float 0x4034000000000000, float 0x4034000000000000}, %imgui-9.Vec2* %13
	; _ShowID
	store i32 zeroinitializer, i32* %14
		store i32 1, i32* %14
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %15
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %15
	%73 = bitcast %imgui-9.Vec2* %15 to i64*
	%74 = load i64, i64* %73, align 8
	%75 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4ca, i64 0, i32 0), i64 13}, i64 %74, i1 true, i32 0)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; RangeStmt
	; val
	store i1 zeroinitializer, i1* %16
		; id
	store %..string zeroinitializer, %..string* %17
		%76 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools, i64 0, i32 1
	%77 = getelementptr inbounds {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}* %76, i64 0, i32 1
	store %..string zeroinitializer, %..string* %18
	store i64 zeroinitializer, i64* %19
	store i64 -1, i64* %19
	br label %for.index.loop-1

for.index.loop-1:
	%78 = load i64, i64* %19, align 8
	%79 = add i64 %78, 1
	store i64 %79, i64* %19
	%80 = load i64, i64* %77, align 8
	%81 = icmp slt i64 %79, %80
	br i1 %81, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%82 = load i64, i64* %19, align 8
	%83 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}}* @debug_windows-27._GlobalDebugWndBools, i64 0, i32 1
	%84 = getelementptr inbounds {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}* %83, i64 0, i32 0
	%85 = load {%__Map_Key, i64, i1}*, {%__Map_Key, i64, i1}** %84, align 8
	%86 = getelementptr inbounds {%__Map_Key, i64, i1}, {%__Map_Key, i64, i1}* %85, i64 %82
	%87 = getelementptr inbounds {%__Map_Key, i64, i1}, {%__Map_Key, i64, i1}* %86, i64 0, i32 2
	%88 = load i1, i1* %87, align 1
	%89 = getelementptr inbounds {%__Map_Key, i64, i1}, {%__Map_Key, i64, i1}* %86, i64 0, i32 0
	%90 = getelementptr inbounds %__Map_Key, %__Map_Key* %89, i64 0, i32 1
	%91 = load %..string, %..string* %90, align 8
	store %..string %91, %..string* %18
	%92 = load %..string, %..string* %18, align 8
	store i1 %88, i1* %16
	store %..string %92, %..string* %17
	; SelectorExpr
	%93 = load %..string, %..string* %17, align 8
	store %..any zeroinitializer, %..any* %20
	%94 = bitcast %..string* %17 to %..rawptr
	%95 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%96 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 0
	store %..rawptr %94, %..rawptr* %96
	%97 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	store %Type_Info* %95, %Type_Info** %97
	%98 = load %..any, %..any* %20, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [1 x %..any] zeroinitializer, [1 x %..any]* %22
	%99 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	store %..any %98, %..any* %99
	%100 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	%101 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %100, %..any** %101
	%102 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %102
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %103
	%104 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4cb, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %104)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	%105 = load i1, i1* %16, align 1
	store %..any zeroinitializer, %..any* %23
	%106 = bitcast i1* %16 to %..rawptr
	%107 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%108 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 0
	store %..rawptr %106, %..rawptr* %108
	%109 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 1
	store %Type_Info* %107, %Type_Info** %109
	%110 = load %..any, %..any* %23, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %24
	store [1 x %..any] zeroinitializer, [1 x %..any]* %25
	%111 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	store %..any %110, %..any* %111
	%112 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	%113 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 0
	store %..any* %112, %..any** %113
	%114 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 1
	store i64 1, i64* %114
	%115 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 2
	store i64 1, i64* %115
	%116 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %24, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4cc, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %116)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	call ccc void @igSeparator()
	br label %for.index.loop-1

for.index.done-3:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 true)
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.StatOverlay(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca %imgui-9.Vec4, align 16
	%3 = alloca %imgui-9.GuiIO*, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..any, align 8
	%6 = alloca float, align 4
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [2 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
	store %imgui-9.Vec2 {float 0x4014000000000000, float 0x4039000000000000}, %imgui-9.Vec2* %1
	%9 = bitcast %imgui-9.Vec2* %1 to i64*
	%10 = load i64, i64* %9, align 8
	call ccc void @igSetNextWindowPos(i64 %10, i32 0)
	; SelectorExpr
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %2
	store %imgui-9.Vec4 {float 0x3fcd70a3c0000000, float 0x3fcd70a3c0000000, float 0x3fcd70a3c0000000, float 0x3fd9999980000000}, %imgui-9.Vec4* %2
	call ccc void @igPushStyleColor(i32 2, %imgui-9.Vec4* %2)
	; SelectorExpr
	%11 = load i1*, i1** %0, align 8
	%12 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4cd, i64 0, i32 0), i64 12}, i1* %11, i32 263)
	; io
	store %imgui-9.GuiIO* zeroinitializer, %imgui-9.GuiIO** %3
		; SelectorExpr
	%13 = call ccc %imgui-9.GuiIO* @igGetIO()
	store %imgui-9.GuiIO* %13, %imgui-9.GuiIO** %3
	; SelectorExpr
	; SelectorExpr
	%14 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %3, align 8
	%15 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %14, i64 0
	%16 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %15, i64 0, i32 42
	%17 = load float, float* %16, align 4
	; SelectorExpr
	%18 = load %imgui-9.GuiIO*, %imgui-9.GuiIO** %3, align 8
	%19 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %18, i64 0
	%20 = getelementptr inbounds %imgui-9.GuiIO, %imgui-9.GuiIO* %19, i64 0, i32 42
	%21 = load float, float* %20, align 4
	%22 = fdiv float 0x408f400000000000, %21
	store %..any zeroinitializer, %..any* %4
	%23 = bitcast float* %16 to %..rawptr
	%24 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%25 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %23, %..rawptr* %25
	%26 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %24, %Type_Info** %26
	%27 = load %..any, %..any* %4, align 8
	store %..any zeroinitializer, %..any* %5
	store float zeroinitializer, float* %6
	store float %22, float* %6
	%28 = bitcast float* %6 to %..rawptr
	%29 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%30 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %28, %..rawptr* %30
	%31 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %29, %Type_Info** %31
	%32 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [2 x %..any] zeroinitializer, [2 x %..any]* %8
	%33 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 0
	store %..any %27, %..any* %33
	%34 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 1
	store %..any %32, %..any* %34
	%35 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 0
	%36 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %35, %..any** %36
	%37 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 2, i64* %37
	%38 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 2, i64* %38
	%39 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$4ce, i64 0, i32 0), i64 26}, {%..any*, i64, i64} %39)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igEnd()
	; SelectorExpr
	call ccc void @igPopStyleColor(i32 1)
	ret void
}

define void @debug_windows-27.OpenGLExtensions(%..string %name, {%..string*, i64, i64,%Allocator} %extensions, i1* %show) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..string*, i64, i64,%Allocator}, align 8
	%2 = alloca i1*, align 8
	%3 = alloca %..string, align 8
	%4 = alloca i64, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	store {%..string*, i64, i64,%Allocator} zeroinitializer, {%..string*, i64, i64,%Allocator}* %1
		store {%..string*, i64, i64,%Allocator} %extensions, {%..string*, i64, i64,%Allocator}* %1
	store i1* zeroinitializer, i1** %2
		store i1* %show, i1** %2
	; SelectorExpr
	%6 = load %..string, %..string* %0, align 8
	%7 = load i1*, i1** %2, align 8
	%8 = call i1 @imgui-9.Begin(%..string %6, i1* %7, i32 32)
	; RangeStmt
	; ext
	store %..string zeroinitializer, %..string* %3
		%9 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %1, i64 0, i32 1
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-1

for.index.loop-1:
	%10 = load i64, i64* %4, align 8
	%11 = add i64 %10, 1
	store i64 %11, i64* %4
	%12 = load i64, i64* %9, align 8
	%13 = icmp slt i64 %11, %12
	br i1 %13, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%14 = load i64, i64* %4, align 8
	%15 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %1, i64 0, i32 0
	%16 = load %..string*, %..string** %15, align 8
	%17 = getelementptr inbounds %..string, %..string* %16, i64 %14
	%18 = load %..string, %..string* %17, align 8
	store %..string %18, %..string* %3
	; SelectorExpr
	%19 = load %..string, %..string* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	%20 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @imgui-9.Text(%..string %19, {%..any*, i64, i64} %20)
	br label %for.index.loop-1

for.index.done-3:
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.OpenGLTextureOverview(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %imgui-9.Vec2, align 4
	%2 = alloca i32, align 4
	%3 = alloca %imgui-9.Vec2, align 4
	%4 = alloca i32, align 4
	%5 = alloca i64, align 8
	%6 = alloca %imgui-9.Vec2, align 4
	%7 = alloca %imgui-9.Vec2, align 4
	%8 = alloca %imgui-9.Vec4, align 16
	%9 = alloca %imgui-9.Vec4, align 16
	%10 = alloca %..any, align 8
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca [1 x %..any], align 8
	%13 = alloca %imgui-9.Vec2, align 4
	%14 = alloca %imgui-9.Vec2, align 4
	%15 = alloca %imgui-9.Vec2, align 4
	%16 = alloca %imgui-9.Vec2, align 4
	%17 = alloca %imgui-9.Vec4, align 16
	%18 = alloca %imgui-9.Vec4, align 16
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%19 = load i1*, i1** %0, align 8
	%20 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4cf, i64 0, i32 0), i64 15}, i1* %19, i32 32)
	; SelectorExpr
	; SelectorExpr
	%21 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 0
	%22 = getelementptr inbounds float, float* %21, i64 0
	call void @imgui-9.DragFloat(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4d0, i64 0, i32 0), i64 13}, float* %22, float 0x3fc9999980000000, float 0x4034000000000000, float 0x4059000000000000, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4d1, i64 0, i32 0), i64 4}, float 0x3ff0000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; AssignStmt
	; SelectorExpr
	%23 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 1
	; SelectorExpr
	%24 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 0
	%25 = load float, float* %24, align 4
	store float %25, float* %23
	; size
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %1
		; SelectorExpr
	%26 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %1, i64 0
	call ccc void @igGetWindowSize(%imgui-9.Vec2* %26)
	; Columns
	store i32 zeroinitializer, i32* %2
		; SelectorExpr
	%27 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %1, i64 0, i32 0
	%28 = load float, float* %27, align 4
	; SelectorExpr
	%29 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, i64 0, i32 0
	%30 = load float, float* %29, align 4
	%31 = fadd float %30, 0x4038000000000000
	; SelectorExpr
	; SelectorExpr
	%32 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 1
	%33 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %32, align 8
	%34 = extractvalue {i32*, i64, i64,%Allocator} %33, 1
	%35 = trunc i64 %34 to i32
	%36 = call i32 @debug_windows-27.OpenGLTextureOverview._CalculateMaxColumns-0(float %28, float %31, i32 %35)
	store i32 %36, i32* %2
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %3
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %3
	%37 = bitcast %imgui-9.Vec2* %3 to i64*
	%38 = load i64, i64* %37, align 8
	%39 = call i1 @imgui-9.BeginChild(%..string zeroinitializer, i64 %38, i1 false, i32 0)
	; SelectorExpr
	%40 = load i32, i32* %2, align 4
	call ccc void @igColumns(i32 %40, i8* zeroinitializer, i1 false)
	; RangeStmt
	; id
	store i32 zeroinitializer, i32* %4
		; SelectorExpr
	; SelectorExpr
	%41 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 1
	%42 = getelementptr inbounds {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %41, i64 0, i32 1
	store i64 zeroinitializer, i64* %5
	store i64 -1, i64* %5
	br label %for.index.loop-1

for.index.loop-1:
	%43 = load i64, i64* %5, align 8
	%44 = add i64 %43, 1
	store i64 %44, i64* %5
	%45 = load i64, i64* %42, align 8
	%46 = icmp slt i64 %44, %45
	br i1 %46, label %for.index.body-2, label %for.index.done-7

for.index.body-2:
	%47 = load i64, i64* %5, align 8
	%48 = getelementptr inbounds {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %41, i64 0, i32 0
	%49 = load i32*, i32** %48, align 8
	%50 = getelementptr inbounds i32, i32* %49, i64 %47
	%51 = load i32, i32* %50, align 4
	store i32 %51, i32* %4
	; SelectorExpr
	%52 = load i32, i32* %4, align 4
	%53 = zext i32 %52 to i64
	%54 = inttoptr i64 %53 to %..rawptr
	%55 = load %imgui-9.Vec2, %imgui-9.Vec2* @debug_windows-27._PreviewSize, align 4
	%56 = bitcast %imgui-9.Vec2* @debug_windows-27._PreviewSize to i64*
	%57 = load i64, i64* %56, align 8
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %6
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %6
	%58 = bitcast %imgui-9.Vec2* %6 to i64*
	%59 = load i64, i64* %58, align 8
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %7
	store %imgui-9.Vec2 {float 0x3ff0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec2* %7
	%60 = bitcast %imgui-9.Vec2* %7 to i64*
	%61 = load i64, i64* %60, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %8
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %9
	store %imgui-9.Vec4 {float 0x3fed1eb840000000, float 0x3fd9999980000000, float 0x3fcd70a3c0000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %9
	call ccc void @igImage(%..rawptr %54, i64 %57, i64 %59, i64 %61, %imgui-9.Vec4* %8, %imgui-9.Vec4* %9)
	; IfStmt
	; SelectorExpr
	%62 = call ccc i1 @igIsItemHovered()
	br i1 %62, label %if.then-3, label %if.done-4

if.then-3:
	; SelectorExpr
	call ccc void @igBeginTooltip()
	; SelectorExpr
	%63 = load i32, i32* %4, align 4
	store %..any zeroinitializer, %..any* %10
	%64 = bitcast i32* %4 to %..rawptr
	%65 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%66 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %64, %..rawptr* %66
	%67 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %65, %Type_Info** %67
	%68 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	store [1 x %..any] zeroinitializer, [1 x %..any]* %12
	%69 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	store %..any %68, %..any* %69
	%70 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	%71 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 0
	store %..any* %70, %..any** %71
	%72 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 1
	store i64 1, i64* %72
	%73 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 2
	store i64 1, i64* %73
	%74 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4d2, i64 0, i32 0), i64 6}, {%..any*, i64, i64} %74)
	; SelectorExpr
	call ccc void @igEndTooltip()
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	%75 = call ccc i1 @igIsItemClicked(i32 0)
	br i1 %75, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	%76 = load i32, i32* %4, align 4
	store i32 %76, i32* @debug_windows-27._ShowID
	br label %if.done-6

if.done-6:
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %for.index.loop-1

for.index.done-7:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igEnd()
	; SelectorExpr
	%77 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4d3, i64 0, i32 0), i64 12}, i1* zeroinitializer, i32 40)
	; size
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %13
		; SelectorExpr
	%78 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %13, i64 0
	call ccc void @igGetWindowSize(%imgui-9.Vec2* %78)
	; SelectorExpr
	%79 = load i32, i32* @debug_windows-27._ShowID, align 4
	%80 = zext i32 %79 to i64
	%81 = inttoptr i64 %80 to %..rawptr
	; CompoundLit
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %14
	store %imgui-9.Vec2 {float zeroinitializer, float zeroinitializer}, %imgui-9.Vec2* %14
	; SelectorExpr
	%82 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %13, i64 0, i32 0
	%83 = load float, float* %82, align 4
	%84 = fsub float %83, 0x4030000000000000
	%85 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %14, i64 0, i32 0
	store float %84, float* %85
	; SelectorExpr
	%86 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %13, i64 0, i32 1
	%87 = load float, float* %86, align 4
	%88 = fsub float %87, 0x4041800000000000
	%89 = getelementptr inbounds %imgui-9.Vec2, %imgui-9.Vec2* %14, i64 0, i32 1
	store float %88, float* %89
	%90 = load %imgui-9.Vec2, %imgui-9.Vec2* %14, align 4
	%91 = bitcast %imgui-9.Vec2* %14 to i64*
	%92 = load i64, i64* %91, align 8
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %15
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %15
	%93 = bitcast %imgui-9.Vec2* %15 to i64*
	%94 = load i64, i64* %93, align 8
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %16
	store %imgui-9.Vec2 {float 0x3ff0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec2* %16
	%95 = bitcast %imgui-9.Vec2* %16 to i64*
	%96 = load i64, i64* %95, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %17
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %17
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %18
	store %imgui-9.Vec4 {float 0x3fed1eb840000000, float 0x3fd9999980000000, float 0x3fcd70a3c0000000, float 0x0000000000000000}, %imgui-9.Vec4* %18
	call ccc void @igImage(%..rawptr %81, i64 %92, i64 %94, i64 %96, %imgui-9.Vec4* %17, %imgui-9.Vec4* %18)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define i32 @debug_windows-27.OpenGLTextureOverview._CalculateMaxColumns-0(float %w, float %csize, i32 %max) {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca float, align 4
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	store float zeroinitializer, float* %0
		store float %w, float* %0
	store float zeroinitializer, float* %1
		store float %csize, float* %1
	store i32 zeroinitializer, i32* %2
		store i32 %max, i32* %2
	; Columns
	store i32 zeroinitializer, i32* %3
		%4 = load float, float* %0, align 4
	%5 = load float, float* %1, align 4
	%6 = fdiv float %4, %5
	%7 = fptosi float %6 to i32
	store i32 %7, i32* %3
	; IfStmt
	%8 = load i32, i32* %3, align 4
	%9 = load i32, i32* %2, align 4
	%10 = icmp sgt i32 %8, %9
	br i1 %10, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	%11 = load i32, i32* %2, align 4
	store i32 %11, i32* %3
	br label %if.done-2

if.done-2:
	; IfStmt
	%12 = load i32, i32* %3, align 4
	%13 = icmp sle i32 %12, 0
	br i1 %13, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	store i32 1, i32* %3
	br label %if.done-4

if.done-4:
	; ReturnStmt
	%14 = load i32, i32* %3, align 4
	ret i32 %14
}

define void @debug_windows-27.OpenGLInfo(%gl-10.OpenGLVars_t* %vars, i1* %show) {
decls-0:
	%0 = alloca %gl-10.OpenGLVars_t*, align 8
	%1 = alloca i1*, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca %..any, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [2 x %..any], align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca [2 x %..any], align 8
	%11 = alloca %..any, align 8
	%12 = alloca {%..any*, i64, i64}, align 8
	%13 = alloca [1 x %..any], align 8
	%14 = alloca %..any, align 8
	%15 = alloca {%..any*, i64, i64}, align 8
	%16 = alloca [1 x %..any], align 8
	%17 = alloca %..any, align 8
	%18 = alloca {%..any*, i64, i64}, align 8
	%19 = alloca [1 x %..any], align 8
	%20 = alloca %..any, align 8
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [1 x %..any], align 8
	%23 = alloca %..any, align 8
	%24 = alloca {%..any*, i64, i64}, align 8
	%25 = alloca [1 x %..any], align 8
	%26 = alloca %..any, align 8
	%27 = alloca {%..any*, i64, i64}, align 8
	%28 = alloca [1 x %..any], align 8
	%29 = alloca %..any, align 8
	%30 = alloca {%..any*, i64, i64}, align 8
	%31 = alloca [1 x %..any], align 8
	%32 = alloca %..any, align 8
	%33 = alloca i64, align 8
	%34 = alloca {%..any*, i64, i64}, align 8
	%35 = alloca [1 x %..any], align 8
	%36 = alloca %..any, align 8
	%37 = alloca %..any, align 8
	%38 = alloca {%..any*, i64, i64}, align 8
	%39 = alloca [2 x %..any], align 8
	%40 = alloca %imgui-9.Vec2, align 4
	%41 = alloca %..string, align 8
	%42 = alloca %gl-10.DebugFunctionLoadStatus, align 8
	%43 = alloca i64, align 8
	%44 = alloca {%..any*, i64, i64}, align 8
	%45 = alloca %imgui-9.Vec4, align 4
	%46 = alloca %..any, align 8
	%47 = alloca {%..any*, i64, i64}, align 8
	%48 = alloca [1 x %..any], align 8
	%49 = alloca %imgui-9.Vec4, align 16
	%50 = alloca i1, align 1
	%51 = alloca i1, align 1
	store %gl-10.OpenGLVars_t* zeroinitializer, %gl-10.OpenGLVars_t** %0
		store %gl-10.OpenGLVars_t* %vars, %gl-10.OpenGLVars_t** %0
	store i1* zeroinitializer, i1** %1
		store i1* %show, i1** %1
	; SelectorExpr
	%52 = load i1*, i1** %1, align 8
	%53 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4d4, i64 0, i32 0), i64 11}, i1* %52, i32 32)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	%54 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4d5, i64 0, i32 0), i64 9}, {%..any*, i64, i64} %54)
	; SelectorExpr
	call ccc void @igIndent(float 0x4034000000000000)
	; SelectorExpr
	; SelectorExpr
	%55 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%56 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %55, i64 0
	%57 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %56, i64 0, i32 7
	%58 = load i32, i32* %57, align 4
	; SelectorExpr
	%59 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%60 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %59, i64 0
	%61 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %60, i64 0, i32 9
	%62 = load i32, i32* %61, align 4
	store %..any zeroinitializer, %..any* %3
	%63 = bitcast i32* %57 to %..rawptr
	%64 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%65 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %63, %..rawptr* %65
	%66 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %64, %Type_Info** %66
	%67 = load %..any, %..any* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%68 = bitcast i32* %61 to %..rawptr
	%69 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%70 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %68, %..rawptr* %70
	%71 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %69, %Type_Info** %71
	%72 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [2 x %..any] zeroinitializer, [2 x %..any]* %6
	%73 = getelementptr inbounds [2 x %..any], [2 x %..any]* %6, i64 0, i32 0
	store %..any %67, %..any* %73
	%74 = getelementptr inbounds [2 x %..any], [2 x %..any]* %6, i64 0, i32 1
	store %..any %72, %..any* %74
	%75 = getelementptr inbounds [2 x %..any], [2 x %..any]* %6, i64 0, i32 0
	%76 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %75, %..any** %76
	%77 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 2, i64* %77
	%78 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 2, i64* %78
	%79 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4d6, i64 0, i32 0), i64 14}, {%..any*, i64, i64} %79)
	; SelectorExpr
	; SelectorExpr
	%80 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%81 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %80, i64 0
	%82 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %81, i64 0, i32 8
	%83 = load i32, i32* %82, align 4
	; SelectorExpr
	%84 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%85 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %84, i64 0
	%86 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %85, i64 0, i32 8
	%87 = load i32, i32* %86, align 4
	store %..any zeroinitializer, %..any* %7
	%88 = bitcast i32* %82 to %..rawptr
	%89 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%90 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %88, %..rawptr* %90
	%91 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %89, %Type_Info** %91
	%92 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%93 = bitcast i32* %86 to %..rawptr
	%94 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%95 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %93, %..rawptr* %95
	%96 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %94, %Type_Info** %96
	%97 = load %..any, %..any* %8, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	store [2 x %..any] zeroinitializer, [2 x %..any]* %10
	%98 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	store %..any %92, %..any* %98
	%99 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 1
	store %..any %97, %..any* %99
	%100 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	%101 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 0
	store %..any* %100, %..any** %101
	%102 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 1
	store i64 2, i64* %102
	%103 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 2
	store i64 2, i64* %103
	%104 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4d7, i64 0, i32 0), i64 14}, {%..any*, i64, i64} %104)
	; SelectorExpr
	; SelectorExpr
	%105 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%106 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %105, i64 0
	%107 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %106, i64 0, i32 3
	%108 = load %..string, %..string* %107, align 8
	store %..any zeroinitializer, %..any* %11
	%109 = bitcast %..string* %107 to %..rawptr
	%110 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%111 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %109, %..rawptr* %111
	%112 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %110, %Type_Info** %112
	%113 = load %..any, %..any* %11, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %12
	store [1 x %..any] zeroinitializer, [1 x %..any]* %13
	%114 = getelementptr inbounds [1 x %..any], [1 x %..any]* %13, i64 0, i32 0
	store %..any %113, %..any* %114
	%115 = getelementptr inbounds [1 x %..any], [1 x %..any]* %13, i64 0, i32 0
	%116 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 0
	store %..any* %115, %..any** %116
	%117 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 1
	store i64 1, i64* %117
	%118 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 2
	store i64 1, i64* %118
	%119 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %12, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4d8, i64 0, i32 0), i64 11}, {%..any*, i64, i64} %119)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4034000000000000)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%120 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 2
	%121 = load i64, i64* %120, align 8
	store %..any zeroinitializer, %..any* %14
	%122 = bitcast i64* %120 to %..rawptr
	%123 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%124 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 0
	store %..rawptr %122, %..rawptr* %124
	%125 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 1
	store %Type_Info* %123, %Type_Info** %125
	%126 = load %..any, %..any* %14, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %15
	store [1 x %..any] zeroinitializer, [1 x %..any]* %16
	%127 = getelementptr inbounds [1 x %..any], [1 x %..any]* %16, i64 0, i32 0
	store %..any %126, %..any* %127
	%128 = getelementptr inbounds [1 x %..any], [1 x %..any]* %16, i64 0, i32 0
	%129 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %15, i64 0, i32 0
	store %..any* %128, %..any** %129
	%130 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %15, i64 0, i32 1
	store i64 1, i64* %130
	%131 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %15, i64 0, i32 2
	store i64 1, i64* %131
	%132 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %15, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4d9, i64 0, i32 0), i64 16}, {%..any*, i64, i64} %132)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; SelectorExpr
	%133 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%134 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %133, i64 0
	%135 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %134, i64 0, i32 4
	%136 = load %..string, %..string* %135, align 8
	store %..any zeroinitializer, %..any* %17
	%137 = bitcast %..string* %135 to %..rawptr
	%138 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%139 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %137, %..rawptr* %139
	%140 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %138, %Type_Info** %140
	%141 = load %..any, %..any* %17, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %18
	store [1 x %..any] zeroinitializer, [1 x %..any]* %19
	%142 = getelementptr inbounds [1 x %..any], [1 x %..any]* %19, i64 0, i32 0
	store %..any %141, %..any* %142
	%143 = getelementptr inbounds [1 x %..any], [1 x %..any]* %19, i64 0, i32 0
	%144 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 0
	store %..any* %143, %..any** %144
	%145 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 1
	store i64 1, i64* %145
	%146 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %18, i64 0, i32 2
	store i64 1, i64* %146
	%147 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %18, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4da, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %147)
	; SelectorExpr
	; SelectorExpr
	%148 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%149 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %148, i64 0
	%150 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %149, i64 0, i32 5
	%151 = load %..string, %..string* %150, align 8
	store %..any zeroinitializer, %..any* %20
	%152 = bitcast %..string* %150 to %..rawptr
	%153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%154 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 0
	store %..rawptr %152, %..rawptr* %154
	%155 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	store %Type_Info* %153, %Type_Info** %155
	%156 = load %..any, %..any* %20, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [1 x %..any] zeroinitializer, [1 x %..any]* %22
	%157 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	store %..any %156, %..any* %157
	%158 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	%159 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %158, %..any** %159
	%160 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %160
	%161 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %161
	%162 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4db, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %162)
	; SelectorExpr
	; SelectorExpr
	%163 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%164 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %163, i64 0
	%165 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %164, i64 0, i32 11
	%166 = load i32, i32* %165, align 4
	store %..any zeroinitializer, %..any* %23
	%167 = bitcast i32* %165 to %..rawptr
	%168 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%169 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 0
	store %..rawptr %167, %..rawptr* %169
	%170 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 1
	store %Type_Info* %168, %Type_Info** %170
	%171 = load %..any, %..any* %23, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %24
	store [1 x %..any] zeroinitializer, [1 x %..any]* %25
	%172 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	store %..any %171, %..any* %172
	%173 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	%174 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 0
	store %..any* %173, %..any** %174
	%175 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 1
	store i64 1, i64* %175
	%176 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 2
	store i64 1, i64* %176
	%177 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %24, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4dc, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %177)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; SelectorExpr
	%178 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%179 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %178, i64 0
	%180 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %179, i64 0, i32 12
	%181 = load i32, i32* %180, align 4
	store %..any zeroinitializer, %..any* %26
	%182 = bitcast i32* %180 to %..rawptr
	%183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%184 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 0
	store %..rawptr %182, %..rawptr* %184
	%185 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 1
	store %Type_Info* %183, %Type_Info** %185
	%186 = load %..any, %..any* %26, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %27
	store [1 x %..any] zeroinitializer, [1 x %..any]* %28
	%187 = getelementptr inbounds [1 x %..any], [1 x %..any]* %28, i64 0, i32 0
	store %..any %186, %..any* %187
	%188 = getelementptr inbounds [1 x %..any], [1 x %..any]* %28, i64 0, i32 0
	%189 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 0
	store %..any* %188, %..any** %189
	%190 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 1
	store i64 1, i64* %190
	%191 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 2
	store i64 1, i64* %191
	%192 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %27, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$4dd, i64 0, i32 0), i64 30}, {%..any*, i64, i64} %192)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0xbff0000000000000)
	; IfStmt
	; SelectorExpr
	%193 = call i1 @imgui-9.SmallButton(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4de, i64 0, i32 0), i64 9})
	br i1 %193, label %if.then-1, label %if.done-2

if.then-1:
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4df, i64 0, i32 0), i64 20}, i1 true)
	br label %if.done-2

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%194 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%195 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %194, i64 0
	%196 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %195, i64 0, i32 13
	%197 = load i32, i32* %196, align 4
	store %..any zeroinitializer, %..any* %29
	%198 = bitcast i32* %196 to %..rawptr
	%199 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%200 = getelementptr inbounds %..any, %..any* %29, i64 0, i32 0
	store %..rawptr %198, %..rawptr* %200
	%201 = getelementptr inbounds %..any, %..any* %29, i64 0, i32 1
	store %Type_Info* %199, %Type_Info** %201
	%202 = load %..any, %..any* %29, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %30
	store [1 x %..any] zeroinitializer, [1 x %..any]* %31
	%203 = getelementptr inbounds [1 x %..any], [1 x %..any]* %31, i64 0, i32 0
	store %..any %202, %..any* %203
	%204 = getelementptr inbounds [1 x %..any], [1 x %..any]* %31, i64 0, i32 0
	%205 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %30, i64 0, i32 0
	store %..any* %204, %..any** %205
	%206 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %30, i64 0, i32 1
	store i64 1, i64* %206
	%207 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %30, i64 0, i32 2
	store i64 1, i64* %207
	%208 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %30, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$4e0, i64 0, i32 0), i64 30}, {%..any*, i64, i64} %208)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0xbff0000000000000)
	; IfStmt
	; SelectorExpr
	%209 = call i1 @imgui-9.SmallButton(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4e1, i64 0, i32 0), i64 9})
	br i1 %209, label %if.then-3, label %if.done-4

if.then-3:
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$4e2, i64 0, i32 0), i64 23}, i1 true)
	br label %if.done-4

if.done-4:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%210 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 1
	%211 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %210, align 8
	%212 = extractvalue {i32*, i64, i64,%Allocator} %211, 1
	store %..any zeroinitializer, %..any* %32
	store i64 zeroinitializer, i64* %33
	store i64 %212, i64* %33
	%213 = bitcast i64* %33 to %..rawptr
	%214 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%215 = getelementptr inbounds %..any, %..any* %32, i64 0, i32 0
	store %..rawptr %213, %..rawptr* %215
	%216 = getelementptr inbounds %..any, %..any* %32, i64 0, i32 1
	store %Type_Info* %214, %Type_Info** %216
	%217 = load %..any, %..any* %32, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %34
	store [1 x %..any] zeroinitializer, [1 x %..any]* %35
	%218 = getelementptr inbounds [1 x %..any], [1 x %..any]* %35, i64 0, i32 0
	store %..any %217, %..any* %218
	%219 = getelementptr inbounds [1 x %..any], [1 x %..any]* %35, i64 0, i32 0
	%220 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %34, i64 0, i32 0
	store %..any* %219, %..any** %220
	%221 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %34, i64 0, i32 1
	store i64 1, i64* %221
	%222 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %34, i64 0, i32 2
	store i64 1, i64* %222
	%223 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %34, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$4e3, i64 0, i32 0), i64 29}, {%..any*, i64, i64} %223)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0xbff0000000000000)
	; IfStmt
	; SelectorExpr
	%224 = call i1 @imgui-9.SmallButton(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4e4, i64 0, i32 0), i64 13})
	br i1 %224, label %if.then-5, label %if.done-6

if.then-5:
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$4e5, i64 0, i32 0), i64 21}, i1 true)
	br label %if.done-6

if.done-6:
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%225 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 4
	%226 = load i32, i32* %225, align 4
	; SelectorExpr
	; SelectorExpr
	%227 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 3
	%228 = load i32, i32* %227, align 4
	store %..any zeroinitializer, %..any* %36
	%229 = bitcast i32* %225 to %..rawptr
	%230 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%231 = getelementptr inbounds %..any, %..any* %36, i64 0, i32 0
	store %..rawptr %229, %..rawptr* %231
	%232 = getelementptr inbounds %..any, %..any* %36, i64 0, i32 1
	store %Type_Info* %230, %Type_Info** %232
	%233 = load %..any, %..any* %36, align 8
	store %..any zeroinitializer, %..any* %37
	%234 = bitcast i32* %227 to %..rawptr
	%235 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%236 = getelementptr inbounds %..any, %..any* %37, i64 0, i32 0
	store %..rawptr %234, %..rawptr* %236
	%237 = getelementptr inbounds %..any, %..any* %37, i64 0, i32 1
	store %Type_Info* %235, %Type_Info** %237
	%238 = load %..any, %..any* %37, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %38
	store [2 x %..any] zeroinitializer, [2 x %..any]* %39
	%239 = getelementptr inbounds [2 x %..any], [2 x %..any]* %39, i64 0, i32 0
	store %..any %233, %..any* %239
	%240 = getelementptr inbounds [2 x %..any], [2 x %..any]* %39, i64 0, i32 1
	store %..any %238, %..any* %240
	%241 = getelementptr inbounds [2 x %..any], [2 x %..any]* %39, i64 0, i32 0
	%242 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 0
	store %..any* %241, %..any** %242
	%243 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 1
	store i64 2, i64* %243
	%244 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 2
	store i64 2, i64* %244
	%245 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %38, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$4e6, i64 0, i32 0), i64 33}, {%..any*, i64, i64} %245)
	; SelectorExpr
	call ccc void @igSeparator()
	; IfStmt
	; SelectorExpr
	%246 = call i1 @imgui-9.CollapsingHeader(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4e7, i64 0, i32 0), i64 16}, i32 0)
	br i1 %246, label %if.then-7, label %if.done-14

if.then-7:
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %40
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %40
	%247 = bitcast %imgui-9.Vec2* %40 to i64*
	%248 = load i64, i64* %247, align 8
	%249 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4e8, i64 0, i32 0), i64 20}, i64 %248, i1 true, i32 0)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 false)
	; suc
	store %..string zeroinitializer, %..string* %41
		; RangeStmt
	; status
	store %gl-10.DebugFunctionLoadStatus zeroinitializer, %gl-10.DebugFunctionLoadStatus* %42
		; SelectorExpr
	; SelectorExpr
	%250 = getelementptr inbounds %gl-10.DebugInfo_t, %gl-10.DebugInfo_t* @gl-10.DebugInfo, i64 0, i32 0
	%251 = getelementptr inbounds {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %250, i64 0, i32 1
	store i64 zeroinitializer, i64* %43
	store i64 -1, i64* %43
	br label %for.index.loop-8

for.index.loop-8:
	%252 = load i64, i64* %43, align 8
	%253 = add i64 %252, 1
	store i64 %253, i64* %43
	%254 = load i64, i64* %251, align 8
	%255 = icmp slt i64 %253, %254
	br i1 %255, label %for.index.body-9, label %for.index.done-13

for.index.body-9:
	%256 = load i64, i64* %43, align 8
	%257 = getelementptr inbounds {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%gl-10.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %250, i64 0, i32 0
	%258 = load %gl-10.DebugFunctionLoadStatus*, %gl-10.DebugFunctionLoadStatus** %257, align 8
	%259 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %258, i64 %256
	%260 = load %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %259, align 8
	store %gl-10.DebugFunctionLoadStatus %260, %gl-10.DebugFunctionLoadStatus* %42
	; SelectorExpr
	; SelectorExpr
	%261 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %42, i64 0, i32 0
	%262 = load %..string, %..string* %261, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %44
	%263 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %44, align 8
	call void @imgui-9.Text(%..string %262, {%..any*, i64, i64} %263)
	; SelectorExpr
	call ccc void @igNextColumn()
	; c
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %45
		; IfStmt
	; SelectorExpr
	%264 = getelementptr inbounds %gl-10.DebugFunctionLoadStatus, %gl-10.DebugFunctionLoadStatus* %42, i64 0, i32 3
	%265 = load i1, i1* %264, align 1
	br i1 %265, label %if.then-10, label %if.else-11

if.then-10:
	; AssignStmt
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x3fe8f5c280000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %45
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4e9, i64 0, i32 0), i64 4}, %..string* %41
	br label %if.done-12

if.else-11:
	; AssignStmt
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %45
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4ea, i64 0, i32 0), i64 5}, %..string* %41
	br label %if.done-12

if.done-12:
	; SelectorExpr
	%266 = load %imgui-9.Vec4, %imgui-9.Vec4* %45, align 4
	%267 = load %..string, %..string* %41, align 8
	store %..any zeroinitializer, %..any* %46
	%268 = bitcast %..string* %41 to %..rawptr
	%269 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%270 = getelementptr inbounds %..any, %..any* %46, i64 0, i32 0
	store %..rawptr %268, %..rawptr* %270
	%271 = getelementptr inbounds %..any, %..any* %46, i64 0, i32 1
	store %Type_Info* %269, %Type_Info** %271
	%272 = load %..any, %..any* %46, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %47
	store [1 x %..any] zeroinitializer, [1 x %..any]* %48
	%273 = getelementptr inbounds [1 x %..any], [1 x %..any]* %48, i64 0, i32 0
	store %..any %272, %..any* %273
	%274 = getelementptr inbounds [1 x %..any], [1 x %..any]* %48, i64 0, i32 0
	%275 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %47, i64 0, i32 0
	store %..any* %274, %..any** %275
	%276 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %47, i64 0, i32 1
	store i64 1, i64* %276
	%277 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %47, i64 0, i32 2
	store i64 1, i64* %277
	%278 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %47, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %49
	store %imgui-9.Vec4 %266, %imgui-9.Vec4* %49
	call void @imgui-9.TextColored(%imgui-9.Vec4* %49, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4eb, i64 0, i32 0), i64 10}, {%..any*, i64, i64} %278)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %for.index.loop-8

for.index.done-13:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igEndChild()
	br label %if.done-14

if.done-14:
	; SelectorExpr
	call ccc void @igEnd()
	; IfStmt
	%279 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4ec, i64 0, i32 0), i64 20})
	br i1 %279, label %if.then-15, label %if.done-16

if.then-15:
	; b
	store i1 zeroinitializer, i1* %50
		%280 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4ed, i64 0, i32 0), i64 20})
	store i1 %280, i1* %50
	; SelectorExpr
	%281 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%282 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %281, i64 0
	%283 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %282, i64 0, i32 0
	%284 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %283, align 8
	%285 = getelementptr inbounds i1, i1* %50, i64 0
	call void @debug_windows-27.OpenGLExtensions(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4ee, i64 0, i32 0), i64 15}, {%..string*, i64, i64,%Allocator} %284, i1* %285)
	%286 = load i1, i1* %50, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4ef, i64 0, i32 0), i64 20}, i1 %286)
	br label %if.done-16

if.done-16:
	; IfStmt
	%287 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$4f0, i64 0, i32 0), i64 23})
	br i1 %287, label %if.then-17, label %if.done-18

if.then-17:
	; b
	store i1 zeroinitializer, i1* %51
		%288 = call i1 @debug_windows-27.GetWindowState(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$4f1, i64 0, i32 0), i64 23})
	store i1 %288, i1* %51
	; SelectorExpr
	%289 = load %gl-10.OpenGLVars_t*, %gl-10.OpenGLVars_t** %0, align 8
	%290 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %289, i64 0
	%291 = getelementptr inbounds %gl-10.OpenGLVars_t, %gl-10.OpenGLVars_t* %290, i64 0, i32 1
	%292 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %291, align 8
	%293 = getelementptr inbounds i1, i1* %51, i64 0
	call void @debug_windows-27.OpenGLExtensions(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4f2, i64 0, i32 0), i64 14}, {%..string*, i64, i64,%Allocator} %292, i1* %293)
	%294 = load i1, i1* %51, align 1
	call void @debug_windows-27.SetWindowState(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$4f3, i64 0, i32 0), i64 23}, i1 %294)
	br label %if.done-18

if.done-18:
	call void @debug_windows-27.TryShowWindow(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$4f4, i64 0, i32 0), i64 21}, void (i1*)* @debug_windows-27.OpenGLTextureOverview)
	ret void
}

define void @debug_windows-27._PrintGamepadName(i64 %id, i32 %err) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i32, align 4
	%2 = alloca %..any, align 8
	%3 = alloca i64, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	%6 = alloca i1, align 1
	%7 = alloca %imgui-9.Vec4, align 4
	%8 = alloca %..any, align 8
	%9 = alloca %..string, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca %imgui-9.Vec4, align 16
	%13 = alloca {%..any*, i64, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %id, i64* %0
	store i32 zeroinitializer, i32* %1
		store i32 %err, i32* %1
	; SelectorExpr
	%14 = load i64, i64* %0, align 8
	%15 = add i64 %14, 1
	store %..any zeroinitializer, %..any* %2
	store i64 zeroinitializer, i64* %3
	store i64 %15, i64* %3
	%16 = bitcast i64* %3 to %..rawptr
	%17 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%18 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %16, %..rawptr* %18
	%19 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %17, %Type_Info** %19
	%20 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%21 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %20, %..any* %21
	%22 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%23 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %22, %..any** %23
	%24 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %24
	%25 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %25
	%26 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4f5, i64 0, i32 0), i64 11}, {%..any*, i64, i64} %26)
	; b
	store i1 zeroinitializer, i1* %6
		%27 = load i32, i32* %1, align 4
	%28 = icmp eq i32 %27, 0
	store i1 %28, i1* %6
	; c
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %7
		; IfStmt
	%29 = load i1, i1* %6, align 1
	br i1 %29, label %if.then-1, label %if.else-2

if.then-1:
	; AssignStmt
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x3fe8f5c280000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %7
	br label %if.done-3

if.else-2:
	; AssignStmt
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %7
	br label %if.done-3

if.done-3:
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0x0000000000000000)
	; SelectorExpr
	%30 = load %imgui-9.Vec4, %imgui-9.Vec4* %7, align 4
	; TernaryExpr
	%31 = load i1, i1* %6, align 1
	br i1 %31, label %if.then-4, label %if.else-5

if.then-4:
	br label %if.done-6

if.else-5:
	br label %if.done-6

if.done-6:
	%32 = phi %..string [ {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4f6, i64 0, i32 0), i64 9}, %if.then-4 ], [ {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4f7, i64 0, i32 0), i64 13}, %if.else-5 ]
	store %..any zeroinitializer, %..any* %8
	store %..string zeroinitializer, %..string* %9
	store %..string %32, %..string* %9
	%33 = bitcast %..string* %9 to %..rawptr
	%34 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%35 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %33, %..rawptr* %35
	%36 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %34, %Type_Info** %36
	%37 = load %..any, %..any* %8, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%38 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %37, %..any* %38
	%39 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%40 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %39, %..any** %40
	%41 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %41
	%42 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %42
	%43 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %12
	store %imgui-9.Vec4 %30, %imgui-9.Vec4* %12
	call void @imgui-9.TextColored(%imgui-9.Vec4* %12, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4f8, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %43)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0x0000000000000000)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	%44 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4f9, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %44)
	ret void
}

define void @debug_windows-27.ShowXinputInfoWindow(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1 x %..any], align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca [2 x %..any], align 8
	%11 = alloca %imgui-9.Vec2, align 4
	%12 = alloca %xinput-13.DebugFunctionLoadStatus, align 8
	%13 = alloca i64, align 8
	%14 = alloca {%..any*, i64, i64}, align 8
	%15 = alloca %..any, align 8
	%16 = alloca %..any, align 8
	%17 = alloca {%..any*, i64, i64}, align 8
	%18 = alloca [2 x %..any], align 8
	%19 = alloca i32, align 4
	%20 = alloca i64, align 8
	%21 = alloca {%Type_Info.Enum*, i1}, align 8
	%22 = alloca i64, align 8
	%23 = alloca %xinput-13.Capabilities, align 2
	%24 = alloca i32, align 4
	%25 = alloca {%..any*, i64, i64}, align 8
	%26 = alloca %..any, align 8
	%27 = alloca {%..any*, i64, i64}, align 8
	%28 = alloca [1 x %..any], align 8
	%29 = alloca {%..any*, i64, i64}, align 8
	%30 = alloca %xinput-13.Capabilities, align 16
	%31 = alloca %..any, align 8
	%32 = alloca i1, align 1
	%33 = alloca {%..any*, i64, i64}, align 8
	%34 = alloca [1 x %..any], align 8
	%35 = alloca %xinput-13.Capabilities, align 16
	%36 = alloca %..any, align 8
	%37 = alloca i1, align 1
	%38 = alloca {%..any*, i64, i64}, align 8
	%39 = alloca [1 x %..any], align 8
	%40 = alloca %xinput-13.Capabilities, align 16
	%41 = alloca %..any, align 8
	%42 = alloca i1, align 1
	%43 = alloca {%..any*, i64, i64}, align 8
	%44 = alloca [1 x %..any], align 8
	%45 = alloca %xinput-13.Capabilities, align 16
	%46 = alloca %..any, align 8
	%47 = alloca i1, align 1
	%48 = alloca {%..any*, i64, i64}, align 8
	%49 = alloca [1 x %..any], align 8
	%50 = alloca %xinput-13.Capabilities, align 16
	%51 = alloca %..any, align 8
	%52 = alloca i1, align 1
	%53 = alloca {%..any*, i64, i64}, align 8
	%54 = alloca [1 x %..any], align 8
	%55 = alloca {%..any*, i64, i64}, align 8
	%56 = alloca %..string, align 8
	%57 = alloca %..any, align 8
	%58 = alloca {%..any*, i64, i64}, align 8
	%59 = alloca [1 x %..any], align 8
	%60 = alloca %..string, align 8
	%61 = alloca %..any, align 8
	%62 = alloca {%..any*, i64, i64}, align 8
	%63 = alloca [1 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%64 = load i1*, i1** %0, align 8
	%65 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4fa, i64 0, i32 0), i64 11}, i1* %64, i32 32)
	; SelectorExpr
	; SelectorExpr
	%66 = load i64, i64* @xinput-13.Version, align 8
	store %..any zeroinitializer, %..any* %1
	%67 = bitcast i64* @xinput-13.Version to %..rawptr
	%68 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 311
	%69 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %67, %..rawptr* %69
	%70 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %68, %Type_Info** %70
	%71 = load %..any, %..any* %1, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	store [1 x %..any] zeroinitializer, [1 x %..any]* %3
	%72 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	store %..any %71, %..any* %72
	%73 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	%74 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 0
	store %..any* %73, %..any** %74
	%75 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %75
	%76 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %76
	%77 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4fb, i64 0, i32 0), i64 11}, {%..any*, i64, i64} %77)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%78 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 1
	%79 = load i64, i64* %78, align 8
	store %..any zeroinitializer, %..any* %4
	%80 = bitcast i64* %78 to %..rawptr
	%81 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%82 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %80, %..rawptr* %82
	%83 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %81, %Type_Info** %83
	%84 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%85 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %84, %..any* %85
	%86 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%87 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 0
	store %..any* %86, %..any** %87
	%88 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %88
	%89 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %89
	%90 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$4fc, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %90)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%91 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 3
	%92 = load i32, i32* %91, align 4
	; SelectorExpr
	; SelectorExpr
	%93 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 2
	%94 = load i32, i32* %93, align 4
	store %..any zeroinitializer, %..any* %7
	%95 = bitcast i32* %91 to %..rawptr
	%96 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%97 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %95, %..rawptr* %97
	%98 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %96, %Type_Info** %98
	%99 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%100 = bitcast i32* %93 to %..rawptr
	%101 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%102 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %100, %..rawptr* %102
	%103 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %101, %Type_Info** %103
	%104 = load %..any, %..any* %8, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	store [2 x %..any] zeroinitializer, [2 x %..any]* %10
	%105 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	store %..any %99, %..any* %105
	%106 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 1
	store %..any %104, %..any* %106
	%107 = getelementptr inbounds [2 x %..any], [2 x %..any]* %10, i64 0, i32 0
	%108 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 0
	store %..any* %107, %..any** %108
	%109 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 1
	store i64 2, i64* %109
	%110 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %9, i64 0, i32 2
	store i64 2, i64* %110
	%111 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$4fd, i64 0, i32 0), i64 33}, {%..any*, i64, i64} %111)
	; IfStmt
	; SelectorExpr
	%112 = call i1 @imgui-9.CollapsingHeader(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4fe, i64 0, i32 0), i64 16}, i32 0)
	br i1 %112, label %if.then-1, label %if.done-5

if.then-1:
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %11
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x4062c00000000000}, %imgui-9.Vec2* %11
	%113 = bitcast %imgui-9.Vec2* %11 to i64*
	%114 = load i64, i64* %113, align 8
	%115 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4ff, i64 0, i32 0), i64 9}, i64 %114, i1 true, i32 0)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 false)
	; RangeStmt
	; status
	store %xinput-13.DebugFunctionLoadStatus zeroinitializer, %xinput-13.DebugFunctionLoadStatus* %12
		; SelectorExpr
	; SelectorExpr
	%116 = getelementptr inbounds %xinput-13.DebugInfo_t, %xinput-13.DebugInfo_t* @xinput-13.DebugInfo, i64 0, i32 0
	%117 = getelementptr inbounds {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %116, i64 0, i32 1
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-2

for.index.loop-2:
	%118 = load i64, i64* %13, align 8
	%119 = add i64 %118, 1
	store i64 %119, i64* %13
	%120 = load i64, i64* %117, align 8
	%121 = icmp slt i64 %119, %120
	br i1 %121, label %for.index.body-3, label %for.index.done-4

for.index.body-3:
	%122 = load i64, i64* %13, align 8
	%123 = getelementptr inbounds {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}, {%xinput-13.DebugFunctionLoadStatus*, i64, i64,%Allocator}* %116, i64 0, i32 0
	%124 = load %xinput-13.DebugFunctionLoadStatus*, %xinput-13.DebugFunctionLoadStatus** %123, align 8
	%125 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %124, i64 %122
	%126 = load %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %125, align 8
	store %xinput-13.DebugFunctionLoadStatus %126, %xinput-13.DebugFunctionLoadStatus* %12
	; SelectorExpr
	; SelectorExpr
	%127 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %12, i64 0, i32 0
	%128 = load %..string, %..string* %127, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %14
	%129 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %14, align 8
	call void @imgui-9.Text(%..string %128, {%..any*, i64, i64} %129)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; SelectorExpr
	%130 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %12, i64 0, i32 3
	%131 = load i1, i1* %130, align 1
	; SelectorExpr
	%132 = getelementptr inbounds %xinput-13.DebugFunctionLoadStatus, %xinput-13.DebugFunctionLoadStatus* %12, i64 0, i32 1
	%133 = load i64, i64* %132, align 8
	store %..any zeroinitializer, %..any* %15
	%134 = bitcast i1* %130 to %..rawptr
	%135 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%136 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 0
	store %..rawptr %134, %..rawptr* %136
	%137 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 1
	store %Type_Info* %135, %Type_Info** %137
	%138 = load %..any, %..any* %15, align 8
	store %..any zeroinitializer, %..any* %16
	%139 = bitcast i64* %132 to %..rawptr
	%140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%141 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 0
	store %..rawptr %139, %..rawptr* %141
	%142 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 1
	store %Type_Info* %140, %Type_Info** %142
	%143 = load %..any, %..any* %16, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %17
	store [2 x %..any] zeroinitializer, [2 x %..any]* %18
	%144 = getelementptr inbounds [2 x %..any], [2 x %..any]* %18, i64 0, i32 0
	store %..any %138, %..any* %144
	%145 = getelementptr inbounds [2 x %..any], [2 x %..any]* %18, i64 0, i32 1
	store %..any %143, %..any* %145
	%146 = getelementptr inbounds [2 x %..any], [2 x %..any]* %18, i64 0, i32 0
	%147 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 0
	store %..any* %146, %..any** %147
	%148 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 1
	store i64 2, i64* %148
	%149 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 2
	store i64 2, i64* %149
	%150 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %17, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$500, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %150)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %for.index.loop-2

for.index.done-4:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igEndChild()
	br label %if.done-5

if.done-5:
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; RangeStmt
	; user
	store i32 zeroinitializer, i32* %19
		; i
	store i64 zeroinitializer, i64* %20
		%151 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %21
	%152 = getelementptr inbounds %Type_Info, %Type_Info* %151, i64 0, i32 4 ; UnionTagPtr
	%153 = load i64, i64* %152, align 8
	%154 = icmp eq i64 %153, 20
	br i1 %154, label %union_cast.ok-6, label %union_cast.end-7

union_cast.ok-6:
	%155 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %21, i64 0, i32 0
	%156 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %21, i64 0, i32 1
	%157 = bitcast %Type_Info* %151 to %Type_Info.Enum*
	store %Type_Info.Enum* %157, %Type_Info.Enum** %155
	store i1 true, i1* %156
	br label %union_cast.end-7

union_cast.end-7:
	%158 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %21, i64 0, i32 1
	%159 = load i1, i1* %158, align 1
	%160 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%161 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %159, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$501, i64 0, i32 0), i64 35}, i64 401, i64 31, %Type_Info* %160, %Type_Info* %161)
	%162 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %21, i64 0, i32 0
	%163 = load %Type_Info.Enum*, %Type_Info.Enum** %162, align 8
	%164 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %163, i64 0, i32 4
	%165 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %164, align 8
	%166 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %165, 0
	store i64 zeroinitializer, i64* %22
	store i64 0, i64* %22
	br label %for.enum.loop-8

for.enum.loop-8:
	%167 = load i64, i64* %22, align 8
	%168 = icmp slt i64 %167, 4
	br i1 %168, label %for.enum.body-9, label %for.enum.done-14

for.enum.body-9:
	%169 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %166, i64 %167
	%170 = load i64, i64* %22, align 8
	%171 = add i64 %170, 1
	store i64 %171, i64* %22
	%172 = bitcast {[0 x <8 x i8>], [8 x i8]}* %169 to i64*
	%173 = load i64, i64* %172, align 8
	%174 = trunc i64 %173 to i32
	store i32 %174, i32* %19
	store i64 %167, i64* %20
	; cap
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %23
		; err
	store i32 zeroinitializer, i32* %24
		; SelectorExpr
	%175 = load i32, i32* %19, align 4
	%176 = call {%xinput-13.Capabilities, i32} @xinput-13.GetCapabilities-916(i32 %175)
	%177 = extractvalue {%xinput-13.Capabilities, i32} %176, 0
	%178 = extractvalue {%xinput-13.Capabilities, i32} %176, 1
	store %xinput-13.Capabilities %177, %xinput-13.Capabilities* %23
	store i32 %178, i32* %24
	%179 = load i64, i64* %20, align 8
	%180 = load i32, i32* %24, align 4
	call void @debug_windows-27._PrintGamepadName(i64 %179, i32 %180)
	; IfStmt
	%181 = load i32, i32* %24, align 4
	%182 = icmp eq i32 %181, 0
	br i1 %182, label %if.then-10, label %if.done-11

if.then-10:
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %25
	%183 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %25, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$502, i64 0, i32 0), i64 12}, {%..any*, i64, i64} %183)
	; SelectorExpr
	call ccc void @igIndent(float 0x4034000000000000)
	; SelectorExpr
	; SelectorExpr
	%184 = getelementptr inbounds %xinput-13.Capabilities, %xinput-13.Capabilities* %23, i64 0, i32 1
	%185 = load i8, i8* %184, align 1
	store %..any zeroinitializer, %..any* %26
	%186 = bitcast i8* %184 to %..rawptr
	%187 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 315
	%188 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 0
	store %..rawptr %186, %..rawptr* %188
	%189 = getelementptr inbounds %..any, %..any* %26, i64 0, i32 1
	store %Type_Info* %187, %Type_Info** %189
	%190 = load %..any, %..any* %26, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %27
	store [1 x %..any] zeroinitializer, [1 x %..any]* %28
	%191 = getelementptr inbounds [1 x %..any], [1 x %..any]* %28, i64 0, i32 0
	store %..any %190, %..any* %191
	%192 = getelementptr inbounds [1 x %..any], [1 x %..any]* %28, i64 0, i32 0
	%193 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 0
	store %..any* %192, %..any** %193
	%194 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 1
	store i64 1, i64* %194
	%195 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %27, i64 0, i32 2
	store i64 1, i64* %195
	%196 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %27, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$503, i64 0, i32 0), i64 10}, {%..any*, i64, i64} %196)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %29
	%197 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %29, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$504, i64 0, i32 0), i64 6}, {%..any*, i64, i64} %197)
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	%198 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %23, align 2
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %30
	store %xinput-13.Capabilities %198, %xinput-13.Capabilities* %30
	%199 = call i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %30, i16 4)
	store %..any zeroinitializer, %..any* %31
	store i1 zeroinitializer, i1* %32
	store i1 %199, i1* %32
	%200 = bitcast i1* %32 to %..rawptr
	%201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%202 = getelementptr inbounds %..any, %..any* %31, i64 0, i32 0
	store %..rawptr %200, %..rawptr* %202
	%203 = getelementptr inbounds %..any, %..any* %31, i64 0, i32 1
	store %Type_Info* %201, %Type_Info** %203
	%204 = load %..any, %..any* %31, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %33
	store [1 x %..any] zeroinitializer, [1 x %..any]* %34
	%205 = getelementptr inbounds [1 x %..any], [1 x %..any]* %34, i64 0, i32 0
	store %..any %204, %..any* %205
	%206 = getelementptr inbounds [1 x %..any], [1 x %..any]* %34, i64 0, i32 0
	%207 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 0
	store %..any* %206, %..any** %207
	%208 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 1
	store i64 1, i64* %208
	%209 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %33, i64 0, i32 2
	store i64 1, i64* %209
	%210 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %33, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$505, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %210)
	; SelectorExpr
	%211 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %23, align 2
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %35
	store %xinput-13.Capabilities %211, %xinput-13.Capabilities* %35
	%212 = call i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %35, i16 1)
	store %..any zeroinitializer, %..any* %36
	store i1 zeroinitializer, i1* %37
	store i1 %212, i1* %37
	%213 = bitcast i1* %37 to %..rawptr
	%214 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%215 = getelementptr inbounds %..any, %..any* %36, i64 0, i32 0
	store %..rawptr %213, %..rawptr* %215
	%216 = getelementptr inbounds %..any, %..any* %36, i64 0, i32 1
	store %Type_Info* %214, %Type_Info** %216
	%217 = load %..any, %..any* %36, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %38
	store [1 x %..any] zeroinitializer, [1 x %..any]* %39
	%218 = getelementptr inbounds [1 x %..any], [1 x %..any]* %39, i64 0, i32 0
	store %..any %217, %..any* %218
	%219 = getelementptr inbounds [1 x %..any], [1 x %..any]* %39, i64 0, i32 0
	%220 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 0
	store %..any* %219, %..any** %220
	%221 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 1
	store i64 1, i64* %221
	%222 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %38, i64 0, i32 2
	store i64 1, i64* %222
	%223 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %38, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$506, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %223)
	; SelectorExpr
	%224 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %23, align 2
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %40
	store %xinput-13.Capabilities %224, %xinput-13.Capabilities* %40
	%225 = call i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %40, i16 2)
	store %..any zeroinitializer, %..any* %41
	store i1 zeroinitializer, i1* %42
	store i1 %225, i1* %42
	%226 = bitcast i1* %42 to %..rawptr
	%227 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%228 = getelementptr inbounds %..any, %..any* %41, i64 0, i32 0
	store %..rawptr %226, %..rawptr* %228
	%229 = getelementptr inbounds %..any, %..any* %41, i64 0, i32 1
	store %Type_Info* %227, %Type_Info** %229
	%230 = load %..any, %..any* %41, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %43
	store [1 x %..any] zeroinitializer, [1 x %..any]* %44
	%231 = getelementptr inbounds [1 x %..any], [1 x %..any]* %44, i64 0, i32 0
	store %..any %230, %..any* %231
	%232 = getelementptr inbounds [1 x %..any], [1 x %..any]* %44, i64 0, i32 0
	%233 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %43, i64 0, i32 0
	store %..any* %232, %..any** %233
	%234 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %43, i64 0, i32 1
	store i64 1, i64* %234
	%235 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %43, i64 0, i32 2
	store i64 1, i64* %235
	%236 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %43, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$507, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %236)
	; SelectorExpr
	%237 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %23, align 2
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %45
	store %xinput-13.Capabilities %237, %xinput-13.Capabilities* %45
	%238 = call i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %45, i16 8)
	store %..any zeroinitializer, %..any* %46
	store i1 zeroinitializer, i1* %47
	store i1 %238, i1* %47
	%239 = bitcast i1* %47 to %..rawptr
	%240 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%241 = getelementptr inbounds %..any, %..any* %46, i64 0, i32 0
	store %..rawptr %239, %..rawptr* %241
	%242 = getelementptr inbounds %..any, %..any* %46, i64 0, i32 1
	store %Type_Info* %240, %Type_Info** %242
	%243 = load %..any, %..any* %46, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %48
	store [1 x %..any] zeroinitializer, [1 x %..any]* %49
	%244 = getelementptr inbounds [1 x %..any], [1 x %..any]* %49, i64 0, i32 0
	store %..any %243, %..any* %244
	%245 = getelementptr inbounds [1 x %..any], [1 x %..any]* %49, i64 0, i32 0
	%246 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %48, i64 0, i32 0
	store %..any* %245, %..any** %246
	%247 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %48, i64 0, i32 1
	store i64 1, i64* %247
	%248 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %48, i64 0, i32 2
	store i64 1, i64* %248
	%249 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %48, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$508, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %249)
	; SelectorExpr
	%250 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %23, align 2
	store %xinput-13.Capabilities zeroinitializer, %xinput-13.Capabilities* %50
	store %xinput-13.Capabilities %250, %xinput-13.Capabilities* %50
	%251 = call i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %50, i16 16)
	store %..any zeroinitializer, %..any* %51
	store i1 zeroinitializer, i1* %52
	store i1 %251, i1* %52
	%252 = bitcast i1* %52 to %..rawptr
	%253 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%254 = getelementptr inbounds %..any, %..any* %51, i64 0, i32 0
	store %..rawptr %252, %..rawptr* %254
	%255 = getelementptr inbounds %..any, %..any* %51, i64 0, i32 1
	store %Type_Info* %253, %Type_Info** %255
	%256 = load %..any, %..any* %51, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %53
	store [1 x %..any] zeroinitializer, [1 x %..any]* %54
	%257 = getelementptr inbounds [1 x %..any], [1 x %..any]* %54, i64 0, i32 0
	store %..any %256, %..any* %257
	%258 = getelementptr inbounds [1 x %..any], [1 x %..any]* %54, i64 0, i32 0
	%259 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %53, i64 0, i32 0
	store %..any* %258, %..any** %259
	%260 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %53, i64 0, i32 1
	store i64 1, i64* %260
	%261 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %53, i64 0, i32 2
	store i64 1, i64* %261
	%262 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %53, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$509, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %262)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4034000000000000)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %55
	%263 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %55, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$50a, i64 0, i32 0), i64 20}, {%..any*, i64, i64} %263)
	; SelectorExpr
	call ccc void @igIndent(float 0x4034000000000000)
	; SelectorExpr
	store %..string zeroinitializer, %..string* %56
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$50b, i64 0, i32 0), i64 3}, %..string* %56
	%264 = load %..string, %..string* %56, align 8
	store %..any zeroinitializer, %..any* %57
	%265 = bitcast %..string* %56 to %..rawptr
	%266 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%267 = getelementptr inbounds %..any, %..any* %57, i64 0, i32 0
	store %..rawptr %265, %..rawptr* %267
	%268 = getelementptr inbounds %..any, %..any* %57, i64 0, i32 1
	store %Type_Info* %266, %Type_Info** %268
	%269 = load %..any, %..any* %57, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %58
	store [1 x %..any] zeroinitializer, [1 x %..any]* %59
	%270 = getelementptr inbounds [1 x %..any], [1 x %..any]* %59, i64 0, i32 0
	store %..any %269, %..any* %270
	%271 = getelementptr inbounds [1 x %..any], [1 x %..any]* %59, i64 0, i32 0
	%272 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %58, i64 0, i32 0
	store %..any* %271, %..any** %272
	%273 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %58, i64 0, i32 1
	store i64 1, i64* %273
	%274 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %58, i64 0, i32 2
	store i64 1, i64* %274
	%275 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %58, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$50c, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %275)
	; SelectorExpr
	store %..string zeroinitializer, %..string* %60
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$50d, i64 0, i32 0), i64 3}, %..string* %60
	%276 = load %..string, %..string* %60, align 8
	store %..any zeroinitializer, %..any* %61
	%277 = bitcast %..string* %60 to %..rawptr
	%278 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%279 = getelementptr inbounds %..any, %..any* %61, i64 0, i32 0
	store %..rawptr %277, %..rawptr* %279
	%280 = getelementptr inbounds %..any, %..any* %61, i64 0, i32 1
	store %Type_Info* %278, %Type_Info** %280
	%281 = load %..any, %..any* %61, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %62
	store [1 x %..any] zeroinitializer, [1 x %..any]* %63
	%282 = getelementptr inbounds [1 x %..any], [1 x %..any]* %63, i64 0, i32 0
	store %..any %281, %..any* %282
	%283 = getelementptr inbounds [1 x %..any], [1 x %..any]* %63, i64 0, i32 0
	%284 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %62, i64 0, i32 0
	store %..any* %283, %..any** %284
	%285 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %62, i64 0, i32 1
	store i64 1, i64* %285
	%286 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %62, i64 0, i32 2
	store i64 1, i64* %286
	%287 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %62, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$50e, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %287)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4034000000000000)
	br label %if.done-11

if.done-11:
	; SelectorExpr
	call ccc void @igNextColumn()
	; IfStmt
	%288 = load i64, i64* %20, align 8
	%289 = srem i64 %288, 2
	%290 = icmp eq i64 %289, 1
	br i1 %290, label %if.then-12, label %if.done-13

if.then-12:
	; SelectorExpr
	call ccc void @igSeparator()
	br label %if.done-13

if.done-13:
	br label %for.enum.loop-8

for.enum.done-14:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define i1 @debug_windows-27.ShowXinputInfoWindow.CheckCapability-0(%xinput-13.Capabilities* %cap, i16 %c) {
decls-0:
	%0 = alloca i16, align 2
	%1 = load %xinput-13.Capabilities, %xinput-13.Capabilities* %cap, align 2
	store i16 zeroinitializer, i16* %0
		store i16 %c, i16* %0
	; ReturnStmt
	; SelectorExpr
	%2 = getelementptr inbounds %xinput-13.Capabilities, %xinput-13.Capabilities* %cap, i64 0, i32 2
	%3 = load i16, i16* %2, align 2
	%4 = load i16, i16* %0, align 2
	%5 = and i16 %3, %4
	%6 = load i16, i16* %0, align 2
	%7 = icmp eq i16 %5, %6
	ret i1 %7
}

define void @debug_windows-27.ShowXinputStateWindow(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
	%3 = alloca {%Type_Info.Enum*, i1}, align 8
	%4 = alloca i64, align 8
	%5 = alloca %xinput-13.State, align 4
	%6 = alloca i32, align 4
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca %xinput-13.State, align 16
	%9 = alloca %..any, align 8
	%10 = alloca i1, align 1
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca [1 x %..any], align 8
	%13 = alloca %xinput-13.State, align 16
	%14 = alloca %..any, align 8
	%15 = alloca i1, align 1
	%16 = alloca {%..any*, i64, i64}, align 8
	%17 = alloca [1 x %..any], align 8
	%18 = alloca %xinput-13.State, align 16
	%19 = alloca %..any, align 8
	%20 = alloca i1, align 1
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [1 x %..any], align 8
	%23 = alloca %xinput-13.State, align 16
	%24 = alloca %..any, align 8
	%25 = alloca i1, align 1
	%26 = alloca {%..any*, i64, i64}, align 8
	%27 = alloca [1 x %..any], align 8
	%28 = alloca %xinput-13.State, align 16
	%29 = alloca %..any, align 8
	%30 = alloca i1, align 1
	%31 = alloca {%..any*, i64, i64}, align 8
	%32 = alloca [1 x %..any], align 8
	%33 = alloca %xinput-13.State, align 16
	%34 = alloca %..any, align 8
	%35 = alloca i1, align 1
	%36 = alloca {%..any*, i64, i64}, align 8
	%37 = alloca [1 x %..any], align 8
	%38 = alloca %xinput-13.State, align 16
	%39 = alloca %..any, align 8
	%40 = alloca i1, align 1
	%41 = alloca {%..any*, i64, i64}, align 8
	%42 = alloca [1 x %..any], align 8
	%43 = alloca %xinput-13.State, align 16
	%44 = alloca %..any, align 8
	%45 = alloca i1, align 1
	%46 = alloca {%..any*, i64, i64}, align 8
	%47 = alloca [1 x %..any], align 8
	%48 = alloca %xinput-13.State, align 16
	%49 = alloca %..any, align 8
	%50 = alloca i1, align 1
	%51 = alloca {%..any*, i64, i64}, align 8
	%52 = alloca [1 x %..any], align 8
	%53 = alloca %xinput-13.State, align 16
	%54 = alloca %..any, align 8
	%55 = alloca i1, align 1
	%56 = alloca {%..any*, i64, i64}, align 8
	%57 = alloca [1 x %..any], align 8
	%58 = alloca %xinput-13.State, align 16
	%59 = alloca %..any, align 8
	%60 = alloca i1, align 1
	%61 = alloca {%..any*, i64, i64}, align 8
	%62 = alloca [1 x %..any], align 8
	%63 = alloca %xinput-13.State, align 16
	%64 = alloca %..any, align 8
	%65 = alloca i1, align 1
	%66 = alloca {%..any*, i64, i64}, align 8
	%67 = alloca [1 x %..any], align 8
	%68 = alloca %xinput-13.State, align 16
	%69 = alloca %..any, align 8
	%70 = alloca i1, align 1
	%71 = alloca {%..any*, i64, i64}, align 8
	%72 = alloca [1 x %..any], align 8
	%73 = alloca %xinput-13.State, align 16
	%74 = alloca %..any, align 8
	%75 = alloca i1, align 1
	%76 = alloca {%..any*, i64, i64}, align 8
	%77 = alloca [1 x %..any], align 8
	%78 = alloca {%..any*, i64, i64}, align 8
	%79 = alloca %..any, align 8
	%80 = alloca %..any, align 8
	%81 = alloca float, align 4
	%82 = alloca {%..any*, i64, i64}, align 8
	%83 = alloca [2 x %..any], align 8
	%84 = alloca %..any, align 8
	%85 = alloca %..any, align 8
	%86 = alloca float, align 4
	%87 = alloca {%..any*, i64, i64}, align 8
	%88 = alloca [2 x %..any], align 8
	%89 = alloca {%..any*, i64, i64}, align 8
	%90 = alloca %..any, align 8
	%91 = alloca %..any, align 8
	%92 = alloca {%..any*, i64, i64}, align 8
	%93 = alloca [2 x %..any], align 8
	%94 = alloca %..any, align 8
	%95 = alloca %..any, align 8
	%96 = alloca {%..any*, i64, i64}, align 8
	%97 = alloca [2 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%98 = load i1*, i1** %0, align 8
	%99 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$50f, i64 0, i32 0), i64 12}, i1* %98, i32 32)
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; RangeStmt
	; user
	store i32 zeroinitializer, i32* %1
		; i
	store i64 zeroinitializer, i64* %2
		%100 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %3
	%101 = getelementptr inbounds %Type_Info, %Type_Info* %100, i64 0, i32 4 ; UnionTagPtr
	%102 = load i64, i64* %101, align 8
	%103 = icmp eq i64 %102, 20
	br i1 %103, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%104 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %3, i64 0, i32 0
	%105 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %3, i64 0, i32 1
	%106 = bitcast %Type_Info* %100 to %Type_Info.Enum*
	store %Type_Info.Enum* %106, %Type_Info.Enum** %104
	store i1 true, i1* %105
	br label %union_cast.end-2

union_cast.end-2:
	%107 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %3, i64 0, i32 1
	%108 = load i1, i1* %107, align 1
	%109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%110 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %108, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$510, i64 0, i32 0), i64 35}, i64 442, i64 31, %Type_Info* %109, %Type_Info* %110)
	%111 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %3, i64 0, i32 0
	%112 = load %Type_Info.Enum*, %Type_Info.Enum** %111, align 8
	%113 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %112, i64 0, i32 4
	%114 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %113, align 8
	%115 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %114, 0
	store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	br label %for.enum.loop-3

for.enum.loop-3:
	%116 = load i64, i64* %4, align 8
	%117 = icmp slt i64 %116, 4
	br i1 %117, label %for.enum.body-4, label %for.enum.done-9

for.enum.body-4:
	%118 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %115, i64 %116
	%119 = load i64, i64* %4, align 8
	%120 = add i64 %119, 1
	store i64 %120, i64* %4
	%121 = bitcast {[0 x <8 x i8>], [8 x i8]}* %118 to i64*
	%122 = load i64, i64* %121, align 8
	%123 = trunc i64 %122 to i32
	store i32 %123, i32* %1
	store i64 %116, i64* %2
	; state
	store %xinput-13.State zeroinitializer, %xinput-13.State* %5
		; err
	store i32 zeroinitializer, i32* %6
		; SelectorExpr
	%124 = load i32, i32* %1, align 4
	%125 = call {%xinput-13.State, i32} @xinput-13.GetState(i32 %124)
	%126 = extractvalue {%xinput-13.State, i32} %125, 0
	%127 = extractvalue {%xinput-13.State, i32} %125, 1
	store %xinput-13.State %126, %xinput-13.State* %5
	store i32 %127, i32* %6
	%128 = load i64, i64* %2, align 8
	%129 = load i32, i32* %6, align 4
	call void @debug_windows-27._PrintGamepadName(i64 %128, i32 %129)
	; IfStmt
	%130 = load i32, i32* %6, align 4
	%131 = icmp eq i32 %130, 0
	br i1 %131, label %if.then-5, label %if.done-6

if.then-5:
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	%132 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$511, i64 0, i32 0), i64 14}, {%..any*, i64, i64} %132)
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	%133 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %8
	store %xinput-13.State %133, %xinput-13.State* %8
	%134 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %8, i16 1)
	store %..any zeroinitializer, %..any* %9
	store i1 zeroinitializer, i1* %10
	store i1 %134, i1* %10
	%135 = bitcast i1* %10 to %..rawptr
	%136 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%137 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %135, %..rawptr* %137
	%138 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %136, %Type_Info** %138
	%139 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	store [1 x %..any] zeroinitializer, [1 x %..any]* %12
	%140 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	store %..any %139, %..any* %140
	%141 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	%142 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 0
	store %..any* %141, %..any** %142
	%143 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 1
	store i64 1, i64* %143
	%144 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %11, i64 0, i32 2
	store i64 1, i64* %144
	%145 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$512, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %145)
	; SelectorExpr
	%146 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %13
	store %xinput-13.State %146, %xinput-13.State* %13
	%147 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %13, i16 2)
	store %..any zeroinitializer, %..any* %14
	store i1 zeroinitializer, i1* %15
	store i1 %147, i1* %15
	%148 = bitcast i1* %15 to %..rawptr
	%149 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%150 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 0
	store %..rawptr %148, %..rawptr* %150
	%151 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 1
	store %Type_Info* %149, %Type_Info** %151
	%152 = load %..any, %..any* %14, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %16
	store [1 x %..any] zeroinitializer, [1 x %..any]* %17
	%153 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	store %..any %152, %..any* %153
	%154 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	%155 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 0
	store %..any* %154, %..any** %155
	%156 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 1
	store i64 1, i64* %156
	%157 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 2
	store i64 1, i64* %157
	%158 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %16, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$513, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %158)
	; SelectorExpr
	%159 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %18
	store %xinput-13.State %159, %xinput-13.State* %18
	%160 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %18, i16 4)
	store %..any zeroinitializer, %..any* %19
	store i1 zeroinitializer, i1* %20
	store i1 %160, i1* %20
	%161 = bitcast i1* %20 to %..rawptr
	%162 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%163 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 0
	store %..rawptr %161, %..rawptr* %163
	%164 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 1
	store %Type_Info* %162, %Type_Info** %164
	%165 = load %..any, %..any* %19, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [1 x %..any] zeroinitializer, [1 x %..any]* %22
	%166 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	store %..any %165, %..any* %166
	%167 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	%168 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %167, %..any** %168
	%169 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %169
	%170 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %170
	%171 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$514, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %171)
	; SelectorExpr
	%172 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %23
	store %xinput-13.State %172, %xinput-13.State* %23
	%173 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %23, i16 8)
	store %..any zeroinitializer, %..any* %24
	store i1 zeroinitializer, i1* %25
	store i1 %173, i1* %25
	%174 = bitcast i1* %25 to %..rawptr
	%175 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%176 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 0
	store %..rawptr %174, %..rawptr* %176
	%177 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 1
	store %Type_Info* %175, %Type_Info** %177
	%178 = load %..any, %..any* %24, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %26
	store [1 x %..any] zeroinitializer, [1 x %..any]* %27
	%179 = getelementptr inbounds [1 x %..any], [1 x %..any]* %27, i64 0, i32 0
	store %..any %178, %..any* %179
	%180 = getelementptr inbounds [1 x %..any], [1 x %..any]* %27, i64 0, i32 0
	%181 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 0
	store %..any* %180, %..any** %181
	%182 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 1
	store i64 1, i64* %182
	%183 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 2
	store i64 1, i64* %183
	%184 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %26, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$515, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %184)
	; SelectorExpr
	%185 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %28
	store %xinput-13.State %185, %xinput-13.State* %28
	%186 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %28, i16 16)
	store %..any zeroinitializer, %..any* %29
	store i1 zeroinitializer, i1* %30
	store i1 %186, i1* %30
	%187 = bitcast i1* %30 to %..rawptr
	%188 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%189 = getelementptr inbounds %..any, %..any* %29, i64 0, i32 0
	store %..rawptr %187, %..rawptr* %189
	%190 = getelementptr inbounds %..any, %..any* %29, i64 0, i32 1
	store %Type_Info* %188, %Type_Info** %190
	%191 = load %..any, %..any* %29, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %31
	store [1 x %..any] zeroinitializer, [1 x %..any]* %32
	%192 = getelementptr inbounds [1 x %..any], [1 x %..any]* %32, i64 0, i32 0
	store %..any %191, %..any* %192
	%193 = getelementptr inbounds [1 x %..any], [1 x %..any]* %32, i64 0, i32 0
	%194 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 0
	store %..any* %193, %..any** %194
	%195 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 1
	store i64 1, i64* %195
	%196 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %31, i64 0, i32 2
	store i64 1, i64* %196
	%197 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %31, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$516, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %197)
	; SelectorExpr
	%198 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %33
	store %xinput-13.State %198, %xinput-13.State* %33
	%199 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %33, i16 32)
	store %..any zeroinitializer, %..any* %34
	store i1 zeroinitializer, i1* %35
	store i1 %199, i1* %35
	%200 = bitcast i1* %35 to %..rawptr
	%201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%202 = getelementptr inbounds %..any, %..any* %34, i64 0, i32 0
	store %..rawptr %200, %..rawptr* %202
	%203 = getelementptr inbounds %..any, %..any* %34, i64 0, i32 1
	store %Type_Info* %201, %Type_Info** %203
	%204 = load %..any, %..any* %34, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %36
	store [1 x %..any] zeroinitializer, [1 x %..any]* %37
	%205 = getelementptr inbounds [1 x %..any], [1 x %..any]* %37, i64 0, i32 0
	store %..any %204, %..any* %205
	%206 = getelementptr inbounds [1 x %..any], [1 x %..any]* %37, i64 0, i32 0
	%207 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 0
	store %..any* %206, %..any** %207
	%208 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 1
	store i64 1, i64* %208
	%209 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %36, i64 0, i32 2
	store i64 1, i64* %209
	%210 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %36, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$517, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %210)
	; SelectorExpr
	%211 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %38
	store %xinput-13.State %211, %xinput-13.State* %38
	%212 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %38, i16 64)
	store %..any zeroinitializer, %..any* %39
	store i1 zeroinitializer, i1* %40
	store i1 %212, i1* %40
	%213 = bitcast i1* %40 to %..rawptr
	%214 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%215 = getelementptr inbounds %..any, %..any* %39, i64 0, i32 0
	store %..rawptr %213, %..rawptr* %215
	%216 = getelementptr inbounds %..any, %..any* %39, i64 0, i32 1
	store %Type_Info* %214, %Type_Info** %216
	%217 = load %..any, %..any* %39, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %41
	store [1 x %..any] zeroinitializer, [1 x %..any]* %42
	%218 = getelementptr inbounds [1 x %..any], [1 x %..any]* %42, i64 0, i32 0
	store %..any %217, %..any* %218
	%219 = getelementptr inbounds [1 x %..any], [1 x %..any]* %42, i64 0, i32 0
	%220 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %41, i64 0, i32 0
	store %..any* %219, %..any** %220
	%221 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %41, i64 0, i32 1
	store i64 1, i64* %221
	%222 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %41, i64 0, i32 2
	store i64 1, i64* %222
	%223 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %41, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$518, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %223)
	; SelectorExpr
	%224 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %43
	store %xinput-13.State %224, %xinput-13.State* %43
	%225 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %43, i16 128)
	store %..any zeroinitializer, %..any* %44
	store i1 zeroinitializer, i1* %45
	store i1 %225, i1* %45
	%226 = bitcast i1* %45 to %..rawptr
	%227 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%228 = getelementptr inbounds %..any, %..any* %44, i64 0, i32 0
	store %..rawptr %226, %..rawptr* %228
	%229 = getelementptr inbounds %..any, %..any* %44, i64 0, i32 1
	store %Type_Info* %227, %Type_Info** %229
	%230 = load %..any, %..any* %44, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %46
	store [1 x %..any] zeroinitializer, [1 x %..any]* %47
	%231 = getelementptr inbounds [1 x %..any], [1 x %..any]* %47, i64 0, i32 0
	store %..any %230, %..any* %231
	%232 = getelementptr inbounds [1 x %..any], [1 x %..any]* %47, i64 0, i32 0
	%233 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %46, i64 0, i32 0
	store %..any* %232, %..any** %233
	%234 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %46, i64 0, i32 1
	store i64 1, i64* %234
	%235 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %46, i64 0, i32 2
	store i64 1, i64* %235
	%236 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %46, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$519, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %236)
	; SelectorExpr
	%237 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %48
	store %xinput-13.State %237, %xinput-13.State* %48
	%238 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %48, i16 256)
	store %..any zeroinitializer, %..any* %49
	store i1 zeroinitializer, i1* %50
	store i1 %238, i1* %50
	%239 = bitcast i1* %50 to %..rawptr
	%240 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%241 = getelementptr inbounds %..any, %..any* %49, i64 0, i32 0
	store %..rawptr %239, %..rawptr* %241
	%242 = getelementptr inbounds %..any, %..any* %49, i64 0, i32 1
	store %Type_Info* %240, %Type_Info** %242
	%243 = load %..any, %..any* %49, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %51
	store [1 x %..any] zeroinitializer, [1 x %..any]* %52
	%244 = getelementptr inbounds [1 x %..any], [1 x %..any]* %52, i64 0, i32 0
	store %..any %243, %..any* %244
	%245 = getelementptr inbounds [1 x %..any], [1 x %..any]* %52, i64 0, i32 0
	%246 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %51, i64 0, i32 0
	store %..any* %245, %..any** %246
	%247 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %51, i64 0, i32 1
	store i64 1, i64* %247
	%248 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %51, i64 0, i32 2
	store i64 1, i64* %248
	%249 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %51, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51a, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %249)
	; SelectorExpr
	%250 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %53
	store %xinput-13.State %250, %xinput-13.State* %53
	%251 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %53, i16 512)
	store %..any zeroinitializer, %..any* %54
	store i1 zeroinitializer, i1* %55
	store i1 %251, i1* %55
	%252 = bitcast i1* %55 to %..rawptr
	%253 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%254 = getelementptr inbounds %..any, %..any* %54, i64 0, i32 0
	store %..rawptr %252, %..rawptr* %254
	%255 = getelementptr inbounds %..any, %..any* %54, i64 0, i32 1
	store %Type_Info* %253, %Type_Info** %255
	%256 = load %..any, %..any* %54, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %56
	store [1 x %..any] zeroinitializer, [1 x %..any]* %57
	%257 = getelementptr inbounds [1 x %..any], [1 x %..any]* %57, i64 0, i32 0
	store %..any %256, %..any* %257
	%258 = getelementptr inbounds [1 x %..any], [1 x %..any]* %57, i64 0, i32 0
	%259 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %56, i64 0, i32 0
	store %..any* %258, %..any** %259
	%260 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %56, i64 0, i32 1
	store i64 1, i64* %260
	%261 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %56, i64 0, i32 2
	store i64 1, i64* %261
	%262 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %56, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51b, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %262)
	; SelectorExpr
	%263 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %58
	store %xinput-13.State %263, %xinput-13.State* %58
	%264 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %58, i16 4096)
	store %..any zeroinitializer, %..any* %59
	store i1 zeroinitializer, i1* %60
	store i1 %264, i1* %60
	%265 = bitcast i1* %60 to %..rawptr
	%266 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%267 = getelementptr inbounds %..any, %..any* %59, i64 0, i32 0
	store %..rawptr %265, %..rawptr* %267
	%268 = getelementptr inbounds %..any, %..any* %59, i64 0, i32 1
	store %Type_Info* %266, %Type_Info** %268
	%269 = load %..any, %..any* %59, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %61
	store [1 x %..any] zeroinitializer, [1 x %..any]* %62
	%270 = getelementptr inbounds [1 x %..any], [1 x %..any]* %62, i64 0, i32 0
	store %..any %269, %..any* %270
	%271 = getelementptr inbounds [1 x %..any], [1 x %..any]* %62, i64 0, i32 0
	%272 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %61, i64 0, i32 0
	store %..any* %271, %..any** %272
	%273 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %61, i64 0, i32 1
	store i64 1, i64* %273
	%274 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %61, i64 0, i32 2
	store i64 1, i64* %274
	%275 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %61, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51c, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %275)
	; SelectorExpr
	%276 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %63
	store %xinput-13.State %276, %xinput-13.State* %63
	%277 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %63, i16 8192)
	store %..any zeroinitializer, %..any* %64
	store i1 zeroinitializer, i1* %65
	store i1 %277, i1* %65
	%278 = bitcast i1* %65 to %..rawptr
	%279 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%280 = getelementptr inbounds %..any, %..any* %64, i64 0, i32 0
	store %..rawptr %278, %..rawptr* %280
	%281 = getelementptr inbounds %..any, %..any* %64, i64 0, i32 1
	store %Type_Info* %279, %Type_Info** %281
	%282 = load %..any, %..any* %64, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %66
	store [1 x %..any] zeroinitializer, [1 x %..any]* %67
	%283 = getelementptr inbounds [1 x %..any], [1 x %..any]* %67, i64 0, i32 0
	store %..any %282, %..any* %283
	%284 = getelementptr inbounds [1 x %..any], [1 x %..any]* %67, i64 0, i32 0
	%285 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %66, i64 0, i32 0
	store %..any* %284, %..any** %285
	%286 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %66, i64 0, i32 1
	store i64 1, i64* %286
	%287 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %66, i64 0, i32 2
	store i64 1, i64* %287
	%288 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %66, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51d, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %288)
	; SelectorExpr
	%289 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %68
	store %xinput-13.State %289, %xinput-13.State* %68
	%290 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %68, i16 16384)
	store %..any zeroinitializer, %..any* %69
	store i1 zeroinitializer, i1* %70
	store i1 %290, i1* %70
	%291 = bitcast i1* %70 to %..rawptr
	%292 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%293 = getelementptr inbounds %..any, %..any* %69, i64 0, i32 0
	store %..rawptr %291, %..rawptr* %293
	%294 = getelementptr inbounds %..any, %..any* %69, i64 0, i32 1
	store %Type_Info* %292, %Type_Info** %294
	%295 = load %..any, %..any* %69, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %71
	store [1 x %..any] zeroinitializer, [1 x %..any]* %72
	%296 = getelementptr inbounds [1 x %..any], [1 x %..any]* %72, i64 0, i32 0
	store %..any %295, %..any* %296
	%297 = getelementptr inbounds [1 x %..any], [1 x %..any]* %72, i64 0, i32 0
	%298 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %71, i64 0, i32 0
	store %..any* %297, %..any** %298
	%299 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %71, i64 0, i32 1
	store i64 1, i64* %299
	%300 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %71, i64 0, i32 2
	store i64 1, i64* %300
	%301 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %71, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51e, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %301)
	; SelectorExpr
	%302 = load %xinput-13.State, %xinput-13.State* %5, align 4
	store %xinput-13.State zeroinitializer, %xinput-13.State* %73
	store %xinput-13.State %302, %xinput-13.State* %73
	%303 = call i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %73, i16 32768)
	store %..any zeroinitializer, %..any* %74
	store i1 zeroinitializer, i1* %75
	store i1 %303, i1* %75
	%304 = bitcast i1* %75 to %..rawptr
	%305 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%306 = getelementptr inbounds %..any, %..any* %74, i64 0, i32 0
	store %..rawptr %304, %..rawptr* %306
	%307 = getelementptr inbounds %..any, %..any* %74, i64 0, i32 1
	store %Type_Info* %305, %Type_Info** %307
	%308 = load %..any, %..any* %74, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %76
	store [1 x %..any] zeroinitializer, [1 x %..any]* %77
	%309 = getelementptr inbounds [1 x %..any], [1 x %..any]* %77, i64 0, i32 0
	store %..any %308, %..any* %309
	%310 = getelementptr inbounds [1 x %..any], [1 x %..any]* %77, i64 0, i32 0
	%311 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %76, i64 0, i32 0
	store %..any* %310, %..any** %311
	%312 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %76, i64 0, i32 1
	store i64 1, i64* %312
	%313 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %76, i64 0, i32 2
	store i64 1, i64* %313
	%314 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %76, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$51f, i64 0, i32 0), i64 17}, {%..any*, i64, i64} %314)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %78
	%315 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %78, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$520, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %315)
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%316 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%317 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %316, i64 0, i32 1
	%318 = load i8, i8* %317, align 1
	; SelectorExpr
	; SelectorExpr
	%319 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%320 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %319, i64 0, i32 1
	%321 = load i8, i8* %320, align 1
	%322 = uitofp i8 %321 to float
	%323 = fdiv float %322, 0x406fe00000000000
	%324 = fmul float %323, 0x4059000000000000
	store %..any zeroinitializer, %..any* %79
	%325 = bitcast i8* %317 to %..rawptr
	%326 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%327 = getelementptr inbounds %..any, %..any* %79, i64 0, i32 0
	store %..rawptr %325, %..rawptr* %327
	%328 = getelementptr inbounds %..any, %..any* %79, i64 0, i32 1
	store %Type_Info* %326, %Type_Info** %328
	%329 = load %..any, %..any* %79, align 8
	store %..any zeroinitializer, %..any* %80
	store float zeroinitializer, float* %81
	store float %324, float* %81
	%330 = bitcast float* %81 to %..rawptr
	%331 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%332 = getelementptr inbounds %..any, %..any* %80, i64 0, i32 0
	store %..rawptr %330, %..rawptr* %332
	%333 = getelementptr inbounds %..any, %..any* %80, i64 0, i32 1
	store %Type_Info* %331, %Type_Info** %333
	%334 = load %..any, %..any* %80, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %82
	store [2 x %..any] zeroinitializer, [2 x %..any]* %83
	%335 = getelementptr inbounds [2 x %..any], [2 x %..any]* %83, i64 0, i32 0
	store %..any %329, %..any* %335
	%336 = getelementptr inbounds [2 x %..any], [2 x %..any]* %83, i64 0, i32 1
	store %..any %334, %..any* %336
	%337 = getelementptr inbounds [2 x %..any], [2 x %..any]* %83, i64 0, i32 0
	%338 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %82, i64 0, i32 0
	store %..any* %337, %..any** %338
	%339 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %82, i64 0, i32 1
	store i64 2, i64* %339
	%340 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %82, i64 0, i32 2
	store i64 2, i64* %340
	%341 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %82, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$521, i64 0, i32 0), i64 25}, {%..any*, i64, i64} %341)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%342 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%343 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %342, i64 0, i32 2
	%344 = load i8, i8* %343, align 1
	; SelectorExpr
	; SelectorExpr
	%345 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%346 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %345, i64 0, i32 2
	%347 = load i8, i8* %346, align 1
	%348 = uitofp i8 %347 to float
	%349 = fdiv float %348, 0x406fe00000000000
	%350 = fmul float %349, 0x4059000000000000
	store %..any zeroinitializer, %..any* %84
	%351 = bitcast i8* %343 to %..rawptr
	%352 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%353 = getelementptr inbounds %..any, %..any* %84, i64 0, i32 0
	store %..rawptr %351, %..rawptr* %353
	%354 = getelementptr inbounds %..any, %..any* %84, i64 0, i32 1
	store %Type_Info* %352, %Type_Info** %354
	%355 = load %..any, %..any* %84, align 8
	store %..any zeroinitializer, %..any* %85
	store float zeroinitializer, float* %86
	store float %350, float* %86
	%356 = bitcast float* %86 to %..rawptr
	%357 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%358 = getelementptr inbounds %..any, %..any* %85, i64 0, i32 0
	store %..rawptr %356, %..rawptr* %358
	%359 = getelementptr inbounds %..any, %..any* %85, i64 0, i32 1
	store %Type_Info* %357, %Type_Info** %359
	%360 = load %..any, %..any* %85, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %87
	store [2 x %..any] zeroinitializer, [2 x %..any]* %88
	%361 = getelementptr inbounds [2 x %..any], [2 x %..any]* %88, i64 0, i32 0
	store %..any %355, %..any* %361
	%362 = getelementptr inbounds [2 x %..any], [2 x %..any]* %88, i64 0, i32 1
	store %..any %360, %..any* %362
	%363 = getelementptr inbounds [2 x %..any], [2 x %..any]* %88, i64 0, i32 0
	%364 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %87, i64 0, i32 0
	store %..any* %363, %..any** %364
	%365 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %87, i64 0, i32 1
	store i64 2, i64* %365
	%366 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %87, i64 0, i32 2
	store i64 2, i64* %366
	%367 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %87, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$522, i64 0, i32 0), i64 25}, {%..any*, i64, i64} %367)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %89
	%368 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %89, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$523, i64 0, i32 0), i64 13}, {%..any*, i64, i64} %368)
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%369 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%370 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %369, i64 0, i32 3
	%371 = load i16, i16* %370, align 2
	; SelectorExpr
	; SelectorExpr
	%372 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%373 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %372, i64 0, i32 4
	%374 = load i16, i16* %373, align 2
	store %..any zeroinitializer, %..any* %90
	%375 = bitcast i16* %370 to %..rawptr
	%376 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%377 = getelementptr inbounds %..any, %..any* %90, i64 0, i32 0
	store %..rawptr %375, %..rawptr* %377
	%378 = getelementptr inbounds %..any, %..any* %90, i64 0, i32 1
	store %Type_Info* %376, %Type_Info** %378
	%379 = load %..any, %..any* %90, align 8
	store %..any zeroinitializer, %..any* %91
	%380 = bitcast i16* %373 to %..rawptr
	%381 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%382 = getelementptr inbounds %..any, %..any* %91, i64 0, i32 0
	store %..rawptr %380, %..rawptr* %382
	%383 = getelementptr inbounds %..any, %..any* %91, i64 0, i32 1
	store %Type_Info* %381, %Type_Info** %383
	%384 = load %..any, %..any* %91, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %92
	store [2 x %..any] zeroinitializer, [2 x %..any]* %93
	%385 = getelementptr inbounds [2 x %..any], [2 x %..any]* %93, i64 0, i32 0
	store %..any %379, %..any* %385
	%386 = getelementptr inbounds [2 x %..any], [2 x %..any]* %93, i64 0, i32 1
	store %..any %384, %..any* %386
	%387 = getelementptr inbounds [2 x %..any], [2 x %..any]* %93, i64 0, i32 0
	%388 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %92, i64 0, i32 0
	store %..any* %387, %..any** %388
	%389 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %92, i64 0, i32 1
	store i64 2, i64* %389
	%390 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %92, i64 0, i32 2
	store i64 2, i64* %390
	%391 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %92, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$524, i64 0, i32 0), i64 21}, {%..any*, i64, i64} %391)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%392 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%393 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %392, i64 0, i32 5
	%394 = load i16, i16* %393, align 2
	; SelectorExpr
	; SelectorExpr
	%395 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %5, i64 0, i32 1
	%396 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %395, i64 0, i32 6
	%397 = load i16, i16* %396, align 2
	store %..any zeroinitializer, %..any* %94
	%398 = bitcast i16* %393 to %..rawptr
	%399 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%400 = getelementptr inbounds %..any, %..any* %94, i64 0, i32 0
	store %..rawptr %398, %..rawptr* %400
	%401 = getelementptr inbounds %..any, %..any* %94, i64 0, i32 1
	store %Type_Info* %399, %Type_Info** %401
	%402 = load %..any, %..any* %94, align 8
	store %..any zeroinitializer, %..any* %95
	%403 = bitcast i16* %396 to %..rawptr
	%404 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%405 = getelementptr inbounds %..any, %..any* %95, i64 0, i32 0
	store %..rawptr %403, %..rawptr* %405
	%406 = getelementptr inbounds %..any, %..any* %95, i64 0, i32 1
	store %Type_Info* %404, %Type_Info** %406
	%407 = load %..any, %..any* %95, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %96
	store [2 x %..any] zeroinitializer, [2 x %..any]* %97
	%408 = getelementptr inbounds [2 x %..any], [2 x %..any]* %97, i64 0, i32 0
	store %..any %402, %..any* %408
	%409 = getelementptr inbounds [2 x %..any], [2 x %..any]* %97, i64 0, i32 1
	store %..any %407, %..any* %409
	%410 = getelementptr inbounds [2 x %..any], [2 x %..any]* %97, i64 0, i32 0
	%411 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %96, i64 0, i32 0
	store %..any* %410, %..any** %411
	%412 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %96, i64 0, i32 1
	store i64 2, i64* %412
	%413 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %96, i64 0, i32 2
	store i64 2, i64* %413
	%414 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %96, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$525, i64 0, i32 0), i64 21}, {%..any*, i64, i64} %414)
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	br label %if.done-6

if.done-6:
	; SelectorExpr
	call ccc void @igNextColumn()
	; IfStmt
	%415 = load i64, i64* %2, align 8
	%416 = srem i64 %415, 2
	%417 = icmp eq i64 %416, 1
	br i1 %417, label %if.then-7, label %if.done-8

if.then-7:
	; SelectorExpr
	call ccc void @igSeparator()
	br label %if.done-8

if.done-8:
	br label %for.enum.loop-3

for.enum.done-9:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 false)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define i1 @debug_windows-27.ShowXinputStateWindow.IsButtonPressed-0(%xinput-13.State* %state, i16 %b) {
decls-0:
	%0 = alloca i16, align 2
	%1 = load %xinput-13.State, %xinput-13.State* %state, align 4
	store i16 zeroinitializer, i16* %0
		store i16 %b, i16* %0
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%2 = getelementptr inbounds %xinput-13.State, %xinput-13.State* %state, i64 0, i32 1
	%3 = getelementptr inbounds %xinput-13.GamepadState, %xinput-13.GamepadState* %2, i64 0, i32 0
	%4 = load i16, i16* %3, align 2
	%5 = load i16, i16* %0, align 2
	%6 = and i16 %4, %5
	%7 = load i16, i16* %0, align 2
	%8 = icmp eq i16 %6, %7
	ret i1 %8
}

define void @debug_windows-27.ShowCatalogWindow(i1* %show) {
decls-0:
	%0 = alloca i1*, align 8
	%1 = alloca {%..string*, i64, i64}, align 8
	%2 = alloca %catalog-16.Catalog*, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca [1 x %..any], align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	%9 = alloca {%..any*, i64, i64}, align 8
	%10 = alloca %..string, align 8
	%11 = alloca i64, align 8
	%12 = alloca {%..any*, i64, i64}, align 8
	%13 = alloca %imgui-9.Vec2, align 4
	%14 = alloca %asset-25.Asset*, align 8
	%15 = alloca %..string, align 8
	%16 = alloca i64, align 8
	%17 = alloca %..any, align 8
	%18 = alloca i64, align 8
	%19 = alloca %..any, align 8
	%20 = alloca {%..any*, i64, i64}, align 8
	%21 = alloca [2 x %..any], align 8
	%22 = alloca %..any, align 8
	%23 = alloca float, align 4
	%24 = alloca %..any, align 8
	%25 = alloca float, align 4
	%26 = alloca {%..any*, i64, i64}, align 8
	%27 = alloca [2 x %..any], align 8
	store i1* zeroinitializer, i1** %0
		store i1* %show, i1** %0
	; SelectorExpr
	%28 = load i1*, i1** %0, align 8
	%29 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$526, i64 0, i32 0), i64 8}, i1* %28, i32 32)
	; SelectorExpr
	%30 = getelementptr inbounds i32, i32* @debug_windows-27._ChosenCatalog, i64 0
	; SliceExpr
	; SelectorExpr
	; SelectorExpr
	%31 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 0
	%32 = load {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %31, align 8
	%33 = extractvalue {%..string*, i64, i64,%Allocator} %32, 1
	%34 = extractvalue {%..string*, i64, i64,%Allocator} %32, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$527, i64 0, i32 0), i64 35}, i64 554, i64 79, i64 0, i64 %33, i64 %34)
	%35 = extractvalue {%..string*, i64, i64,%Allocator} %32, 0
	%36 = getelementptr inbounds %..string, %..string* %35, i64 0
	%37 = sub i64 %33, 0
	%38 = sub i64 %34, 0
	store {%..string*, i64, i64} zeroinitializer, {%..string*, i64, i64}* %1
	%39 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1, i64 0, i32 0
	store %..string* %36, %..string** %39
	%40 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1, i64 0, i32 1
	store i64 %37, i64* %40
	%41 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1, i64 0, i32 2
	store i64 %38, i64* %41
	%42 = load {%..string*, i64, i64}, {%..string*, i64, i64}* %1, align 8
	%43 = call i1 @imgui-9.Combo(%..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$528, i64 0, i32 0), i64 7}, i32* %30, {%..string*, i64, i64} %42, i32 -1)
	; SelectorExpr
	call ccc void @igSeparator()
	; cat
	store %catalog-16.Catalog* zeroinitializer, %catalog-16.Catalog** %2
		; IndexExpr
	; SelectorExpr
	; SelectorExpr
	%44 = getelementptr inbounds %catalog-16.DebugInfo_t, %catalog-16.DebugInfo_t* @catalog-16.DebugInfo, i64 0, i32 1
	%45 = load {%catalog-16.Catalog**, i64, i64,%Allocator}, {%catalog-16.Catalog**, i64, i64,%Allocator}* %44, align 8
	%46 = extractvalue {%catalog-16.Catalog**, i64, i64,%Allocator} %45, 0
	%47 = extractvalue {%catalog-16.Catalog**, i64, i64,%Allocator} %45, 1
	%48 = load i32, i32* @debug_windows-27._ChosenCatalog, align 4
	%49 = sext i32 %48 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$529, i64 0, i32 0), i64 35}, i64 556, i64 43, i64 %49, i64 %47)
	%50 = getelementptr inbounds %catalog-16.Catalog*, %catalog-16.Catalog** %46, i64 %49
	%51 = load %catalog-16.Catalog*, %catalog-16.Catalog** %50, align 8
	store %catalog-16.Catalog* %51, %catalog-16.Catalog** %2
	; SelectorExpr
	; SelectorExpr
	%52 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%53 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %52, i64 0
	%54 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %53, i64 0, i32 3
	%55 = load %..string, %..string* %54, align 8
	store %..any zeroinitializer, %..any* %3
	%56 = bitcast %..string* %54 to %..rawptr
	%57 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%58 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %56, %..rawptr* %58
	%59 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %57, %Type_Info** %59
	%60 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	store [1 x %..any] zeroinitializer, [1 x %..any]* %5
	%61 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	store %..any %60, %..any* %61
	%62 = getelementptr inbounds [1 x %..any], [1 x %..any]* %5, i64 0, i32 0
	%63 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 0
	store %..any* %62, %..any** %63
	%64 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 1
	store i64 1, i64* %64
	%65 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %4, i64 0, i32 2
	store i64 1, i64* %65
	%66 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$52a, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %66)
	; SelectorExpr
	; SelectorExpr
	%67 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%68 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %67, i64 0
	%69 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %68, i64 0, i32 4
	%70 = load i64, i64* %69, align 8
	store %..any zeroinitializer, %..any* %6
	%71 = bitcast i64* %69 to %..rawptr
	%72 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 304
	%73 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %71, %..rawptr* %73
	%74 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %72, %Type_Info** %74
	%75 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%76 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %75, %..any* %76
	%77 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%78 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %77, %..any** %78
	%79 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %79
	%80 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %80
	%81 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$52b, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %81)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %9
	%82 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %9, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$52c, i64 0, i32 0), i64 21}, {%..any*, i64, i64} %82)
	; SelectorExpr
	call ccc void @igIndent(float 0x4024000000000000)
	; RangeStmt
	; ext
	store %..string zeroinitializer, %..string* %10
		; SelectorExpr
	%83 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%84 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %83, i64 0
	%85 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %84, i64 0, i32 1
	%86 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %85, i64 0, i32 1
	store i64 zeroinitializer, i64* %11
	store i64 -1, i64* %11
	br label %for.index.loop-1

for.index.loop-1:
	%87 = load i64, i64* %11, align 8
	%88 = add i64 %87, 1
	store i64 %88, i64* %11
	%89 = load i64, i64* %86, align 8
	%90 = icmp slt i64 %88, %89
	br i1 %90, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%91 = load i64, i64* %11, align 8
	%92 = getelementptr inbounds {%..string*, i64, i64,%Allocator}, {%..string*, i64, i64,%Allocator}* %85, i64 0, i32 0
	%93 = load %..string*, %..string** %92, align 8
	%94 = getelementptr inbounds %..string, %..string* %93, i64 %91
	%95 = load %..string, %..string* %94, align 8
	store %..string %95, %..string* %10
	; SelectorExpr
	%96 = load %..string, %..string* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %12
	%97 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %12, align 8
	call void @imgui-9.Text(%..string %96, {%..any*, i64, i64} %97)
	br label %for.index.loop-1

for.index.done-3:
	; SelectorExpr
	call ccc void @igUnindent(float 0x4024000000000000)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %13
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0xc032000000000000}, %imgui-9.Vec2* %13
	%98 = bitcast %imgui-9.Vec2* %13 to i64*
	%99 = load i64, i64* %98, align 8
	%100 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$52d, i64 0, i32 0), i64 5}, i64 %99, i1 true, i32 0)
	; RangeStmt
	; val
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %14
		; SelectorExpr
	%101 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%102 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %101, i64 0
	%103 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %102, i64 0, i32 0
	%104 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %103, i64 0, i32 1
	%105 = getelementptr inbounds {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}* %104, i64 0, i32 1
	store %..string zeroinitializer, %..string* %15
	store i64 zeroinitializer, i64* %16
	store i64 -1, i64* %16
	br label %for.index.loop-4

for.index.loop-4:
	%106 = load i64, i64* %16, align 8
	%107 = add i64 %106, 1
	store i64 %107, i64* %16
	%108 = load i64, i64* %105, align 8
	%109 = icmp slt i64 %107, %108
	br i1 %109, label %for.index.body-5, label %for.index.done-6

for.index.body-5:
	%110 = load i64, i64* %16, align 8
	%111 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %103, i64 0, i32 1
	%112 = getelementptr inbounds {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}* %111, i64 0, i32 0
	%113 = load {%__Map_Key, i64, %asset-25.Asset*}*, {%__Map_Key, i64, %asset-25.Asset*}** %112, align 8
	%114 = getelementptr inbounds {%__Map_Key, i64, %asset-25.Asset*}, {%__Map_Key, i64, %asset-25.Asset*}* %113, i64 %110
	%115 = getelementptr inbounds {%__Map_Key, i64, %asset-25.Asset*}, {%__Map_Key, i64, %asset-25.Asset*}* %114, i64 0, i32 2
	%116 = load %asset-25.Asset*, %asset-25.Asset** %115, align 8
	%117 = getelementptr inbounds {%__Map_Key, i64, %asset-25.Asset*}, {%__Map_Key, i64, %asset-25.Asset*}* %114, i64 0, i32 0
	%118 = getelementptr inbounds %__Map_Key, %__Map_Key* %117, i64 0, i32 1
	%119 = load %..string, %..string* %118, align 8
	store %..string %119, %..string* %15
	%120 = load %..string, %..string* %15, align 8
	store %asset-25.Asset* %116, %asset-25.Asset** %14
	%121 = load %asset-25.Asset*, %asset-25.Asset** %14, align 8
	call void @debug_windows-27.ShowCatalogWindow.PrintName-0(%asset-25.Asset* %121)
	br label %for.index.loop-4

for.index.done-6:
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	; SelectorExpr
	%122 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%123 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %122, i64 0
	%124 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %123, i64 0, i32 0
	%125 = load {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}}* %124, align 8
	; len: map
	%126 = extractvalue {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator}} %125, 1
	%127 = extractvalue {{%__Map_Key, i64, %asset-25.Asset*}*, i64, i64,%Allocator} %126, 1
	; SelectorExpr
	%128 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%129 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %128, i64 0
	%130 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %129, i64 0, i32 5
	%131 = load i64, i64* %130, align 8
	store %..any zeroinitializer, %..any* %17
	store i64 zeroinitializer, i64* %18
	store i64 %127, i64* %18
	%132 = bitcast i64* %18 to %..rawptr
	%133 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%134 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 0
	store %..rawptr %132, %..rawptr* %134
	%135 = getelementptr inbounds %..any, %..any* %17, i64 0, i32 1
	store %Type_Info* %133, %Type_Info** %135
	%136 = load %..any, %..any* %17, align 8
	store %..any zeroinitializer, %..any* %19
	%137 = bitcast i64* %130 to %..rawptr
	%138 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%139 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 0
	store %..rawptr %137, %..rawptr* %139
	%140 = getelementptr inbounds %..any, %..any* %19, i64 0, i32 1
	store %Type_Info* %138, %Type_Info** %140
	%141 = load %..any, %..any* %19, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %20
	store [2 x %..any] zeroinitializer, [2 x %..any]* %21
	%142 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	store %..any %136, %..any* %142
	%143 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 1
	store %..any %141, %..any* %143
	%144 = getelementptr inbounds [2 x %..any], [2 x %..any]* %21, i64 0, i32 0
	%145 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 0
	store %..any* %144, %..any** %145
	%146 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 1
	store i64 2, i64* %146
	%147 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 2
	store i64 2, i64* %147
	%148 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %20, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$52e, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %148)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0xbff0000000000000)
	; SelectorExpr
	; SelectorExpr
	%149 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%150 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %149, i64 0
	%151 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %150, i64 0, i32 7
	%152 = load i64, i64* %151, align 8
	%153 = uitofp i64 %152 to float
	%154 = fdiv float %153, 0x4090000000000000
	; SelectorExpr
	%155 = load %catalog-16.Catalog*, %catalog-16.Catalog** %2, align 8
	%156 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %155, i64 0
	%157 = getelementptr inbounds %catalog-16.Catalog, %catalog-16.Catalog* %156, i64 0, i32 6
	%158 = load i64, i64* %157, align 8
	%159 = uitofp i64 %158 to float
	%160 = fdiv float %159, 0x4090000000000000
	store %..any zeroinitializer, %..any* %22
	store float zeroinitializer, float* %23
	store float %154, float* %23
	%161 = bitcast float* %23 to %..rawptr
	%162 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%163 = getelementptr inbounds %..any, %..any* %22, i64 0, i32 0
	store %..rawptr %161, %..rawptr* %163
	%164 = getelementptr inbounds %..any, %..any* %22, i64 0, i32 1
	store %Type_Info* %162, %Type_Info** %164
	%165 = load %..any, %..any* %22, align 8
	store %..any zeroinitializer, %..any* %24
	store float zeroinitializer, float* %25
	store float %160, float* %25
	%166 = bitcast float* %25 to %..rawptr
	%167 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%168 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 0
	store %..rawptr %166, %..rawptr* %168
	%169 = getelementptr inbounds %..any, %..any* %24, i64 0, i32 1
	store %Type_Info* %167, %Type_Info** %169
	%170 = load %..any, %..any* %24, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %26
	store [2 x %..any] zeroinitializer, [2 x %..any]* %27
	%171 = getelementptr inbounds [2 x %..any], [2 x %..any]* %27, i64 0, i32 0
	store %..any %165, %..any* %171
	%172 = getelementptr inbounds [2 x %..any], [2 x %..any]* %27, i64 0, i32 1
	store %..any %170, %..any* %172
	%173 = getelementptr inbounds [2 x %..any], [2 x %..any]* %27, i64 0, i32 0
	%174 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 0
	store %..any* %173, %..any** %174
	%175 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 1
	store i64 2, i64* %175
	%176 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %26, i64 0, i32 2
	store i64 2, i64* %176
	%177 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %26, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$52f, i64 0, i32 0), i64 24}, {%..any*, i64, i64} %177)
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.ShowCatalogWindow.PrintName-0(%asset-25.Asset* %asset) {
decls-0:
	%0 = alloca %asset-25.Asset*, align 8
	%1 = alloca %asset-25.Asset.Texture*, align 8
	%2 = alloca %asset-25.Asset.Shader*, align 8
	%3 = alloca %asset-25.Asset*, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..string, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [2 x %..any], align 8
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %0
		store %asset-25.Asset* %asset, %asset-25.Asset** %0
	; TypeMatchStmt
	%9 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	; get union's tag
	%10 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %9, i64 0, i32 4 ; UnionTagPtr
	%11 = load i64, i64* %10, align 8
	%12 = bitcast %asset-25.Asset* %9 to %..rawptr
	%13 = icmp eq i64 %11, 1
	br i1 %13, label %typematch.body-2, label %typematch.next-1

typematch.next-1:
	%14 = icmp eq i64 %11, 2
	br i1 %14, label %typematch.body-4, label %typematch.next-3

typematch.body-2:
	%15 = bitcast %..rawptr %12 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %1
	store %asset-25.Asset.Texture* %15, %asset-25.Asset.Texture** %1
	; SelectorExpr
	; SelectorExpr
	%16 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %1, align 8
	%17 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %16, i64 0
	%18 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %17, i64 0, i32 0
	%19 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %18, i64 0, i32 0
	%20 = load %..string, %..string* %19, align 8
	; SelectorExpr
	%21 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %1, align 8
	%22 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %21, i64 0
	%23 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %22, i64 0, i32 1
	%24 = load i1, i1* %23, align 1
	; SelectorExpr
	%25 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %1, align 8
	%26 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %25, i64 0
	%27 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %26, i64 0, i32 2
	%28 = load i32, i32* %27, align 4
	%29 = icmp ne i32 %28, 0
	%30 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	call void @debug_windows-27.ShowCatalogWindow.PrintName-0.PrintLoadedUploaded-0(%..string %20, i1 %24, i1 %29, %asset-25.Asset* %30)
	br label %typematch.done-8

typematch.next-3:
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %3
	store %asset-25.Asset* %9, %asset-25.Asset** %3
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%31 = load %asset-25.Asset*, %asset-25.Asset** %3, align 8
	%32 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %31, i64 0
	%33 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %32, i64 0, i32 1
	%34 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %33, i64 0, i32 0
	%35 = load %..string, %..string* %34, align 8
	; TernaryExpr
	; SelectorExpr
	%36 = load %asset-25.Asset*, %asset-25.Asset** %3, align 8
	%37 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %36, i64 0
	%38 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %37, i64 0, i32 2
	%39 = load i1, i1* %38, align 1
	br i1 %39, label %if.then-5, label %if.else-6

typematch.body-4:
	%40 = bitcast %..rawptr %12 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %2
	store %asset-25.Asset.Shader* %40, %asset-25.Asset.Shader** %2
	; SelectorExpr
	; SelectorExpr
	%41 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %2, align 8
	%42 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %41, i64 0
	%43 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %42, i64 0, i32 0
	%44 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %43, i64 0, i32 0
	%45 = load %..string, %..string* %44, align 8
	; SelectorExpr
	%46 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %2, align 8
	%47 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %46, i64 0
	%48 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %47, i64 0, i32 1
	%49 = load i1, i1* %48, align 1
	; SelectorExpr
	%50 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %2, align 8
	%51 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %50, i64 0
	%52 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %51, i64 0, i32 2
	%53 = load i32, i32* %52, align 4
	%54 = icmp ne i32 %53, 0
	%55 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	call void @debug_windows-27.ShowCatalogWindow.PrintName-0.PrintLoadedUploaded-0(%..string %45, i1 %49, i1 %54, %asset-25.Asset* %55)
	br label %typematch.done-8

if.then-5:
	br label %if.done-7

if.else-6:
	br label %if.done-7

if.done-7:
	%56 = phi %..string [ {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$530, i64 0, i32 0), i64 8}, %if.then-5 ], [ zeroinitializer, %if.else-6 ]
	store %..any zeroinitializer, %..any* %4
	%57 = bitcast %..string* %34 to %..rawptr
	%58 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%59 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %57, %..rawptr* %59
	%60 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %58, %Type_Info** %60
	%61 = load %..any, %..any* %4, align 8
	store %..any zeroinitializer, %..any* %5
	store %..string zeroinitializer, %..string* %6
	store %..string %56, %..string* %6
	%62 = bitcast %..string* %6 to %..rawptr
	%63 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%64 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %62, %..rawptr* %64
	%65 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %63, %Type_Info** %65
	%66 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [2 x %..any] zeroinitializer, [2 x %..any]* %8
	%67 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 0
	store %..any %61, %..any* %67
	%68 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 1
	store %..any %66, %..any* %68
	%69 = getelementptr inbounds [2 x %..any], [2 x %..any]* %8, i64 0, i32 0
	%70 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %69, %..any** %70
	%71 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 2, i64* %71
	%72 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 2, i64* %72
	%73 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$531, i64 0, i32 0), i64 5}, {%..any*, i64, i64} %73)
	%74 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	call void @debug_windows-27.ShowCatalogWindow.ToolTip-1(%asset-25.Asset* %74)
	br label %typematch.done-8

typematch.done-8:
	ret void
}

define void @debug_windows-27.ShowCatalogWindow.PrintName-0.PrintLoadedUploaded-0(%..string %name, i1 %load, i1 %up, %asset-25.Asset* %asset) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i1, align 1
	%2 = alloca i1, align 1
	%3 = alloca %asset-25.Asset*, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..string, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	%9 = alloca %imgui-9.Vec4, align 16
	%10 = alloca %..any, align 8
	%11 = alloca %..string, align 8
	%12 = alloca {%..any*, i64, i64}, align 8
	%13 = alloca [1 x %..any], align 8
	%14 = alloca %imgui-9.Vec4, align 16
	store %..string zeroinitializer, %..string* %0
		store %..string %name, %..string* %0
	store i1 zeroinitializer, i1* %1
		store i1 %load, i1* %1
	store i1 zeroinitializer, i1* %2
		store i1 %up, i1* %2
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %3
		store %asset-25.Asset* %asset, %asset-25.Asset** %3
	; SelectorExpr
	%15 = load %..string, %..string* %0, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	%16 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @imgui-9.Text(%..string %15, {%..any*, i64, i64} %16)
	%17 = load %asset-25.Asset*, %asset-25.Asset** %3, align 8
	call void @debug_windows-27.ShowCatalogWindow.ToolTip-1(%asset-25.Asset* %17)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0x0000000000000000)
	; SelectorExpr
	; TernaryExpr
	%18 = load i1, i1* %1, align 1
	br i1 %18, label %if.then-1, label %if.else-2

if.then-1:
	br label %if.done-3

if.else-2:
	br label %if.done-3

if.done-3:
	%19 = phi %..string [ {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$532, i64 0, i32 0), i64 8}, %if.then-1 ], [ zeroinitializer, %if.else-2 ]
	store %..any zeroinitializer, %..any* %5
	store %..string zeroinitializer, %..string* %6
	store %..string %19, %..string* %6
	%20 = bitcast %..string* %6 to %..rawptr
	%21 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%22 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %20, %..rawptr* %22
	%23 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %21, %Type_Info** %23
	%24 = load %..any, %..any* %5, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%25 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %24, %..any* %25
	%26 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%27 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %26, %..any** %27
	%28 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %28
	%29 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %29
	%30 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %9
	store %imgui-9.Vec4 {float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %9
	call void @imgui-9.TextColored(%imgui-9.Vec4* %9, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$533, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %30)
	; SelectorExpr
	call ccc void @igSameLine(float 0x0000000000000000, float 0x0000000000000000)
	; SelectorExpr
	; TernaryExpr
	%31 = load i1, i1* %2, align 1
	br i1 %31, label %if.then-4, label %if.else-5

if.then-4:
	br label %if.done-6

if.else-5:
	br label %if.done-6

if.done-6:
	%32 = phi %..string [ {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$534, i64 0, i32 0), i64 10}, %if.then-4 ], [ zeroinitializer, %if.else-5 ]
	store %..any zeroinitializer, %..any* %10
	store %..string zeroinitializer, %..string* %11
	store %..string %32, %..string* %11
	%33 = bitcast %..string* %11 to %..rawptr
	%34 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%35 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %33, %..rawptr* %35
	%36 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %34, %Type_Info** %36
	%37 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %12
	store [1 x %..any] zeroinitializer, [1 x %..any]* %13
	%38 = getelementptr inbounds [1 x %..any], [1 x %..any]* %13, i64 0, i32 0
	store %..any %37, %..any* %38
	%39 = getelementptr inbounds [1 x %..any], [1 x %..any]* %13, i64 0, i32 0
	%40 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 0
	store %..any* %39, %..any** %40
	%41 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 1
	store i64 1, i64* %41
	%42 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %12, i64 0, i32 2
	store i64 1, i64* %42
	%43 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %12, align 8
	store %imgui-9.Vec4 zeroinitializer, %imgui-9.Vec4* %14
	store %imgui-9.Vec4 {float 0x0000000000000000, float 0x3fe8f5c280000000, float 0x0000000000000000, float 0x3ff0000000000000}, %imgui-9.Vec4* %14
	call void @imgui-9.TextColored(%imgui-9.Vec4* %14, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$535, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %43)
	ret void
}

define void @debug_windows-27.ShowCatalogWindow.ToolTip-1(%asset-25.Asset* %val) {
decls-0:
	%0 = alloca %asset-25.Asset*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1 x %..any], align 8
	%4 = alloca %..any, align 8
	%5 = alloca float, align 4
	%6 = alloca {%..any*, i64, i64}, align 8
	%7 = alloca [1 x %..any], align 8
	%8 = alloca %asset-25.Asset.Texture*, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca %..any, align 8
	%13 = alloca %..any, align 8
	%14 = alloca {%..any*, i64, i64}, align 8
	%15 = alloca [2 x %..any], align 8
	%16 = alloca %..any, align 8
	%17 = alloca {%..any*, i64, i64}, align 8
	%18 = alloca [1 x %..any], align 8
	%19 = alloca %asset-25.Asset.Shader*, align 8
	%20 = alloca %..any, align 8
	%21 = alloca {%..any*, i64, i64}, align 8
	%22 = alloca [1 x %..any], align 8
	%23 = alloca %..any, align 8
	%24 = alloca {%..any*, i64, i64}, align 8
	%25 = alloca [1 x %..any], align 8
	store %asset-25.Asset* zeroinitializer, %asset-25.Asset** %0
		store %asset-25.Asset* %val, %asset-25.Asset** %0
	; IfStmt
	; SelectorExpr
	%26 = call ccc i1 @igIsItemHovered()
	br i1 %26, label %if.then-1, label %if.done-7

if.then-1:
	; SelectorExpr
	call ccc void @igBeginTooltip()
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%27 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	%28 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %27, i64 0
	%29 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %28, i64 0, i32 1
	%30 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %29, i64 0, i32 2
	%31 = load %..string, %..string* %30, align 8
	store %..any zeroinitializer, %..any* %1
	%32 = bitcast %..string* %30 to %..rawptr
	%33 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%34 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %32, %..rawptr* %34
	%35 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %33, %Type_Info** %35
	%36 = load %..any, %..any* %1, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	store [1 x %..any] zeroinitializer, [1 x %..any]* %3
	%37 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	store %..any %36, %..any* %37
	%38 = getelementptr inbounds [1 x %..any], [1 x %..any]* %3, i64 0, i32 0
	%39 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 0
	store %..any* %38, %..any** %39
	%40 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 1
	store i64 1, i64* %40
	%41 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %2, i64 0, i32 2
	store i64 1, i64* %41
	%42 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$536, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %42)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%43 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	%44 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %43, i64 0
	%45 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %44, i64 0, i32 1
	%46 = getelementptr inbounds %asset-25.FileInfo_t, %asset-25.FileInfo_t* %45, i64 0, i32 3
	%47 = load i64, i64* %46, align 8
	%48 = uitofp i64 %47 to float
	%49 = fdiv float %48, 0x4090000000000000
	store %..any zeroinitializer, %..any* %4
	store float zeroinitializer, float* %5
	store float %49, float* %5
	%50 = bitcast float* %5 to %..rawptr
	%51 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%52 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %50, %..rawptr* %52
	%53 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %51, %Type_Info** %53
	%54 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %6
	store [1 x %..any] zeroinitializer, [1 x %..any]* %7
	%55 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	store %..any %54, %..any* %55
	%56 = getelementptr inbounds [1 x %..any], [1 x %..any]* %7, i64 0, i32 0
	%57 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 0
	store %..any* %56, %..any** %57
	%58 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 1
	store i64 1, i64* %58
	%59 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %6, i64 0, i32 2
	store i64 1, i64* %59
	%60 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %6, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$537, i64 0, i32 0), i64 19}, {%..any*, i64, i64} %60)
	; TypeMatchStmt
	%61 = load %asset-25.Asset*, %asset-25.Asset** %0, align 8
	; get union's tag
	%62 = getelementptr inbounds %asset-25.Asset, %asset-25.Asset* %61, i64 0, i32 4 ; UnionTagPtr
	%63 = load i64, i64* %62, align 8
	%64 = bitcast %asset-25.Asset* %61 to %..rawptr
	%65 = icmp eq i64 %63, 1
	br i1 %65, label %typematch.body-3, label %typematch.next-2

typematch.next-2:
	%66 = icmp eq i64 %63, 2
	br i1 %66, label %typematch.body-5, label %typematch.next-4

typematch.body-3:
	%67 = bitcast %..rawptr %64 to %asset-25.Asset.Texture*
	store %asset-25.Asset.Texture* zeroinitializer, %asset-25.Asset.Texture** %8
	store %asset-25.Asset.Texture* %67, %asset-25.Asset.Texture** %8
	; SelectorExpr
	; SelectorExpr
	%68 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %8, align 8
	%69 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %68, i64 0
	%70 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %69, i64 0, i32 2
	%71 = load i32, i32* %70, align 4
	store %..any zeroinitializer, %..any* %9
	%72 = bitcast i32* %70 to %..rawptr
	%73 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%74 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %72, %..rawptr* %74
	%75 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %73, %Type_Info** %75
	%76 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%77 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %76, %..any* %77
	%78 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%79 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %78, %..any** %79
	%80 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %80
	%81 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %81
	%82 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$538, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %82)
	; SelectorExpr
	; SelectorExpr
	%83 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %8, align 8
	%84 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %83, i64 0
	%85 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %84, i64 0, i32 3
	%86 = load i32, i32* %85, align 4
	; SelectorExpr
	%87 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %8, align 8
	%88 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %87, i64 0
	%89 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %88, i64 0, i32 4
	%90 = load i32, i32* %89, align 4
	store %..any zeroinitializer, %..any* %12
	%91 = bitcast i32* %85 to %..rawptr
	%92 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%93 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %91, %..rawptr* %93
	%94 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %92, %Type_Info** %94
	%95 = load %..any, %..any* %12, align 8
	store %..any zeroinitializer, %..any* %13
	%96 = bitcast i32* %89 to %..rawptr
	%97 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%98 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 0
	store %..rawptr %96, %..rawptr* %98
	%99 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 1
	store %Type_Info* %97, %Type_Info** %99
	%100 = load %..any, %..any* %13, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %14
	store [2 x %..any] zeroinitializer, [2 x %..any]* %15
	%101 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 0
	store %..any %95, %..any* %101
	%102 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 1
	store %..any %100, %..any* %102
	%103 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 0
	%104 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 0
	store %..any* %103, %..any** %104
	%105 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 1
	store i64 2, i64* %105
	%106 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %14, i64 0, i32 2
	store i64 2, i64* %106
	%107 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %14, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$539, i64 0, i32 0), i64 18}, {%..any*, i64, i64} %107)
	; SelectorExpr
	; SelectorExpr
	%108 = load %asset-25.Asset.Texture*, %asset-25.Asset.Texture** %8, align 8
	%109 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %108, i64 0
	%110 = getelementptr inbounds %asset-25.Asset.Texture, %asset-25.Asset.Texture* %109, i64 0, i32 5
	%111 = load i32, i32* %110, align 4
	store %..any zeroinitializer, %..any* %16
	%112 = bitcast i32* %110 to %..rawptr
	%113 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%114 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 0
	store %..rawptr %112, %..rawptr* %114
	%115 = getelementptr inbounds %..any, %..any* %16, i64 0, i32 1
	store %Type_Info* %113, %Type_Info** %115
	%116 = load %..any, %..any* %16, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %17
	store [1 x %..any] zeroinitializer, [1 x %..any]* %18
	%117 = getelementptr inbounds [1 x %..any], [1 x %..any]* %18, i64 0, i32 0
	store %..any %116, %..any* %117
	%118 = getelementptr inbounds [1 x %..any], [1 x %..any]* %18, i64 0, i32 0
	%119 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 0
	store %..any* %118, %..any** %119
	%120 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 1
	store i64 1, i64* %120
	%121 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %17, i64 0, i32 2
	store i64 1, i64* %121
	%122 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %17, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$53a, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %122)
	br label %typematch.done-6

typematch.next-4:
	br label %typematch.done-6

typematch.body-5:
	%123 = bitcast %..rawptr %64 to %asset-25.Asset.Shader*
	store %asset-25.Asset.Shader* zeroinitializer, %asset-25.Asset.Shader** %19
	store %asset-25.Asset.Shader* %123, %asset-25.Asset.Shader** %19
	; SelectorExpr
	; SelectorExpr
	%124 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %19, align 8
	%125 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %124, i64 0
	%126 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %125, i64 0, i32 2
	%127 = load i32, i32* %126, align 4
	store %..any zeroinitializer, %..any* %20
	%128 = bitcast i32* %126 to %..rawptr
	%129 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%130 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 0
	store %..rawptr %128, %..rawptr* %130
	%131 = getelementptr inbounds %..any, %..any* %20, i64 0, i32 1
	store %Type_Info* %129, %Type_Info** %131
	%132 = load %..any, %..any* %20, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %21
	store [1 x %..any] zeroinitializer, [1 x %..any]* %22
	%133 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	store %..any %132, %..any* %133
	%134 = getelementptr inbounds [1 x %..any], [1 x %..any]* %22, i64 0, i32 0
	%135 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 0
	store %..any* %134, %..any** %135
	%136 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 1
	store i64 1, i64* %136
	%137 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %21, i64 0, i32 2
	store i64 1, i64* %137
	%138 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %21, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$53b, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %138)
	; SelectorExpr
	; SelectorExpr
	%139 = load %asset-25.Asset.Shader*, %asset-25.Asset.Shader** %19, align 8
	%140 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %139, i64 0
	%141 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %140, i64 0, i32 3
	%142 = load i32, i32* %141, align 4
	store %..any zeroinitializer, %..any* %23
	%143 = bitcast i32* %141 to %..rawptr
	%144 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	%145 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 0
	store %..rawptr %143, %..rawptr* %145
	%146 = getelementptr inbounds %..any, %..any* %23, i64 0, i32 1
	store %Type_Info* %144, %Type_Info** %146
	%147 = load %..any, %..any* %23, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %24
	store [1 x %..any] zeroinitializer, [1 x %..any]* %25
	%148 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	store %..any %147, %..any* %148
	%149 = getelementptr inbounds [1 x %..any], [1 x %..any]* %25, i64 0, i32 0
	%150 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 0
	store %..any* %149, %..any** %150
	%151 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 1
	store i64 1, i64* %151
	%152 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %24, i64 0, i32 2
	store i64 1, i64* %152
	%153 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %24, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$53c, i64 0, i32 0), i64 15}, {%..any*, i64, i64} %153)
	br label %typematch.done-6

typematch.done-6:
	; SelectorExpr
	call ccc void @igEndTooltip()
	br label %if.done-7

if.done-7:
	ret void
}

define void @debug_windows-27.ShowInputWindow(%input-19.Input_t* %input, i1* %show) {
decls-0:
	%0 = alloca %input-19.Input_t*, align 8
	%1 = alloca i1*, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca {%..any*, i64, i64}, align 8
	%4 = alloca {%..any*, i64, i64}, align 8
	%5 = alloca {%..any*, i64, i64}, align 8
	%6 = alloca %input-19.Binding, align 8
	%7 = alloca %..string, align 8
	%8 = alloca i64, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca %..any, align 8
	%13 = alloca {%..any*, i64, i64}, align 8
	%14 = alloca [1 x %..any], align 8
	%15 = alloca %..any, align 8
	%16 = alloca {%..any*, i64, i64}, align 8
	%17 = alloca [1 x %..any], align 8
	%18 = alloca %..any, align 8
	%19 = alloca i64, align 8
	%20 = alloca {%..any*, i64, i64}, align 8
	%21 = alloca [1 x %..any], align 8
	%22 = alloca {%..any*, i64, i64}, align 8
	%23 = alloca {%..any*, i64, i64}, align 8
	%24 = alloca {%..any*, i64, i64}, align 8
	%25 = alloca {%..any*, i64, i64}, align 8
	%26 = alloca %imgui-9.Vec2, align 4
	%27 = alloca {i64*, i64, i64}, align 8
	%28 = alloca %imgui-9.Vec2, align 4
	%29 = alloca {i64*, i64, i64}, align 8
	store %input-19.Input_t* zeroinitializer, %input-19.Input_t** %0
		store %input-19.Input_t* %input, %input-19.Input_t** %0
	store i1* zeroinitializer, i1** %1
		store i1* %show, i1** %1
	; SelectorExpr
	%30 = load i1*, i1** %1, align 8
	%31 = call i1 @imgui-9.Begin(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$53d, i64 0, i32 0), i64 25}, i1* %30, i32 32)
	; SelectorExpr
	call ccc void @igColumns(i32 4, i8* zeroinitializer, i1 true)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	%32 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$53e, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %32)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %3
	%33 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %3, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$53f, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %33)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %4
	%34 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %4, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$540, i64 0, i32 0), i64 13}, {%..any*, i64, i64} %34)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %5
	%35 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %5, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$541, i64 0, i32 0), i64 5}, {%..any*, i64, i64} %35)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igNextColumn()
	; IfStmt
	; SelectorExpr
	%36 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%37 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %36, i64 0
	%38 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %37, i64 0, i32 2
	%39 = load {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %38, align 8
	; len: map
	%40 = extractvalue {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}} %39, 1
	%41 = extractvalue {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator} %40, 1
	%42 = icmp sgt i64 %41, 0
	br i1 %42, label %if.then-1, label %if.else-5

if.then-1:
	; RangeStmt
	; v
	store %input-19.Binding zeroinitializer, %input-19.Binding* %6
		; SelectorExpr
	%43 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%44 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %43, i64 0
	%45 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %44, i64 0, i32 2
	%46 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %45, i64 0, i32 1
	%47 = getelementptr inbounds {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}* %46, i64 0, i32 1
	store %..string zeroinitializer, %..string* %7
	store i64 zeroinitializer, i64* %8
	store i64 -1, i64* %8
	br label %for.index.loop-2

for.index.loop-2:
	%48 = load i64, i64* %8, align 8
	%49 = add i64 %48, 1
	store i64 %49, i64* %8
	%50 = load i64, i64* %47, align 8
	%51 = icmp slt i64 %49, %50
	br i1 %51, label %for.index.body-3, label %for.index.done-4

for.index.body-3:
	%52 = load i64, i64* %8, align 8
	%53 = getelementptr inbounds {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}, {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}}* %45, i64 0, i32 1
	%54 = getelementptr inbounds {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}, {{%__Map_Key, i64, %input-19.Binding}*, i64, i64,%Allocator}* %53, i64 0, i32 0
	%55 = load {%__Map_Key, i64, %input-19.Binding}*, {%__Map_Key, i64, %input-19.Binding}** %54, align 8
	%56 = getelementptr inbounds {%__Map_Key, i64, %input-19.Binding}, {%__Map_Key, i64, %input-19.Binding}* %55, i64 %52
	%57 = getelementptr inbounds {%__Map_Key, i64, %input-19.Binding}, {%__Map_Key, i64, %input-19.Binding}* %56, i64 0, i32 2
	%58 = load %input-19.Binding, %input-19.Binding* %57, align 8
	%59 = getelementptr inbounds {%__Map_Key, i64, %input-19.Binding}, {%__Map_Key, i64, %input-19.Binding}* %56, i64 0, i32 0
	%60 = getelementptr inbounds %__Map_Key, %__Map_Key* %59, i64 0, i32 1
	%61 = load %..string, %..string* %60, align 8
	store %..string %61, %..string* %7
	%62 = load %..string, %..string* %7, align 8
	store %input-19.Binding %58, %input-19.Binding* %6
	; SelectorExpr
	; SelectorExpr
	%63 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %6, i64 0, i32 0
	%64 = load %..string, %..string* %63, align 8
	store %..any zeroinitializer, %..any* %9
	%65 = bitcast %..string* %63 to %..rawptr
	%66 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%67 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %65, %..rawptr* %67
	%68 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %66, %Type_Info** %68
	%69 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%70 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %69, %..any* %70
	%71 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%72 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %71, %..any** %72
	%73 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %73
	%74 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %74
	%75 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$542, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %75)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; SelectorExpr
	%76 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %6, i64 0, i32 1
	%77 = load i32, i32* %76, align 4
	store %..any zeroinitializer, %..any* %12
	%78 = bitcast i32* %76 to %..rawptr
	%79 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%80 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %78, %..rawptr* %80
	%81 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %79, %Type_Info** %81
	%82 = load %..any, %..any* %12, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %13
	store [1 x %..any] zeroinitializer, [1 x %..any]* %14
	%83 = getelementptr inbounds [1 x %..any], [1 x %..any]* %14, i64 0, i32 0
	store %..any %82, %..any* %83
	%84 = getelementptr inbounds [1 x %..any], [1 x %..any]* %14, i64 0, i32 0
	%85 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 0
	store %..any* %84, %..any** %85
	%86 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 1
	store i64 1, i64* %86
	%87 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %13, i64 0, i32 2
	store i64 1, i64* %87
	%88 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %13, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$543, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %88)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; SelectorExpr
	%89 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %6, i64 0, i32 2
	%90 = load i16, i16* %89, align 2
	store %..any zeroinitializer, %..any* %15
	%91 = bitcast i16* %89 to %..rawptr
	%92 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	%93 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 0
	store %..rawptr %91, %..rawptr* %93
	%94 = getelementptr inbounds %..any, %..any* %15, i64 0, i32 1
	store %Type_Info* %92, %Type_Info** %94
	%95 = load %..any, %..any* %15, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %16
	store [1 x %..any] zeroinitializer, [1 x %..any]* %17
	%96 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	store %..any %95, %..any* %96
	%97 = getelementptr inbounds [1 x %..any], [1 x %..any]* %17, i64 0, i32 0
	%98 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 0
	store %..any* %97, %..any** %98
	%99 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 1
	store i64 1, i64* %99
	%100 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %16, i64 0, i32 2
	store i64 1, i64* %100
	%101 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %16, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$544, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %101)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; SelectorExpr
	%102 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	; SelectorExpr
	%103 = getelementptr inbounds %input-19.Binding, %input-19.Binding* %6, i64 0, i32 0
	%104 = load %..string, %..string* %103, align 8
	%105 = call i64 @input-19.GetButtonState(%input-19.Input_t* %102, %..string %104)
	store %..any zeroinitializer, %..any* %18
	store i64 zeroinitializer, i64* %19
	store i64 %105, i64* %19
	%106 = bitcast i64* %19 to %..rawptr
	%107 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%108 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 0
	store %..rawptr %106, %..rawptr* %108
	%109 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 1
	store %Type_Info* %107, %Type_Info** %109
	%110 = load %..any, %..any* %18, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %20
	store [1 x %..any] zeroinitializer, [1 x %..any]* %21
	%111 = getelementptr inbounds [1 x %..any], [1 x %..any]* %21, i64 0, i32 0
	store %..any %110, %..any* %111
	%112 = getelementptr inbounds [1 x %..any], [1 x %..any]* %21, i64 0, i32 0
	%113 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 0
	store %..any* %112, %..any** %113
	%114 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 1
	store i64 1, i64* %114
	%115 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %20, i64 0, i32 2
	store i64 1, i64* %115
	%116 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %20, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$545, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %116)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %for.index.loop-2

for.index.done-4:
	br label %if.done-6

if.else-5:
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %22
	%117 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %22, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$546, i64 0, i32 0), i64 18}, {%..any*, i64, i64} %117)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %23
	%118 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %23, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$547, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %118)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %24
	%119 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %24, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$548, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %119)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %25
	%120 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %25, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$549, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %120)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %if.done-6

if.done-6:
	; SelectorExpr
	call ccc void @igColumns(i32 1, i8* zeroinitializer, i1 true)
	; SelectorExpr
	call ccc void @igSeparator()
	; IfStmt
	; SelectorExpr
	%121 = call i1 @imgui-9.CollapsingHeader(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$54a, i64 0, i32 0), i64 10}, i32 0)
	br i1 %121, label %if.then-7, label %if.done-8

if.then-7:
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %26
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %26
	%122 = bitcast %imgui-9.Vec2* %26 to i64*
	%123 = load i64, i64* %122, align 8
	%124 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$54b, i64 0, i32 0), i64 9}, i64 %123, i1 true, i32 0)
	; SliceExpr
	; SelectorExpr
	%125 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%126 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %125, i64 0
	%127 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %126, i64 0, i32 0
	%128 = load [256 x i64], [256 x i64]* %127, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$54c, i64 0, i32 0), i64 35}, i64 657, i64 42, i64 0, i64 256, i64 256)
	%129 = getelementptr inbounds [256 x i64], [256 x i64]* %127, i64 0, i32 0
	%130 = getelementptr inbounds i64, i64* %129, i64 0
	%131 = sub i64 256, 0
	%132 = sub i64 256, 0
	store {i64*, i64, i64} zeroinitializer, {i64*, i64, i64}* %27
	%133 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %27, i64 0, i32 0
	store i64* %130, i64** %133
	%134 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %27, i64 0, i32 1
	store i64 %131, i64* %134
	%135 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %27, i64 0, i32 2
	store i64 %132, i64* %135
	%136 = load {i64*, i64, i64}, {i64*, i64, i64}* %27, align 8
	call void @debug_windows-27.ShowInputWindow.PrintDownHeld-0({i64*, i64, i64} %136)
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	store %imgui-9.Vec2 zeroinitializer, %imgui-9.Vec2* %28
	store %imgui-9.Vec2 {float 0x0000000000000000, float 0x0000000000000000}, %imgui-9.Vec2* %28
	%137 = bitcast %imgui-9.Vec2* %28 to i64*
	%138 = load i64, i64* %137, align 8
	%139 = call i1 @imgui-9.BeginChild(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$54d, i64 0, i32 0), i64 10}, i64 %138, i1 true, i32 0)
	; SliceExpr
	; SelectorExpr
	%140 = load %input-19.Input_t*, %input-19.Input_t** %0, align 8
	%141 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %140, i64 0
	%142 = getelementptr inbounds %input-19.Input_t, %input-19.Input_t* %141, i64 0, i32 0
	%143 = load [256 x i64], [256 x i64]* %142, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$54e, i64 0, i32 0), i64 35}, i64 661, i64 43, i64 0, i64 256, i64 256)
	%144 = getelementptr inbounds [256 x i64], [256 x i64]* %142, i64 0, i32 0
	%145 = getelementptr inbounds i64, i64* %144, i64 0
	%146 = sub i64 256, 0
	%147 = sub i64 256, 0
	store {i64*, i64, i64} zeroinitializer, {i64*, i64, i64}* %29
	%148 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %29, i64 0, i32 0
	store i64* %145, i64** %148
	%149 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %29, i64 0, i32 1
	store i64 %146, i64* %149
	%150 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %29, i64 0, i32 2
	store i64 %147, i64* %150
	%151 = load {i64*, i64, i64}, {i64*, i64, i64}* %29, align 8
	call void @debug_windows-27.ShowInputWindow.PrintUpNeutral-1({i64*, i64, i64} %151)
	; SelectorExpr
	call ccc void @igEndChild()
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %if.done-8

if.done-8:
	; SelectorExpr
	call ccc void @igEnd()
	ret void
}

define void @debug_windows-27.ShowInputWindow.PrintDownHeld-0({i64*, i64, i64} %keyStates) {
decls-0:
	%0 = alloca {i64*, i64, i64}, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca {%Type_Info.Enum*, i1}, align 8
	%5 = alloca i64, align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	store {i64*, i64, i64} zeroinitializer, {i64*, i64, i64}* %0
		store {i64*, i64, i64} %keyStates, {i64*, i64, i64}* %0
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
	%12 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$54f, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %12)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	%13 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$550, i64 0, i32 0), i64 5}, {%..any*, i64, i64} %13)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igNextColumn()
	; RangeStmt
	; k
	store i32 zeroinitializer, i32* %3
		%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %4
	%15 = getelementptr inbounds %Type_Info, %Type_Info* %14, i64 0, i32 4 ; UnionTagPtr
	%16 = load i64, i64* %15, align 8
	%17 = icmp eq i64 %16, 20
	br i1 %17, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%18 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 0
	%19 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 1
	%20 = bitcast %Type_Info* %14 to %Type_Info.Enum*
	store %Type_Info.Enum* %20, %Type_Info.Enum** %18
	store i1 true, i1* %19
	br label %union_cast.end-2

union_cast.end-2:
	%21 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 1
	%22 = load i1, i1* %21, align 1
	%23 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%24 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %22, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$551, i64 0, i32 0), i64 35}, i64 624, i64 28, %Type_Info* %23, %Type_Info* %24)
	%25 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 0
	%26 = load %Type_Info.Enum*, %Type_Info.Enum** %25, align 8
	%27 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %26, i64 0, i32 4
	%28 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %27, align 8
	%29 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %28, 0
	store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	br label %for.enum.loop-3

for.enum.loop-3:
	%30 = load i64, i64* %5, align 8
	%31 = icmp slt i64 %30, 138
	br i1 %31, label %for.enum.body-4, label %for.enum.done-8

for.enum.body-4:
	%32 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %29, i64 %30
	%33 = load i64, i64* %5, align 8
	%34 = add i64 %33, 1
	store i64 %34, i64* %5
	%35 = bitcast {[0 x <8 x i8>], [8 x i8]}* %32 to i64*
	%36 = load i64, i64* %35, align 8
	%37 = trunc i64 %36 to i32
	store i32 %37, i32* %3
	; IfStmt
	; IndexExpr
	%38 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%39 = extractvalue {i64*, i64, i64} %38, 0
	%40 = extractvalue {i64*, i64, i64} %38, 1
	%41 = load i32, i32* %3, align 4
	%42 = sext i32 %41 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$552, i64 0, i32 0), i64 35}, i64 625, i64 30, i64 %42, i64 %40)
	%43 = getelementptr inbounds i64, i64* %39, i64 %42
	%44 = load i64, i64* %43, align 8
	%45 = icmp eq i64 %44, 2
	br i1 %45, label %if.then-6, label %cmp.or-5

cmp.or-5:
	; IndexExpr
	%46 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%47 = extractvalue {i64*, i64, i64} %46, 0
	%48 = extractvalue {i64*, i64, i64} %46, 1
	%49 = load i32, i32* %3, align 4
	%50 = sext i32 %49 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$553, i64 0, i32 0), i64 35}, i64 626, i64 30, i64 %50, i64 %48)
	%51 = getelementptr inbounds i64, i64* %47, i64 %50
	%52 = load i64, i64* %51, align 8
	%53 = icmp eq i64 %52, 1
	br i1 %53, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%54 = load i32, i32* %3, align 4
	store %..any zeroinitializer, %..any* %6
	%55 = bitcast i32* %3 to %..rawptr
	%56 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%57 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %55, %..rawptr* %57
	%58 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %56, %Type_Info** %58
	%59 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%60 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %59, %..any* %60
	%61 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%62 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %61, %..any** %62
	%63 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %63
	%64 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %64
	%65 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$554, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %65)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; IndexExpr
	%66 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%67 = extractvalue {i64*, i64, i64} %66, 0
	%68 = extractvalue {i64*, i64, i64} %66, 1
	%69 = load i32, i32* %3, align 4
	%70 = sext i32 %69 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$555, i64 0, i32 0), i64 35}, i64 629, i64 48, i64 %70, i64 %68)
	%71 = getelementptr inbounds i64, i64* %67, i64 %70
	%72 = load i64, i64* %71, align 8
	store %..any zeroinitializer, %..any* %9
	%73 = bitcast i64* %71 to %..rawptr
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%75 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %73, %..rawptr* %75
	%76 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %74, %Type_Info** %76
	%77 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%78 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %77, %..any* %78
	%79 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%80 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %79, %..any** %80
	%81 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %81
	%82 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %82
	%83 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$556, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %83)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %if.done-7

if.done-7:
	br label %for.enum.loop-3

for.enum.done-8:
	ret void
}

define void @debug_windows-27.ShowInputWindow.PrintUpNeutral-1({i64*, i64, i64} %keyStates) {
decls-0:
	%0 = alloca {i64*, i64, i64}, align 8
	%1 = alloca {%..any*, i64, i64}, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca {%Type_Info.Enum*, i1}, align 8
	%5 = alloca i64, align 8
	%6 = alloca %..any, align 8
	%7 = alloca {%..any*, i64, i64}, align 8
	%8 = alloca [1 x %..any], align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	store {i64*, i64, i64} zeroinitializer, {i64*, i64, i64}* %0
		store {i64*, i64, i64} %keyStates, {i64*, i64, i64}* %0
	; SelectorExpr
	call ccc void @igColumns(i32 2, i8* zeroinitializer, i1 true)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %1
	%12 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %1, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$557, i64 0, i32 0), i64 3}, {%..any*, i64, i64} %12)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
	%13 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$558, i64 0, i32 0), i64 5}, {%..any*, i64, i64} %13)
	; SelectorExpr
	call ccc void @igSeparator()
	; SelectorExpr
	call ccc void @igNextColumn()
	; RangeStmt
	; k
	store i32 zeroinitializer, i32* %3
		%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store {%Type_Info.Enum*, i1} zeroinitializer, {%Type_Info.Enum*, i1}* %4
	%15 = getelementptr inbounds %Type_Info, %Type_Info* %14, i64 0, i32 4 ; UnionTagPtr
	%16 = load i64, i64* %15, align 8
	%17 = icmp eq i64 %16, 20
	br i1 %17, label %union_cast.ok-1, label %union_cast.end-2

union_cast.ok-1:
	%18 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 0
	%19 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 1
	%20 = bitcast %Type_Info* %14 to %Type_Info.Enum*
	store %Type_Info.Enum* %20, %Type_Info.Enum** %18
	store i1 true, i1* %19
	br label %union_cast.end-2

union_cast.end-2:
	%21 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 1
	%22 = load i1, i1* %21, align 1
	%23 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%24 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	call void @__type_assertion_check(i1 %22, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$559, i64 0, i32 0), i64 35}, i64 642, i64 28, %Type_Info* %23, %Type_Info* %24)
	%25 = getelementptr inbounds {%Type_Info.Enum*, i1}, {%Type_Info.Enum*, i1}* %4, i64 0, i32 0
	%26 = load %Type_Info.Enum*, %Type_Info.Enum** %25, align 8
	%27 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %26, i64 0, i32 4
	%28 = load {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %27, align 8
	%29 = extractvalue {{[0 x <8 x i8>], [8 x i8]}*, i64, i64} %28, 0
	store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	br label %for.enum.loop-3

for.enum.loop-3:
	%30 = load i64, i64* %5, align 8
	%31 = icmp slt i64 %30, 138
	br i1 %31, label %for.enum.body-4, label %for.enum.done-8

for.enum.body-4:
	%32 = getelementptr inbounds {[0 x <8 x i8>], [8 x i8]}, {[0 x <8 x i8>], [8 x i8]}* %29, i64 %30
	%33 = load i64, i64* %5, align 8
	%34 = add i64 %33, 1
	store i64 %34, i64* %5
	%35 = bitcast {[0 x <8 x i8>], [8 x i8]}* %32 to i64*
	%36 = load i64, i64* %35, align 8
	%37 = trunc i64 %36 to i32
	store i32 %37, i32* %3
	; IfStmt
	; IndexExpr
	%38 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%39 = extractvalue {i64*, i64, i64} %38, 0
	%40 = extractvalue {i64*, i64, i64} %38, 1
	%41 = load i32, i32* %3, align 4
	%42 = sext i32 %41 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$55a, i64 0, i32 0), i64 35}, i64 643, i64 30, i64 %42, i64 %40)
	%43 = getelementptr inbounds i64, i64* %39, i64 %42
	%44 = load i64, i64* %43, align 8
	%45 = icmp eq i64 %44, 0
	br i1 %45, label %if.then-6, label %cmp.or-5

cmp.or-5:
	; IndexExpr
	%46 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%47 = extractvalue {i64*, i64, i64} %46, 0
	%48 = extractvalue {i64*, i64, i64} %46, 1
	%49 = load i32, i32* %3, align 4
	%50 = sext i32 %49 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$55b, i64 0, i32 0), i64 35}, i64 644, i64 30, i64 %50, i64 %48)
	%51 = getelementptr inbounds i64, i64* %47, i64 %50
	%52 = load i64, i64* %51, align 8
	%53 = icmp eq i64 %52, 3
	br i1 %53, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%54 = load i32, i32* %3, align 4
	store %..any zeroinitializer, %..any* %6
	%55 = bitcast i32* %3 to %..rawptr
	%56 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%57 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %55, %..rawptr* %57
	%58 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %56, %Type_Info** %58
	%59 = load %..any, %..any* %6, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %7
	store [1 x %..any] zeroinitializer, [1 x %..any]* %8
	%60 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	store %..any %59, %..any* %60
	%61 = getelementptr inbounds [1 x %..any], [1 x %..any]* %8, i64 0, i32 0
	%62 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 0
	store %..any* %61, %..any** %62
	%63 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 1
	store i64 1, i64* %63
	%64 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %7, i64 0, i32 2
	store i64 1, i64* %64
	%65 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %7, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$55c, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %65)
	; SelectorExpr
	call ccc void @igNextColumn()
	; SelectorExpr
	; IndexExpr
	%66 = load {i64*, i64, i64}, {i64*, i64, i64}* %0, align 8
	%67 = extractvalue {i64*, i64, i64} %66, 0
	%68 = extractvalue {i64*, i64, i64} %66, 1
	%69 = load i32, i32* %3, align 4
	%70 = sext i32 %69 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$55d, i64 0, i32 0), i64 35}, i64 647, i64 48, i64 %70, i64 %68)
	%71 = getelementptr inbounds i64, i64* %67, i64 %70
	%72 = load i64, i64* %71, align 8
	store %..any zeroinitializer, %..any* %9
	%73 = bitcast i64* %71 to %..rawptr
	%74 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%75 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %73, %..rawptr* %75
	%76 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %74, %Type_Info** %76
	%77 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%78 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %77, %..any* %78
	%79 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%80 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 0
	store %..any* %79, %..any** %80
	%81 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 1
	store i64 1, i64* %81
	%82 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %10, i64 0, i32 2
	store i64 1, i64* %82
	%83 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @imgui-9.Text(%..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$55e, i64 0, i32 0), i64 2}, {%..any*, i64, i64} %83)
	; SelectorExpr
	call ccc void @igNextColumn()
	br label %if.done-7

if.done-7:
	br label %for.enum.loop-3

for.enum.done-8:
	ret void
}

define ccc i64 @platform_win32-28.WindowProc(%..rawptr %hwnd, i32 %msg, i64 %wparam, i64 %lparam) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %hwnd, %..rawptr* %0
	store i32 zeroinitializer, i32* %1
		store i32 %msg, i32* %1
	store i64 zeroinitializer, i64* %2
		store i64 %wparam, i64* %2
	store i64 zeroinitializer, i64* %3
		store i64 %lparam, i64* %3
	; MatchStmt
	%4 = load i32, i32* %1, align 4
	%5 = icmp eq i32 %4, 2
	br i1 %5, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	; ReturnStmt
	; SelectorExpr
	%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = load i32, i32* %1, align 4
	%8 = load i64, i64* %2, align 8
	%9 = load i64, i64* %3, align 8
	%10 = call ccc i64 @DefWindowProcA(%..rawptr %6, i32 %7, i64 %8, i64 %9)
	ret i64 %10

match.case.body-2:
	; SelectorExpr
	call ccc void @PostQuitMessage(i32 0)
	; ReturnStmt
	ret i64 0

match.done-3:
	unreachable
}

define %..rawptr @platform_win32-28.GetProgramHandle() {
decls-0:
	; ReturnStmt
	; SelectorExpr
	%0 = call ccc %..rawptr @GetModuleHandleA(i8* zeroinitializer)
	ret %..rawptr %0
}

define {[0 x <8 x i8>], [2 x float]} @platform_win32-28.GetWindowSize(%..rawptr %handle) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca %windows-35.Rect, align 4
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %handle, %..rawptr* %0
	; res
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %1
		; rect
	store %windows-35.Rect zeroinitializer, %windows-35.Rect* %2
		; SelectorExpr
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %2, i64 0
	%5 = call ccc i32 @GetClientRect(%..rawptr %3, %windows-35.Rect* %4)
	; AssignStmt
	; SelectorExpr
	%6 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 0
	; SelectorExpr
	%7 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %2, i64 0, i32 2
	%8 = load i32, i32* %7, align 4
	%9 = sitofp i32 %8 to float
	store float %9, float* %6
	; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 1
	; SelectorExpr
	%11 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %2, i64 0, i32 3
	%12 = load i32, i32* %11, align 4
	%13 = sitofp i32 %12 to float
	store float %13, float* %10
	; ReturnStmt
	%14 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	ret {[0 x <8 x i8>], [2 x float]} %14
}

define void @platform_win32-28.SwapBuffers(%..rawptr %dc) {
decls-0:
	%0 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %dc, %..rawptr* %0
	; SelectorExpr
	%1 = load %..rawptr, %..rawptr* %0, align 8
	%2 = call ccc i32 @SwapBuffers(%..rawptr %1)
	ret void
}

define void @platform_win32-28.MessageLoop(%engine-20.Context_t* %ctx) {
decls-0:
	%0 = alloca %engine-20.Context_t*, align 8
	%1 = alloca %windows-35.Msg, align 8
	%2 = alloca i16, align 2
	store %engine-20.Context_t* zeroinitializer, %engine-20.Context_t** %0
		store %engine-20.Context_t* %ctx, %engine-20.Context_t** %0
	; msg
	store %windows-35.Msg zeroinitializer, %windows-35.Msg* %1
		; ForStmt
	br label %for.loop-1

for.loop-1:
	; SelectorExpr
	%3 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0
	%4 = call ccc i32 @PeekMessageA(%windows-35.Msg* %3, %..rawptr zeroinitializer, i32 0, i32 0, i32 1)
	%5 = icmp eq i32 %4, 1
	br i1 %5, label %for.body-2, label %for.done-26

for.body-2:
	; MatchStmt
	; SelectorExpr
	%6 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 1
	%7 = load i32, i32* %6, align 4
	%8 = icmp eq i32 %7, 18
	br i1 %8, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%9 = icmp eq i32 %7, 260
	br i1 %9, label %match.fall.body-6, label %match.case.next-5

match.case.body-4:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%10 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%11 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %10, i64 0
	%12 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %11, i64 0, i32 0
	%13 = load %engine-20.Setting_t*, %engine-20.Setting_t** %12, align 8
	%14 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %13, i64 0
	%15 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %14, i64 0, i32 2
	store i1 false, i1* %15
	br label %match.done-25

match.case.next-5:
	%16 = icmp eq i32 %7, 256
	br i1 %16, label %match.fall.body-14, label %match.case.next-13

match.fall.body-6:
	; IfStmt
	; SelectorExpr
	%17 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%18 = load i64, i64* %17, align 8
	%19 = trunc i64 %18 to i32
	%20 = icmp eq i32 %19, 13
	br i1 %20, label %if.then-7, label %if.done-8

if.then-7:
	; SelectorExpr
	; SelectorExpr
	%21 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%22 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %21, i64 0
	%23 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %22, i64 0, i32 3
	%24 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %23, align 8
	%25 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %24, i64 0
	%26 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %25, i64 0, i32 2
	%27 = load %..rawptr, %..rawptr* %26, align 8
	; SelectorExpr
	; SelectorExpr
	%28 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%29 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %28, i64 0
	%30 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %29, i64 0, i32 3
	%31 = load %platform_win32-28.Data_t*, %platform_win32-28.Data_t** %30, align 8
	%32 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %31, i64 0
	%33 = getelementptr inbounds %platform_win32-28.Data_t, %platform_win32-28.Data_t* %32, i64 0, i32 4
	%34 = getelementptr inbounds %windows-35.Window_Placement, %windows-35.Window_Placement* %33, i64 0
	call void @platform_win32-28.ToggleBorderlessFullscreen(%..rawptr %27, %windows-35.Window_Placement* %34)
	br label %if.done-8

if.done-8:
	; IfStmt
	; SelectorExpr
	%35 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%36 = load i64, i64* %35, align 8
	%37 = trunc i64 %36 to i32
	%38 = icmp eq i32 %37, 67
	br i1 %38, label %if.then-9, label %if.done-10

if.then-9:
	; SelectorExpr
	call void @debug_windows-27.ToggleWindow(%..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$55f, i64 0, i32 0), i64 17})
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	%39 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%40 = load i64, i64* %39, align 8
	%41 = icmp eq i64 %40, 192
	br i1 %41, label %if.then-11, label %if.done-12

if.then-11:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%42 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%43 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %42, i64 0
	%44 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %43, i64 0, i32 0
	%45 = load %engine-20.Setting_t*, %engine-20.Setting_t** %44, align 8
	%46 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %45, i64 0
	%47 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %46, i64 0, i32 1
	; SelectorExpr
	; SelectorExpr
	%48 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%49 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %48, i64 0
	%50 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %49, i64 0, i32 0
	%51 = load %engine-20.Setting_t*, %engine-20.Setting_t** %50, align 8
	%52 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %51, i64 0
	%53 = getelementptr inbounds %engine-20.Setting_t, %engine-20.Setting_t* %52, i64 0, i32 1
	%54 = load i1, i1* %53, align 1
	%55 = xor i1 -1, %54
	store i1 %55, i1* %47
	br label %if.done-12

if.done-12:
	; continue
	br label %for.loop-1

match.case.next-13:
	%56 = icmp eq i32 %7, 258
	br i1 %56, label %match.fall.body-18, label %match.case.next-17

match.fall.body-14:
	; IfStmt
	; SelectorExpr
	%57 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%58 = load i64, i64* %57, align 8
	%59 = trunc i64 %58 to i32
	%60 = icmp eq i32 %59, 27
	br i1 %60, label %if.then-15, label %if.done-16

if.then-15:
	; SelectorExpr
	call ccc void @PostQuitMessage(i32 0)
	br label %if.done-16

if.done-16:
	br label %match.done-25

match.case.next-17:
	%61 = icmp eq i32 %7, 522
	br i1 %61, label %match.fall.body-20, label %match.case.next-19

match.fall.body-18:
	; SelectorExpr
	; SelectorExpr
	%62 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%63 = load i64, i64* %62, align 8
	%64 = trunc i64 %63 to i16
	call ccc void @ImGuiIO_AddInputCharacter(i16 %64)
	; SelectorExpr
	; SelectorExpr
	%65 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%66 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %65, i64 0
	%67 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %66, i64 0, i32 1
	%68 = load %input-19.Input_t*, %input-19.Input_t** %67, align 8
	; SelectorExpr
	%69 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%70 = load i64, i64* %69, align 8
	%71 = trunc i64 %70 to i32
	call void @input-19.AddCharToQueue(%input-19.Input_t* %68, i32 %71)
	; break
	br label %match.done-25

match.case.next-19:
	br label %match.done-25

match.fall.body-20:
	; delta
	store i16 zeroinitializer, i16* %2
		; SelectorExpr
	; SelectorExpr
	%72 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0, i32 2
	%73 = load i64, i64* %72, align 8
	%74 = call i16 @windows-35.HIWORD-1660(i64 %73)
	%75 = bitcast i16 %74 to i16
	store i16 %75, i16* %2
	; IfStmt
	%76 = load i16, i16* %2, align 2
	%77 = icmp sgt i16 %76, 1
	br i1 %77, label %if.then-21, label %if.done-22

if.then-21:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%78 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%79 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %78, i64 0
	%80 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %79, i64 0, i32 4
	%81 = load %jimgui-12.State_t*, %jimgui-12.State_t** %80, align 8
	%82 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %81, i64 0
	%83 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %82, i64 0, i32 1
	%84 = load i32, i32* %83, align 4
	%85 = add i32 %84, 1
	store i32 %85, i32* %83
	br label %if.done-22

if.done-22:
	; IfStmt
	%86 = load i16, i16* %2, align 2
	%87 = icmp slt i16 %86, 1
	br i1 %87, label %if.then-23, label %if.done-24

if.then-23:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%88 = load %engine-20.Context_t*, %engine-20.Context_t** %0, align 8
	%89 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %88, i64 0
	%90 = getelementptr inbounds %engine-20.Context_t, %engine-20.Context_t* %89, i64 0, i32 4
	%91 = load %jimgui-12.State_t*, %jimgui-12.State_t** %90, align 8
	%92 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %91, i64 0
	%93 = getelementptr inbounds %jimgui-12.State_t, %jimgui-12.State_t* %92, i64 0, i32 1
	%94 = load i32, i32* %93, align 4
	%95 = sub i32 %94, 1
	store i32 %95, i32* %93
	br label %if.done-24

if.done-24:
	br label %match.done-25

match.done-25:
	; SelectorExpr
	%96 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0
	%97 = call ccc i32 @TranslateMessage(%windows-35.Msg* %96)
	; SelectorExpr
	%98 = getelementptr inbounds %windows-35.Msg, %windows-35.Msg* %1, i64 0
	%99 = call ccc i64 @DispatchMessageA(%windows-35.Msg* %98)
	br label %for.loop-1

for.done-26:
	ret void
}

define %..rawptr @platform_win32-28.GetDC(%..rawptr %handle) {
decls-0:
	%0 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %handle, %..rawptr* %0
	; ReturnStmt
	; SelectorExpr
	%1 = load %..rawptr, %..rawptr* %0, align 8
	%2 = call ccc %..rawptr @GetDC(%..rawptr %1)
	ret %..rawptr %2
}

define i1 @platform_win32-28.IsWindowActive(%..rawptr %handle) {
decls-0:
	%0 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %handle, %..rawptr* %0
	; ReturnStmt
	; SelectorExpr
	%1 = call ccc %..rawptr @GetActiveWindow()
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = icmp eq %..rawptr %1, %2
	ret i1 %3
}

define {[0 x <8 x i8>], [2 x float]} @platform_win32-28.GetCursorPos(%..rawptr %handle) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %windows-35.Point, align 4
	%2 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %handle, %..rawptr* %0
	; mousePos
	store %windows-35.Point zeroinitializer, %windows-35.Point* %1
		; SelectorExpr
	%3 = getelementptr inbounds %windows-35.Point, %windows-35.Point* %1, i64 0
	%4 = call ccc i32 @GetCursorPos(%windows-35.Point* %3)
	; SelectorExpr
	%5 = load %..rawptr, %..rawptr* %0, align 8
	%6 = getelementptr inbounds %windows-35.Point, %windows-35.Point* %1, i64 0
	%7 = call ccc i32 @ScreenToClient(%..rawptr %5, %windows-35.Point* %6)
	; ReturnStmt
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %2
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %2
	; SelectorExpr
	%8 = getelementptr inbounds %windows-35.Point, %windows-35.Point* %1, i64 0, i32 0
	%9 = load i32, i32* %8, align 4
	%10 = sitofp i32 %9 to float
	%11 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %2, i64 0, i32 1, i32 0
	store float %10, float* %11
	; SelectorExpr
	%12 = getelementptr inbounds %windows-35.Point, %windows-35.Point* %1, i64 0, i32 1
	%13 = load i32, i32* %12, align 4
	%14 = sitofp i32 %13 to float
	%15 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %2, i64 0, i32 1, i32 1
	store float %14, float* %15
	%16 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %2, align 8
	ret {[0 x <8 x i8>], [2 x float]} %16
}

define %..rawptr @platform_win32-28.CreateWindow(%..rawptr %instance, i64 %windowSize) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca %windows-35.WndClassExA, align 8
	%3 = alloca i32, align 4
	%4 = alloca %windows-35.Rect, align 4
	%5 = alloca %windows-35.Rect, align 4
	%6 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %instance, %..rawptr* %0
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %1
		%7 = bitcast {[0 x <8 x i8>], [2 x float]}* %1 to i64*
	store i64 %windowSize, i64* %7
	%8 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	; wndClass
	store %windows-35.WndClassExA zeroinitializer, %windows-35.WndClassExA* %2
		; AssignStmt
	; SelectorExpr
	%9 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 0
	store i32 80, i32* %9
	; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 1
	store i32 35, i32* %10
	; AssignStmt
	; SelectorExpr
	%11 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 2
	store i64 (%..rawptr, i32, i64, i64)* @platform_win32-28.WindowProc, i64 (%..rawptr, i32, i64, i64)** %11
	; AssignStmt
	; SelectorExpr
	%12 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 5
	%13 = load %..rawptr, %..rawptr* %0, align 8
	store %..rawptr %13, %..rawptr* %12
	; AssignStmt
	; SelectorExpr
	%14 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 10
	; SelectorExpr
	%15 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$560, i64 0, i32 0), i64 10})
	store i8* %15, i8** %14
	; IfStmt
	%16 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0
	%17 = call ccc i16 @RegisterClassExA(%windows-35.WndClassExA* %16)
	%18 = icmp eq i16 %17, 0
	br i1 %18, label %if.then-1, label %if.done-2

if.then-1:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$561, i64 0, i32 0), i64 36}, i64 153, i64 15, %..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$562, i64 0, i32 0), i64 36})
	br label %if.done-2

if.done-2:
	; windowStyle
	store i32 zeroinitializer, i32* %3
		store i32 282001408, i32* %3
	; clientRect
	store %windows-35.Rect zeroinitializer, %windows-35.Rect* %4
		; CompoundLit
	store %windows-35.Rect zeroinitializer, %windows-35.Rect* %5
	store %windows-35.Rect {i32 0, i32 0, i32 zeroinitializer, i32 zeroinitializer}, %windows-35.Rect* %5
	; SelectorExpr
	%19 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 0
	%20 = load float, float* %19, align 4
	%21 = fptosi float %20 to i32
	%22 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %5, i64 0, i32 2
	store i32 %21, i32* %22
	; SelectorExpr
	%23 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, i64 0, i32 1, i32 1
	%24 = load float, float* %23, align 4
	%25 = fptosi float %24 to i32
	%26 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %5, i64 0, i32 3
	store i32 %25, i32* %26
	%27 = load %windows-35.Rect, %windows-35.Rect* %5, align 4
	store %windows-35.Rect %27, %windows-35.Rect* %4
	%28 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %4, i64 0
	%29 = load i32, i32* %3, align 4
	%30 = call ccc i32 @AdjustWindowRect(%windows-35.Rect* %28, i32 %29, i32 0)
	; windowHandle
	store %..rawptr zeroinitializer, %..rawptr* %6
		; SelectorExpr
	%31 = getelementptr inbounds %windows-35.WndClassExA, %windows-35.WndClassExA* %2, i64 0, i32 10
	%32 = load i8*, i8** %31, align 8
	; SelectorExpr
	%33 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$563, i64 0, i32 0), i64 18})
	%34 = load i32, i32* %3, align 4
	; SelectorExpr
	%35 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %4, i64 0, i32 2
	%36 = load i32, i32* %35, align 4
	; SelectorExpr
	%37 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %4, i64 0, i32 0
	%38 = load i32, i32* %37, align 4
	%39 = sub i32 %36, %38
	; SelectorExpr
	%40 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %4, i64 0, i32 3
	%41 = load i32, i32* %40, align 4
	; SelectorExpr
	%42 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %4, i64 0, i32 1
	%43 = load i32, i32* %42, align 4
	%44 = sub i32 %41, %43
	%45 = load %..rawptr, %..rawptr* %0, align 8
	%46 = call ccc %..rawptr @CreateWindowExA(i32 0, i8* %32, i8* %33, i32 %34, i32 -2147483648, i32 -2147483648, i32 %39, i32 %44, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %..rawptr %45, %..rawptr zeroinitializer)
	store %..rawptr %46, %..rawptr* %6
	; IfStmt
	%47 = load %..rawptr, %..rawptr* %6, align 8
	%48 = icmp eq %..rawptr %47, zeroinitializer
	br i1 %48, label %if.then-3, label %if.done-4

if.then-3:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$564, i64 0, i32 0), i64 36}, i64 172, i64 15, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$565, i64 0, i32 0), i64 28})
	br label %if.done-4

if.done-4:
	; ReturnStmt
	%49 = load %..rawptr, %..rawptr* %6, align 8
	ret %..rawptr %49
}

define {i32, i32} @platform_win32-28.GetMaxGLVersion() {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca %windows-35.PIXELFORMATDESCRIPTOR, align 4
	%3 = alloca i32, align 4
	%4 = alloca %..rawptr, align 8
	%5 = alloca i32, align 4
	%6 = alloca i32, align 4
	%7 = alloca {i32, i32}, align 4
	; wndHandle
	store %..rawptr zeroinitializer, %..rawptr* %0
		; SelectorExpr
	; SelectorExpr
	%8 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$566, i64 0, i32 0), i64 6})
	; SelectorExpr
	%9 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$567, i64 0, i32 0), i64 22})
	%10 = call ccc %..rawptr @CreateWindowExA(i32 0, i8* %8, i8* %9, i32 0, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %..rawptr zeroinitializer)
	store %..rawptr %10, %..rawptr* %0
	; IfStmt
	%11 = load %..rawptr, %..rawptr* %0, align 8
	%12 = icmp eq %..rawptr %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$568, i64 0, i32 0), i64 36}, i64 186, i64 15, %..string {i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__str$569, i64 0, i32 0), i64 46})
	br label %if.done-2

if.done-2:
	; deviceCtx
	store %..rawptr zeroinitializer, %..rawptr* %1
		; SelectorExpr
	%13 = load %..rawptr, %..rawptr* %0, align 8
	%14 = call ccc %..rawptr @GetDC(%..rawptr %13)
	store %..rawptr %14, %..rawptr* %1
	; IfStmt
	%15 = load %..rawptr, %..rawptr* %1, align 8
	%16 = icmp eq %..rawptr %15, zeroinitializer
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$56a, i64 0, i32 0), i64 36}, i64 190, i64 15, %..string {i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__str$56b, i64 0, i32 0), i64 50})
	br label %if.done-4

if.done-4:
	; pfd
	store %windows-35.PIXELFORMATDESCRIPTOR zeroinitializer, %windows-35.PIXELFORMATDESCRIPTOR* %2
		store %windows-35.PIXELFORMATDESCRIPTOR zeroinitializer, %windows-35.PIXELFORMATDESCRIPTOR* %2
	; AssignStmt
	; SelectorExpr
	%17 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 0
	store i32 44, i32* %17
	; AssignStmt
	; SelectorExpr
	%18 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 1
	store i32 1, i32* %18
	; AssignStmt
	; SelectorExpr
	%19 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 2
	store i32 37, i32* %19
	; AssignStmt
	; SelectorExpr
	%20 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 4
	store i8 32, i8* %20
	; AssignStmt
	; SelectorExpr
	%21 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 11
	store i8 8, i8* %21
	; AssignStmt
	; SelectorExpr
	%22 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 18
	store i8 24, i8* %22
	; format
	store i32 zeroinitializer, i32* %3
		; SelectorExpr
	%23 = load %..rawptr, %..rawptr* %1, align 8
	%24 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%25 = call ccc i32 @ChoosePixelFormat(%..rawptr %23, %windows-35.PIXELFORMATDESCRIPTOR* %24)
	store i32 %25, i32* %3
	; SelectorExpr
	%26 = load %..rawptr, %..rawptr* %1, align 8
	%27 = load i32, i32* %3, align 4
	%28 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%29 = call ccc i32 @DescribePixelFormat(%..rawptr %26, i32 %27, i32 44, %windows-35.PIXELFORMATDESCRIPTOR* %28)
	; SelectorExpr
	%30 = load %..rawptr, %..rawptr* %1, align 8
	%31 = load i32, i32* %3, align 4
	%32 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%33 = call ccc i32 @SetPixelFormat(%..rawptr %30, i32 %31, %windows-35.PIXELFORMATDESCRIPTOR* %32)
	; ctx
	store %..rawptr zeroinitializer, %..rawptr* %4
		; SelectorExpr
	%34 = load %..rawptr, %..rawptr* %1, align 8
	%35 = call ccc %..rawptr @wglCreateContext(%..rawptr %34)
	store %..rawptr %35, %..rawptr* %4
	; IfStmt
	%36 = load %..rawptr, %..rawptr* %1, align 8
	%37 = icmp eq %..rawptr %36, zeroinitializer
	br i1 %37, label %if.then-5, label %if.done-6

if.then-5:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$56c, i64 0, i32 0), i64 36}, i64 208, i64 15, %..string {i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__str$56d, i64 0, i32 0), i64 62})
	br label %if.done-6

if.done-6:
	; SelectorExpr
	%38 = load %..rawptr, %..rawptr* %1, align 8
	%39 = load %..rawptr, %..rawptr* %4, align 8
	%40 = call ccc i32 @wglMakeCurrent(%..rawptr %38, %..rawptr %39)
	; major
	store i32 zeroinitializer, i32* %5
		; minor
	store i32 zeroinitializer, i32* %6
		; SelectorExpr
	%41 = getelementptr inbounds i32, i32* %5, i64 0
	call ccc void @glGetIntegerv(i32 33307, i32* %41)
	; SelectorExpr
	%42 = getelementptr inbounds i32, i32* %6, i64 0
	call ccc void @glGetIntegerv(i32 33308, i32* %42)
	; ReturnStmt
	%43 = load i32, i32* %5, align 4
	%44 = load i32, i32* %6, align 4
	store {i32, i32} zeroinitializer, {i32, i32}* %7
	%45 = getelementptr inbounds {i32, i32}, {i32, i32}* %7, i64 0, i32 0
	store i32 %43, i32* %45
	%46 = getelementptr inbounds {i32, i32}, {i32, i32}* %7, i64 0, i32 1
	store i32 %44, i32* %46
	%47 = load {i32, i32}, {i32, i32}* %7, align 4
	ret {i32, i32} %47
}

define %..rawptr @platform_win32-28.CreateOpenGLContext(%..rawptr %DeviceCtx, i1 %modern) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i1, align 1
	%2 = alloca %windows-35.PIXELFORMATDESCRIPTOR, align 4
	%3 = alloca i32, align 4
	%4 = alloca %..rawptr, align 8
	%5 = alloca %..rawptr, align 8
	%6 = alloca %..rawptr, align 8
	%7 = alloca %..rawptr, align 8
	%8 = alloca %..rawptr, align 8
	%9 = alloca %jwgl-26.TryGetExtensionList, align 8
	%10 = alloca %jwgl-26.TryGetExtensionList, align 16
	%11 = alloca {%jwgl-26.Attrib*, i64, i64,%Allocator}, align 8
	%12 = alloca {%jwgl-26.Attrib*, i64, i64}, align 8
	%13 = alloca [9 x %jwgl-26.Attrib], align 4
	%14 = alloca {i32*, i64, i64,%Allocator}, align 8
	%15 = alloca i32, align 4
	%16 = alloca i32, align 4
	%17 = alloca i32, align 4
	%18 = alloca %windows-35.PIXELFORMATDESCRIPTOR, align 4
	%19 = alloca {%jwgl-26.Attrib*, i64, i64,%Allocator}, align 8
	%20 = alloca {%jwgl-26.Attrib*, i64, i64}, align 8
	%21 = alloca [4 x %jwgl-26.Attrib], align 4
	%22 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %DeviceCtx, %..rawptr* %0
	store i1 zeroinitializer, i1* %1
		store i1 %modern, i1* %1
	; IfStmt
	%23 = load i1, i1* %1, align 1
	br i1 %23, label %if.else-4, label %if.then-1

if.then-1:
	; pfd
	store %windows-35.PIXELFORMATDESCRIPTOR zeroinitializer, %windows-35.PIXELFORMATDESCRIPTOR* %2
		store %windows-35.PIXELFORMATDESCRIPTOR zeroinitializer, %windows-35.PIXELFORMATDESCRIPTOR* %2
	; AssignStmt
	; SelectorExpr
	%24 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 0
	store i32 44, i32* %24
	; AssignStmt
	; SelectorExpr
	%25 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 1
	store i32 1, i32* %25
	; AssignStmt
	; SelectorExpr
	%26 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 2
	store i32 37, i32* %26
	; AssignStmt
	; SelectorExpr
	%27 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 4
	store i8 32, i8* %27
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 11
	store i8 8, i8* %28
	; AssignStmt
	; SelectorExpr
	%29 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0, i32 18
	store i8 24, i8* %29
	; format
	store i32 zeroinitializer, i32* %3
		; SelectorExpr
	%30 = load %..rawptr, %..rawptr* %0, align 8
	%31 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%32 = call ccc i32 @ChoosePixelFormat(%..rawptr %30, %windows-35.PIXELFORMATDESCRIPTOR* %31)
	store i32 %32, i32* %3
	; SelectorExpr
	%33 = load %..rawptr, %..rawptr* %0, align 8
	%34 = load i32, i32* %3, align 4
	%35 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%36 = call ccc i32 @DescribePixelFormat(%..rawptr %33, i32 %34, i32 44, %windows-35.PIXELFORMATDESCRIPTOR* %35)
	; SelectorExpr
	%37 = load %..rawptr, %..rawptr* %0, align 8
	%38 = load i32, i32* %3, align 4
	%39 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %2, i64 0
	%40 = call ccc i32 @SetPixelFormat(%..rawptr %37, i32 %38, %windows-35.PIXELFORMATDESCRIPTOR* %39)
	; ctx
	store %..rawptr zeroinitializer, %..rawptr* %4
		; SelectorExpr
	%41 = load %..rawptr, %..rawptr* %0, align 8
	%42 = call ccc %..rawptr @wglCreateContext(%..rawptr %41)
	store %..rawptr %42, %..rawptr* %4
	; assert
	%43 = load %..rawptr, %..rawptr* %4, align 8
	%44 = icmp ne %..rawptr %43, zeroinitializer
	%45 = icmp eq i1 %44, false
	br i1 %45, label %builtin.assert.err-2, label %builtin.assert.done-3

builtin.assert.err-2:
	call void @__assert(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$56e, i64 0, i32 0), i64 36}, i64 239, i64 16, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$56f, i64 0, i32 0), i64 10})
	br label %builtin.assert.done-3

builtin.assert.done-3:
	; SelectorExpr
	%46 = load %..rawptr, %..rawptr* %0, align 8
	%47 = load %..rawptr, %..rawptr* %4, align 8
	%48 = call ccc i32 @wglMakeCurrent(%..rawptr %46, %..rawptr %47)
	; ReturnStmt
	%49 = load %..rawptr, %..rawptr* %4, align 8
	ret %..rawptr %49

if.else-4:
	; wndHandle
	store %..rawptr zeroinitializer, %..rawptr* %5
		; SelectorExpr
	; SelectorExpr
	%50 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$570, i64 0, i32 0), i64 6})
	; SelectorExpr
	%51 = call i8* @strings-7.new_c_string(%..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$571, i64 0, i32 0), i64 13})
	%52 = call ccc %..rawptr @CreateWindowExA(i32 0, i8* %50, i8* %51, i32 0, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %..rawptr zeroinitializer)
	store %..rawptr %52, %..rawptr* %5
	; IfStmt
	%53 = load %..rawptr, %..rawptr* %5, align 8
	%54 = icmp eq %..rawptr %53, zeroinitializer
	br i1 %54, label %if.then-5, label %if.done-6

if.then-5:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$572, i64 0, i32 0), i64 36}, i64 253, i64 23, %..string {i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__str$573, i64 0, i32 0), i64 37})
	br label %if.done-6

if.done-6:
	; wndDc
	store %..rawptr zeroinitializer, %..rawptr* %6
		; SelectorExpr
	%55 = load %..rawptr, %..rawptr* %5, align 8
	%56 = call ccc %..rawptr @GetDC(%..rawptr %55)
	store %..rawptr %56, %..rawptr* %6
	; assert
	%57 = load %..rawptr, %..rawptr* %6, align 8
	%58 = icmp ne %..rawptr %57, zeroinitializer
	%59 = icmp eq i1 %58, false
	br i1 %59, label %builtin.assert.err-7, label %builtin.assert.done-8

builtin.assert.err-7:
	call void @__assert(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$574, i64 0, i32 0), i64 36}, i64 256, i64 20, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$575, i64 0, i32 0), i64 12})
	br label %builtin.assert.done-8

builtin.assert.done-8:
	; temp
	store %..rawptr zeroinitializer, %..rawptr* %7
		%60 = load %..rawptr, %..rawptr* %0, align 8
	store %..rawptr %60, %..rawptr* %7
	; AssignStmt
	%61 = load %..rawptr, %..rawptr* %6, align 8
	store %..rawptr %61, %..rawptr* %0
	; oldCtx
	store %..rawptr zeroinitializer, %..rawptr* %8
		%62 = load %..rawptr, %..rawptr* %0, align 8
	%63 = call %..rawptr @platform_win32-28.CreateOpenGLContext(%..rawptr %62, i1 false)
	store %..rawptr %63, %..rawptr* %8
	; AssignStmt
	%64 = load %..rawptr, %..rawptr* %7, align 8
	store %..rawptr %64, %..rawptr* %0
	; assert
	%65 = load %..rawptr, %..rawptr* %8, align 8
	%66 = icmp ne %..rawptr %65, zeroinitializer
	%67 = icmp eq i1 %66, false
	br i1 %67, label %builtin.assert.err-9, label %builtin.assert.done-10

builtin.assert.err-9:
	call void @__assert(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$576, i64 0, i32 0), i64 36}, i64 263, i64 20, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$577, i64 0, i32 0), i64 13})
	br label %builtin.assert.done-10

builtin.assert.done-10:
	; extensions
	store %jwgl-26.TryGetExtensionList zeroinitializer, %jwgl-26.TryGetExtensionList* %9
		store %jwgl-26.TryGetExtensionList zeroinitializer, %jwgl-26.TryGetExtensionList* %9
	; SelectorExpr
	%68 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, i64 0
	; SelectorExpr
	%69 = getelementptr inbounds i32 (%..rawptr, i32*, float*, i32, i32*, i32*)*, i32 (%..rawptr, i32*, float*, i32, i32*, i32*)** @jwgl-26.ChoosePixelFormatARB, i64 0
	%70 = bitcast i32 (%..rawptr, i32*, float*, i32, i32*, i32*)** %69 to %..rawptr
	call void @jwgl-26.TryGetExtension(%jwgl-26.TryGetExtensionList* %68, %..rawptr %70, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$578, i64 0, i32 0), i64 23})
	; SelectorExpr
	%71 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, i64 0
	; SelectorExpr
	%72 = getelementptr inbounds %..rawptr (%..rawptr, %..rawptr, i32*)*, %..rawptr (%..rawptr, %..rawptr, i32*)** @jwgl-26.CreateContextAttribsARB, i64 0
	%73 = bitcast %..rawptr (%..rawptr, %..rawptr, i32*)** %72 to %..rawptr
	call void @jwgl-26.TryGetExtension(%jwgl-26.TryGetExtensionList* %71, %..rawptr %73, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$579, i64 0, i32 0), i64 26})
	; SelectorExpr
	%74 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, i64 0
	; SelectorExpr
	%75 = getelementptr inbounds i8* (%..rawptr)*, i8* (%..rawptr)** @jwgl-26.GetExtensionsStringARB, i64 0
	%76 = bitcast i8* (%..rawptr)** %75 to %..rawptr
	call void @jwgl-26.TryGetExtension(%jwgl-26.TryGetExtensionList* %74, %..rawptr %76, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$57a, i64 0, i32 0), i64 25})
	; SelectorExpr
	%77 = getelementptr inbounds %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, i64 0
	; SelectorExpr
	%78 = getelementptr inbounds i1 (i32)*, i1 (i32)** @jwgl-26.SwapIntervalEXT, i64 0
	%79 = bitcast i1 (i32)** %78 to %..rawptr
	call void @jwgl-26.TryGetExtension(%jwgl-26.TryGetExtensionList* %77, %..rawptr %79, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$57b, i64 0, i32 0), i64 18})
	; SelectorExpr
	%80 = load %..rawptr, %..rawptr* %8, align 8
	%81 = load %..rawptr, %..rawptr* %6, align 8
	%82 = load %jwgl-26.TryGetExtensionList, %jwgl-26.TryGetExtensionList* %9, align 8
	store %jwgl-26.TryGetExtensionList zeroinitializer, %jwgl-26.TryGetExtensionList* %10
	store %jwgl-26.TryGetExtensionList %82, %jwgl-26.TryGetExtensionList* %10
	call void @jwgl-26.LoadExtensions(%..rawptr %80, %..rawptr %81, %jwgl-26.TryGetExtensionList* %10)
	; SelectorExpr
	%83 = call ccc i32 @wglMakeCurrent(%..rawptr zeroinitializer, %..rawptr zeroinitializer)
	; SelectorExpr
	%84 = load %..rawptr, %..rawptr* %8, align 8
	%85 = call ccc i32 @wglDeleteContext(%..rawptr %84)
	; SelectorExpr
	%86 = load %..rawptr, %..rawptr* %5, align 8
	%87 = load %..rawptr, %..rawptr* %6, align 8
	%88 = call ccc i32 @ReleaseDC(%..rawptr %86, %..rawptr %87)
	; SelectorExpr
	%89 = load %..rawptr, %..rawptr* %5, align 8
	%90 = call ccc i32 @DestroyWindow(%..rawptr %89)
	; attribs
	store {%jwgl-26.Attrib*, i64, i64,%Allocator} zeroinitializer, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %11
		; append
	%91 = bitcast {%jwgl-26.Attrib*, i64, i64,%Allocator}* %11 to %..rawptr
	%92 = load {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %11, align 8
	; SelectorExpr
	%93 = call %jwgl-26.Attrib @jwgl-26.DRAW_TO_WINDOW_ARB(i1 true)
	; SelectorExpr
	%94 = call %jwgl-26.Attrib @jwgl-26.ACCELERATION_ARB(i32 8231)
	; SelectorExpr
	%95 = call %jwgl-26.Attrib @jwgl-26.SUPPORT_OPENGL_ARB(i1 true)
	; SelectorExpr
	%96 = call %jwgl-26.Attrib @jwgl-26.DOUBLE_BUFFER_ARB(i1 true)
	; SelectorExpr
	%97 = call %jwgl-26.Attrib @jwgl-26.PIXEL_TYPE_ARB(i32 8235)
	; SelectorExpr
	%98 = call %jwgl-26.Attrib @jwgl-26.COLOR_BITS_ARB(i32 32)
	; SelectorExpr
	%99 = call %jwgl-26.Attrib @jwgl-26.ALPHA_BITS_ARB(i32 8)
	; SelectorExpr
	%100 = call %jwgl-26.Attrib @jwgl-26.DEPTH_BITS_ARB(i32 24)
	; SelectorExpr
	%101 = call %jwgl-26.Attrib @jwgl-26.FRAMEBUFFER_SRGB_CAPABLE_ARB(i1 true)
	; variadic call argument generation
	store {%jwgl-26.Attrib*, i64, i64} zeroinitializer, {%jwgl-26.Attrib*, i64, i64}* %12
	store [9 x %jwgl-26.Attrib] zeroinitializer, [9 x %jwgl-26.Attrib]* %13
	%102 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 0
	store %jwgl-26.Attrib %93, %jwgl-26.Attrib* %102
	%103 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 1
	store %jwgl-26.Attrib %94, %jwgl-26.Attrib* %103
	%104 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 2
	store %jwgl-26.Attrib %95, %jwgl-26.Attrib* %104
	%105 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 3
	store %jwgl-26.Attrib %96, %jwgl-26.Attrib* %105
	%106 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 4
	store %jwgl-26.Attrib %97, %jwgl-26.Attrib* %106
	%107 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 5
	store %jwgl-26.Attrib %98, %jwgl-26.Attrib* %107
	%108 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 6
	store %jwgl-26.Attrib %99, %jwgl-26.Attrib* %108
	%109 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 7
	store %jwgl-26.Attrib %100, %jwgl-26.Attrib* %109
	%110 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 8
	store %jwgl-26.Attrib %101, %jwgl-26.Attrib* %110
	%111 = getelementptr inbounds [9 x %jwgl-26.Attrib], [9 x %jwgl-26.Attrib]* %13, i64 0, i32 0
	%112 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %12, i64 0, i32 0
	store %jwgl-26.Attrib* %111, %jwgl-26.Attrib** %112
	%113 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %12, i64 0, i32 1
	store i64 9, i64* %113
	%114 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %12, i64 0, i32 2
	store i64 9, i64* %114
	%115 = load {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %12, align 8
	%116 = extractvalue {%jwgl-26.Attrib*, i64, i64} %115, 0
	%117 = extractvalue {%jwgl-26.Attrib*, i64, i64} %115, 1
	%118 = bitcast %jwgl-26.Attrib* %116 to %..rawptr
	%119 = call i64 @__dynamic_array_append(%..rawptr %91, i64 8, i64 4, %..rawptr %118, i64 %117)
	; attribArray
	store {i32*, i64, i64,%Allocator} zeroinitializer, {i32*, i64, i64,%Allocator}* %14
		; SelectorExpr
	%120 = load {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %11, align 8
	%121 = call {i32*, i64, i64,%Allocator} @jwgl-26.PrepareAttribArray({%jwgl-26.Attrib*, i64, i64,%Allocator} %120)
	store {i32*, i64, i64,%Allocator} %121, {i32*, i64, i64,%Allocator}* %14
	; format
	store i32 zeroinitializer, i32* %15
		; formats
	store i32 zeroinitializer, i32* %16
		; success
	store i32 zeroinitializer, i32* %17
		; SelectorExpr
	%122 = load i32 (%..rawptr, i32*, float*, i32, i32*, i32*)*, i32 (%..rawptr, i32*, float*, i32, i32*, i32*)** @jwgl-26.ChoosePixelFormatARB, align 8
	%123 = load %..rawptr, %..rawptr* %0, align 8
	; IndexExpr
	%124 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %14, align 8
	%125 = extractvalue {i32*, i64, i64,%Allocator} %124, 0
	%126 = extractvalue {i32*, i64, i64,%Allocator} %124, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$57c, i64 0, i32 0), i64 36}, i64 291, i64 69, i64 0, i64 %126)
	%127 = getelementptr inbounds i32, i32* %125, i64 0
	%128 = getelementptr inbounds i32, i32* %127, i64 0
	%129 = getelementptr inbounds i32, i32* %15, i64 0
	%130 = getelementptr inbounds i32, i32* %16, i64 0
	%131 = call ccc i32 %122(%..rawptr %123, i32* %128, float* zeroinitializer, i32 1, i32* %129, i32* %130)
	store i32 %131, i32* %17
	; IfStmt
	%132 = load i32, i32* %17, align 4
	%133 = icmp eq i32 %132, 1
	br i1 %133, label %cmp.and-11, label %if.done-13

cmp.and-11:
	%134 = load i32, i32* %16, align 4
	%135 = icmp eq i32 %134, 0
	br i1 %135, label %if.then-12, label %if.done-13

if.then-12:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$57d, i64 0, i32 0), i64 36}, i64 293, i64 19, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$57e, i64 0, i32 0), i64 35})
	br label %if.done-13

if.done-13:
	; pfd
	store %windows-35.PIXELFORMATDESCRIPTOR zeroinitializer, %windows-35.PIXELFORMATDESCRIPTOR* %18
		; AssignStmt
	; SelectorExpr
	%136 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %18, i64 0, i32 1
	store i32 1, i32* %136
	; AssignStmt
	; SelectorExpr
	%137 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %18, i64 0, i32 0
	store i32 44, i32* %137
	; SelectorExpr
	%138 = load %..rawptr, %..rawptr* %0, align 8
	%139 = load i32, i32* %15, align 4
	%140 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %18, i64 0
	%141 = call ccc i32 @DescribePixelFormat(%..rawptr %138, i32 %139, i32 44, %windows-35.PIXELFORMATDESCRIPTOR* %140)
	; SelectorExpr
	%142 = load %..rawptr, %..rawptr* %0, align 8
	%143 = load i32, i32* %15, align 4
	%144 = getelementptr inbounds %windows-35.PIXELFORMATDESCRIPTOR, %windows-35.PIXELFORMATDESCRIPTOR* %18, i64 0
	%145 = call ccc i32 @SetPixelFormat(%..rawptr %142, i32 %143, %windows-35.PIXELFORMATDESCRIPTOR* %144)
	; createAttr
	store {%jwgl-26.Attrib*, i64, i64,%Allocator} zeroinitializer, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %19
		; append
	%146 = bitcast {%jwgl-26.Attrib*, i64, i64,%Allocator}* %19 to %..rawptr
	%147 = load {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %19, align 8
	; SelectorExpr
	%148 = call %jwgl-26.Attrib @jwgl-26.CONTEXT_MAJOR_VERSION_ARB(i32 3)
	; SelectorExpr
	%149 = call %jwgl-26.Attrib @jwgl-26.CONTEXT_MINOR_VERSION_ARB(i32 3)
	; SelectorExpr
	%150 = call %jwgl-26.Attrib @jwgl-26.CONTEXT_FLAGS_ARB(i32 1)
	; SelectorExpr
	%151 = call %jwgl-26.Attrib @jwgl-26.CONTEXT_PROFILE_MASK_ARB(i32 1)
	; variadic call argument generation
	store {%jwgl-26.Attrib*, i64, i64} zeroinitializer, {%jwgl-26.Attrib*, i64, i64}* %20
	store [4 x %jwgl-26.Attrib] zeroinitializer, [4 x %jwgl-26.Attrib]* %21
	%152 = getelementptr inbounds [4 x %jwgl-26.Attrib], [4 x %jwgl-26.Attrib]* %21, i64 0, i32 0
	store %jwgl-26.Attrib %148, %jwgl-26.Attrib* %152
	%153 = getelementptr inbounds [4 x %jwgl-26.Attrib], [4 x %jwgl-26.Attrib]* %21, i64 0, i32 1
	store %jwgl-26.Attrib %149, %jwgl-26.Attrib* %153
	%154 = getelementptr inbounds [4 x %jwgl-26.Attrib], [4 x %jwgl-26.Attrib]* %21, i64 0, i32 2
	store %jwgl-26.Attrib %150, %jwgl-26.Attrib* %154
	%155 = getelementptr inbounds [4 x %jwgl-26.Attrib], [4 x %jwgl-26.Attrib]* %21, i64 0, i32 3
	store %jwgl-26.Attrib %151, %jwgl-26.Attrib* %155
	%156 = getelementptr inbounds [4 x %jwgl-26.Attrib], [4 x %jwgl-26.Attrib]* %21, i64 0, i32 0
	%157 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %20, i64 0, i32 0
	store %jwgl-26.Attrib* %156, %jwgl-26.Attrib** %157
	%158 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %20, i64 0, i32 1
	store i64 4, i64* %158
	%159 = getelementptr inbounds {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %20, i64 0, i32 2
	store i64 4, i64* %159
	%160 = load {%jwgl-26.Attrib*, i64, i64}, {%jwgl-26.Attrib*, i64, i64}* %20, align 8
	%161 = extractvalue {%jwgl-26.Attrib*, i64, i64} %160, 0
	%162 = extractvalue {%jwgl-26.Attrib*, i64, i64} %160, 1
	%163 = bitcast %jwgl-26.Attrib* %161 to %..rawptr
	%164 = call i64 @__dynamic_array_append(%..rawptr %146, i64 8, i64 4, %..rawptr %163, i64 %162)
	; AssignStmt
	; SelectorExpr
	%165 = load {%jwgl-26.Attrib*, i64, i64,%Allocator}, {%jwgl-26.Attrib*, i64, i64,%Allocator}* %19, align 8
	%166 = call {i32*, i64, i64,%Allocator} @jwgl-26.PrepareAttribArray({%jwgl-26.Attrib*, i64, i64,%Allocator} %165)
	store {i32*, i64, i64,%Allocator} %166, {i32*, i64, i64,%Allocator}* %14
	; ctx
	store %..rawptr zeroinitializer, %..rawptr* %22
		; SelectorExpr
	%167 = load %..rawptr (%..rawptr, %..rawptr, i32*)*, %..rawptr (%..rawptr, %..rawptr, i32*)** @jwgl-26.CreateContextAttribsARB, align 8
	%168 = load %..rawptr, %..rawptr* %0, align 8
	; IndexExpr
	%169 = load {i32*, i64, i64,%Allocator}, {i32*, i64, i64,%Allocator}* %14, align 8
	%170 = extractvalue {i32*, i64, i64,%Allocator} %169, 0
	%171 = extractvalue {i32*, i64, i64,%Allocator} %169, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$57f, i64 0, i32 0), i64 36}, i64 308, i64 73, i64 0, i64 %171)
	%172 = getelementptr inbounds i32, i32* %170, i64 0
	%173 = getelementptr inbounds i32, i32* %172, i64 0
	%174 = call ccc %..rawptr %167(%..rawptr %168, %..rawptr zeroinitializer, i32* %173)
	store %..rawptr %174, %..rawptr* %22
	; assert
	%175 = load %..rawptr, %..rawptr* %22, align 8
	%176 = icmp ne %..rawptr %175, zeroinitializer
	%177 = icmp eq i1 %176, false
	br i1 %177, label %builtin.assert.err-14, label %builtin.assert.done-15

builtin.assert.err-14:
	call void @__assert(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$580, i64 0, i32 0), i64 36}, i64 309, i64 16, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$581, i64 0, i32 0), i64 10})
	br label %builtin.assert.done-15

builtin.assert.done-15:
	; SelectorExpr
	%178 = load %..rawptr, %..rawptr* %0, align 8
	%179 = load %..rawptr, %..rawptr* %22, align 8
	%180 = call ccc i32 @wglMakeCurrent(%..rawptr %178, %..rawptr %179)
	; ReturnStmt
	%181 = load %..rawptr, %..rawptr* %22, align 8
	ret %..rawptr %181

if.done-16:
	unreachable
}

define void @platform_win32-28.ToggleBorderlessFullscreen(%..rawptr %wnd, %windows-35.Window_Placement* %WindowPlacement) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %windows-35.Window_Placement*, align 8
	%2 = alloca i32, align 4
	%3 = alloca %windows-35.Monitor_Info, align 4
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %wnd, %..rawptr* %0
	store %windows-35.Window_Placement* zeroinitializer, %windows-35.Window_Placement** %1
		store %windows-35.Window_Placement* %WindowPlacement, %windows-35.Window_Placement** %1
	; Style
	store i32 zeroinitializer, i32* %2
		; SelectorExpr
	%4 = load %..rawptr, %..rawptr* %0, align 8
	%5 = call ccc i64 @GetWindowLongPtrA(%..rawptr %4, i32 -16)
	%6 = trunc i64 %5 to i32
	store i32 %6, i32* %2
	; IfStmt
	%7 = load i32, i32* %2, align 4
	%8 = and i32 %7, 13565952
	%9 = icmp eq i32 %8, 13565952
	br i1 %9, label %if.then-1, label %if.else-2

if.then-1:
	; monitorInfo
	store %windows-35.Monitor_Info zeroinitializer, %windows-35.Monitor_Info* %3
		; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 0
	store i32 40, i32* %10
	; SelectorExpr
	%11 = load %..rawptr, %..rawptr* %0, align 8
	%12 = load %windows-35.Window_Placement*, %windows-35.Window_Placement** %1, align 8
	%13 = call ccc i32 @GetWindowPlacement(%..rawptr %11, %windows-35.Window_Placement* %12)
	; SelectorExpr
	; SelectorExpr
	%14 = load %..rawptr, %..rawptr* %0, align 8
	%15 = call ccc %..rawptr @MonitorFromWindow(%..rawptr %14, i32 1)
	%16 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0
	%17 = call ccc i32 @GetMonitorInfoA(%..rawptr %15, %windows-35.Monitor_Info* %16)
	; SelectorExpr
	%18 = load %..rawptr, %..rawptr* %0, align 8
	%19 = load i32, i32* %2, align 4
	%20 = zext i32 %19 to i64
	%21 = and i64 %20, -13565953
	%22 = call ccc i64 @SetWindowLongPtrA(%..rawptr %18, i32 -16, i64 %21)
	; SelectorExpr
	%23 = load %..rawptr, %..rawptr* %0, align 8
	; SelectorExpr
	; SelectorExpr
	%24 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%25 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %24, i64 0, i32 0
	%26 = load i32, i32* %25, align 4
	; SelectorExpr
	; SelectorExpr
	%27 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%28 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %27, i64 0, i32 1
	%29 = load i32, i32* %28, align 4
	; SelectorExpr
	; SelectorExpr
	%30 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%31 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %30, i64 0, i32 2
	%32 = load i32, i32* %31, align 4
	; SelectorExpr
	; SelectorExpr
	%33 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%34 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %33, i64 0, i32 0
	%35 = load i32, i32* %34, align 4
	%36 = sub i32 %32, %35
	; SelectorExpr
	; SelectorExpr
	%37 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%38 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %37, i64 0, i32 3
	%39 = load i32, i32* %38, align 4
	; SelectorExpr
	; SelectorExpr
	%40 = getelementptr inbounds %windows-35.Monitor_Info, %windows-35.Monitor_Info* %3, i64 0, i32 1
	%41 = getelementptr inbounds %windows-35.Rect, %windows-35.Rect* %40, i64 0, i32 1
	%42 = load i32, i32* %41, align 4
	%43 = sub i32 %39, %42
	call ccc void @SetWindowPos(%..rawptr %23, %..rawptr null, i32 %26, i32 %29, i32 %36, i32 %43, i32 544)
	br label %if.done-3

if.else-2:
	; SelectorExpr
	%44 = load %..rawptr, %..rawptr* %0, align 8
	%45 = load i32, i32* %2, align 4
	%46 = or i32 %45, 13565952
	%47 = zext i32 %46 to i64
	%48 = call ccc i64 @SetWindowLongPtrA(%..rawptr %44, i32 -16, i64 %47)
	; SelectorExpr
	%49 = load %..rawptr, %..rawptr* %0, align 8
	%50 = load %windows-35.Window_Placement*, %windows-35.Window_Placement** %1, align 8
	%51 = call ccc i32 @SetWindowPlacement(%..rawptr %49, %windows-35.Window_Placement* %50)
	; SelectorExpr
	%52 = load %..rawptr, %..rawptr* %0, align 8
	call ccc void @SetWindowPos(%..rawptr %52, %..rawptr zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 551)
	br label %if.done-3

if.done-3:
	ret void
}

define void @platform_win32-28.ChangeWindowTitle(%..rawptr %window, %..string %fmt_, {%..any*, i64, i64} %args) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..any*, i64, i64}, align 8
	%3 = alloca [1024 x i8], align 1
	%4 = alloca {i8*, i64, i64}, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %window, %..rawptr* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %fmt_, %..string* %1
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %2
		store {%..any*, i64, i64} %args, {%..any*, i64, i64}* %2
	; buf
	store [1024 x i8] zeroinitializer, [1024 x i8]* %3
		; SelectorExpr
	; SliceExpr
	%5 = load [1024 x i8], [1024 x i8]* %3, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$582, i64 0, i32 0), i64 36}, i64 340, i64 20, i64 0, i64 1024, i64 1024)
	%6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i32 0
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = sub i64 1024, 0
	%9 = sub i64 1024, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %4
	%10 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 0
	store i8* %7, i8** %10
	%11 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 1
	store i64 %8, i64* %11
	%12 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %4, i64 0, i32 2
	store i64 %9, i64* %12
	%13 = load {i8*, i64, i64}, {i8*, i64, i64}* %4, align 8
	%14 = load %..string, %..string* %1, align 8
	%15 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %2, align 8
	%16 = call %..string @fmt-4.bprintf({i8*, i64, i64} %13, %..string %14, {%..any*, i64, i64} %15)
	; SelectorExpr
	%17 = load %..rawptr, %..rawptr* %0, align 8
	; IndexExpr
	%18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$583, i64 0, i32 0), i64 36}, i64 341, i64 51, i64 0, i64 1024)
	%19 = getelementptr inbounds i8, i8* %18, i64 0
	%20 = call ccc i32 @SetWindowTextA(%..rawptr %17, i8* %19)
	ret void
}

define {i64, i64} @os_windows-29.open(%..string %path, i64 %mode, i32 %perm) {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i32, align 4
	%3 = alloca {i64, i64}, align 8
	%4 = alloca i32, align 4
	%5 = alloca i32, align 4
	%6 = alloca %windows-35.Security_Attributes*, align 8
	%7 = alloca %windows-35.Security_Attributes, align 8
	%8 = alloca i32, align 4
	%9 = alloca [300 x i8], align 1
	%10 = alloca {i8*, i64, i64}, align 8
	%11 = alloca i8*, align 8
	%12 = alloca {i8*, i64, i64}, align 8
	%13 = alloca i64, align 8
	%14 = alloca {i64, i64}, align 8
	%15 = alloca i32, align 4
	%16 = alloca {i64, i64}, align 8
	store %..string zeroinitializer, %..string* %0
		store %..string %path, %..string* %0
	store i64 zeroinitializer, i64* %1
		store i64 %mode, i64* %1
	store i32 zeroinitializer, i32* %2
		store i32 %perm, i32* %2
	; IfStmt
	%17 = load %..string, %..string* %0, align 8
	%18 = extractvalue %..string %17, 1
	%19 = icmp eq i64 %18, 0
	br i1 %19, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %3
	%20 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 0
	store i64 -1, i64* %20
	%21 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 1
	store i64 2, i64* %21
	%22 = load {i64, i64}, {i64, i64}* %3, align 8
	ret {i64, i64} %22

if.done-2:
	; access
	store i32 zeroinitializer, i32* %4
		; MatchStmt
	%23 = load i64, i64* %1, align 8
	%24 = and i64 %23, 3
	%25 = icmp eq i64 %24, 0
	br i1 %25, label %match.case.body-4, label %match.case.next-3

match.case.next-3:
	%26 = icmp eq i64 %24, 1
	br i1 %26, label %match.fall.body-6, label %match.case.next-5

match.case.body-4:
	; AssignStmt
	store i32 2147483648, i32* %4
	br label %match.done-9

match.case.next-5:
	%27 = icmp eq i64 %24, 2
	br i1 %27, label %match.fall.body-8, label %match.case.next-7

match.fall.body-6:
	; AssignStmt
	store i32 1073741824, i32* %4
	br label %match.done-9

match.case.next-7:
	br label %match.done-9

match.fall.body-8:
	; AssignStmt
	store i32 3221225472, i32* %4
	br label %match.done-9

match.done-9:
	; IfStmt
	%28 = load i64, i64* %1, align 8
	%29 = and i64 %28, 64
	%30 = icmp ne i64 %29, 0
	br i1 %30, label %if.then-10, label %if.done-11

if.then-10:
	; AssignStmt
	%31 = load i32, i32* %4, align 4
	%32 = or i32 %31, 1073741824
	store i32 %32, i32* %4
	br label %if.done-11

if.done-11:
	; IfStmt
	%33 = load i64, i64* %1, align 8
	%34 = and i64 %33, 1024
	%35 = icmp ne i64 %34, 0
	br i1 %35, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	%36 = load i32, i32* %4, align 4
	%37 = xor i32 1073741824, -1
	%38 = and i32 %36, %37
	store i32 %38, i32* %4
	; AssignStmt
	%39 = load i32, i32* %4, align 4
	%40 = or i32 %39, 4
	store i32 %40, i32* %4
	br label %if.done-13

if.done-13:
	; share_mode
	store i32 zeroinitializer, i32* %5
		store i32 3, i32* %5
	; sa
	store %windows-35.Security_Attributes* zeroinitializer, %windows-35.Security_Attributes** %6
		store %windows-35.Security_Attributes* zeroinitializer, %windows-35.Security_Attributes** %6
	; sa_inherit
	store %windows-35.Security_Attributes zeroinitializer, %windows-35.Security_Attributes* %7
		store %windows-35.Security_Attributes {i32 24, %..rawptr zeroinitializer, i32 1}, %windows-35.Security_Attributes* %7
	; IfStmt
	%41 = load i64, i64* %1, align 8
	%42 = and i64 %41, 524288
	%43 = icmp eq i64 %42, 0
	br i1 %43, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	%44 = getelementptr inbounds %windows-35.Security_Attributes, %windows-35.Security_Attributes* %7, i64 0
	store %windows-35.Security_Attributes* %44, %windows-35.Security_Attributes** %6
	br label %if.done-15

if.done-15:
	; create_mode
	store i32 zeroinitializer, i32* %8
		; MatchStmt
	%45 = load i64, i64* %1, align 8
	%46 = and i64 %45, 192
	%47 = icmp eq i64 %46, 192
	%48 = icmp eq i1 true, %47
	br i1 %48, label %match.case.body-17, label %match.case.next-16

match.case.next-16:
	%49 = load i64, i64* %1, align 8
	%50 = and i64 %49, 576
	%51 = icmp eq i64 %50, 576
	%52 = icmp eq i1 true, %51
	br i1 %52, label %match.fall.body-19, label %match.case.next-18

match.case.body-17:
	; AssignStmt
	store i32 1, i32* %8
	br label %match.done-24

match.case.next-18:
	%53 = load i64, i64* %1, align 8
	%54 = and i64 %53, 64
	%55 = icmp eq i64 %54, 64
	%56 = icmp eq i1 true, %55
	br i1 %56, label %match.fall.body-21, label %match.case.next-20

match.fall.body-19:
	; AssignStmt
	store i32 2, i32* %8
	br label %match.done-24

match.case.next-20:
	%57 = load i64, i64* %1, align 8
	%58 = and i64 %57, 512
	%59 = icmp eq i64 %58, 512
	%60 = icmp eq i1 true, %59
	br i1 %60, label %match.fall.body-23, label %match.case.next-22

match.fall.body-21:
	; AssignStmt
	store i32 4, i32* %8
	br label %match.done-24

match.case.next-22:
	; AssignStmt
	store i32 3, i32* %8
	br label %match.done-24

match.fall.body-23:
	; AssignStmt
	store i32 5, i32* %8
	br label %match.done-24

match.done-24:
	; buf
	store [300 x i8] zeroinitializer, [300 x i8]* %9
		; copy
	; SliceExpr
	%61 = load [300 x i8], [300 x i8]* %9, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$584, i64 0, i32 0), i64 28}, i64 97, i64 10, i64 0, i64 300, i64 300)
	%62 = getelementptr inbounds [300 x i8], [300 x i8]* %9, i64 0, i32 0
	%63 = getelementptr inbounds i8, i8* %62, i64 0
	%64 = sub i64 300, 0
	%65 = sub i64 300, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %10
	%66 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %10, i64 0, i32 0
	store i8* %63, i8** %66
	%67 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %10, i64 0, i32 1
	store i64 %64, i64* %67
	%68 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %10, i64 0, i32 2
	store i64 %65, i64* %68
	%69 = load {i8*, i64, i64}, {i8*, i64, i64}* %10, align 8
	%70 = load %..string, %..string* %0, align 8
	%71 = extractvalue %..string %70, 0
	store i8* zeroinitializer, i8** %11
	store i8* %71, i8** %11
	%72 = extractvalue %..string %70, 1
	%73 = sub i64 %72, 0
	%74 = sub i64 %72, 0
	%75 = load i8*, i8** %11, align 8
	%76 = getelementptr inbounds i8, i8* %75, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %12
	%77 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 0
	store i8* %76, i8** %77
	%78 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 1
	store i64 %73, i64* %78
	%79 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 2
	store i64 %74, i64* %79
	%80 = load {i8*, i64, i64}, {i8*, i64, i64}* %12, align 8
	%81 = extractvalue {i8*, i64, i64} %69, 0
	%82 = bitcast i8* %81 to %..rawptr
	%83 = extractvalue {i8*, i64, i64} %80, 0
	%84 = bitcast i8* %83 to %..rawptr
	%85 = extractvalue {i8*, i64, i64} %69, 1
	%86 = extractvalue {i8*, i64, i64} %80, 1
	%87 = icmp slt i64 %85, %86
	%88 = select i1 %87, i64 %85, i64 %86
	%89 = mul i64 %88, 1
	%90 = call %..rawptr @__mem_copy(%..rawptr %82, %..rawptr %84, i64 %89)
	; handle
	store i64 zeroinitializer, i64* %13
		; SelectorExpr
	; IndexExpr
	%91 = getelementptr inbounds [300 x i8], [300 x i8]* %9, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$585, i64 0, i32 0), i64 28}, i64 99, i64 42, i64 0, i64 300)
	%92 = getelementptr inbounds i8, i8* %91, i64 0
	%93 = load i32, i32* %4, align 4
	%94 = load i32, i32* %5, align 4
	%95 = load %windows-35.Security_Attributes*, %windows-35.Security_Attributes** %6, align 8
	%96 = load i32, i32* %8, align 4
	%97 = bitcast %windows-35.Security_Attributes* %95 to %..rawptr
	%98 = call ccc %..rawptr @CreateFileA(i8* %92, i32 %93, i32 %94, %..rawptr %97, i32 %96, i32 128, %..rawptr zeroinitializer)
	%99 = ptrtoint %..rawptr %98 to i64
	store i64 %99, i64* %13
	; IfStmt
	%100 = load i64, i64* %13, align 8
	%101 = icmp ne i64 %100, -1
	br i1 %101, label %if.then-25, label %if.done-26

if.then-25:
	; ReturnStmt
	%102 = load i64, i64* %13, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %14
	%103 = getelementptr inbounds {i64, i64}, {i64, i64}* %14, i64 0, i32 0
	store i64 %102, i64* %103
	%104 = getelementptr inbounds {i64, i64}, {i64, i64}* %14, i64 0, i32 1
	store i64 0, i64* %104
	%105 = load {i64, i64}, {i64, i64}* %14, align 8
	ret {i64, i64} %105

if.done-26:
	; err
	store i32 zeroinitializer, i32* %15
		; SelectorExpr
	%106 = call ccc i32 @GetLastError()
	store i32 %106, i32* %15
	; ReturnStmt
	%107 = load i32, i32* %15, align 4
	%108 = sext i32 %107 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %16
	%109 = getelementptr inbounds {i64, i64}, {i64, i64}* %16, i64 0, i32 0
	store i64 -1, i64* %109
	%110 = getelementptr inbounds {i64, i64}, {i64, i64}* %16, i64 0, i32 1
	store i64 %108, i64* %110
	%111 = load {i64, i64}, {i64, i64}* %16, align 8
	ret {i64, i64} %111
}

define void @os_windows-29.close(i64 %fd) {
decls-0:
	%0 = alloca i64, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	; SelectorExpr
	%1 = load i64, i64* %0, align 8
	%2 = inttoptr i64 %1 to %..rawptr
	%3 = call ccc i32 @CloseHandle(%..rawptr %2)
	ret void
}

define {i64, i64} @os_windows-29.write(i64 %fd, {i8*, i64, i64} %data) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = alloca {i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i32, align 4
	%8 = alloca i32, align 4
	%9 = alloca i32, align 4
	%10 = alloca {i64, i64}, align 8
	%11 = alloca {i64, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		store {i8*, i64, i64} %data, {i8*, i64, i64}* %1
	; IfStmt
	%12 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%13 = extractvalue {i8*, i64, i64} %12, 1
	%14 = icmp eq i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %2
	%15 = getelementptr inbounds {i64, i64}, {i64, i64}* %2, i64 0, i32 0
	store i64 0, i64* %15
	%16 = getelementptr inbounds {i64, i64}, {i64, i64}* %2, i64 0, i32 1
	store i64 0, i64* %16
	%17 = load {i64, i64}, {i64, i64}* %2, align 8
	ret {i64, i64} %17

if.done-2:
	; single_write_length
	store i32 zeroinitializer, i32* %3
		; total_write
	store i64 zeroinitializer, i64* %4
		; length
	store i64 zeroinitializer, i64* %5
		%18 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%19 = extractvalue {i8*, i64, i64} %18, 1
	%20 = bitcast i64 %19 to i64
	store i64 %20, i64* %5
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%21 = load i64, i64* %4, align 8
	%22 = load i64, i64* %5, align 8
	%23 = icmp slt i64 %21, %22
	br i1 %23, label %for.body-4, label %for.done-11

for.body-4:
	; remaining
	store i64 zeroinitializer, i64* %6
		%24 = load i64, i64* %5, align 8
	%25 = load i64, i64* %4, align 8
	%26 = sub i64 %24, %25
	store i64 %26, i64* %6
	; to_read
	store i32 zeroinitializer, i32* %7
		; IfStmt
	%27 = load i64, i64* %6, align 8
	%28 = icmp sle i64 %27, 2147483647
	br i1 %28, label %if.then-5, label %if.else-6

if.then-5:
	; AssignStmt
	%29 = load i64, i64* %6, align 8
	%30 = trunc i64 %29 to i32
	store i32 %30, i32* %7
	br label %if.done-7

if.else-6:
	; AssignStmt
	store i32 2147483647, i32* %7
	br label %if.done-7

if.done-7:
	; e
	store i32 zeroinitializer, i32* %8
		; SelectorExpr
	%31 = load i64, i64* %0, align 8
	%32 = inttoptr i64 %31 to %..rawptr
	; IndexExpr
	%33 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%34 = extractvalue {i8*, i64, i64} %33, 0
	%35 = extractvalue {i8*, i64, i64} %33, 1
	%36 = load i64, i64* %4, align 8
	%37 = bitcast i64 %36 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$586, i64 0, i32 0), i64 28}, i64 129, i64 48, i64 %37, i64 %35)
	%38 = getelementptr inbounds i8, i8* %34, i64 %37
	%39 = getelementptr inbounds i8, i8* %38, i64 0
	%40 = load i32, i32* %7, align 4
	%41 = getelementptr inbounds i32, i32* %3, i64 0
	%42 = bitcast i8* %39 to %..rawptr
	%43 = call ccc i32 @WriteFile(%..rawptr %32, %..rawptr %42, i32 %40, i32* %41, %..rawptr zeroinitializer)
	store i32 %43, i32* %8
	; IfStmt
	%44 = load i32, i32* %3, align 4
	%45 = icmp sle i32 %44, 0
	br i1 %45, label %if.then-9, label %cmp.or-8

cmp.or-8:
	%46 = load i32, i32* %8, align 4
	%47 = icmp eq i32 %46, 0
	br i1 %47, label %if.then-9, label %if.done-10

if.then-9:
	; err
	store i32 zeroinitializer, i32* %9
		; SelectorExpr
	%48 = call ccc i32 @GetLastError()
	store i32 %48, i32* %9
	; ReturnStmt
	%49 = load i64, i64* %4, align 8
	%50 = bitcast i64 %49 to i64
	%51 = load i32, i32* %8, align 4
	%52 = sext i32 %51 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %10
	%53 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 0
	store i64 %50, i64* %53
	%54 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 1
	store i64 %52, i64* %54
	%55 = load {i64, i64}, {i64, i64}* %10, align 8
	ret {i64, i64} %55

if.done-10:
	; AssignStmt
	%56 = load i32, i32* %3, align 4
	%57 = sext i32 %56 to i64
	%58 = load i64, i64* %4, align 8
	%59 = add i64 %58, %57
	store i64 %59, i64* %4
	br label %for.loop-3

for.done-11:
	; ReturnStmt
	%60 = load i64, i64* %4, align 8
	%61 = bitcast i64 %60 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %11
	%62 = getelementptr inbounds {i64, i64}, {i64, i64}* %11, i64 0, i32 0
	store i64 %61, i64* %62
	%63 = getelementptr inbounds {i64, i64}, {i64, i64}* %11, i64 0, i32 1
	store i64 0, i64* %63
	%64 = load {i64, i64}, {i64, i64}* %11, align 8
	ret {i64, i64} %64
}

define {i64, i64} @os_windows-29.read(i64 %fd, {i8*, i64, i64} %data) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {i8*, i64, i64}, align 8
	%2 = alloca {i64, i64}, align 8
	%3 = alloca i32, align 4
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i32, align 4
	%8 = alloca i32, align 4
	%9 = alloca i32, align 4
	%10 = alloca {i64, i64}, align 8
	%11 = alloca {i64, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %1
		store {i8*, i64, i64} %data, {i8*, i64, i64}* %1
	; IfStmt
	%12 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%13 = extractvalue {i8*, i64, i64} %12, 1
	%14 = icmp eq i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %2
	%15 = getelementptr inbounds {i64, i64}, {i64, i64}* %2, i64 0, i32 0
	store i64 0, i64* %15
	%16 = getelementptr inbounds {i64, i64}, {i64, i64}* %2, i64 0, i32 1
	store i64 0, i64* %16
	%17 = load {i64, i64}, {i64, i64}* %2, align 8
	ret {i64, i64} %17

if.done-2:
	; single_read_length
	store i32 zeroinitializer, i32* %3
		; total_read
	store i64 zeroinitializer, i64* %4
		; length
	store i64 zeroinitializer, i64* %5
		%18 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%19 = extractvalue {i8*, i64, i64} %18, 1
	%20 = bitcast i64 %19 to i64
	store i64 %20, i64* %5
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%21 = load i64, i64* %4, align 8
	%22 = load i64, i64* %5, align 8
	%23 = icmp slt i64 %21, %22
	br i1 %23, label %for.body-4, label %for.done-11

for.body-4:
	; remaining
	store i64 zeroinitializer, i64* %6
		%24 = load i64, i64* %5, align 8
	%25 = load i64, i64* %4, align 8
	%26 = sub i64 %24, %25
	store i64 %26, i64* %6
	; to_read
	store i32 zeroinitializer, i32* %7
		; IfStmt
	%27 = load i64, i64* %6, align 8
	%28 = icmp sle i64 %27, 4294967295
	br i1 %28, label %if.then-5, label %if.else-6

if.then-5:
	; AssignStmt
	%29 = load i64, i64* %6, align 8
	%30 = trunc i64 %29 to i32
	store i32 %30, i32* %7
	br label %if.done-7

if.else-6:
	; AssignStmt
	store i32 4294967295, i32* %7
	br label %if.done-7

if.done-7:
	; e
	store i32 zeroinitializer, i32* %8
		; SelectorExpr
	%31 = load i64, i64* %0, align 8
	%32 = inttoptr i64 %31 to %..rawptr
	; IndexExpr
	%33 = load {i8*, i64, i64}, {i8*, i64, i64}* %1, align 8
	%34 = extractvalue {i8*, i64, i64} %33, 0
	%35 = extractvalue {i8*, i64, i64} %33, 1
	%36 = load i64, i64* %4, align 8
	%37 = bitcast i64 %36 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$587, i64 0, i32 0), i64 28}, i64 158, i64 47, i64 %37, i64 %35)
	%38 = getelementptr inbounds i8, i8* %34, i64 %37
	%39 = getelementptr inbounds i8, i8* %38, i64 0
	%40 = load i32, i32* %7, align 4
	%41 = getelementptr inbounds i32, i32* %3, i64 0
	%42 = bitcast i8* %39 to %..rawptr
	%43 = call ccc i32 @ReadFile(%..rawptr %32, %..rawptr %42, i32 %40, i32* %41, %..rawptr zeroinitializer)
	store i32 %43, i32* %8
	; IfStmt
	%44 = load i32, i32* %3, align 4
	%45 = icmp sle i32 %44, 0
	br i1 %45, label %if.then-9, label %cmp.or-8

cmp.or-8:
	%46 = load i32, i32* %8, align 4
	%47 = icmp eq i32 %46, 0
	br i1 %47, label %if.then-9, label %if.done-10

if.then-9:
	; err
	store i32 zeroinitializer, i32* %9
		; SelectorExpr
	%48 = call ccc i32 @GetLastError()
	store i32 %48, i32* %9
	; ReturnStmt
	%49 = load i64, i64* %4, align 8
	%50 = bitcast i64 %49 to i64
	%51 = load i32, i32* %8, align 4
	%52 = sext i32 %51 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %10
	%53 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 0
	store i64 %50, i64* %53
	%54 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 1
	store i64 %52, i64* %54
	%55 = load {i64, i64}, {i64, i64}* %10, align 8
	ret {i64, i64} %55

if.done-10:
	; AssignStmt
	%56 = load i32, i32* %3, align 4
	%57 = sext i32 %56 to i64
	%58 = load i64, i64* %4, align 8
	%59 = add i64 %58, %57
	store i64 %59, i64* %4
	br label %for.loop-3

for.done-11:
	; ReturnStmt
	%60 = load i64, i64* %4, align 8
	%61 = bitcast i64 %60 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %11
	%62 = getelementptr inbounds {i64, i64}, {i64, i64}* %11, i64 0, i32 0
	store i64 %61, i64* %62
	%63 = getelementptr inbounds {i64, i64}, {i64, i64}* %11, i64 0, i32 1
	store i64 0, i64* %63
	%64 = load {i64, i64}, {i64, i64}* %11, align 8
	ret {i64, i64} %64
}

define {i64, i64} @os_windows-29.file_size(i64 %fd) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca {i64, i64}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %fd, i64* %0
	; length
	store i64 zeroinitializer, i64* %1
		; err
	store i64 zeroinitializer, i64* %2
		; IfStmt
	; SelectorExpr
	%4 = load i64, i64* %0, align 8
	%5 = inttoptr i64 %4 to %..rawptr
	%6 = getelementptr inbounds i64, i64* %1, i64 0
	%7 = call ccc i32 @GetFileSizeEx(%..rawptr %5, i64* %6)
	%8 = icmp eq i32 %7, 0
	br i1 %8, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%9 = call ccc i32 @GetLastError()
	%10 = sext i32 %9 to i64
	store i64 %10, i64* %2
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%11 = load i64, i64* %1, align 8
	%12 = load i64, i64* %2, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %3
	%13 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 0
	store i64 %11, i64* %13
	%14 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 1
	store i64 %12, i64* %14
	%15 = load {i64, i64}, {i64, i64}* %3, align 8
	ret {i64, i64} %15
}

define i64 @os_windows-29.get_std_handle(i64 %h) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..rawptr, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %h, i64* %0
	; fd
	store %..rawptr zeroinitializer, %..rawptr* %1
		; SelectorExpr
	%2 = load i64, i64* %0, align 8
	%3 = trunc i64 %2 to i32
	%4 = call ccc %..rawptr @GetStdHandle(i32 %3)
	store %..rawptr %4, %..rawptr* %1
	; SelectorExpr
	%5 = load %..rawptr, %..rawptr* %1, align 8
	%6 = call ccc i32 @SetHandleInformation(%..rawptr %5, i32 1, i32 0)
	; ReturnStmt
	%7 = load %..rawptr, %..rawptr* %1, align 8
	%8 = ptrtoint %..rawptr %7 to i64
	ret i64 %8
}

define %..rawptr @os_windows-29.heap_alloc(i64 %size) {
decls-0:
	%0 = alloca i64, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %size, i64* %0
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%1 = call ccc %..rawptr @GetProcessHeap()
	%2 = load i64, i64* %0, align 8
	%3 = call ccc %..rawptr @HeapAlloc(%..rawptr %1, i32 8, i64 %2)
	ret %..rawptr %3
}

define %..rawptr @os_windows-29.heap_resize(%..rawptr %ptr, i64 %new_size) {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	store i64 zeroinitializer, i64* %1
		store i64 %new_size, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp eq i64 %2, 0
	br i1 %3, label %if.then-1, label %if.done-2

if.then-1:
	%4 = load %..rawptr, %..rawptr* %0, align 8
	call void @os_windows-29.heap_free(%..rawptr %4)
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-2:
	; IfStmt
	%5 = load %..rawptr, %..rawptr* %0, align 8
	%6 = icmp eq %..rawptr %5, zeroinitializer
	br i1 %6, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%7 = load i64, i64* %1, align 8
	%8 = call %..rawptr @os_windows-29.heap_alloc(i64 %7)
	ret %..rawptr %8

if.done-4:
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%9 = call ccc %..rawptr @GetProcessHeap()
	%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = load i64, i64* %1, align 8
	%12 = call ccc %..rawptr @HeapReAlloc(%..rawptr %9, i32 8, %..rawptr %10, i64 %11)
	ret %..rawptr %12
}

define void @os_windows-29.heap_free(%..rawptr %ptr) {
decls-0:
	%0 = alloca %..rawptr, align 8
	store %..rawptr zeroinitializer, %..rawptr* %0
		store %..rawptr %ptr, %..rawptr* %0
	; IfStmt
	%1 = load %..rawptr, %..rawptr* %0, align 8
	%2 = icmp eq %..rawptr %1, zeroinitializer
	br i1 %2, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%3 = call ccc %..rawptr @GetProcessHeap()
	%4 = load %..rawptr, %..rawptr* %0, align 8
	%5 = call ccc i32 @HeapFree(%..rawptr %3, i32 0, %..rawptr %4)
	ret void
}

define i64 @os_windows-29.current_thread_id() {
decls-0:
	; ReturnStmt
	; SelectorExpr
	%0 = call ccc i32 @GetCurrentThreadId()
	%1 = zext i32 %0 to i64
	ret i64 %1
}

define i1 @types-33.is_string(%Type_Info* %info) {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca {%Type_Info.String*, i1}, align 8
	store %Type_Info* zeroinitializer, %Type_Info** %0
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%3 = load %Type_Info*, %Type_Info** %0, align 8
	%4 = icmp eq %Type_Info* %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; ok
	store i1 zeroinitializer, i1* %1
		%5 = load %Type_Info*, %Type_Info** %0, align 8
	%6 = call %Type_Info* @type_info_base(%Type_Info* %5)
	; cast - union_cast
	store {%Type_Info.String*, i1} zeroinitializer, {%Type_Info.String*, i1}* %2
	%7 = getelementptr inbounds %Type_Info, %Type_Info* %6, i64 0, i32 4 ; UnionTagPtr
	%8 = load i64, i64* %7, align 8
	%9 = icmp eq i64 %8, 6
	br i1 %9, label %union_cast.ok-3, label %union_cast.end-4

union_cast.ok-3:
	%10 = getelementptr inbounds {%Type_Info.String*, i1}, {%Type_Info.String*, i1}* %2, i64 0, i32 0
	%11 = getelementptr inbounds {%Type_Info.String*, i1}, {%Type_Info.String*, i1}* %2, i64 0, i32 1
	%12 = bitcast %Type_Info* %6 to %Type_Info.String*
	store %Type_Info.String* %12, %Type_Info.String** %10
	store i1 true, i1* %11
	br label %union_cast.end-4

union_cast.end-4:
	%13 = load {%Type_Info.String*, i1}, {%Type_Info.String*, i1}* %2, align 8
	%14 = extractvalue {%Type_Info.String*, i1} %13, 0
	%15 = extractvalue {%Type_Info.String*, i1} %13, 1
	store i1 %15, i1* %1
	; ReturnStmt
	%16 = load i1, i1* %1, align 1
	ret i1 %16
}

define %..string @strconv-34.append_float({i8*, i64, i64} %buf, double %f, i8 %fmt, i64 %prec, i64 %bit_size) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca double, align 8
	%2 = alloca i8, align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %0
	store double zeroinitializer, double* %1
		store double %f, double* %1
	store i8 zeroinitializer, i8* %2
		store i8 %fmt, i8* %2
	store i64 zeroinitializer, i64* %3
		store i64 %prec, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %bit_size, i64* %4
	; ReturnStmt
	%6 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%7 = load double, double* %1, align 8
	%8 = load i8, i8* %2, align 1
	%9 = load i64, i64* %3, align 8
	%10 = load i64, i64* %4, align 8
	%11 = call {i8*, i64, i64} @strconv-34.generic_ftoa({i8*, i64, i64} %6, double %7, i8 %8, i64 %9, i64 %10)
	%12 = extractvalue {i8*, i64, i64} %11, 0
	%13 = extractvalue {i8*, i64, i64} %11, 1
	store %..string zeroinitializer, %..string* %5
	%14 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %12, i8** %14
	%15 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %13, i64* %15
	%16 = load %..string, %..string* %5, align 8
	ret %..string %16
}

define {i8*, i64, i64} @strconv-34.generic_ftoa({i8*, i64, i64} %buf, double %val, i8 %fmt, i64 %prec, i64 %bit_size) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca double, align 8
	%2 = alloca i8, align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca %strconv-34.Float_Info*, align 8
	%7 = alloca i1, align 1
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca %..string, align 8
	%11 = alloca i8*, align 8
	%12 = alloca {i8*, i64, i64}, align 8
	%13 = alloca %decimal-42.Decimal, align 8
	%14 = alloca %decimal-42.Decimal*, align 8
	%15 = alloca %strconv-34.Decimal_Slice, align 8
	%16 = alloca i1, align 1
	%17 = alloca %strconv-34.Decimal_Slice, align 8
	%18 = alloca {i8*, i64, i64}, align 8
	%19 = alloca %strconv-34.Decimal_Slice, align 8
	%20 = alloca {i8*, i64, i64}, align 8
	%21 = alloca %strconv-34.Decimal_Slice, align 16
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %0
	store double zeroinitializer, double* %1
		store double %val, double* %1
	store i8 zeroinitializer, i8* %2
		store i8 %fmt, i8* %2
	store i64 zeroinitializer, i64* %3
		store i64 %prec, i64* %3
	store i64 zeroinitializer, i64* %4
		store i64 %bit_size, i64* %4
	; bits
	store i64 zeroinitializer, i64* %5
		; flt
	store %strconv-34.Float_Info* zeroinitializer, %strconv-34.Float_Info** %6
		; MatchStmt
	%22 = load i64, i64* %4, align 8
	%23 = icmp eq i64 %22, 32
	br i1 %23, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%24 = icmp eq i64 %22, 64
	br i1 %24, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	; AssignStmt
	%25 = load double, double* %1, align 8
	%26 = fptrunc double %25 to float
	%27 = bitcast float %26 to i32
	%28 = zext i32 %27 to i64
	store i64 %28, i64* %5
	; AssignStmt
	%29 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* @strconv-34.f32_info, i64 0
	store %strconv-34.Float_Info* %29, %strconv-34.Float_Info** %6
	br label %match.done-5

match.case.next-3:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$588, i64 0, i32 0), i64 25}, i64 112, i64 9, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$589, i64 0, i32 0), i64 25})
	br label %match.done-5

match.fall.body-4:
	; AssignStmt
	%30 = load double, double* %1, align 8
	%31 = bitcast double %30 to i64
	store i64 %31, i64* %5
	; AssignStmt
	%32 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* @strconv-34.f64_info, i64 0
	store %strconv-34.Float_Info* %32, %strconv-34.Float_Info** %6
	br label %match.done-5

match.done-5:
	; neg
	store i1 zeroinitializer, i1* %7
		%33 = load i64, i64* %5, align 8
	; SelectorExpr
	%34 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%35 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %34, i64 0
	%36 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %35, i64 0, i32 1
	%37 = load i64, i64* %36, align 8
	; SelectorExpr
	%38 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%39 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %38, i64 0
	%40 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %39, i64 0, i32 0
	%41 = load i64, i64* %40, align 8
	%42 = add i64 %37, %41
	%43 = bitcast i64 %42 to i64
	%44 = lshr i64 %33, %43
	%45 = icmp ne i64 %44, 0
	store i1 %45, i1* %7
	; exp
	store i64 zeroinitializer, i64* %8
		%46 = load i64, i64* %5, align 8
	; SelectorExpr
	%47 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%48 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %47, i64 0
	%49 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %48, i64 0, i32 0
	%50 = load i64, i64* %49, align 8
	%51 = bitcast i64 %50 to i64
	%52 = lshr i64 %46, %51
	%53 = bitcast i64 %52 to i64
	; SelectorExpr
	%54 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%55 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %54, i64 0
	%56 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %55, i64 0, i32 1
	%57 = load i64, i64* %56, align 8
	%58 = bitcast i64 %57 to i64
	%59 = shl i64 1, %58
	%60 = sub i64 %59, 1
	%61 = and i64 %53, %60
	store i64 %61, i64* %8
	; mant
	store i64 zeroinitializer, i64* %9
		%62 = load i64, i64* %5, align 8
	; SelectorExpr
	%63 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%64 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %63, i64 0
	%65 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %64, i64 0, i32 0
	%66 = load i64, i64* %65, align 8
	%67 = bitcast i64 %66 to i64
	%68 = shl i64 1, %67
	%69 = sub i64 %68, 1
	%70 = and i64 %62, %69
	store i64 %70, i64* %9
	; MatchStmt
	%71 = load i64, i64* %8, align 8
	; SelectorExpr
	%72 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%73 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %72, i64 0
	%74 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %73, i64 0, i32 1
	%75 = load i64, i64* %74, align 8
	%76 = bitcast i64 %75 to i64
	%77 = shl i64 1, %76
	%78 = sub i64 %77, 1
	%79 = icmp eq i64 %71, %78
	br i1 %79, label %match.case.body-7, label %match.case.next-6

match.case.next-6:
	%80 = icmp eq i64 %71, 0
	br i1 %80, label %match.fall.body-15, label %match.case.next-14

match.case.body-7:
	; s
	store %..string zeroinitializer, %..string* %10
		; IfStmt
	%81 = load i64, i64* %9, align 8
	%82 = icmp ne i64 %81, 0
	br i1 %82, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$58a, i64 0, i32 0), i64 3}, %..string* %10
	br label %if.done-13

if.else-9:
	; IfStmt
	%83 = load i1, i1* %7, align 1
	br i1 %83, label %if.then-10, label %if.else-11

if.then-10:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$58b, i64 0, i32 0), i64 4}, %..string* %10
	br label %if.done-12

if.else-11:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$58c, i64 0, i32 0), i64 4}, %..string* %10
	br label %if.done-12

if.done-12:
	br label %if.done-13

if.done-13:
	; append
	%84 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%85 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%86 = load %..string, %..string* %10, align 8
	%87 = extractvalue %..string %86, 0
	store i8* zeroinitializer, i8** %11
	store i8* %87, i8** %11
	%88 = extractvalue %..string %86, 1
	%89 = sub i64 %88, 0
	%90 = sub i64 %88, 0
	%91 = load i8*, i8** %11, align 8
	%92 = getelementptr inbounds i8, i8* %91, i64 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %12
	%93 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 0
	store i8* %92, i8** %93
	%94 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 1
	store i64 %89, i64* %94
	%95 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %12, i64 0, i32 2
	store i64 %90, i64* %95
	%96 = load {i8*, i64, i64}, {i8*, i64, i64}* %12, align 8
	%97 = extractvalue {i8*, i64, i64} %96, 0
	%98 = extractvalue {i8*, i64, i64} %96, 1
	%99 = bitcast i8* %97 to %..rawptr
	%100 = call i64 @__slice_append(%..rawptr %84, i64 1, i64 1, %..rawptr %99, i64 %98)
	; ReturnStmt
	%101 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %101

match.case.next-14:
	; AssignStmt
	; SelectorExpr
	%102 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%103 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %102, i64 0
	%104 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %103, i64 0, i32 0
	%105 = load i64, i64* %104, align 8
	%106 = bitcast i64 %105 to i64
	%107 = shl i64 1, %106
	%108 = load i64, i64* %9, align 8
	%109 = or i64 %108, %107
	store i64 %109, i64* %9
	br label %match.done-16

match.fall.body-15:
	%110 = load i64, i64* %8, align 8
	%111 = add i64 %110, 1
	store i64 %111, i64* %8
	br label %match.done-16

match.done-16:
	; AssignStmt
	; SelectorExpr
	%112 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%113 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %112, i64 0
	%114 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %113, i64 0, i32 2
	%115 = load i64, i64* %114, align 8
	%116 = load i64, i64* %8, align 8
	%117 = add i64 %116, %115
	store i64 %117, i64* %8
	; d_
	store %decimal-42.Decimal zeroinitializer, %decimal-42.Decimal* %13
		; d
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %14
		%118 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %13, i64 0
	store %decimal-42.Decimal* %118, %decimal-42.Decimal** %14
	%119 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%120 = load i64, i64* %9, align 8
	call void @decimal-42.assign(%decimal-42.Decimal* %119, i64 %120)
	%121 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%122 = load i64, i64* %8, align 8
	; SelectorExpr
	%123 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	%124 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %123, i64 0
	%125 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %124, i64 0, i32 0
	%126 = load i64, i64* %125, align 8
	%127 = bitcast i64 %126 to i64
	%128 = sub i64 %122, %127
	call void @decimal-42.shift(%decimal-42.Decimal* %121, i64 %128)
	; digs
	store %strconv-34.Decimal_Slice zeroinitializer, %strconv-34.Decimal_Slice* %15
		; shortest
	store i1 zeroinitializer, i1* %16
		%129 = load i64, i64* %3, align 8
	%130 = icmp slt i64 %129, 0
	store i1 %130, i1* %16
	; IfStmt
	%131 = load i1, i1* %16, align 1
	br i1 %131, label %if.then-17, label %if.else-28

if.then-17:
	%132 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%133 = load i64, i64* %9, align 8
	%134 = load i64, i64* %8, align 8
	%135 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %6, align 8
	call void @strconv-34.round_shortest(%decimal-42.Decimal* %132, i64 %133, i64 %134, %strconv-34.Float_Info* %135)
	; AssignStmt
	; CompoundLit
	store %strconv-34.Decimal_Slice zeroinitializer, %strconv-34.Decimal_Slice* %17
	store %strconv-34.Decimal_Slice {{i8*, i64, i64} zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i1 zeroinitializer}, %strconv-34.Decimal_Slice* %17
	; SliceExpr
	; SelectorExpr
	%136 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%137 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %136, i64 0
	%138 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %137, i64 0, i32 2
	%139 = load [384 x i8], [384 x i8]* %138, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$58d, i64 0, i32 0), i64 25}, i64 149, i64 41, i64 0, i64 384, i64 384)
	%140 = getelementptr inbounds [384 x i8], [384 x i8]* %138, i64 0, i32 0
	%141 = getelementptr inbounds i8, i8* %140, i64 0
	%142 = sub i64 384, 0
	%143 = sub i64 384, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %18
	%144 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %18, i64 0, i32 0
	store i8* %141, i8** %144
	%145 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %18, i64 0, i32 1
	store i64 %142, i64* %145
	%146 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %18, i64 0, i32 2
	store i64 %143, i64* %146
	%147 = load {i8*, i64, i64}, {i8*, i64, i64}* %18, align 8
	%148 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %17, i64 0, i32 0
	store {i8*, i64, i64} %147, {i8*, i64, i64}* %148
	; SelectorExpr
	%149 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%150 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %149, i64 0
	%151 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %150, i64 0, i32 0
	%152 = load i64, i64* %151, align 8
	%153 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %17, i64 0, i32 1
	store i64 %152, i64* %153
	; SelectorExpr
	%154 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%155 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %154, i64 0
	%156 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %155, i64 0, i32 1
	%157 = load i64, i64* %156, align 8
	%158 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %17, i64 0, i32 2
	store i64 %157, i64* %158
	%159 = load %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %17, align 8
	store %strconv-34.Decimal_Slice %159, %strconv-34.Decimal_Slice* %15
	; MatchStmt
	%160 = load i8, i8* %2, align 1
	%161 = icmp eq i8 %160, 101
	br i1 %161, label %match.case.body-20, label %match.case.next-18

match.case.next-18:
	%162 = icmp eq i8 %160, 69
	br i1 %162, label %match.case.body-20, label %match.case.next-19

match.case.next-19:
	%163 = icmp eq i8 %160, 102
	br i1 %163, label %match.fall.body-23, label %match.case.next-21

match.case.body-20:
	; AssignStmt
	; SelectorExpr
	%164 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %15, i64 0, i32 1
	%165 = load i64, i64* %164, align 8
	%166 = sub i64 %165, 1
	store i64 %166, i64* %3
	br label %match.done-27

match.case.next-21:
	%167 = icmp eq i8 %160, 70
	br i1 %167, label %match.fall.body-23, label %match.case.next-22

match.case.next-22:
	%168 = icmp eq i8 %160, 103
	br i1 %168, label %match.fall.body-26, label %match.case.next-24

match.fall.body-23:
	; AssignStmt
	; max
	; SelectorExpr
	%169 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %15, i64 0, i32 1
	%170 = load i64, i64* %169, align 8
	; SelectorExpr
	%171 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %15, i64 0, i32 2
	%172 = load i64, i64* %171, align 8
	%173 = sub i64 %170, %172
	%174 = icmp sgt i64 %173, 0
	%175 = select i1 %174, i64 %173, i64 0
	store i64 %175, i64* %3
	br label %match.done-27

match.case.next-24:
	%176 = icmp eq i8 %160, 71
	br i1 %176, label %match.fall.body-26, label %match.case.next-25

match.case.next-25:
	br label %match.done-27

match.fall.body-26:
	; AssignStmt
	; SelectorExpr
	%177 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %15, i64 0, i32 1
	%178 = load i64, i64* %177, align 8
	store i64 %178, i64* %3
	br label %match.done-27

match.done-27:
	br label %if.done-41

if.else-28:
	; MatchStmt
	%179 = load i8, i8* %2, align 1
	%180 = icmp eq i8 %179, 101
	br i1 %180, label %match.case.body-31, label %match.case.next-29

match.case.next-29:
	%181 = icmp eq i8 %179, 69
	br i1 %181, label %match.case.body-31, label %match.case.next-30

match.case.next-30:
	%182 = icmp eq i8 %179, 102
	br i1 %182, label %match.fall.body-34, label %match.case.next-32

match.case.body-31:
	%183 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%184 = load i64, i64* %3, align 8
	%185 = add i64 %184, 1
	call void @decimal-42.round(%decimal-42.Decimal* %183, i64 %185)
	br label %match.done-40

match.case.next-32:
	%186 = icmp eq i8 %179, 70
	br i1 %186, label %match.fall.body-34, label %match.case.next-33

match.case.next-33:
	%187 = icmp eq i8 %179, 103
	br i1 %187, label %match.fall.body-37, label %match.case.next-35

match.fall.body-34:
	%188 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	; SelectorExpr
	%189 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%190 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %189, i64 0
	%191 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %190, i64 0, i32 1
	%192 = load i64, i64* %191, align 8
	%193 = load i64, i64* %3, align 8
	%194 = add i64 %192, %193
	call void @decimal-42.round(%decimal-42.Decimal* %188, i64 %194)
	br label %match.done-40

match.case.next-35:
	%195 = icmp eq i8 %179, 71
	br i1 %195, label %match.fall.body-37, label %match.case.next-36

match.case.next-36:
	br label %match.done-40

match.fall.body-37:
	; IfStmt
	%196 = load i64, i64* %3, align 8
	%197 = icmp eq i64 %196, 0
	br i1 %197, label %if.then-38, label %if.done-39

if.then-38:
	; AssignStmt
	store i64 1, i64* %3
	br label %if.done-39

if.done-39:
	%198 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%199 = load i64, i64* %3, align 8
	call void @decimal-42.round(%decimal-42.Decimal* %198, i64 %199)
	br label %match.done-40

match.done-40:
	; AssignStmt
	; CompoundLit
	store %strconv-34.Decimal_Slice zeroinitializer, %strconv-34.Decimal_Slice* %19
	store %strconv-34.Decimal_Slice {{i8*, i64, i64} zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i1 zeroinitializer}, %strconv-34.Decimal_Slice* %19
	; SliceExpr
	; SelectorExpr
	%200 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%201 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %200, i64 0
	%202 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %201, i64 0, i32 2
	%203 = load [384 x i8], [384 x i8]* %202, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$58e, i64 0, i32 0), i64 25}, i64 166, i64 41, i64 0, i64 384, i64 384)
	%204 = getelementptr inbounds [384 x i8], [384 x i8]* %202, i64 0, i32 0
	%205 = getelementptr inbounds i8, i8* %204, i64 0
	%206 = sub i64 384, 0
	%207 = sub i64 384, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %20
	%208 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 0
	store i8* %205, i8** %208
	%209 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 1
	store i64 %206, i64* %209
	%210 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 2
	store i64 %207, i64* %210
	%211 = load {i8*, i64, i64}, {i8*, i64, i64}* %20, align 8
	%212 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %19, i64 0, i32 0
	store {i8*, i64, i64} %211, {i8*, i64, i64}* %212
	; SelectorExpr
	%213 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%214 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %213, i64 0
	%215 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %214, i64 0, i32 0
	%216 = load i64, i64* %215, align 8
	%217 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %19, i64 0, i32 1
	store i64 %216, i64* %217
	; SelectorExpr
	%218 = load %decimal-42.Decimal*, %decimal-42.Decimal** %14, align 8
	%219 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %218, i64 0
	%220 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %219, i64 0, i32 1
	%221 = load i64, i64* %220, align 8
	%222 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %19, i64 0, i32 2
	store i64 %221, i64* %222
	%223 = load %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %19, align 8
	store %strconv-34.Decimal_Slice %223, %strconv-34.Decimal_Slice* %15
	br label %if.done-41

if.done-41:
	; ReturnStmt
	%224 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%225 = load i1, i1* %16, align 1
	%226 = load i1, i1* %7, align 1
	%227 = load %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %15, align 8
	%228 = load i64, i64* %3, align 8
	%229 = load i8, i8* %2, align 1
	store %strconv-34.Decimal_Slice zeroinitializer, %strconv-34.Decimal_Slice* %21
	store %strconv-34.Decimal_Slice %227, %strconv-34.Decimal_Slice* %21
	%230 = call {i8*, i64, i64} @strconv-34.format_digits({i8*, i64, i64} %224, i1 %225, i1 %226, %strconv-34.Decimal_Slice* %21, i64 %228, i8 %229)
	ret {i8*, i64, i64} %230
}

define {i8*, i64, i64} @strconv-34.format_digits({i8*, i64, i64} %buf, i1 %shortest, i1 %neg, %strconv-34.Decimal_Slice* %digs, i64 %prec, i8 %fmt) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i1, align 1
	%2 = alloca i1, align 1
	%3 = alloca i64, align 8
	%4 = alloca i8, align 1
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca [1 x i8], align 1
	%7 = alloca i64, align 8
	%8 = alloca {i8*, i64, i64}, align 8
	%9 = alloca {i8*, i64, i64}, align 8
	%10 = alloca [1 x i8], align 1
	%11 = alloca {i8*, i64, i64}, align 8
	%12 = alloca [1 x i8], align 1
	%13 = alloca {i8*, i64, i64}, align 8
	%14 = alloca [1 x i8], align 1
	%15 = alloca i64, align 8
	%16 = alloca i64, align 8
	%17 = alloca i64, align 8
	%18 = alloca i8, align 1
	%19 = alloca i64, align 8
	%20 = alloca {i8*, i64, i64}, align 8
	%21 = alloca [1 x i8], align 1
	%22 = alloca [2 x i8], align 1
	%23 = alloca {i8*, i64, i64}, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %0
	store i1 zeroinitializer, i1* %1
		store i1 %shortest, i1* %1
	store i1 zeroinitializer, i1* %2
		store i1 %neg, i1* %2
	%24 = load %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, align 8
	store i64 zeroinitializer, i64* %3
		store i64 %prec, i64* %3
	store i8 zeroinitializer, i8* %4
		store i8 %fmt, i8* %4
	; MatchStmt
	%25 = load i8, i8* %4, align 1
	%26 = icmp eq i8 %25, 102
	br i1 %26, label %match.case.body-3, label %match.case.next-1

match.case.next-1:
	%27 = icmp eq i8 %25, 70
	br i1 %27, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%28 = icmp eq i8 %25, 101
	br i1 %28, label %match.fall.body-23, label %match.case.next-21

match.case.body-3:
	; append
	%29 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%30 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; TernaryExpr
	%31 = load i1, i1* %2, align 1
	br i1 %31, label %if.then-4, label %if.else-5

if.then-4:
	br label %if.done-6

if.else-5:
	br label %if.done-6

if.done-6:
	%32 = phi i8 [ 45, %if.then-4 ], [ 43, %if.else-5 ]
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
	store [1 x i8] zeroinitializer, [1 x i8]* %6
	%33 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i32 0
	store i8 %32, i8* %33
	%34 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i32 0
	%35 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 0
	store i8* %34, i8** %35
	%36 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 1
	store i64 1, i64* %36
	%37 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %5, i64 0, i32 2
	store i64 1, i64* %37
	%38 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%39 = extractvalue {i8*, i64, i64} %38, 0
	%40 = extractvalue {i8*, i64, i64} %38, 1
	%41 = bitcast i8* %39 to %..rawptr
	%42 = call i64 @__slice_append(%..rawptr %29, i64 1, i64 1, %..rawptr %41, i64 %40)
	; IfStmt
	; SelectorExpr
	%43 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 2
	%44 = load i64, i64* %43, align 8
	%45 = icmp sgt i64 %44, 0
	br i1 %45, label %if.then-7, label %if.else-11

if.then-7:
	; m
	store i64 zeroinitializer, i64* %7
		; min
	; SelectorExpr
	%46 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 1
	%47 = load i64, i64* %46, align 8
	; SelectorExpr
	%48 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 2
	%49 = load i64, i64* %48, align 8
	%50 = icmp slt i64 %47, %49
	%51 = select i1 %50, i64 %47, i64 %49
	store i64 %51, i64* %7
	; append
	%52 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%53 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; SliceExpr
	%54 = load i64, i64* %7, align 8
	; SelectorExpr
	%55 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 0
	%56 = load {i8*, i64, i64}, {i8*, i64, i64}* %55, align 8
	%57 = extractvalue {i8*, i64, i64} %56, 2
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$58f, i64 0, i32 0), i64 25}, i64 181, i64 29, i64 0, i64 %54, i64 %57)
	%58 = extractvalue {i8*, i64, i64} %56, 0
	%59 = getelementptr inbounds i8, i8* %58, i64 0
	%60 = sub i64 %54, 0
	%61 = sub i64 %57, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %8
	%62 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 0
	store i8* %59, i8** %62
	%63 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 1
	store i64 %60, i64* %63
	%64 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %8, i64 0, i32 2
	store i64 %61, i64* %64
	%65 = load {i8*, i64, i64}, {i8*, i64, i64}* %8, align 8
	%66 = extractvalue {i8*, i64, i64} %65, 0
	%67 = extractvalue {i8*, i64, i64} %65, 1
	%68 = bitcast i8* %66 to %..rawptr
	%69 = call i64 @__slice_append(%..rawptr %52, i64 1, i64 1, %..rawptr %68, i64 %67)
	; ForStmt
	br label %for.loop-8

for.loop-8:
	%70 = load i64, i64* %7, align 8
	; SelectorExpr
	%71 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 2
	%72 = load i64, i64* %71, align 8
	%73 = icmp slt i64 %70, %72
	br i1 %73, label %for.body-9, label %for.done-10

for.body-9:
	; append
	%74 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%75 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %9
	store [1 x i8] zeroinitializer, [1 x i8]* %10
	%76 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i64 0, i32 0
	store i8 48, i8* %76
	%77 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i64 0, i32 0
	%78 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 0
	store i8* %77, i8** %78
	%79 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 1
	store i64 1, i64* %79
	%80 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %9, i64 0, i32 2
	store i64 1, i64* %80
	%81 = load {i8*, i64, i64}, {i8*, i64, i64}* %9, align 8
	%82 = extractvalue {i8*, i64, i64} %81, 0
	%83 = extractvalue {i8*, i64, i64} %81, 1
	%84 = bitcast i8* %82 to %..rawptr
	%85 = call i64 @__slice_append(%..rawptr %74, i64 1, i64 1, %..rawptr %84, i64 %83)
	%86 = load i64, i64* %7, align 8
	%87 = add i64 %86, 1
	store i64 %87, i64* %7
	br label %for.loop-8

for.done-10:
	br label %if.done-12

if.else-11:
	; append
	%88 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%89 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %11
	store [1 x i8] zeroinitializer, [1 x i8]* %12
	%90 = getelementptr inbounds [1 x i8], [1 x i8]* %12, i64 0, i32 0
	store i8 48, i8* %90
	%91 = getelementptr inbounds [1 x i8], [1 x i8]* %12, i64 0, i32 0
	%92 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 0
	store i8* %91, i8** %92
	%93 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 1
	store i64 1, i64* %93
	%94 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %11, i64 0, i32 2
	store i64 1, i64* %94
	%95 = load {i8*, i64, i64}, {i8*, i64, i64}* %11, align 8
	%96 = extractvalue {i8*, i64, i64} %95, 0
	%97 = extractvalue {i8*, i64, i64} %95, 1
	%98 = bitcast i8* %96 to %..rawptr
	%99 = call i64 @__slice_append(%..rawptr %88, i64 1, i64 1, %..rawptr %98, i64 %97)
	br label %if.done-12

if.done-12:
	; IfStmt
	%100 = load i64, i64* %3, align 8
	%101 = icmp sgt i64 %100, 0
	br i1 %101, label %if.then-13, label %if.done-20

if.then-13:
	; append
	%102 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%103 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %13
	store [1 x i8] zeroinitializer, [1 x i8]* %14
	%104 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i64 0, i32 0
	store i8 46, i8* %104
	%105 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i64 0, i32 0
	%106 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 0
	store i8* %105, i8** %106
	%107 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 1
	store i64 1, i64* %107
	%108 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 2
	store i64 1, i64* %108
	%109 = load {i8*, i64, i64}, {i8*, i64, i64}* %13, align 8
	%110 = extractvalue {i8*, i64, i64} %109, 0
	%111 = extractvalue {i8*, i64, i64} %109, 1
	%112 = bitcast i8* %110 to %..rawptr
	%113 = call i64 @__slice_append(%..rawptr %102, i64 1, i64 1, %..rawptr %112, i64 %111)
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %15
		store i64 zeroinitializer, i64* %16
	store i64 0, i64* %16
	store i64 zeroinitializer, i64* %17
	store i64 0, i64* %17
	br label %for.interval.loop-14

for.interval.loop-14:
	%114 = load i64, i64* %3, align 8
	%115 = load i64, i64* %16, align 8
	%116 = icmp sle i64 %115, %114
	br i1 %116, label %for.interval.body-15, label %for.interval.done-19

for.interval.body-15:
	%117 = load i64, i64* %16, align 8
	%118 = load i64, i64* %17, align 8
	%119 = load i64, i64* %16, align 8
	%120 = add i64 %119, 1
	store i64 %120, i64* %16
	%121 = load i64, i64* %17, align 8
	%122 = add i64 %121, 1
	store i64 %122, i64* %17
	store i64 %117, i64* %15
	; c
	store i8 zeroinitializer, i8* %18
		store i8 48, i8* %18
	; IfStmt
	; j
	store i64 zeroinitializer, i64* %19
		; SelectorExpr
	%123 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 2
	%124 = load i64, i64* %123, align 8
	%125 = load i64, i64* %15, align 8
	%126 = add i64 %124, %125
	store i64 %126, i64* %19
	%127 = load i64, i64* %19, align 8
	%128 = icmp sle i64 0, %127
	br i1 %128, label %cmp.and-16, label %if.done-18

cmp.and-16:
	%129 = load i64, i64* %19, align 8
	; SelectorExpr
	%130 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 1
	%131 = load i64, i64* %130, align 8
	%132 = icmp slt i64 %129, %131
	br i1 %132, label %if.then-17, label %if.done-18

if.then-17:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%133 = getelementptr inbounds %strconv-34.Decimal_Slice, %strconv-34.Decimal_Slice* %digs, i64 0, i32 0
	%134 = load {i8*, i64, i64}, {i8*, i64, i64}* %133, align 8
	%135 = extractvalue {i8*, i64, i64} %134, 0
	%136 = extractvalue {i8*, i64, i64} %134, 1
	%137 = load i64, i64* %19, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$590, i64 0, i32 0), i64 25}, i64 196, i64 22, i64 %137, i64 %136)
	%138 = getelementptr inbounds i8, i8* %135, i64 %137
	%139 = load i8, i8* %138, align 1
	store i8 %139, i8* %18
	br label %if.done-18

if.done-18:
	; append
	%140 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%141 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%142 = load i8, i8* %18, align 1
	; variadic call argument generation
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %20
	store [1 x i8] zeroinitializer, [1 x i8]* %21
	%143 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i64 0, i32 0
	store i8 %142, i8* %143
	%144 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i64 0, i32 0
	%145 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 0
	store i8* %144, i8** %145
	%146 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 1
	store i64 1, i64* %146
	%147 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %20, i64 0, i32 2
	store i64 1, i64* %147
	%148 = load {i8*, i64, i64}, {i8*, i64, i64}* %20, align 8
	%149 = extractvalue {i8*, i64, i64} %148, 0
	%150 = extractvalue {i8*, i64, i64} %148, 1
	%151 = bitcast i8* %149 to %..rawptr
	%152 = call i64 @__slice_append(%..rawptr %140, i64 1, i64 1, %..rawptr %151, i64 %150)
	br label %for.interval.loop-14

for.interval.done-19:
	br label %if.done-20

if.done-20:
	; ReturnStmt
	%153 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %153

match.case.next-21:
	%154 = icmp eq i8 %25, 69
	br i1 %154, label %match.fall.body-23, label %match.case.next-22

match.case.next-22:
	%155 = icmp eq i8 %25, 103
	br i1 %155, label %match.fall.body-26, label %match.case.next-24

match.fall.body-23:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$591, i64 0, i32 0), i64 25}, i64 205, i64 9, %..string {i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__str$592, i64 0, i32 0), i64 48})
	; ReturnStmt
	%156 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %156

match.case.next-24:
	%157 = icmp eq i8 %25, 71
	br i1 %157, label %match.fall.body-26, label %match.case.next-25

match.case.next-25:
	br label %match.done-27

match.fall.body-26:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$593, i64 0, i32 0), i64 25}, i64 209, i64 9, %..string {i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__str$594, i64 0, i32 0), i64 48})
	; ReturnStmt
	%158 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %158

match.done-27:
	; c
	store [2 x i8] zeroinitializer, [2 x i8]* %22
		; AssignStmt
	; IndexExpr
	%159 = getelementptr inbounds [2 x i8], [2 x i8]* %22, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$595, i64 0, i32 0), i64 25}, i64 214, i64 4, i64 0, i64 2)
	store i8 37, i8* %159
	; AssignStmt
	; IndexExpr
	%160 = getelementptr inbounds [2 x i8], [2 x i8]* %22, i64 0, i32 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$596, i64 0, i32 0), i64 25}, i64 215, i64 4, i64 1, i64 2)
	%161 = load i8, i8* %4, align 1
	store i8 %161, i8* %160
	; append
	%162 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%163 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; SliceExpr
	%164 = load [2 x i8], [2 x i8]* %22, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$597, i64 0, i32 0), i64 25}, i64 216, i64 17, i64 0, i64 2, i64 2)
	%165 = getelementptr inbounds [2 x i8], [2 x i8]* %22, i64 0, i32 0
	%166 = getelementptr inbounds i8, i8* %165, i64 0
	%167 = sub i64 2, 0
	%168 = sub i64 2, 0
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %23
	%169 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %23, i64 0, i32 0
	store i8* %166, i8** %169
	%170 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %23, i64 0, i32 1
	store i64 %167, i64* %170
	%171 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %23, i64 0, i32 2
	store i64 %168, i64* %171
	%172 = load {i8*, i64, i64}, {i8*, i64, i64}* %23, align 8
	%173 = extractvalue {i8*, i64, i64} %172, 0
	%174 = extractvalue {i8*, i64, i64} %172, 1
	%175 = bitcast i8* %173 to %..rawptr
	%176 = call i64 @__slice_append(%..rawptr %162, i64 1, i64 1, %..rawptr %175, i64 %174)
	; ReturnStmt
	%177 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	ret {i8*, i64, i64} %177
}

define void @strconv-34.round_shortest(%decimal-42.Decimal* %d, i64 %mant, i64 %exp, %strconv-34.Float_Info* %flt) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %strconv-34.Float_Info*, align 8
	%4 = alloca i64, align 8
	%5 = alloca %decimal-42.Decimal, align 8
	%6 = alloca %decimal-42.Decimal*, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca %decimal-42.Decimal, align 8
	%10 = alloca %decimal-42.Decimal*, align 8
	%11 = alloca i1, align 1
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i8, align 1
	%16 = alloca i8, align 1
	%17 = alloca i8, align 1
	%18 = alloca i1, align 1
	%19 = alloca i1, align 1
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %d, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %mant, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %exp, i64* %2
	store %strconv-34.Float_Info* zeroinitializer, %strconv-34.Float_Info** %3
		store %strconv-34.Float_Info* %flt, %strconv-34.Float_Info** %3
	; IfStmt
	%20 = load i64, i64* %1, align 8
	%21 = icmp eq i64 %20, 0
	br i1 %21, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ReturnStmt
	ret void

if.done-2:
	; minexp
	store i64 zeroinitializer, i64* %4
		; SelectorExpr
	%25 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %3, align 8
	%26 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %25, i64 0
	%27 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %26, i64 0, i32 2
	%28 = load i64, i64* %27, align 8
	%29 = add i64 %28, 1
	store i64 %29, i64* %4
	; IfStmt
	%30 = load i64, i64* %2, align 8
	%31 = load i64, i64* %4, align 8
	%32 = icmp sgt i64 %30, %31
	br i1 %32, label %cmp.and-3, label %if.done-5

cmp.and-3:
	; SelectorExpr
	%33 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %34, i64 0, i32 1
	%36 = load i64, i64* %35, align 8
	; SelectorExpr
	%37 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%38 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %37, i64 0
	%39 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %38, i64 0, i32 0
	%40 = load i64, i64* %39, align 8
	%41 = sub i64 %36, %40
	%42 = mul i64 332, %41
	%43 = load i64, i64* %2, align 8
	; SelectorExpr
	%44 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %3, align 8
	%45 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %44, i64 0
	%46 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %45, i64 0, i32 0
	%47 = load i64, i64* %46, align 8
	%48 = bitcast i64 %47 to i64
	%49 = sub i64 %43, %48
	%50 = mul i64 100, %49
	%51 = icmp sge i64 %42, %50
	br i1 %51, label %if.then-4, label %if.done-5

if.then-4:
	; ReturnStmt
	ret void

if.done-5:
	; upper_
	store %decimal-42.Decimal zeroinitializer, %decimal-42.Decimal* %5
		; upper
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %6
		%52 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %5, i64 0
	store %decimal-42.Decimal* %52, %decimal-42.Decimal** %6
	%53 = load %decimal-42.Decimal*, %decimal-42.Decimal** %6, align 8
	%54 = load i64, i64* %1, align 8
	%55 = mul i64 2, %54
	%56 = sub i64 %55, 1
	call void @decimal-42.assign(%decimal-42.Decimal* %53, i64 %56)
	%57 = load %decimal-42.Decimal*, %decimal-42.Decimal** %6, align 8
	%58 = load i64, i64* %2, align 8
	; SelectorExpr
	%59 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %3, align 8
	%60 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %59, i64 0
	%61 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %60, i64 0, i32 0
	%62 = load i64, i64* %61, align 8
	%63 = bitcast i64 %62 to i64
	%64 = sub i64 %58, %63
	%65 = sub i64 %64, 1
	call void @decimal-42.shift(%decimal-42.Decimal* %57, i64 %65)
	; mantlo
	store i64 zeroinitializer, i64* %7
		; explo
	store i64 zeroinitializer, i64* %8
		; IfStmt
	%66 = load i64, i64* %1, align 8
	; SelectorExpr
	%67 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %3, align 8
	%68 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %67, i64 0
	%69 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %68, i64 0, i32 0
	%70 = load i64, i64* %69, align 8
	%71 = bitcast i64 %70 to i64
	%72 = shl i64 1, %71
	%73 = icmp ugt i64 %66, %72
	br i1 %73, label %if.then-7, label %cmp.or-6

cmp.or-6:
	%74 = load i64, i64* %2, align 8
	%75 = load i64, i64* %4, align 8
	%76 = icmp eq i64 %74, %75
	br i1 %76, label %if.then-7, label %if.else-8

if.then-7:
	; AssignStmt
	%77 = load i64, i64* %1, align 8
	%78 = sub i64 %77, 1
	store i64 %78, i64* %7
	; AssignStmt
	%79 = load i64, i64* %2, align 8
	store i64 %79, i64* %8
	br label %if.done-9

if.else-8:
	; AssignStmt
	%80 = load i64, i64* %1, align 8
	%81 = mul i64 2, %80
	%82 = sub i64 %81, 1
	store i64 %82, i64* %7
	; AssignStmt
	%83 = load i64, i64* %2, align 8
	%84 = sub i64 %83, 1
	store i64 %84, i64* %8
	br label %if.done-9

if.done-9:
	; lower_
	store %decimal-42.Decimal zeroinitializer, %decimal-42.Decimal* %9
		; lower
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %10
		%85 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %9, i64 0
	store %decimal-42.Decimal* %85, %decimal-42.Decimal** %10
	%86 = load %decimal-42.Decimal*, %decimal-42.Decimal** %10, align 8
	%87 = load i64, i64* %7, align 8
	%88 = mul i64 2, %87
	%89 = add i64 %88, 1
	call void @decimal-42.assign(%decimal-42.Decimal* %86, i64 %89)
	%90 = load %decimal-42.Decimal*, %decimal-42.Decimal** %10, align 8
	%91 = load i64, i64* %8, align 8
	; SelectorExpr
	%92 = load %strconv-34.Float_Info*, %strconv-34.Float_Info** %3, align 8
	%93 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %92, i64 0
	%94 = getelementptr inbounds %strconv-34.Float_Info, %strconv-34.Float_Info* %93, i64 0, i32 0
	%95 = load i64, i64* %94, align 8
	%96 = bitcast i64 %95 to i64
	%97 = sub i64 %91, %96
	%98 = sub i64 %97, 1
	call void @decimal-42.shift(%decimal-42.Decimal* %90, i64 %98)
	; inclusive
	store i1 zeroinitializer, i1* %11
		%99 = load i64, i64* %1, align 8
	%100 = urem i64 %99, 2
	%101 = icmp eq i64 %100, 0
	store i1 %101, i1* %11
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %12
		store i64 zeroinitializer, i64* %13
	store i64 0, i64* %13
	store i64 zeroinitializer, i64* %14
	store i64 0, i64* %14
	br label %for.interval.loop-10

for.interval.loop-10:
	; SelectorExpr
	%102 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%103 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %102, i64 0
	%104 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %103, i64 0, i32 0
	%105 = load i64, i64* %104, align 8
	%106 = load i64, i64* %13, align 8
	%107 = icmp slt i64 %106, %105
	br i1 %107, label %for.interval.body-11, label %for.interval.done-34

for.interval.body-11:
	%108 = load i64, i64* %13, align 8
	%109 = load i64, i64* %14, align 8
	%110 = load i64, i64* %13, align 8
	%111 = add i64 %110, 1
	store i64 %111, i64* %13
	%112 = load i64, i64* %14, align 8
	%113 = add i64 %112, 1
	store i64 %113, i64* %14
	store i64 %108, i64* %12
	; l
	store i8 zeroinitializer, i8* %15
		store i8 48, i8* %15
	; IfStmt
	%114 = load i64, i64* %12, align 8
	; SelectorExpr
	%115 = load %decimal-42.Decimal*, %decimal-42.Decimal** %10, align 8
	%116 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %115, i64 0
	%117 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %116, i64 0, i32 0
	%118 = load i64, i64* %117, align 8
	%119 = icmp slt i64 %114, %118
	br i1 %119, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%120 = load %decimal-42.Decimal*, %decimal-42.Decimal** %10, align 8
	%121 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %120, i64 0
	%122 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %121, i64 0, i32 2
	%123 = load i64, i64* %12, align 8
	%124 = trunc i64 %123 to i32
	%125 = getelementptr inbounds [384 x i8], [384 x i8]* %122, i64 0, i32 %124
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$598, i64 0, i32 0), i64 25}, i64 260, i64 21, i64 %123, i64 384)
	%126 = load i8, i8* %125, align 1
	store i8 %126, i8* %15
	br label %if.done-13

if.done-13:
	; m
	store i8 zeroinitializer, i8* %16
		; IndexExpr
	; SelectorExpr
	%127 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%128 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %127, i64 0
	%129 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %128, i64 0, i32 2
	%130 = load i64, i64* %12, align 8
	%131 = trunc i64 %130 to i32
	%132 = getelementptr inbounds [384 x i8], [384 x i8]* %129, i64 0, i32 %131
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$599, i64 0, i32 0), i64 25}, i64 262, i64 17, i64 %130, i64 384)
	%133 = load i8, i8* %132, align 1
	store i8 %133, i8* %16
	; u
	store i8 zeroinitializer, i8* %17
		store i8 48, i8* %17
	; IfStmt
	%134 = load i64, i64* %12, align 8
	; SelectorExpr
	%135 = load %decimal-42.Decimal*, %decimal-42.Decimal** %6, align 8
	%136 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %135, i64 0
	%137 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %136, i64 0, i32 0
	%138 = load i64, i64* %137, align 8
	%139 = icmp slt i64 %134, %138
	br i1 %139, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%140 = load %decimal-42.Decimal*, %decimal-42.Decimal** %6, align 8
	%141 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %140, i64 0
	%142 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %141, i64 0, i32 2
	%143 = load i64, i64* %12, align 8
	%144 = trunc i64 %143 to i32
	%145 = getelementptr inbounds [384 x i8], [384 x i8]* %142, i64 0, i32 %144
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$59a, i64 0, i32 0), i64 25}, i64 265, i64 21, i64 %143, i64 384)
	%146 = load i8, i8* %145, align 1
	store i8 %146, i8* %17
	br label %if.done-15

if.done-15:
	; ok_round_down
	store i1 zeroinitializer, i1* %18
		%147 = load i8, i8* %15, align 1
	%148 = load i8, i8* %16, align 1
	%149 = icmp ne i8 %147, %148
	%150 = load i8, i8* %15, align 1
	%151 = load i8, i8* %16, align 1
	%152 = icmp ne i8 %150, %151
	br i1 %152, label %logical.cmp.done-19, label %logical.cmp.rhs-16

logical.cmp.rhs-16:
	%153 = load i1, i1* %11, align 1
	%154 = load i1, i1* %11, align 1
	br i1 %154, label %logical.cmp.rhs-17, label %logical.cmp.done-18

logical.cmp.rhs-17:
	%155 = load i64, i64* %12, align 8
	%156 = add i64 %155, 1
	; SelectorExpr
	%157 = load %decimal-42.Decimal*, %decimal-42.Decimal** %10, align 8
	%158 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %157, i64 0
	%159 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %158, i64 0, i32 0
	%160 = load i64, i64* %159, align 8
	%161 = icmp eq i64 %156, %160
	br label %logical.cmp.done-18

logical.cmp.done-18:
	%162 = phi i1 [ false, %logical.cmp.rhs-16 ], [ %161, %logical.cmp.rhs-17 ]
	br label %logical.cmp.done-19

logical.cmp.done-19:
	%163 = phi i1 [ true, %if.done-15 ], [ %162, %logical.cmp.done-18 ]
	store i1 %163, i1* %18
	; ok_round_up
	store i1 zeroinitializer, i1* %19
		%164 = load i8, i8* %16, align 1
	%165 = load i8, i8* %17, align 1
	%166 = icmp ne i8 %164, %165
	%167 = load i8, i8* %16, align 1
	%168 = load i8, i8* %17, align 1
	%169 = icmp ne i8 %167, %168
	br i1 %169, label %logical.cmp.rhs-20, label %logical.cmp.done-26

logical.cmp.rhs-20:
	%170 = load i1, i1* %11, align 1
	%171 = load i1, i1* %11, align 1
	br i1 %171, label %logical.cmp.done-22, label %logical.cmp.rhs-21

logical.cmp.rhs-21:
	%172 = load i8, i8* %16, align 1
	%173 = add i8 %172, 1
	%174 = load i8, i8* %17, align 1
	%175 = icmp ult i8 %173, %174
	br label %logical.cmp.done-22

logical.cmp.done-22:
	%176 = phi i1 [ true, %logical.cmp.rhs-20 ], [ %175, %logical.cmp.rhs-21 ]
	%177 = load i1, i1* %11, align 1
	br i1 %177, label %logical.cmp.done-25, label %cmp.or-23

cmp.or-23:
	%178 = load i8, i8* %16, align 1
	%179 = add i8 %178, 1
	%180 = load i8, i8* %17, align 1
	%181 = icmp ult i8 %179, %180
	br i1 %181, label %logical.cmp.done-25, label %logical.cmp.rhs-24

logical.cmp.rhs-24:
	%182 = load i64, i64* %12, align 8
	%183 = add i64 %182, 1
	; SelectorExpr
	%184 = load %decimal-42.Decimal*, %decimal-42.Decimal** %6, align 8
	%185 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %184, i64 0
	%186 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %185, i64 0, i32 0
	%187 = load i64, i64* %186, align 8
	%188 = icmp slt i64 %183, %187
	br label %logical.cmp.done-25

logical.cmp.done-25:
	%189 = phi i1 [ true, %logical.cmp.done-22 ], [ true, %cmp.or-23 ], [ %188, %logical.cmp.rhs-24 ]
	br label %logical.cmp.done-26

logical.cmp.done-26:
	%190 = phi i1 [ false, %logical.cmp.done-19 ], [ %189, %logical.cmp.done-25 ]
	store i1 %190, i1* %19
	; IfStmt
	%191 = load i1, i1* %18, align 1
	br i1 %191, label %cmp.and-27, label %if.done-29

cmp.and-27:
	%192 = load i1, i1* %19, align 1
	br i1 %192, label %if.then-28, label %if.done-29

if.then-28:
	%193 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%194 = load i64, i64* %12, align 8
	%195 = add i64 %194, 1
	call void @decimal-42.round(%decimal-42.Decimal* %193, i64 %195)
	; ReturnStmt
	ret void

if.done-29:
	; IfStmt
	%196 = load i1, i1* %18, align 1
	br i1 %196, label %if.then-30, label %if.done-31

if.then-30:
	%197 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%198 = load i64, i64* %12, align 8
	%199 = add i64 %198, 1
	call void @decimal-42.round_down(%decimal-42.Decimal* %197, i64 %199)
	; ReturnStmt
	ret void

if.done-31:
	; IfStmt
	%200 = load i1, i1* %19, align 1
	br i1 %200, label %if.then-32, label %if.done-33

if.then-32:
	%201 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%202 = load i64, i64* %12, align 8
	%203 = add i64 %202, 1
	call void @decimal-42.round_up(%decimal-42.Decimal* %201, i64 %203)
	; ReturnStmt
	ret void

if.done-33:
	br label %for.interval.loop-10

for.interval.done-34:
	ret void
}

define {i64, i1} @strconv-34.is_integer_negative(i64 %u, i1 %is_signed, i64 %bit_size) {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i8, align 1
	%5 = alloca i16, align 2
	%6 = alloca i32, align 4
	%7 = alloca i64, align 8
	%8 = alloca {i64, i1}, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %u, i64* %0
	store i1 zeroinitializer, i1* %1
		store i1 %is_signed, i1* %1
	store i64 zeroinitializer, i64* %2
		store i64 %bit_size, i64* %2
	; neg
	store i1 zeroinitializer, i1* %3
		store i1 false, i1* %3
	; IfStmt
	%9 = load i1, i1* %1, align 1
	br i1 %9, label %if.then-1, label %if.done-19

if.then-1:
	; MatchStmt
	%10 = load i64, i64* %2, align 8
	%11 = icmp eq i64 %10, 8
	br i1 %11, label %match.case.body-3, label %match.case.next-2

match.case.next-2:
	%12 = icmp eq i64 %10, 16
	br i1 %12, label %match.fall.body-7, label %match.case.next-6

match.case.body-3:
	; i
	store i8 zeroinitializer, i8* %4
		%13 = load i64, i64* %0, align 8
	%14 = trunc i64 %13 to i8
	store i8 %14, i8* %4
	; AssignStmt
	%15 = load i8, i8* %4, align 1
	%16 = icmp slt i8 %15, 0
	store i1 %16, i1* %3
	; IfStmt
	%17 = load i1, i1* %3, align 1
	br i1 %17, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	%18 = load i8, i8* %4, align 1
	%19 = sub i8 0, %18
	store i8 %19, i8* %4
	br label %if.done-5

if.done-5:
	; AssignStmt
	%20 = load i8, i8* %4, align 1
	%21 = sext i8 %20 to i64
	store i64 %21, i64* %0
	br label %match.done-18

match.case.next-6:
	%22 = icmp eq i64 %10, 32
	br i1 %22, label %match.fall.body-11, label %match.case.next-10

match.fall.body-7:
	; i
	store i16 zeroinitializer, i16* %5
		%23 = load i64, i64* %0, align 8
	%24 = trunc i64 %23 to i16
	store i16 %24, i16* %5
	; AssignStmt
	%25 = load i16, i16* %5, align 2
	%26 = icmp slt i16 %25, 0
	store i1 %26, i1* %3
	; IfStmt
	%27 = load i1, i1* %3, align 1
	br i1 %27, label %if.then-8, label %if.done-9

if.then-8:
	; AssignStmt
	%28 = load i16, i16* %5, align 2
	%29 = sub i16 0, %28
	store i16 %29, i16* %5
	br label %if.done-9

if.done-9:
	; AssignStmt
	%30 = load i16, i16* %5, align 2
	%31 = sext i16 %30 to i64
	store i64 %31, i64* %0
	br label %match.done-18

match.case.next-10:
	%32 = icmp eq i64 %10, 64
	br i1 %32, label %match.fall.body-15, label %match.case.next-14

match.fall.body-11:
	; i
	store i32 zeroinitializer, i32* %6
		%33 = load i64, i64* %0, align 8
	%34 = trunc i64 %33 to i32
	store i32 %34, i32* %6
	; AssignStmt
	%35 = load i32, i32* %6, align 4
	%36 = icmp slt i32 %35, 0
	store i1 %36, i1* %3
	; IfStmt
	%37 = load i1, i1* %3, align 1
	br i1 %37, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	%38 = load i32, i32* %6, align 4
	%39 = sub i32 0, %38
	store i32 %39, i32* %6
	br label %if.done-13

if.done-13:
	; AssignStmt
	%40 = load i32, i32* %6, align 4
	%41 = sext i32 %40 to i64
	store i64 %41, i64* %0
	br label %match.done-18

match.case.next-14:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$59b, i64 0, i32 0), i64 25}, i64 316, i64 10, %..string {i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__str$59c, i64 0, i32 0), i64 41})
	br label %match.done-18

match.fall.body-15:
	; i
	store i64 zeroinitializer, i64* %7
		%42 = load i64, i64* %0, align 8
	%43 = bitcast i64 %42 to i64
	store i64 %43, i64* %7
	; AssignStmt
	%44 = load i64, i64* %7, align 8
	%45 = icmp slt i64 %44, 0
	store i1 %45, i1* %3
	; IfStmt
	%46 = load i1, i1* %3, align 1
	br i1 %46, label %if.then-16, label %if.done-17

if.then-16:
	; AssignStmt
	%47 = load i64, i64* %7, align 8
	%48 = sub i64 0, %47
	store i64 %48, i64* %7
	br label %if.done-17

if.done-17:
	; AssignStmt
	%49 = load i64, i64* %7, align 8
	%50 = bitcast i64 %49 to i64
	store i64 %50, i64* %0
	br label %match.done-18

match.done-18:
	br label %if.done-19

if.done-19:
	; ReturnStmt
	%51 = load i64, i64* %0, align 8
	%52 = load i1, i1* %3, align 1
	store {i64, i1} zeroinitializer, {i64, i1}* %8
	%53 = getelementptr inbounds {i64, i1}, {i64, i1}* %8, i64 0, i32 0
	store i64 %51, i64* %53
	%54 = getelementptr inbounds {i64, i1}, {i64, i1}* %8, i64 0, i32 1
	store i1 %52, i1* %54
	%55 = load {i64, i1}, {i64, i1}* %8, align 8
	ret {i64, i1} %55
}

define %..string @strconv-34.append_bits({i8*, i64, i64} %buf, i64 %u, i64 %base, i1 %is_signed, i64 %bit_size, %..string %digits, i64 %flags) {
decls-0:
	%0 = alloca {i8*, i64, i64}, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i64, align 8
	%7 = alloca [65 x i8], align 1
	%8 = alloca i64, align 8
	%9 = alloca i1, align 1
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca i1, align 1
	%13 = alloca {i8*, i64, i64}, align 8
	%14 = alloca %..string, align 8
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %0
		store {i8*, i64, i64} %buf, {i8*, i64, i64}* %0
	store i64 zeroinitializer, i64* %1
		store i64 %u, i64* %1
	store i64 zeroinitializer, i64* %2
		store i64 %base, i64* %2
	store i1 zeroinitializer, i1* %3
		store i1 %is_signed, i1* %3
	store i64 zeroinitializer, i64* %4
		store i64 %bit_size, i64* %4
	store %..string zeroinitializer, %..string* %5
		store %..string %digits, %..string* %5
	store i64 zeroinitializer, i64* %6
		store i64 %flags, i64* %6
	; IfStmt
	%15 = load i64, i64* %2, align 8
	%16 = icmp slt i64 %15, 2
	br i1 %16, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%17 = load i64, i64* %2, align 8
	%18 = icmp sgt i64 %17, 32
	br i1 %18, label %if.then-2, label %if.done-3

if.then-2:
	; panic
	call void @__panic(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$59d, i64 0, i32 0), i64 25}, i64 332, i64 9, %..string {i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__str$59e, i64 0, i32 0), i64 43})
	br label %if.done-3

if.done-3:
	; a
	store [65 x i8] zeroinitializer, [65 x i8]* %7
		; i
	store i64 zeroinitializer, i64* %8
		store i64 65, i64* %8
	; neg
	store i1 zeroinitializer, i1* %9
		; AssignStmt
	%19 = load i64, i64* %1, align 8
	%20 = load i1, i1* %3, align 1
	%21 = load i64, i64* %4, align 8
	%22 = call {i64, i1} @strconv-34.is_integer_negative(i64 %19, i1 %20, i64 %21)
	%23 = extractvalue {i64, i1} %22, 0
	%24 = extractvalue {i64, i1} %22, 1
	store i64 %23, i64* %1
	store i1 %24, i1* %9
	; ForStmt
	; b
	store i64 zeroinitializer, i64* %10
		%25 = load i64, i64* %2, align 8
	%26 = bitcast i64 %25 to i64
	store i64 %26, i64* %10
	br label %for.loop-4

for.loop-4:
	%27 = load i64, i64* %1, align 8
	%28 = load i64, i64* %10, align 8
	%29 = icmp uge i64 %27, %28
	br i1 %29, label %for.body-5, label %for.done-6

for.body-5:
	%30 = load i64, i64* %8, align 8
	%31 = sub i64 %30, 1
	store i64 %31, i64* %8
	; q
	store i64 zeroinitializer, i64* %11
		%32 = load i64, i64* %1, align 8
	%33 = load i64, i64* %10, align 8
	%34 = udiv i64 %32, %33
	store i64 %34, i64* %11
	; AssignStmt
	; IndexExpr
	%35 = load i64, i64* %8, align 8
	%36 = trunc i64 %35 to i32
	%37 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %36
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$59f, i64 0, i32 0), i64 25}, i64 344, i64 5, i64 %35, i64 65)
	; IndexExpr
	%38 = load %..string, %..string* %5, align 8
	%39 = extractvalue %..string %38, 0
	%40 = extractvalue %..string %38, 1
	%41 = load i64, i64* %1, align 8
	%42 = load i64, i64* %11, align 8
	%43 = load i64, i64* %10, align 8
	%44 = mul i64 %42, %43
	%45 = sub i64 %41, %44
	%46 = bitcast i64 %45 to i64
	%47 = bitcast i64 %46 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a0, i64 0, i32 0), i64 25}, i64 344, i64 17, i64 %47, i64 %40)
	%48 = getelementptr inbounds i8, i8* %39, i64 %47
	%49 = load i8, i8* %48, align 1
	store i8 %49, i8* %37
	; AssignStmt
	%50 = load i64, i64* %11, align 8
	store i64 %50, i64* %1
	br label %for.loop-4

for.done-6:
	%51 = load i64, i64* %8, align 8
	%52 = sub i64 %51, 1
	store i64 %52, i64* %8
	; AssignStmt
	; IndexExpr
	%53 = load i64, i64* %8, align 8
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a1, i64 0, i32 0), i64 25}, i64 349, i64 4, i64 %53, i64 65)
	; IndexExpr
	%56 = load %..string, %..string* %5, align 8
	%57 = extractvalue %..string %56, 0
	%58 = extractvalue %..string %56, 1
	%59 = load i64, i64* %1, align 8
	%60 = bitcast i64 %59 to i64
	%61 = bitcast i64 %60 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a2, i64 0, i32 0), i64 25}, i64 349, i64 16, i64 %61, i64 %58)
	%62 = getelementptr inbounds i8, i8* %57, i64 %61
	%63 = load i8, i8* %62, align 1
	store i8 %63, i8* %55
	; IfStmt
	%64 = load i64, i64* %6, align 8
	%65 = and i64 %64, 1
	%66 = icmp ne i64 %65, 0
	br i1 %66, label %if.then-7, label %if.done-21

if.then-7:
	; ok
	store i1 zeroinitializer, i1* %12
		store i1 true, i1* %12
	; MatchStmt
	%67 = load i64, i64* %2, align 8
	%68 = icmp eq i64 %67, 2
	br i1 %68, label %match.case.body-9, label %match.case.next-8

match.case.next-8:
	%69 = icmp eq i64 %67, 8
	br i1 %69, label %match.fall.body-11, label %match.case.next-10

match.case.body-9:
	%70 = load i64, i64* %8, align 8
	%71 = sub i64 %70, 1
	store i64 %71, i64* %8
	; AssignStmt
	; IndexExpr
	%72 = load i64, i64* %8, align 8
	%73 = trunc i64 %72 to i32
	%74 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %73
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a3, i64 0, i32 0), i64 25}, i64 354, i64 19, i64 %72, i64 65)
	store i8 98, i8* %74
	br label %match.done-18

match.case.next-10:
	%75 = icmp eq i64 %67, 10
	br i1 %75, label %match.fall.body-13, label %match.case.next-12

match.fall.body-11:
	%76 = load i64, i64* %8, align 8
	%77 = sub i64 %76, 1
	store i64 %77, i64* %8
	; AssignStmt
	; IndexExpr
	%78 = load i64, i64* %8, align 8
	%79 = trunc i64 %78 to i32
	%80 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %79
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a4, i64 0, i32 0), i64 25}, i64 355, i64 19, i64 %78, i64 65)
	store i8 111, i8* %80
	br label %match.done-18

match.case.next-12:
	%81 = icmp eq i64 %67, 12
	br i1 %81, label %match.fall.body-15, label %match.case.next-14

match.fall.body-13:
	%82 = load i64, i64* %8, align 8
	%83 = sub i64 %82, 1
	store i64 %83, i64* %8
	; AssignStmt
	; IndexExpr
	%84 = load i64, i64* %8, align 8
	%85 = trunc i64 %84 to i32
	%86 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %85
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a5, i64 0, i32 0), i64 25}, i64 356, i64 19, i64 %84, i64 65)
	store i8 100, i8* %86
	br label %match.done-18

match.case.next-14:
	%87 = icmp eq i64 %67, 16
	br i1 %87, label %match.fall.body-17, label %match.case.next-16

match.fall.body-15:
	%88 = load i64, i64* %8, align 8
	%89 = sub i64 %88, 1
	store i64 %89, i64* %8
	; AssignStmt
	; IndexExpr
	%90 = load i64, i64* %8, align 8
	%91 = trunc i64 %90 to i32
	%92 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %91
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a6, i64 0, i32 0), i64 25}, i64 357, i64 19, i64 %90, i64 65)
	store i8 122, i8* %92
	br label %match.done-18

match.case.next-16:
	; AssignStmt
	store i1 false, i1* %12
	br label %match.done-18

match.fall.body-17:
	%93 = load i64, i64* %8, align 8
	%94 = sub i64 %93, 1
	store i64 %94, i64* %8
	; AssignStmt
	; IndexExpr
	%95 = load i64, i64* %8, align 8
	%96 = trunc i64 %95 to i32
	%97 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %96
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a7, i64 0, i32 0), i64 25}, i64 358, i64 19, i64 %95, i64 65)
	store i8 120, i8* %97
	br label %match.done-18

match.done-18:
	; IfStmt
	%98 = load i1, i1* %12, align 1
	br i1 %98, label %if.then-19, label %if.done-20

if.then-19:
	%99 = load i64, i64* %8, align 8
	%100 = sub i64 %99, 1
	store i64 %100, i64* %8
	; AssignStmt
	; IndexExpr
	%101 = load i64, i64* %8, align 8
	%102 = trunc i64 %101 to i32
	%103 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %102
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a8, i64 0, i32 0), i64 25}, i64 363, i64 6, i64 %101, i64 65)
	store i8 48, i8* %103
	br label %if.done-20

if.done-20:
	br label %if.done-21

if.done-21:
	; IfStmt
	%104 = load i1, i1* %9, align 1
	br i1 %104, label %if.then-22, label %if.else-23

if.then-22:
	%105 = load i64, i64* %8, align 8
	%106 = sub i64 %105, 1
	store i64 %106, i64* %8
	; AssignStmt
	; IndexExpr
	%107 = load i64, i64* %8, align 8
	%108 = trunc i64 %107 to i32
	%109 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %108
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5a9, i64 0, i32 0), i64 25}, i64 368, i64 10, i64 %107, i64 65)
	store i8 45, i8* %109
	br label %if.done-29

if.else-23:
	; IfStmt
	%110 = load i64, i64* %6, align 8
	%111 = and i64 %110, 2
	%112 = icmp ne i64 %111, 0
	br i1 %112, label %if.then-24, label %if.else-25

if.then-24:
	%113 = load i64, i64* %8, align 8
	%114 = sub i64 %113, 1
	store i64 %114, i64* %8
	; AssignStmt
	; IndexExpr
	%115 = load i64, i64* %8, align 8
	%116 = trunc i64 %115 to i32
	%117 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %116
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5aa, i64 0, i32 0), i64 25}, i64 370, i64 10, i64 %115, i64 65)
	store i8 43, i8* %117
	br label %if.done-28

if.else-25:
	; IfStmt
	%118 = load i64, i64* %6, align 8
	%119 = and i64 %118, 4
	%120 = icmp ne i64 %119, 0
	br i1 %120, label %if.then-26, label %if.done-27

if.then-26:
	%121 = load i64, i64* %8, align 8
	%122 = sub i64 %121, 1
	store i64 %122, i64* %8
	; AssignStmt
	; IndexExpr
	%123 = load i64, i64* %8, align 8
	%124 = trunc i64 %123 to i32
	%125 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 %124
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5ab, i64 0, i32 0), i64 25}, i64 372, i64 10, i64 %123, i64 65)
	store i8 32, i8* %125
	br label %if.done-27

if.done-27:
	br label %if.done-28

if.done-28:
	br label %if.done-29

if.done-29:
	; append
	%126 = bitcast {i8*, i64, i64}* %0 to %..rawptr
	%127 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	; SliceExpr
	%128 = load i64, i64* %8, align 8
	%129 = load [65 x i8], [65 x i8]* %7, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5ac, i64 0, i32 0), i64 25}, i64 376, i64 17, i64 %128, i64 65, i64 65)
	%130 = getelementptr inbounds [65 x i8], [65 x i8]* %7, i64 0, i32 0
	%131 = getelementptr inbounds i8, i8* %130, i64 %128
	%132 = sub i64 65, %128
	%133 = sub i64 65, %128
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %13
	%134 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 0
	store i8* %131, i8** %134
	%135 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 1
	store i64 %132, i64* %135
	%136 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %13, i64 0, i32 2
	store i64 %133, i64* %136
	%137 = load {i8*, i64, i64}, {i8*, i64, i64}* %13, align 8
	%138 = extractvalue {i8*, i64, i64} %137, 0
	%139 = extractvalue {i8*, i64, i64} %137, 1
	%140 = bitcast i8* %138 to %..rawptr
	%141 = call i64 @__slice_append(%..rawptr %126, i64 1, i64 1, %..rawptr %140, i64 %139)
	; ReturnStmt
	%142 = load {i8*, i64, i64}, {i8*, i64, i64}* %0, align 8
	%143 = extractvalue {i8*, i64, i64} %142, 0
	%144 = extractvalue {i8*, i64, i64} %142, 1
	store %..string zeroinitializer, %..string* %14
	%145 = getelementptr inbounds %..string, %..string* %14, i64 0, i32 0
	store i8* %143, i8** %145
	%146 = getelementptr inbounds %..string, %..string* %14, i64 0, i32 1
	store i64 %144, i64* %146
	%147 = load %..string, %..string* %14, align 8
	ret %..string %147
}

define i16 @windows-35.HIWORD-1660(i64 %wParam) {
decls-0:
	%0 = alloca i64, align 8
	store i64 zeroinitializer, i64* %0
		store i64 %wParam, i64* %0
	; ReturnStmt
	%1 = load i64, i64* %0, align 8
	%2 = trunc i64 %1 to i32
	%3 = lshr i32 %2, 16
	%4 = and i32 %3, 65535
	%5 = trunc i32 %4 to i16
	ret i16 %5
}

define i1 @windows-35.is_key_down(i32 %key) alwaysinline {
decls-0:
	%0 = alloca i32, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %key, i32* %0
	; ReturnStmt
	%1 = load i32, i32* %0, align 4
	%2 = call ccc i16 @GetAsyncKeyState(i32 %1)
	%3 = icmp slt i16 %2, 0
	ret i1 %3
}

define {i32, i1} @gl_util-39.CreateAndCompileShader(i32 %type, %..string %source) {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	%5 = alloca {i8*, i64, i64}, align 8
	%6 = alloca {i8*, i64, i64}, align 8
	%7 = alloca %..any, align 8
	%8 = alloca {%..any*, i64, i64}, align 8
	%9 = alloca [1 x %..any], align 8
	%10 = alloca {%..any*, i64, i64}, align 8
	%11 = alloca {%..any*, i64, i64}, align 8
	%12 = alloca {i32, i1}, align 4
	%13 = alloca {i32, i1}, align 4
	store i32 zeroinitializer, i32* %0
		store i32 %type, i32* %0
	store %..string zeroinitializer, %..string* %1
		store %..string %source, %..string* %1
	; shader
	store i32 zeroinitializer, i32* %2
		; AssignStmt
	; SelectorExpr
	%14 = load i32, i32* %0, align 4
	%15 = call i32 @gl-10.CreateShader(i32 %14)
	store i32 %15, i32* %2
	; SelectorExpr
	%16 = load i32, i32* %2, align 4
	%17 = load %..string, %..string* %1, align 8
	call void @gl-10.ShaderSource-820(i32 %16, %..string %17)
	; SelectorExpr
	%18 = load i32, i32* %2, align 4
	call void @gl-10.CompileShader(i32 %18)
	; success
	store i32 zeroinitializer, i32* %3
		; SelectorExpr
	%19 = load i32, i32* %2, align 4
	%20 = call i32 @gl-10.GetShaderValue(i32 %19, i32 35713)
	store i32 %20, i32* %3
	; IfStmt
	%21 = load i32, i32* %3, align 4
	%22 = icmp eq i32 %21, 0
	br i1 %22, label %if.then-1, label %if.done-2

if.then-1:
	; logSize
	store i32 zeroinitializer, i32* %4
		; SelectorExpr
	%23 = load i32, i32* %2, align 4
	%24 = call i32 @gl-10.GetShaderValue(i32 %23, i32 35716)
	store i32 %24, i32* %4
	; logBytes
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %5
		; make
	%25 = load i32, i32* %4, align 4
	%26 = sext i32 %25 to i64
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$5ad, i64 0, i32 0), i64 29}, i64 16, i64 34, i64 0, i64 %26, i64 %26)
	%27 = mul i64 1, %26
	%28 = call %..rawptr @alloc_align(i64 %27, i64 1)
	%29 = bitcast %..rawptr %28 to i8*
	store {i8*, i64, i64} zeroinitializer, {i8*, i64, i64}* %6
	%30 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 0
	store i8* %29, i8** %30
	%31 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 1
	store i64 %26, i64* %31
	%32 = getelementptr inbounds {i8*, i64, i64}, {i8*, i64, i64}* %6, i64 0, i32 2
	store i64 %26, i64* %32
	%33 = load {i8*, i64, i64}, {i8*, i64, i64}* %6, align 8
	store {i8*, i64, i64} %33, {i8*, i64, i64}* %5
	; SelectorExpr
	%34 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-10._GetShaderInfoLog, align 8
	%35 = load i32, i32* %2, align 4
	%36 = load i32, i32* %4, align 4
	%37 = getelementptr inbounds i32, i32* %4, i64 0
	; IndexExpr
	%38 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%39 = extractvalue {i8*, i64, i64} %38, 0
	%40 = extractvalue {i8*, i64, i64} %38, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$5ae, i64 0, i32 0), i64 29}, i64 17, i64 72, i64 0, i64 %40)
	%41 = getelementptr inbounds i8, i8* %39, i64 0
	%42 = getelementptr inbounds i8, i8* %41, i64 0
	call ccc void %34(i32 %35, i32 %36, i32* %37, i8* %42)
	; SelectorExpr
	%43 = load i32, i32* %0, align 4
	store %..any zeroinitializer, %..any* %7
	%44 = bitcast i32* %0 to %..rawptr
	%45 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	%46 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %44, %..rawptr* %46
	%47 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %45, %Type_Info** %47
	%48 = load %..any, %..any* %7, align 8
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %8
	store [1 x %..any] zeroinitializer, [1 x %..any]* %9
	%49 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	store %..any %48, %..any* %49
	%50 = getelementptr inbounds [1 x %..any], [1 x %..any]* %9, i64 0, i32 0
	%51 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 0
	store %..any* %50, %..any** %51
	%52 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 1
	store i64 1, i64* %52
	%53 = getelementptr inbounds {%..any*, i64, i64}, {%..any*, i64, i64}* %8, i64 0, i32 2
	store i64 1, i64* %53
	%54 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %8, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$5af, i64 0, i32 0), i64 27}, {%..any*, i64, i64} %54)
	; SelectorExpr
	; SelectorExpr
	; IndexExpr
	%55 = load {i8*, i64, i64}, {i8*, i64, i64}* %5, align 8
	%56 = extractvalue {i8*, i64, i64} %55, 0
	%57 = extractvalue {i8*, i64, i64} %55, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$5b0, i64 0, i32 0), i64 29}, i64 20, i64 54, i64 0, i64 %57)
	%58 = getelementptr inbounds i8, i8* %56, i64 0
	%59 = getelementptr inbounds i8, i8* %58, i64 0
	%60 = call %..string @strings-7.to_odin_string(i8* %59)
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %10
	%61 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %10, align 8
	call void @console-17.Log(%..string %60, {%..any*, i64, i64} %61)
	; SelectorExpr
	; variadic call argument generation
	store {%..any*, i64, i64} zeroinitializer, {%..any*, i64, i64}* %11
	%62 = load {%..any*, i64, i64}, {%..any*, i64, i64}* %11, align 8
	call void @console-17.Log(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$5b1, i64 0, i32 0), i64 26}, {%..any*, i64, i64} %62)
	; ReturnStmt
	%63 = load i32, i32* %2, align 4
	store {i32, i1} zeroinitializer, {i32, i1}* %12
	%64 = getelementptr inbounds {i32, i1}, {i32, i1}* %12, i64 0, i32 0
	store i32 %63, i32* %64
	%65 = getelementptr inbounds {i32, i1}, {i32, i1}* %12, i64 0, i32 1
	store i1 false, i1* %65
	%66 = load {i32, i1}, {i32, i1}* %12, align 4
	ret {i32, i1} %66

if.done-2:
	; ReturnStmt
	%67 = load i32, i32* %2, align 4
	store {i32, i1} zeroinitializer, {i32, i1}* %13
	%68 = getelementptr inbounds {i32, i1}, {i32, i1}* %13, i64 0, i32 0
	store i32 %67, i32* %68
	%69 = getelementptr inbounds {i32, i1}, {i32, i1}* %13, i64 0, i32 1
	store i1 true, i1* %69
	%70 = load {i32, i1}, {i32, i1}* %13, align 4
	ret {i32, i1} %70
}

define %gl-10.Program @gl_util-39.CreateProgram(%asset-25.Asset.Shader* %vertex, %asset-25.Asset.Shader* %frag) {
decls-0:
	%0 = alloca %gl-10.Program, align 8
	%1 = alloca %gl-10.Program, align 16
	%2 = alloca %gl-10.Program, align 16
	%3 = alloca %gl-10.Program, align 16
	%4 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %vertex, align 8
	%5 = load %asset-25.Asset.Shader, %asset-25.Asset.Shader* %frag, align 8
	; result
	store %gl-10.Program zeroinitializer, %gl-10.Program* %0
		; SelectorExpr
	%6 = call %gl-10.Program @gl-10.CreateProgram()
	store %gl-10.Program %6, %gl-10.Program* %0
	; SelectorExpr
	%7 = load %gl-10.Program, %gl-10.Program* %0, align 8
	; SelectorExpr
	%8 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %vertex, i64 0, i32 2
	%9 = load i32, i32* %8, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %1
	store %gl-10.Program %7, %gl-10.Program* %1
	call void @gl-10.AttachShader(%gl-10.Program* %1, i32 %9)
	; SelectorExpr
	%10 = load %gl-10.Program, %gl-10.Program* %0, align 8
	; SelectorExpr
	%11 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %frag, i64 0, i32 2
	%12 = load i32, i32* %11, align 4
	store %gl-10.Program zeroinitializer, %gl-10.Program* %2
	store %gl-10.Program %10, %gl-10.Program* %2
	call void @gl-10.AttachShader(%gl-10.Program* %2, i32 %12)
	; AssignStmt
	; SelectorExpr
	%13 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %0, i64 0, i32 3
	; SelectorExpr
	%14 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %vertex, i64 0, i32 2
	%15 = load i32, i32* %14, align 4
	store i32 %15, i32* %13
	; AssignStmt
	; SelectorExpr
	%16 = getelementptr inbounds %gl-10.Program, %gl-10.Program* %0, i64 0, i32 4
	; SelectorExpr
	%17 = getelementptr inbounds %asset-25.Asset.Shader, %asset-25.Asset.Shader* %frag, i64 0, i32 2
	%18 = load i32, i32* %17, align 4
	store i32 %18, i32* %16
	; SelectorExpr
	%19 = load %gl-10.Program, %gl-10.Program* %0, align 8
	store %gl-10.Program zeroinitializer, %gl-10.Program* %3
	store %gl-10.Program %19, %gl-10.Program* %3
	call void @gl-10.LinkProgram(%gl-10.Program* %3)
	; ReturnStmt
	%20 = load %gl-10.Program, %gl-10.Program* %0, align 8
	ret %gl-10.Program %20
}

define void @decimal-42.trim(%decimal-42.Decimal* %a) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	; ForStmt
	br label %for.loop-1

for.loop-1:
	; SelectorExpr
	%1 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%2 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %1, i64 0
	%3 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %2, i64 0, i32 0
	%4 = load i64, i64* %3, align 8
	%5 = icmp sgt i64 %4, 0
	br i1 %5, label %cmp.and-2, label %for.done-4

cmp.and-2:
	; IndexExpr
	; SelectorExpr
	%6 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%7 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %6, i64 0
	%8 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %7, i64 0, i32 2
	; SelectorExpr
	%9 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%10 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %9, i64 0
	%11 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %10, i64 0, i32 0
	%12 = load i64, i64* %11, align 8
	%13 = sub i64 %12, 1
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b2, i64 0, i32 0), i64 25}, i64 52, i64 32, i64 %13, i64 384)
	%16 = load i8, i8* %15, align 1
	%17 = icmp eq i8 %16, 48
	br i1 %17, label %for.body-3, label %for.done-4

for.body-3:
	; SelectorExpr
	%18 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%19 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %18, i64 0
	%20 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %19, i64 0, i32 0
	%21 = load i64, i64* %20, align 8
	%22 = sub i64 %21, 1
	store i64 %22, i64* %20
	br label %for.loop-1

for.done-4:
	; IfStmt
	; SelectorExpr
	%23 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%24 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %23, i64 0
	%25 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %24, i64 0, i32 0
	%26 = load i64, i64* %25, align 8
	%27 = icmp eq i64 %26, 0
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%29 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %28, i64 0
	%30 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %29, i64 0, i32 1
	store i64 0, i64* %30
	br label %if.done-6

if.done-6:
	ret void
}

define void @decimal-42.assign(%decimal-42.Decimal* %a, i64 %i) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca [32 x i8], align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %i, i64* %1
	; buf
	store [32 x i8] zeroinitializer, [32 x i8]* %2
		; n
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	; ForStmt
	br label %for.loop-1

for.loop-1:
	%5 = load i64, i64* %1, align 8
	%6 = icmp ugt i64 %5, 0
	br i1 %6, label %for.body-2, label %for.done-3

for.body-2:
	; j
	store i64 zeroinitializer, i64* %4
		%7 = load i64, i64* %1, align 8
	%8 = udiv i64 %7, 10
	store i64 %8, i64* %4
	; AssignStmt
	%9 = load i64, i64* %4, align 8
	%10 = mul i64 10, %9
	%11 = load i64, i64* %1, align 8
	%12 = sub i64 %11, %10
	store i64 %12, i64* %1
	; AssignStmt
	; IndexExpr
	%13 = load i64, i64* %3, align 8
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b3, i64 0, i32 0), i64 25}, i64 67, i64 7, i64 %13, i64 32)
	%16 = load i64, i64* %1, align 8
	%17 = add i64 48, %16
	%18 = trunc i64 %17 to i8
	store i8 %18, i8* %15
	%19 = load i64, i64* %3, align 8
	%20 = add i64 %19, 1
	store i64 %20, i64* %3
	; AssignStmt
	%21 = load i64, i64* %4, align 8
	store i64 %21, i64* %1
	br label %for.loop-1

for.done-3:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ForStmt
	%25 = load i64, i64* %3, align 8
	%26 = sub i64 %25, 1
	store i64 %26, i64* %3
	br label %for.loop-4

for.loop-4:
	%27 = load i64, i64* %3, align 8
	%28 = icmp sge i64 %27, 0
	br i1 %28, label %for.body-5, label %for.done-6

for.body-5:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%29 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%30 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %29, i64 0
	%31 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %30, i64 0, i32 2
	; SelectorExpr
	%32 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%33 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %32, i64 0
	%34 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %33, i64 0, i32 0
	%35 = load i64, i64* %34, align 8
	%36 = trunc i64 %35 to i32
	%37 = getelementptr inbounds [384 x i8], [384 x i8]* %31, i64 0, i32 %36
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b4, i64 0, i32 0), i64 25}, i64 74, i64 14, i64 %35, i64 384)
	; IndexExpr
	%38 = load i64, i64* %3, align 8
	%39 = trunc i64 %38 to i32
	%40 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i32 %39
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b5, i64 0, i32 0), i64 25}, i64 74, i64 27, i64 %38, i64 32)
	%41 = load i8, i8* %40, align 1
	store i8 %41, i8* %37
	; SelectorExpr
	%42 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%43 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %42, i64 0
	%44 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %43, i64 0, i32 0
	%45 = load i64, i64* %44, align 8
	%46 = add i64 %45, 1
	store i64 %46, i64* %44
	%47 = load i64, i64* %3, align 8
	%48 = sub i64 %47, 1
	store i64 %48, i64* %3
	br label %for.loop-4

for.done-6:
	; AssignStmt
	; SelectorExpr
	%49 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%50 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %49, i64 0
	%51 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %50, i64 0, i32 1
	; SelectorExpr
	%52 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%53 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %52, i64 0
	%54 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %53, i64 0, i32 0
	%55 = load i64, i64* %54, align 8
	store i64 %55, i64* %51
	%56 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.trim(%decimal-42.Decimal* %56)
	ret void
}

define void @decimal-42.shift_right(%decimal-42.Decimal* %a, i64 %k) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %k, i64* %1
	; r
	store i64 zeroinitializer, i64* %2
		store i64 0, i64* %2
	; w
	store i64 zeroinitializer, i64* %3
		store i64 0, i64* %3
	; n
	store i64 zeroinitializer, i64* %4
		; ForStmt
	br label %for.loop-1

for.loop-1:
	%10 = load i64, i64* %4, align 8
	%11 = load i64, i64* %1, align 8
	%12 = lshr i64 %10, %11
	%13 = icmp eq i64 %12, 0
	br i1 %13, label %for.body-2, label %for.done-10

for.body-2:
	; IfStmt
	%14 = load i64, i64* %2, align 8
	; SelectorExpr
	%15 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%16 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %15, i64 0
	%17 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %16, i64 0, i32 0
	%18 = load i64, i64* %17, align 8
	%19 = icmp sge i64 %14, %18
	br i1 %19, label %if.then-3, label %if.done-9

if.then-3:
	; IfStmt
	%20 = load i64, i64* %4, align 8
	%21 = icmp eq i64 %20, 0
	br i1 %21, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ReturnStmt
	ret void

if.done-5:
	; ForStmt
	br label %for.loop-6

for.loop-6:
	%25 = load i64, i64* %4, align 8
	%26 = load i64, i64* %1, align 8
	%27 = lshr i64 %25, %26
	%28 = icmp eq i64 %27, 0
	br i1 %28, label %for.body-7, label %for.done-8

for.body-7:
	; AssignStmt
	%29 = load i64, i64* %4, align 8
	%30 = mul i64 %29, 10
	store i64 %30, i64* %4
	%31 = load i64, i64* %2, align 8
	%32 = add i64 %31, 1
	store i64 %32, i64* %2
	br label %for.loop-6

for.done-8:
	; break
	br label %for.done-10

if.done-9:
	; c
	store i64 zeroinitializer, i64* %5
		; IndexExpr
	; SelectorExpr
	%33 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %34, i64 0, i32 2
	%36 = load i64, i64* %2, align 8
	%37 = trunc i64 %36 to i32
	%38 = getelementptr inbounds [384 x i8], [384 x i8]* %35, i64 0, i32 %37
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b6, i64 0, i32 0), i64 25}, i64 102, i64 22, i64 %36, i64 384)
	%39 = load i8, i8* %38, align 1
	%40 = zext i8 %39 to i64
	store i64 %40, i64* %5
	; AssignStmt
	%41 = load i64, i64* %4, align 8
	%42 = mul i64 %41, 10
	%43 = load i64, i64* %5, align 8
	%44 = add i64 %42, %43
	%45 = sub i64 %44, 48
	store i64 %45, i64* %4
	%46 = load i64, i64* %2, align 8
	%47 = add i64 %46, 1
	store i64 %47, i64* %2
	br label %for.loop-1

for.done-10:
	; AssignStmt
	; SelectorExpr
	%48 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%49 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %48, i64 0
	%50 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %49, i64 0, i32 1
	%51 = load i64, i64* %2, align 8
	%52 = sub i64 %51, 1
	%53 = load i64, i64* %50, align 8
	%54 = sub i64 %53, %52
	store i64 %54, i64* %50
	; mask
	store i64 zeroinitializer, i64* %6
		%55 = load i64, i64* %1, align 8
	%56 = shl i64 1, %55
	%57 = bitcast i64 %56 to i64
	%58 = sub i64 %57, 1
	%59 = bitcast i64 %58 to i64
	store i64 %59, i64* %6
	; ForStmt
	br label %for.loop-11

for.loop-11:
	%60 = load i64, i64* %2, align 8
	; SelectorExpr
	%61 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%62 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %61, i64 0
	%63 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %62, i64 0, i32 0
	%64 = load i64, i64* %63, align 8
	%65 = icmp slt i64 %60, %64
	br i1 %65, label %for.body-12, label %for.done-13

for.body-12:
	; c
	store i64 zeroinitializer, i64* %7
		; IndexExpr
	; SelectorExpr
	%66 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%67 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %66, i64 0
	%68 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %67, i64 0, i32 2
	%69 = load i64, i64* %2, align 8
	%70 = trunc i64 %69 to i32
	%71 = getelementptr inbounds [384 x i8], [384 x i8]* %68, i64 0, i32 %70
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b7, i64 0, i32 0), i64 25}, i64 110, i64 22, i64 %69, i64 384)
	%72 = load i8, i8* %71, align 1
	%73 = zext i8 %72 to i64
	store i64 %73, i64* %7
	; dig
	store i64 zeroinitializer, i64* %8
		%74 = load i64, i64* %4, align 8
	%75 = load i64, i64* %1, align 8
	%76 = lshr i64 %74, %75
	store i64 %76, i64* %8
	; AssignStmt
	%77 = load i64, i64* %6, align 8
	%78 = load i64, i64* %4, align 8
	%79 = and i64 %78, %77
	store i64 %79, i64* %4
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%80 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%81 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %80, i64 0
	%82 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %81, i64 0, i32 2
	%83 = load i64, i64* %3, align 8
	%84 = trunc i64 %83 to i32
	%85 = getelementptr inbounds [384 x i8], [384 x i8]* %82, i64 0, i32 %84
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b8, i64 0, i32 0), i64 25}, i64 113, i64 12, i64 %83, i64 384)
	%86 = load i64, i64* %8, align 8
	%87 = add i64 48, %86
	%88 = trunc i64 %87 to i8
	store i8 %88, i8* %85
	%89 = load i64, i64* %3, align 8
	%90 = add i64 %89, 1
	store i64 %90, i64* %3
	; AssignStmt
	%91 = load i64, i64* %4, align 8
	%92 = mul i64 %91, 10
	%93 = load i64, i64* %7, align 8
	%94 = add i64 %92, %93
	%95 = sub i64 %94, 48
	store i64 %95, i64* %4
	%96 = load i64, i64* %2, align 8
	%97 = add i64 %96, 1
	store i64 %97, i64* %2
	br label %for.loop-11

for.done-13:
	; ForStmt
	br label %for.loop-14

for.loop-14:
	%98 = load i64, i64* %4, align 8
	%99 = icmp ugt i64 %98, 0
	br i1 %99, label %for.body-15, label %for.done-21

for.body-15:
	; dig
	store i64 zeroinitializer, i64* %9
		%100 = load i64, i64* %4, align 8
	%101 = load i64, i64* %1, align 8
	%102 = lshr i64 %100, %101
	store i64 %102, i64* %9
	; AssignStmt
	%103 = load i64, i64* %6, align 8
	%104 = load i64, i64* %4, align 8
	%105 = and i64 %104, %103
	store i64 %105, i64* %4
	; IfStmt
	%106 = load i64, i64* %3, align 8
	%107 = icmp slt i64 %106, 384
	br i1 %107, label %if.then-16, label %if.else-17

if.then-16:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%108 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%109 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %108, i64 0
	%110 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %109, i64 0, i32 2
	%111 = load i64, i64* %3, align 8
	%112 = trunc i64 %111 to i32
	%113 = getelementptr inbounds [384 x i8], [384 x i8]* %110, i64 0, i32 %112
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5b9, i64 0, i32 0), i64 25}, i64 122, i64 13, i64 %111, i64 384)
	%114 = load i64, i64* %9, align 8
	%115 = add i64 48, %114
	%116 = trunc i64 %115 to i8
	store i8 %116, i8* %113
	%117 = load i64, i64* %3, align 8
	%118 = add i64 %117, 1
	store i64 %118, i64* %3
	br label %if.done-20

if.else-17:
	; IfStmt
	%119 = load i64, i64* %9, align 8
	%120 = icmp ugt i64 %119, 0
	br i1 %120, label %if.then-18, label %if.done-19

if.then-18:
	; AssignStmt
	; SelectorExpr
	%121 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%122 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %121, i64 0
	%123 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %122, i64 0, i32 4
	store i1 true, i1* %123
	br label %if.done-19

if.done-19:
	br label %if.done-20

if.done-20:
	; AssignStmt
	%124 = load i64, i64* %4, align 8
	%125 = mul i64 %124, 10
	store i64 %125, i64* %4
	br label %for.loop-14

for.done-21:
	; AssignStmt
	; SelectorExpr
	%126 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%127 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %126, i64 0
	%128 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %127, i64 0, i32 0
	%129 = load i64, i64* %3, align 8
	store i64 %129, i64* %128
	%130 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.trim(%decimal-42.Decimal* %130)
	ret void
}

define void @decimal-42.shift_left(%decimal-42.Decimal* %a, i64 %k) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %k, i64* %1
	; delta
	store i64 zeroinitializer, i64* %2
		%10 = load i64, i64* %1, align 8
	%11 = udiv i64 %10, 4
	%12 = bitcast i64 %11 to i64
	store i64 %12, i64* %2
	; r
	store i64 zeroinitializer, i64* %3
		; SelectorExpr
	%13 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%14 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %13, i64 0
	%15 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %14, i64 0, i32 0
	%16 = load i64, i64* %15, align 8
	store i64 %16, i64* %3
	; w
	store i64 zeroinitializer, i64* %4
		; SelectorExpr
	%17 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%18 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %17, i64 0
	%19 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %18, i64 0, i32 0
	%20 = load i64, i64* %19, align 8
	%21 = load i64, i64* %2, align 8
	%22 = add i64 %20, %21
	store i64 %22, i64* %4
	; n
	store i64 zeroinitializer, i64* %5
		; ForStmt
	%23 = load i64, i64* %3, align 8
	%24 = sub i64 %23, 1
	store i64 %24, i64* %3
	br label %for.loop-1

for.loop-1:
	%25 = load i64, i64* %3, align 8
	%26 = icmp sge i64 %25, 0
	br i1 %26, label %for.body-2, label %for.done-8

for.body-2:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%27 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%28 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %27, i64 0
	%29 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %28, i64 0, i32 2
	%30 = load i64, i64* %3, align 8
	%31 = trunc i64 %30 to i32
	%32 = getelementptr inbounds [384 x i8], [384 x i8]* %29, i64 0, i32 %31
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5ba, i64 0, i32 0), i64 25}, i64 143, i64 23, i64 %30, i64 384)
	%33 = load i8, i8* %32, align 1
	%34 = zext i8 %33 to i64
	%35 = sub i64 %34, 48
	%36 = load i64, i64* %1, align 8
	%37 = shl i64 %35, %36
	%38 = load i64, i64* %5, align 8
	%39 = add i64 %38, %37
	store i64 %39, i64* %5
	; quo
	store i64 zeroinitializer, i64* %6
		%40 = load i64, i64* %5, align 8
	%41 = udiv i64 %40, 10
	store i64 %41, i64* %6
	; rem
	store i64 zeroinitializer, i64* %7
		%42 = load i64, i64* %5, align 8
	%43 = load i64, i64* %6, align 8
	%44 = mul i64 10, %43
	%45 = sub i64 %42, %44
	store i64 %45, i64* %7
	%46 = load i64, i64* %4, align 8
	%47 = sub i64 %46, 1
	store i64 %47, i64* %4
	; IfStmt
	%48 = load i64, i64* %4, align 8
	%49 = icmp slt i64 %48, 384
	br i1 %49, label %if.then-3, label %if.else-4

if.then-3:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%50 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%51 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %50, i64 0
	%52 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %51, i64 0, i32 2
	%53 = load i64, i64* %4, align 8
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [384 x i8], [384 x i8]* %52, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5bb, i64 0, i32 0), i64 25}, i64 148, i64 13, i64 %53, i64 384)
	%56 = load i64, i64* %7, align 8
	%57 = add i64 48, %56
	%58 = trunc i64 %57 to i8
	store i8 %58, i8* %55
	br label %if.done-7

if.else-4:
	; IfStmt
	%59 = load i64, i64* %7, align 8
	%60 = icmp ne i64 %59, 0
	br i1 %60, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%61 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%62 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %61, i64 0
	%63 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %62, i64 0, i32 4
	store i1 true, i1* %63
	br label %if.done-6

if.done-6:
	br label %if.done-7

if.done-7:
	; AssignStmt
	%64 = load i64, i64* %6, align 8
	store i64 %64, i64* %5
	%65 = load i64, i64* %3, align 8
	%66 = sub i64 %65, 1
	store i64 %66, i64* %3
	br label %for.loop-1

for.done-8:
	; ForStmt
	br label %for.loop-9

for.loop-9:
	%67 = load i64, i64* %5, align 8
	%68 = icmp ugt i64 %67, 0
	br i1 %68, label %for.body-10, label %for.done-17

for.body-10:
	; quo
	store i64 zeroinitializer, i64* %8
		%69 = load i64, i64* %5, align 8
	%70 = udiv i64 %69, 10
	store i64 %70, i64* %8
	; rem
	store i64 zeroinitializer, i64* %9
		%71 = load i64, i64* %5, align 8
	%72 = load i64, i64* %8, align 8
	%73 = mul i64 10, %72
	%74 = sub i64 %71, %73
	store i64 %74, i64* %9
	%75 = load i64, i64* %4, align 8
	%76 = sub i64 %75, 1
	store i64 %76, i64* %4
	; IfStmt
	%77 = load i64, i64* %4, align 8
	%78 = icmp sle i64 0, %77
	br i1 %78, label %cmp.and-11, label %if.else-13

cmp.and-11:
	%79 = load i64, i64* %4, align 8
	%80 = icmp slt i64 %79, 384
	br i1 %80, label %if.then-12, label %if.else-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%81 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%82 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %81, i64 0
	%83 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %82, i64 0, i32 2
	%84 = load i64, i64* %4, align 8
	%85 = trunc i64 %84 to i32
	%86 = getelementptr inbounds [384 x i8], [384 x i8]* %83, i64 0, i32 %85
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5bc, i64 0, i32 0), i64 25}, i64 160, i64 13, i64 %84, i64 384)
	%87 = load i64, i64* %9, align 8
	%88 = add i64 48, %87
	%89 = trunc i64 %88 to i8
	store i8 %89, i8* %86
	br label %if.done-16

if.else-13:
	; IfStmt
	%90 = load i64, i64* %9, align 8
	%91 = icmp ne i64 %90, 0
	br i1 %91, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	; SelectorExpr
	%92 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%93 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %92, i64 0
	%94 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %93, i64 0, i32 4
	store i1 true, i1* %94
	br label %if.done-15

if.done-15:
	br label %if.done-16

if.done-16:
	; AssignStmt
	%95 = load i64, i64* %8, align 8
	store i64 %95, i64* %5
	br label %for.loop-9

for.done-17:
	; AssignStmt
	; SelectorExpr
	%96 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%97 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %96, i64 0
	%98 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %97, i64 0, i32 0
	%99 = load i64, i64* %2, align 8
	%100 = load i64, i64* %98, align 8
	%101 = add i64 %100, %99
	store i64 %101, i64* %98
	; AssignStmt
	; SelectorExpr
	%102 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%103 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %102, i64 0
	%104 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %103, i64 0, i32 0
	; min
	; SelectorExpr
	%105 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%106 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %105, i64 0
	%107 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %106, i64 0, i32 0
	%108 = load i64, i64* %107, align 8
	%109 = icmp slt i64 %108, 384
	%110 = select i1 %109, i64 %108, i64 384
	store i64 %110, i64* %104
	; AssignStmt
	; SelectorExpr
	%111 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%112 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %111, i64 0
	%113 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %112, i64 0, i32 1
	%114 = load i64, i64* %2, align 8
	%115 = load i64, i64* %113, align 8
	%116 = add i64 %115, %114
	store i64 %116, i64* %113
	%117 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.trim(%decimal-42.Decimal* %117)
	ret void
}

define void @decimal-42.shift(%decimal-42.Decimal* %a, i64 %k) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %k, i64* %1
	; MatchStmt
	; SelectorExpr
	%2 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%3 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %2, i64 0
	%4 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %3, i64 0, i32 0
	%5 = load i64, i64* %4, align 8
	%6 = icmp eq i64 %5, 0
	%7 = icmp eq i1 true, %6
	br i1 %7, label %match.case.body-2, label %match.case.next-1

match.case.next-1:
	%8 = load i64, i64* %1, align 8
	%9 = icmp sgt i64 %8, 0
	%10 = icmp eq i1 true, %9
	br i1 %10, label %match.fall.body-4, label %match.case.next-3

match.case.body-2:
	br label %match.done-13

match.case.next-3:
	%11 = load i64, i64* %1, align 8
	%12 = icmp slt i64 %11, 0
	%13 = icmp eq i1 true, %12
	br i1 %13, label %match.fall.body-9, label %match.case.next-8

match.fall.body-4:
	; ForStmt
	br label %for.loop-5

for.loop-5:
	%14 = load i64, i64* %1, align 8
	%15 = icmp sgt i64 %14, 60
	br i1 %15, label %for.body-6, label %for.done-7

for.body-6:
	%16 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.shift_left(%decimal-42.Decimal* %16, i64 60)
	; AssignStmt
	%17 = load i64, i64* %1, align 8
	%18 = sub i64 %17, 60
	store i64 %18, i64* %1
	br label %for.loop-5

for.done-7:
	%19 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%20 = load i64, i64* %1, align 8
	%21 = bitcast i64 %20 to i64
	call void @decimal-42.shift_left(%decimal-42.Decimal* %19, i64 %21)
	br label %match.done-13

match.case.next-8:
	br label %match.done-13

match.fall.body-9:
	; ForStmt
	br label %for.loop-10

for.loop-10:
	%22 = load i64, i64* %1, align 8
	%23 = icmp slt i64 %22, -60
	br i1 %23, label %for.body-11, label %for.done-12

for.body-11:
	%24 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.shift_right(%decimal-42.Decimal* %24, i64 60)
	; AssignStmt
	%25 = load i64, i64* %1, align 8
	%26 = add i64 %25, 60
	store i64 %26, i64* %1
	br label %for.loop-10

for.done-12:
	%27 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%28 = load i64, i64* %1, align 8
	%29 = sub i64 0, %28
	%30 = bitcast i64 %29 to i64
	call void @decimal-42.shift_right(%decimal-42.Decimal* %27, i64 %30)
	br label %match.done-13

match.done-13:
	ret void
}

define i1 @decimal-42.can_round_up(%decimal-42.Decimal* %a, i64 %nd) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret i1 false

if.done-3:
	; IfStmt
	; IndexExpr
	; SelectorExpr
	%10 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%11 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %10, i64 0
	%12 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %11, i64 0, i32 2
	%13 = load i64, i64* %1, align 8
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [384 x i8], [384 x i8]* %12, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5bd, i64 0, i32 0), i64 25}, i64 196, i64 14, i64 %13, i64 384)
	%16 = load i8, i8* %15, align 1
	%17 = icmp eq i8 %16, 53
	br i1 %17, label %cmp.and-4, label %if.done-10

cmp.and-4:
	%18 = load i64, i64* %1, align 8
	%19 = add i64 %18, 1
	; SelectorExpr
	%20 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%21 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %20, i64 0
	%22 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %21, i64 0, i32 0
	%23 = load i64, i64* %22, align 8
	%24 = icmp eq i64 %19, %23
	br i1 %24, label %if.then-5, label %if.done-10

if.then-5:
	; IfStmt
	; SelectorExpr
	%25 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%26 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %25, i64 0
	%27 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %26, i64 0, i32 4
	%28 = load i1, i1* %27, align 1
	br i1 %28, label %if.then-6, label %if.done-7

if.then-6:
	; ReturnStmt
	ret i1 true

if.done-7:
	; ReturnStmt
	%29 = load i64, i64* %1, align 8
	%30 = icmp sgt i64 %29, 0
	%31 = load i64, i64* %1, align 8
	%32 = icmp sgt i64 %31, 0
	br i1 %32, label %logical.cmp.rhs-8, label %logical.cmp.done-9

logical.cmp.rhs-8:
	; IndexExpr
	; SelectorExpr
	%33 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %34, i64 0, i32 2
	%36 = load i64, i64* %1, align 8
	%37 = sub i64 %36, 1
	%38 = trunc i64 %37 to i32
	%39 = getelementptr inbounds [384 x i8], [384 x i8]* %35, i64 0, i32 %38
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5be, i64 0, i32 0), i64 25}, i64 200, i64 30, i64 %37, i64 384)
	%40 = load i8, i8* %39, align 1
	%41 = sub i8 %40, 48
	%42 = urem i8 %41, 2
	%43 = icmp ne i8 %42, 0
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%44 = phi i1 [ false, %if.done-7 ], [ %43, %logical.cmp.rhs-8 ]
	ret i1 %44

if.done-10:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%45 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%46 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %45, i64 0
	%47 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %46, i64 0, i32 2
	%48 = load i64, i64* %1, align 8
	%49 = trunc i64 %48 to i32
	%50 = getelementptr inbounds [384 x i8], [384 x i8]* %47, i64 0, i32 %49
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5bf, i64 0, i32 0), i64 25}, i64 203, i64 18, i64 %48, i64 384)
	%51 = load i8, i8* %50, align 1
	%52 = icmp uge i8 %51, 53
	ret i1 %52
}

define void @decimal-42.round(%decimal-42.Decimal* %a, i64 %nd) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; IfStmt
	%10 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%11 = load i64, i64* %1, align 8
	%12 = call i1 @decimal-42.can_round_up(%decimal-42.Decimal* %10, i64 %11)
	br i1 %12, label %if.then-4, label %if.else-5

if.then-4:
	%13 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%14 = load i64, i64* %1, align 8
	call void @decimal-42.round_up(%decimal-42.Decimal* %13, i64 %14)
	br label %if.done-6

if.else-5:
	%15 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%16 = load i64, i64* %1, align 8
	call void @decimal-42.round_down(%decimal-42.Decimal* %15, i64 %16)
	br label %if.done-6

if.done-6:
	ret void
}

define void @decimal-42.round_up(%decimal-42.Decimal* %a, i64 %nd) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i8, align 1
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %nd, i64* %1
	; IfStmt
	%4 = load i64, i64* %1, align 8
	%5 = icmp slt i64 %4, 0
	br i1 %5, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%6 = load i64, i64* %1, align 8
	; SelectorExpr
	%7 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%8 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %7, i64 0
	%9 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %8, i64 0, i32 0
	%10 = load i64, i64* %9, align 8
	%11 = icmp sge i64 %6, %10
	br i1 %11, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; ForStmt
	; i
	store i64 zeroinitializer, i64* %2
		%12 = load i64, i64* %1, align 8
	%13 = sub i64 %12, 1
	store i64 %13, i64* %2
	br label %for.loop-4

for.loop-4:
	%14 = load i64, i64* %2, align 8
	%15 = icmp sge i64 %14, 0
	br i1 %15, label %for.body-5, label %for.done-8

for.body-5:
	; IfStmt
	; c
	store i8 zeroinitializer, i8* %3
		; IndexExpr
	; SelectorExpr
	%16 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%17 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %16, i64 0
	%18 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %17, i64 0, i32 2
	%19 = load i64, i64* %2, align 8
	%20 = trunc i64 %19 to i32
	%21 = getelementptr inbounds [384 x i8], [384 x i8]* %18, i64 0, i32 %20
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5c0, i64 0, i32 0), i64 25}, i64 219, i64 20, i64 %19, i64 384)
	%22 = load i8, i8* %21, align 1
	store i8 %22, i8* %3
	%23 = load i8, i8* %3, align 1
	%24 = icmp ult i8 %23, 57
	br i1 %24, label %if.then-6, label %if.done-7

if.then-6:
	; IndexExpr
	; SelectorExpr
	%25 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%26 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %25, i64 0
	%27 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %26, i64 0, i32 2
	%28 = load i64, i64* %2, align 8
	%29 = trunc i64 %28 to i32
	%30 = getelementptr inbounds [384 x i8], [384 x i8]* %27, i64 0, i32 %29
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5c1, i64 0, i32 0), i64 25}, i64 220, i64 13, i64 %28, i64 384)
	%31 = load i8, i8* %30, align 1
	%32 = add i8 %31, 1
	store i8 %32, i8* %30
	; AssignStmt
	; SelectorExpr
	%33 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %34, i64 0, i32 0
	%36 = load i64, i64* %2, align 8
	%37 = add i64 %36, 1
	store i64 %37, i64* %35
	; ReturnStmt
	ret void

if.done-7:
	%38 = load i64, i64* %2, align 8
	%39 = sub i64 %38, 1
	store i64 %39, i64* %2
	br label %for.loop-4

for.done-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%40 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%41 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %40, i64 0
	%42 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %41, i64 0, i32 2
	%43 = getelementptr inbounds [384 x i8], [384 x i8]* %42, i64 0, i32 0
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5c2, i64 0, i32 0), i64 25}, i64 227, i64 11, i64 0, i64 384)
	store i8 49, i8* %43
	; AssignStmt
	; SelectorExpr
	%44 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%45 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %44, i64 0
	%46 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %45, i64 0, i32 0
	store i64 1, i64* %46
	; SelectorExpr
	%47 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%48 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %47, i64 0
	%49 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %48, i64 0, i32 1
	%50 = load i64, i64* %49, align 8
	%51 = add i64 %50, 1
	store i64 %51, i64* %49
	ret void
}

define void @decimal-42.round_down(%decimal-42.Decimal* %a, i64 %nd) {
decls-0:
	%0 = alloca %decimal-42.Decimal*, align 8
	%1 = alloca i64, align 8
	store %decimal-42.Decimal* zeroinitializer, %decimal-42.Decimal** %0
		store %decimal-42.Decimal* %a, %decimal-42.Decimal** %0
	store i64 zeroinitializer, i64* %1
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; AssignStmt
	; SelectorExpr
	%10 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	%11 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %10, i64 0
	%12 = getelementptr inbounds %decimal-42.Decimal, %decimal-42.Decimal* %11, i64 0, i32 0
	%13 = load i64, i64* %1, align 8
	store i64 %13, i64* %12
	%14 = load %decimal-42.Decimal*, %decimal-42.Decimal** %0, align 8
	call void @decimal-42.trim(%decimal-42.Decimal* %14)
	ret void
}

define void @__$startup_runtime() noinline {
decls-0:
	%0 = call i64 @os_windows-29.get_std_handle(i64 -11)
	%1 = call i64 @os_windows-29.get_std_handle(i64 -12)
	store i64 %0, i64* @os_windows-29.stdout
	store i64 %1, i64* @os_windows-29.stderr
	%2 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%3 = getelementptr inbounds {%Type_Info*, i64, i64}, {%Type_Info*, i64, i64}* @__type_table, i64 0, i32 0
	store %Type_Info* %2, %Type_Info** %3
	%4 = getelementptr inbounds {%Type_Info*, i64, i64}, {%Type_Info*, i64, i64}* @__type_table, i64 0, i32 1
	store i64 317, i64* %4
	%5 = getelementptr inbounds {%Type_Info*, i64, i64}, {%Type_Info*, i64, i64}* @__type_table, i64 0, i32 2
	store i64 317, i64* %5
	%6 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%7 = getelementptr inbounds %Type_Info, %Type_Info* %6, i64 0, i32 1
	store i64 8, i64* %7
	%8 = getelementptr inbounds %Type_Info, %Type_Info* %6, i64 0, i32 2
	store i64 8, i64* %8
	; Type_Info_Pointer
	%9 = bitcast %Type_Info* %6 to %Type_Info.Pointer*
	%10 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%11 = bitcast %Type_Info* %10 to %Type_Info*
	%12 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9, i64 0, i32 2
	store %Type_Info* %11, %Type_Info** %12
	%13 = getelementptr inbounds %Type_Info, %Type_Info* %6, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %13
	%14 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%15 = getelementptr inbounds %Type_Info, %Type_Info* %14, i64 0, i32 1
	store i64 40, i64* %15
	%16 = getelementptr inbounds %Type_Info, %Type_Info* %14, i64 0, i32 2
	store i64 8, i64* %16
	; Type_Info_Named
	%17 = bitcast %Type_Info* %14 to %Type_Info.Named*
	%18 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 2
	%19 = bitcast %Type_Info* %18 to %Type_Info*
	%20 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %17, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5c3, i64 0, i32 0), i64 5}, %..string* %20
	%21 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %17, i64 0, i32 3
	store %Type_Info* %19, %Type_Info** %21
	%22 = getelementptr inbounds %Type_Info, %Type_Info* %14, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %22
	%23 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 2
	%24 = getelementptr inbounds %Type_Info, %Type_Info* %23, i64 0, i32 1
	store i64 40, i64* %24
	%25 = getelementptr inbounds %Type_Info, %Type_Info* %23, i64 0, i32 2
	store i64 8, i64* %25
	; Type_Info_Struct
	%26 = bitcast %Type_Info* %23 to %Type_Info.Struct*
	%27 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %26, i64 0, i32 2
	%28 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 4
	store i1 false, i1* %28
	%29 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 5
	store i1 true, i1* %29
	%30 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 6
	store i1 false, i1* %30
	%31 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 0
	%32 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 0
	%33 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 0
	%34 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 0
	%35 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%36 = bitcast %Type_Info* %35 to %Type_Info*
	%37 = getelementptr inbounds %Type_Info*, %Type_Info** %31, i64 0
	%38 = getelementptr inbounds i64, i64* %33, i64 0
	%39 = getelementptr inbounds i1, i1* %34, i64 0
	%40 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %40, %Type_Info** %37
	%41 = getelementptr inbounds %..string, %..string* %32, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5c4, i64 0, i32 0), i64 4}, %..string* %41
	store i64 0, i64* %38
	store i1 false, i1* %39
	%42 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%43 = bitcast %Type_Info* %42 to %Type_Info*
	%44 = getelementptr inbounds %Type_Info*, %Type_Info** %31, i64 1
	%45 = getelementptr inbounds i64, i64* %33, i64 1
	%46 = getelementptr inbounds i1, i1* %34, i64 1
	%47 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %47, %Type_Info** %44
	%48 = getelementptr inbounds %..string, %..string* %32, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5c5, i64 0, i32 0), i64 5}, %..string* %48
	store i64 8, i64* %45
	store i1 false, i1* %46
	%49 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%50 = bitcast %Type_Info* %49 to %Type_Info*
	%51 = getelementptr inbounds %Type_Info*, %Type_Info** %31, i64 2
	%52 = getelementptr inbounds i64, i64* %33, i64 2
	%53 = getelementptr inbounds i1, i1* %34, i64 2
	%54 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %54, %Type_Info** %51
	%55 = getelementptr inbounds %..string, %..string* %32, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5c6, i64 0, i32 0), i64 4}, %..string* %55
	store i64 16, i64* %52
	store i1 false, i1* %53
	%56 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%57 = bitcast %Type_Info* %56 to %Type_Info*
	%58 = getelementptr inbounds %Type_Info*, %Type_Info** %31, i64 3
	%59 = getelementptr inbounds i64, i64* %33, i64 3
	%60 = getelementptr inbounds i1, i1* %34, i64 3
	%61 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %61, %Type_Info** %58
	%62 = getelementptr inbounds %..string, %..string* %32, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5c7, i64 0, i32 0), i64 4}, %..string* %62
	store i64 32, i64* %59
	store i1 false, i1* %60
	%63 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 0
	%64 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %63, i64 0, i32 0
	store %Type_Info** %31, %Type_Info*** %64
	%65 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %63, i64 0, i32 1
	store i64 4, i64* %65
	%66 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %63, i64 0, i32 2
	store i64 4, i64* %66
	%67 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 1
	%68 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %67, i64 0, i32 0
	store %..string* %32, %..string** %68
	%69 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %67, i64 0, i32 1
	store i64 4, i64* %69
	%70 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %67, i64 0, i32 2
	store i64 4, i64* %70
	%71 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 2
	%72 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %71, i64 0, i32 0
	store i64* %33, i64** %72
	%73 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %71, i64 0, i32 1
	store i64 4, i64* %73
	%74 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %71, i64 0, i32 2
	store i64 4, i64* %74
	%75 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %27, i64 0, i32 3
	%76 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %75, i64 0, i32 0
	store i1* %34, i1** %76
	%77 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %75, i64 0, i32 1
	store i64 4, i64* %77
	%78 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %75, i64 0, i32 2
	store i64 4, i64* %78
	%79 = getelementptr inbounds %Type_Info, %Type_Info* %23, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %79
	%80 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%81 = getelementptr inbounds %Type_Info, %Type_Info* %80, i64 0, i32 1
	store i64 8, i64* %81
	%82 = getelementptr inbounds %Type_Info, %Type_Info* %80, i64 0, i32 2
	store i64 8, i64* %82
	; Type_Info_Basic
	%83 = bitcast %Type_Info* %80 to %Type_Info.Integer*
	%84 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %83, i64 0, i32 2
	store i1 true, i1* %84
	%85 = getelementptr inbounds %Type_Info, %Type_Info* %80, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %85
	%86 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%87 = getelementptr inbounds %Type_Info, %Type_Info* %86, i64 0, i32 1
	store i64 16, i64* %87
	%88 = getelementptr inbounds %Type_Info, %Type_Info* %86, i64 0, i32 2
	store i64 8, i64* %88
	; Type_Info_Basic
	%89 = bitcast %Type_Info* %86 to %Type_Info.String*
	%90 = getelementptr inbounds %Type_Info, %Type_Info* %86, i64 0, i32 4 ; UnionTagPtr
	store i64 6, i64* %90
	%91 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%92 = getelementptr inbounds %Type_Info, %Type_Info* %91, i64 0, i32 1
	store i64 8, i64* %92
	%93 = getelementptr inbounds %Type_Info, %Type_Info* %91, i64 0, i32 2
	store i64 8, i64* %93
	; Type_Info_Pointer
	%94 = bitcast %Type_Info* %91 to %Type_Info.Pointer*
	%95 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%96 = bitcast %Type_Info* %95 to %Type_Info*
	%97 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %94, i64 0, i32 2
	store %Type_Info* %96, %Type_Info** %97
	%98 = getelementptr inbounds %Type_Info, %Type_Info* %91, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %98
	%99 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%100 = getelementptr inbounds %Type_Info, %Type_Info* %99, i64 0, i32 1
	store i64 1, i64* %100
	%101 = getelementptr inbounds %Type_Info, %Type_Info* %99, i64 0, i32 2
	store i64 1, i64* %101
	; Type_Info_Basic
	%102 = bitcast %Type_Info* %99 to %Type_Info.Integer*
	%103 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %102, i64 0, i32 2
	store i1 false, i1* %103
	%104 = getelementptr inbounds %Type_Info, %Type_Info* %99, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %104
	%105 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%106 = getelementptr inbounds %Type_Info, %Type_Info* %105, i64 0, i32 1
	store i64 8, i64* %106
	%107 = getelementptr inbounds %Type_Info, %Type_Info* %105, i64 0, i32 2
	store i64 8, i64* %107
	; Type_Info_Pointer
	%108 = bitcast %Type_Info* %105 to %Type_Info.Pointer*
	%109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%110 = bitcast %Type_Info* %109 to %Type_Info*
	%111 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %108, i64 0, i32 2
	store %Type_Info* %110, %Type_Info** %111
	%112 = getelementptr inbounds %Type_Info, %Type_Info* %105, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %112
	%113 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%114 = getelementptr inbounds %Type_Info, %Type_Info* %113, i64 0, i32 1
	store i64 144, i64* %114
	%115 = getelementptr inbounds %Type_Info, %Type_Info* %113, i64 0, i32 2
	store i64 8, i64* %115
	; Type_Info_Named
	%116 = bitcast %Type_Info* %113 to %Type_Info.Named*
	%117 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 9
	%118 = bitcast %Type_Info* %117 to %Type_Info*
	%119 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %116, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5c8, i64 0, i32 0), i64 9}, %..string* %119
	%120 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %116, i64 0, i32 3
	store %Type_Info* %118, %Type_Info** %120
	%121 = getelementptr inbounds %Type_Info, %Type_Info* %113, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %121
	%122 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 9
	%123 = getelementptr inbounds %Type_Info, %Type_Info* %122, i64 0, i32 1
	store i64 144, i64* %123
	%124 = getelementptr inbounds %Type_Info, %Type_Info* %122, i64 0, i32 2
	store i64 8, i64* %124
	; Type_Info_Union
	%125 = bitcast %Type_Info* %122 to %Type_Info.Union*
	%126 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %125, i64 0, i32 2
	%127 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 4
	%128 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 4
	%129 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 4
	%130 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%131 = bitcast %Type_Info* %130 to %Type_Info*
	%132 = getelementptr inbounds %Type_Info*, %Type_Info** %127, i64 0
	%133 = getelementptr inbounds i64, i64* %129, i64 0
	%134 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %134, %Type_Info** %132
	%135 = getelementptr inbounds %..string, %..string* %128, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5c9, i64 0, i32 0), i64 4}, %..string* %135
	store i64 0, i64* %133
	%136 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%137 = bitcast %Type_Info* %136 to %Type_Info*
	%138 = getelementptr inbounds %Type_Info*, %Type_Info** %127, i64 1
	%139 = getelementptr inbounds i64, i64* %129, i64 1
	%140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %140, %Type_Info** %138
	%141 = getelementptr inbounds %..string, %..string* %128, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5ca, i64 0, i32 0), i64 5}, %..string* %141
	store i64 8, i64* %139
	%142 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %126, i64 0, i32 0
	%143 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %142, i64 0, i32 0
	store %Type_Info** %127, %Type_Info*** %143
	%144 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %142, i64 0, i32 1
	store i64 2, i64* %144
	%145 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %142, i64 0, i32 2
	store i64 2, i64* %145
	%146 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %126, i64 0, i32 1
	%147 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %146, i64 0, i32 0
	store %..string* %128, %..string** %147
	%148 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %146, i64 0, i32 1
	store i64 2, i64* %148
	%149 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %146, i64 0, i32 2
	store i64 2, i64* %149
	%150 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %126, i64 0, i32 2
	%151 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %150, i64 0, i32 0
	store i64* %129, i64** %151
	%152 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %150, i64 0, i32 1
	store i64 2, i64* %152
	%153 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %150, i64 0, i32 2
	store i64 2, i64* %153
	%154 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %125, i64 0, i32 3
	%155 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %125, i64 0, i32 4
	%156 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%157 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 6
	%158 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%159 = bitcast %Type_Info* %158 to %Type_Info*
	%160 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 0
	%161 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	store %Type_Info* %161, %Type_Info** %160
	%162 = getelementptr inbounds %..string, %..string* %156, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5cb, i64 0, i32 0), i64 5}, %..string* %162
	%163 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%164 = bitcast %Type_Info* %163 to %Type_Info*
	%165 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 1
	%166 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	store %Type_Info* %166, %Type_Info** %165
	%167 = getelementptr inbounds %..string, %..string* %156, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5cc, i64 0, i32 0), i64 7}, %..string* %167
	%168 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%169 = bitcast %Type_Info* %168 to %Type_Info*
	%170 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 2
	%171 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %171, %Type_Info** %170
	%172 = getelementptr inbounds %..string, %..string* %156, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5cd, i64 0, i32 0), i64 5}, %..string* %172
	%173 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%174 = bitcast %Type_Info* %173 to %Type_Info*
	%175 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 3
	%176 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	store %Type_Info* %176, %Type_Info** %175
	%177 = getelementptr inbounds %..string, %..string* %156, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5ce, i64 0, i32 0), i64 7}, %..string* %177
	%178 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%179 = bitcast %Type_Info* %178 to %Type_Info*
	%180 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 4
	%181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	store %Type_Info* %181, %Type_Info** %180
	%182 = getelementptr inbounds %..string, %..string* %156, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$5cf, i64 0, i32 0), i64 10}, %..string* %182
	%183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%184 = bitcast %Type_Info* %183 to %Type_Info*
	%185 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 5
	%186 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	store %Type_Info* %186, %Type_Info** %185
	%187 = getelementptr inbounds %..string, %..string* %156, i64 5
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5d0, i64 0, i32 0), i64 6}, %..string* %187
	%188 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%189 = bitcast %Type_Info* %188 to %Type_Info*
	%190 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 6
	%191 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	store %Type_Info* %191, %Type_Info** %190
	%192 = getelementptr inbounds %..string, %..string* %156, i64 6
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5d1, i64 0, i32 0), i64 7}, %..string* %192
	%193 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%194 = bitcast %Type_Info* %193 to %Type_Info*
	%195 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 7
	%196 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	store %Type_Info* %196, %Type_Info** %195
	%197 = getelementptr inbounds %..string, %..string* %156, i64 7
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5d2, i64 0, i32 0), i64 3}, %..string* %197
	%198 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%199 = bitcast %Type_Info* %198 to %Type_Info*
	%200 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 8
	%201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	store %Type_Info* %201, %Type_Info** %200
	%202 = getelementptr inbounds %..string, %..string* %156, i64 8
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5d3, i64 0, i32 0), i64 7}, %..string* %202
	%203 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%204 = bitcast %Type_Info* %203 to %Type_Info*
	%205 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 9
	%206 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	store %Type_Info* %206, %Type_Info** %205
	%207 = getelementptr inbounds %..string, %..string* %156, i64 9
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5d4, i64 0, i32 0), i64 6}, %..string* %207
	%208 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%209 = bitcast %Type_Info* %208 to %Type_Info*
	%210 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 10
	%211 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	store %Type_Info* %211, %Type_Info** %210
	%212 = getelementptr inbounds %..string, %..string* %156, i64 10
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5d5, i64 0, i32 0), i64 9}, %..string* %212
	%213 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%214 = bitcast %Type_Info* %213 to %Type_Info*
	%215 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 11
	%216 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	store %Type_Info* %216, %Type_Info** %215
	%217 = getelementptr inbounds %..string, %..string* %156, i64 11
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5d6, i64 0, i32 0), i64 5}, %..string* %217
	%218 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%219 = bitcast %Type_Info* %218 to %Type_Info*
	%220 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 12
	%221 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	store %Type_Info* %221, %Type_Info** %220
	%222 = getelementptr inbounds %..string, %..string* %156, i64 12
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5d7, i64 0, i32 0), i64 13}, %..string* %222
	%223 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%224 = bitcast %Type_Info* %223 to %Type_Info*
	%225 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 13
	%226 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	store %Type_Info* %226, %Type_Info** %225
	%227 = getelementptr inbounds %..string, %..string* %156, i64 13
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5d8, i64 0, i32 0), i64 5}, %..string* %227
	%228 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%229 = bitcast %Type_Info* %228 to %Type_Info*
	%230 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 14
	%231 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	store %Type_Info* %231, %Type_Info** %230
	%232 = getelementptr inbounds %..string, %..string* %156, i64 14
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5d9, i64 0, i32 0), i64 6}, %..string* %232
	%233 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%234 = bitcast %Type_Info* %233 to %Type_Info*
	%235 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 15
	%236 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	store %Type_Info* %236, %Type_Info** %235
	%237 = getelementptr inbounds %..string, %..string* %156, i64 15
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5da, i64 0, i32 0), i64 5}, %..string* %237
	%238 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%239 = bitcast %Type_Info* %238 to %Type_Info*
	%240 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 16
	%241 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	store %Type_Info* %241, %Type_Info** %240
	%242 = getelementptr inbounds %..string, %..string* %156, i64 16
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5db, i64 0, i32 0), i64 6}, %..string* %242
	%243 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%244 = bitcast %Type_Info* %243 to %Type_Info*
	%245 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 17
	%246 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	store %Type_Info* %246, %Type_Info** %245
	%247 = getelementptr inbounds %..string, %..string* %156, i64 17
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5dc, i64 0, i32 0), i64 9}, %..string* %247
	%248 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%249 = bitcast %Type_Info* %248 to %Type_Info*
	%250 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 18
	%251 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	store %Type_Info* %251, %Type_Info** %250
	%252 = getelementptr inbounds %..string, %..string* %156, i64 18
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5dd, i64 0, i32 0), i64 5}, %..string* %252
	%253 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%254 = bitcast %Type_Info* %253 to %Type_Info*
	%255 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 19
	%256 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	store %Type_Info* %256, %Type_Info** %255
	%257 = getelementptr inbounds %..string, %..string* %156, i64 19
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5de, i64 0, i32 0), i64 4}, %..string* %257
	%258 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%259 = bitcast %Type_Info* %258 to %Type_Info*
	%260 = getelementptr inbounds %Type_Info*, %Type_Info** %157, i64 20
	%261 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	store %Type_Info* %261, %Type_Info** %260
	%262 = getelementptr inbounds %..string, %..string* %156, i64 20
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5df, i64 0, i32 0), i64 3}, %..string* %262
	%263 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %154, i64 0, i32 0
	store %..string* %156, %..string** %263
	%264 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %154, i64 0, i32 1
	store i64 21, i64* %264
	%265 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %154, i64 0, i32 2
	store i64 21, i64* %265
	%266 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %155, i64 0, i32 0
	store %Type_Info** %157, %Type_Info*** %266
	%267 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %155, i64 0, i32 1
	store i64 21, i64* %267
	%268 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %155, i64 0, i32 2
	store i64 21, i64* %268
	%269 = getelementptr inbounds %Type_Info, %Type_Info* %122, i64 0, i32 4 ; UnionTagPtr
	store i64 19, i64* %269
	%270 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%271 = getelementptr inbounds %Type_Info, %Type_Info* %270, i64 0, i32 1
	store i64 24, i64* %271
	%272 = getelementptr inbounds %Type_Info, %Type_Info* %270, i64 0, i32 2
	store i64 8, i64* %272
	; Type_Info_Named
	%273 = bitcast %Type_Info* %270 to %Type_Info.Named*
	%274 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 11
	%275 = bitcast %Type_Info* %274 to %Type_Info*
	%276 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %273, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5e0, i64 0, i32 0), i64 7}, %..string* %276
	%277 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %273, i64 0, i32 3
	store %Type_Info* %275, %Type_Info** %277
	%278 = getelementptr inbounds %Type_Info, %Type_Info* %270, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %278
	%279 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 11
	%280 = getelementptr inbounds %Type_Info, %Type_Info* %279, i64 0, i32 1
	store i64 24, i64* %280
	%281 = getelementptr inbounds %Type_Info, %Type_Info* %279, i64 0, i32 2
	store i64 8, i64* %281
	; Type_Info_Struct
	%282 = bitcast %Type_Info* %279 to %Type_Info.Struct*
	%283 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %282, i64 0, i32 2
	%284 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 4
	store i1 false, i1* %284
	%285 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 5
	store i1 true, i1* %285
	%286 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 6
	store i1 false, i1* %286
	%287 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 27
	%288 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 27
	%289 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%290 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 4
	%291 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%292 = bitcast %Type_Info* %291 to %Type_Info*
	%293 = getelementptr inbounds %Type_Info*, %Type_Info** %287, i64 0
	%294 = getelementptr inbounds i64, i64* %289, i64 0
	%295 = getelementptr inbounds i1, i1* %290, i64 0
	%296 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %296, %Type_Info** %293
	%297 = getelementptr inbounds %..string, %..string* %288, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5e1, i64 0, i32 0), i64 4}, %..string* %297
	store i64 0, i64* %294
	store i1 false, i1* %295
	%298 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%299 = bitcast %Type_Info* %298 to %Type_Info*
	%300 = getelementptr inbounds %Type_Info*, %Type_Info** %287, i64 1
	%301 = getelementptr inbounds i64, i64* %289, i64 1
	%302 = getelementptr inbounds i1, i1* %290, i64 1
	%303 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %303, %Type_Info** %300
	%304 = getelementptr inbounds %..string, %..string* %288, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5e2, i64 0, i32 0), i64 5}, %..string* %304
	store i64 8, i64* %301
	store i1 false, i1* %302
	%305 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%306 = bitcast %Type_Info* %305 to %Type_Info*
	%307 = getelementptr inbounds %Type_Info*, %Type_Info** %287, i64 2
	%308 = getelementptr inbounds i64, i64* %289, i64 2
	%309 = getelementptr inbounds i1, i1* %290, i64 2
	%310 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %310, %Type_Info** %307
	%311 = getelementptr inbounds %..string, %..string* %288, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5e3, i64 0, i32 0), i64 6}, %..string* %311
	store i64 16, i64* %308
	store i1 false, i1* %309
	%312 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 0
	%313 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %312, i64 0, i32 0
	store %Type_Info** %287, %Type_Info*** %313
	%314 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %312, i64 0, i32 1
	store i64 3, i64* %314
	%315 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %312, i64 0, i32 2
	store i64 3, i64* %315
	%316 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 1
	%317 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %316, i64 0, i32 0
	store %..string* %288, %..string** %317
	%318 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %316, i64 0, i32 1
	store i64 3, i64* %318
	%319 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %316, i64 0, i32 2
	store i64 3, i64* %319
	%320 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 2
	%321 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %320, i64 0, i32 0
	store i64* %289, i64** %321
	%322 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %320, i64 0, i32 1
	store i64 3, i64* %322
	%323 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %320, i64 0, i32 2
	store i64 3, i64* %323
	%324 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %283, i64 0, i32 3
	%325 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %324, i64 0, i32 0
	store i1* %290, i1** %325
	%326 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %324, i64 0, i32 1
	store i64 3, i64* %326
	%327 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %324, i64 0, i32 2
	store i64 3, i64* %327
	%328 = getelementptr inbounds %Type_Info, %Type_Info* %279, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %328
	%329 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%330 = getelementptr inbounds %Type_Info, %Type_Info* %329, i64 0, i32 1
	store i64 1, i64* %330
	%331 = getelementptr inbounds %Type_Info, %Type_Info* %329, i64 0, i32 2
	store i64 1, i64* %331
	; Type_Info_Basic
	%332 = bitcast %Type_Info* %329 to %Type_Info.Boolean*
	%333 = getelementptr inbounds %Type_Info, %Type_Info* %329, i64 0, i32 4 ; UnionTagPtr
	store i64 7, i64* %333
	%334 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%335 = getelementptr inbounds %Type_Info, %Type_Info* %334, i64 0, i32 1
	store i64 16, i64* %335
	%336 = getelementptr inbounds %Type_Info, %Type_Info* %334, i64 0, i32 2
	store i64 8, i64* %336
	; Type_Info_Named
	%337 = bitcast %Type_Info* %334 to %Type_Info.Named*
	%338 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%339 = bitcast %Type_Info* %338 to %Type_Info*
	%340 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %337, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5e4, i64 0, i32 0), i64 5}, %..string* %340
	%341 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %337, i64 0, i32 3
	store %Type_Info* %339, %Type_Info** %341
	%342 = getelementptr inbounds %Type_Info, %Type_Info* %334, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %342
	%343 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%344 = getelementptr inbounds %Type_Info, %Type_Info* %343, i64 0, i32 1
	store i64 16, i64* %344
	%345 = getelementptr inbounds %Type_Info, %Type_Info* %343, i64 0, i32 2
	store i64 8, i64* %345
	; Type_Info_Struct
	%346 = bitcast %Type_Info* %343 to %Type_Info.Struct*
	%347 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %346, i64 0, i32 2
	%348 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 4
	store i1 false, i1* %348
	%349 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 5
	store i1 true, i1* %349
	%350 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 6
	store i1 false, i1* %350
	%351 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 30
	%352 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 30
	%353 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 9
	%354 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 7
	%355 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%356 = bitcast %Type_Info* %355 to %Type_Info*
	%357 = getelementptr inbounds %Type_Info*, %Type_Info** %351, i64 0
	%358 = getelementptr inbounds i64, i64* %353, i64 0
	%359 = getelementptr inbounds i1, i1* %354, i64 0
	%360 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %360, %Type_Info** %357
	%361 = getelementptr inbounds %..string, %..string* %352, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5e5, i64 0, i32 0), i64 4}, %..string* %361
	store i64 0, i64* %358
	store i1 false, i1* %359
	%362 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%363 = bitcast %Type_Info* %362 to %Type_Info*
	%364 = getelementptr inbounds %Type_Info*, %Type_Info** %351, i64 1
	%365 = getelementptr inbounds i64, i64* %353, i64 1
	%366 = getelementptr inbounds i1, i1* %354, i64 1
	%367 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %367, %Type_Info** %364
	%368 = getelementptr inbounds %..string, %..string* %352, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5e6, i64 0, i32 0), i64 5}, %..string* %368
	store i64 8, i64* %365
	store i1 false, i1* %366
	%369 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 0
	%370 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %369, i64 0, i32 0
	store %Type_Info** %351, %Type_Info*** %370
	%371 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %369, i64 0, i32 1
	store i64 2, i64* %371
	%372 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %369, i64 0, i32 2
	store i64 2, i64* %372
	%373 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 1
	%374 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %373, i64 0, i32 0
	store %..string* %352, %..string** %374
	%375 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %373, i64 0, i32 1
	store i64 2, i64* %375
	%376 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %373, i64 0, i32 2
	store i64 2, i64* %376
	%377 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 2
	%378 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %377, i64 0, i32 0
	store i64* %353, i64** %378
	%379 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %377, i64 0, i32 1
	store i64 2, i64* %379
	%380 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %377, i64 0, i32 2
	store i64 2, i64* %380
	%381 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %347, i64 0, i32 3
	%382 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %381, i64 0, i32 0
	store i1* %354, i1** %382
	%383 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %381, i64 0, i32 1
	store i64 2, i64* %383
	%384 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %381, i64 0, i32 2
	store i64 2, i64* %384
	%385 = getelementptr inbounds %Type_Info, %Type_Info* %343, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %385
	%386 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%387 = getelementptr inbounds %Type_Info, %Type_Info* %386, i64 0, i32 1
	store i64 16, i64* %387
	%388 = getelementptr inbounds %Type_Info, %Type_Info* %386, i64 0, i32 2
	store i64 8, i64* %388
	; Type_Info_Named
	%389 = bitcast %Type_Info* %386 to %Type_Info.Named*
	%390 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%391 = bitcast %Type_Info* %390 to %Type_Info*
	%392 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %389, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5e7, i64 0, i32 0), i64 7}, %..string* %392
	%393 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %389, i64 0, i32 3
	store %Type_Info* %391, %Type_Info** %393
	%394 = getelementptr inbounds %Type_Info, %Type_Info* %386, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %394
	%395 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%396 = getelementptr inbounds %Type_Info, %Type_Info* %395, i64 0, i32 1
	store i64 16, i64* %396
	%397 = getelementptr inbounds %Type_Info, %Type_Info* %395, i64 0, i32 2
	store i64 8, i64* %397
	; Type_Info_Struct
	%398 = bitcast %Type_Info* %395 to %Type_Info.Struct*
	%399 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %398, i64 0, i32 2
	%400 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 4
	store i1 false, i1* %400
	%401 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 5
	store i1 true, i1* %401
	%402 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 6
	store i1 false, i1* %402
	%403 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 32
	%404 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 32
	%405 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 11
	%406 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 9
	%407 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%408 = bitcast %Type_Info* %407 to %Type_Info*
	%409 = getelementptr inbounds %Type_Info*, %Type_Info** %403, i64 0
	%410 = getelementptr inbounds i64, i64* %405, i64 0
	%411 = getelementptr inbounds i1, i1* %406, i64 0
	%412 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %412, %Type_Info** %409
	%413 = getelementptr inbounds %..string, %..string* %404, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5e8, i64 0, i32 0), i64 4}, %..string* %413
	store i64 0, i64* %410
	store i1 false, i1* %411
	%414 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%415 = bitcast %Type_Info* %414 to %Type_Info*
	%416 = getelementptr inbounds %Type_Info*, %Type_Info** %403, i64 1
	%417 = getelementptr inbounds i64, i64* %405, i64 1
	%418 = getelementptr inbounds i1, i1* %406, i64 1
	%419 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %419, %Type_Info** %416
	%420 = getelementptr inbounds %..string, %..string* %404, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5e9, i64 0, i32 0), i64 5}, %..string* %420
	store i64 8, i64* %417
	store i1 false, i1* %418
	%421 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 0
	%422 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %421, i64 0, i32 0
	store %Type_Info** %403, %Type_Info*** %422
	%423 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %421, i64 0, i32 1
	store i64 2, i64* %423
	%424 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %421, i64 0, i32 2
	store i64 2, i64* %424
	%425 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 1
	%426 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %425, i64 0, i32 0
	store %..string* %404, %..string** %426
	%427 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %425, i64 0, i32 1
	store i64 2, i64* %427
	%428 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %425, i64 0, i32 2
	store i64 2, i64* %428
	%429 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 2
	%430 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %429, i64 0, i32 0
	store i64* %405, i64** %430
	%431 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %429, i64 0, i32 1
	store i64 2, i64* %431
	%432 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %429, i64 0, i32 2
	store i64 2, i64* %432
	%433 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %399, i64 0, i32 3
	%434 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %433, i64 0, i32 0
	store i1* %406, i1** %434
	%435 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %433, i64 0, i32 1
	store i64 2, i64* %435
	%436 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %433, i64 0, i32 2
	store i64 2, i64* %436
	%437 = getelementptr inbounds %Type_Info, %Type_Info* %395, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %437
	%438 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%439 = getelementptr inbounds %Type_Info, %Type_Info* %438, i64 0, i32 1
	store i64 16, i64* %439
	%440 = getelementptr inbounds %Type_Info, %Type_Info* %438, i64 0, i32 2
	store i64 8, i64* %440
	; Type_Info_Named
	%441 = bitcast %Type_Info* %438 to %Type_Info.Named*
	%442 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%443 = bitcast %Type_Info* %442 to %Type_Info*
	%444 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %441, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$5ea, i64 0, i32 0), i64 10}, %..string* %444
	%445 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %441, i64 0, i32 3
	store %Type_Info* %443, %Type_Info** %445
	%446 = getelementptr inbounds %Type_Info, %Type_Info* %438, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %446
	%447 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%448 = getelementptr inbounds %Type_Info, %Type_Info* %447, i64 0, i32 1
	store i64 16, i64* %448
	%449 = getelementptr inbounds %Type_Info, %Type_Info* %447, i64 0, i32 2
	store i64 8, i64* %449
	; Type_Info_Struct
	%450 = bitcast %Type_Info* %447 to %Type_Info.Struct*
	%451 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %450, i64 0, i32 2
	%452 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 4
	store i1 false, i1* %452
	%453 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 5
	store i1 true, i1* %453
	%454 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 6
	store i1 false, i1* %454
	%455 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 34
	%456 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 34
	%457 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 13
	%458 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 11
	%459 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%460 = bitcast %Type_Info* %459 to %Type_Info*
	%461 = getelementptr inbounds %Type_Info*, %Type_Info** %455, i64 0
	%462 = getelementptr inbounds i64, i64* %457, i64 0
	%463 = getelementptr inbounds i1, i1* %458, i64 0
	%464 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %464, %Type_Info** %461
	%465 = getelementptr inbounds %..string, %..string* %456, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5eb, i64 0, i32 0), i64 4}, %..string* %465
	store i64 0, i64* %462
	store i1 false, i1* %463
	%466 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%467 = bitcast %Type_Info* %466 to %Type_Info*
	%468 = getelementptr inbounds %Type_Info*, %Type_Info** %455, i64 1
	%469 = getelementptr inbounds i64, i64* %457, i64 1
	%470 = getelementptr inbounds i1, i1* %458, i64 1
	%471 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %471, %Type_Info** %468
	%472 = getelementptr inbounds %..string, %..string* %456, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5ec, i64 0, i32 0), i64 5}, %..string* %472
	store i64 8, i64* %469
	store i1 false, i1* %470
	%473 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 0
	%474 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %473, i64 0, i32 0
	store %Type_Info** %455, %Type_Info*** %474
	%475 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %473, i64 0, i32 1
	store i64 2, i64* %475
	%476 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %473, i64 0, i32 2
	store i64 2, i64* %476
	%477 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 1
	%478 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %477, i64 0, i32 0
	store %..string* %456, %..string** %478
	%479 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %477, i64 0, i32 1
	store i64 2, i64* %479
	%480 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %477, i64 0, i32 2
	store i64 2, i64* %480
	%481 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 2
	%482 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %481, i64 0, i32 0
	store i64* %457, i64** %482
	%483 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %481, i64 0, i32 1
	store i64 2, i64* %483
	%484 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %481, i64 0, i32 2
	store i64 2, i64* %484
	%485 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %451, i64 0, i32 3
	%486 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %485, i64 0, i32 0
	store i1* %458, i1** %486
	%487 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %485, i64 0, i32 1
	store i64 2, i64* %487
	%488 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %485, i64 0, i32 2
	store i64 2, i64* %488
	%489 = getelementptr inbounds %Type_Info, %Type_Info* %447, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %489
	%490 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%491 = getelementptr inbounds %Type_Info, %Type_Info* %490, i64 0, i32 1
	store i64 16, i64* %491
	%492 = getelementptr inbounds %Type_Info, %Type_Info* %490, i64 0, i32 2
	store i64 8, i64* %492
	; Type_Info_Named
	%493 = bitcast %Type_Info* %490 to %Type_Info.Named*
	%494 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%495 = bitcast %Type_Info* %494 to %Type_Info*
	%496 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %493, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5ed, i64 0, i32 0), i64 6}, %..string* %496
	%497 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %493, i64 0, i32 3
	store %Type_Info* %495, %Type_Info** %497
	%498 = getelementptr inbounds %Type_Info, %Type_Info* %490, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %498
	%499 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%500 = getelementptr inbounds %Type_Info, %Type_Info* %499, i64 0, i32 1
	store i64 16, i64* %500
	%501 = getelementptr inbounds %Type_Info, %Type_Info* %499, i64 0, i32 2
	store i64 8, i64* %501
	; Type_Info_Struct
	%502 = bitcast %Type_Info* %499 to %Type_Info.Struct*
	%503 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %502, i64 0, i32 2
	%504 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 4
	store i1 false, i1* %504
	%505 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 5
	store i1 true, i1* %505
	%506 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 6
	store i1 false, i1* %506
	%507 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 36
	%508 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 36
	%509 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 15
	%510 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 13
	%511 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%512 = bitcast %Type_Info* %511 to %Type_Info*
	%513 = getelementptr inbounds %Type_Info*, %Type_Info** %507, i64 0
	%514 = getelementptr inbounds i64, i64* %509, i64 0
	%515 = getelementptr inbounds i1, i1* %510, i64 0
	%516 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %516, %Type_Info** %513
	%517 = getelementptr inbounds %..string, %..string* %508, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5ee, i64 0, i32 0), i64 4}, %..string* %517
	store i64 0, i64* %514
	store i1 false, i1* %515
	%518 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%519 = bitcast %Type_Info* %518 to %Type_Info*
	%520 = getelementptr inbounds %Type_Info*, %Type_Info** %507, i64 1
	%521 = getelementptr inbounds i64, i64* %509, i64 1
	%522 = getelementptr inbounds i1, i1* %510, i64 1
	%523 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %523, %Type_Info** %520
	%524 = getelementptr inbounds %..string, %..string* %508, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5ef, i64 0, i32 0), i64 5}, %..string* %524
	store i64 8, i64* %521
	store i1 false, i1* %522
	%525 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 0
	%526 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %525, i64 0, i32 0
	store %Type_Info** %507, %Type_Info*** %526
	%527 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %525, i64 0, i32 1
	store i64 2, i64* %527
	%528 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %525, i64 0, i32 2
	store i64 2, i64* %528
	%529 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 1
	%530 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %529, i64 0, i32 0
	store %..string* %508, %..string** %530
	%531 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %529, i64 0, i32 1
	store i64 2, i64* %531
	%532 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %529, i64 0, i32 2
	store i64 2, i64* %532
	%533 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 2
	%534 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %533, i64 0, i32 0
	store i64* %509, i64** %534
	%535 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %533, i64 0, i32 1
	store i64 2, i64* %535
	%536 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %533, i64 0, i32 2
	store i64 2, i64* %536
	%537 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %503, i64 0, i32 3
	%538 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %537, i64 0, i32 0
	store i1* %510, i1** %538
	%539 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %537, i64 0, i32 1
	store i64 2, i64* %539
	%540 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %537, i64 0, i32 2
	store i64 2, i64* %540
	%541 = getelementptr inbounds %Type_Info, %Type_Info* %499, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %541
	%542 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%543 = getelementptr inbounds %Type_Info, %Type_Info* %542, i64 0, i32 1
	store i64 16, i64* %543
	%544 = getelementptr inbounds %Type_Info, %Type_Info* %542, i64 0, i32 2
	store i64 8, i64* %544
	; Type_Info_Named
	%545 = bitcast %Type_Info* %542 to %Type_Info.Named*
	%546 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%547 = bitcast %Type_Info* %546 to %Type_Info*
	%548 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %545, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5f0, i64 0, i32 0), i64 7}, %..string* %548
	%549 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %545, i64 0, i32 3
	store %Type_Info* %547, %Type_Info** %549
	%550 = getelementptr inbounds %Type_Info, %Type_Info* %542, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %550
	%551 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%552 = getelementptr inbounds %Type_Info, %Type_Info* %551, i64 0, i32 1
	store i64 16, i64* %552
	%553 = getelementptr inbounds %Type_Info, %Type_Info* %551, i64 0, i32 2
	store i64 8, i64* %553
	; Type_Info_Struct
	%554 = bitcast %Type_Info* %551 to %Type_Info.Struct*
	%555 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %554, i64 0, i32 2
	%556 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 4
	store i1 false, i1* %556
	%557 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 5
	store i1 true, i1* %557
	%558 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 6
	store i1 false, i1* %558
	%559 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 38
	%560 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 38
	%561 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 17
	%562 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 15
	%563 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%564 = bitcast %Type_Info* %563 to %Type_Info*
	%565 = getelementptr inbounds %Type_Info*, %Type_Info** %559, i64 0
	%566 = getelementptr inbounds i64, i64* %561, i64 0
	%567 = getelementptr inbounds i1, i1* %562, i64 0
	%568 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %568, %Type_Info** %565
	%569 = getelementptr inbounds %..string, %..string* %560, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5f1, i64 0, i32 0), i64 4}, %..string* %569
	store i64 0, i64* %566
	store i1 false, i1* %567
	%570 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%571 = bitcast %Type_Info* %570 to %Type_Info*
	%572 = getelementptr inbounds %Type_Info*, %Type_Info** %559, i64 1
	%573 = getelementptr inbounds i64, i64* %561, i64 1
	%574 = getelementptr inbounds i1, i1* %562, i64 1
	%575 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %575, %Type_Info** %572
	%576 = getelementptr inbounds %..string, %..string* %560, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f2, i64 0, i32 0), i64 5}, %..string* %576
	store i64 8, i64* %573
	store i1 false, i1* %574
	%577 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 0
	%578 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %577, i64 0, i32 0
	store %Type_Info** %559, %Type_Info*** %578
	%579 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %577, i64 0, i32 1
	store i64 2, i64* %579
	%580 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %577, i64 0, i32 2
	store i64 2, i64* %580
	%581 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 1
	%582 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %581, i64 0, i32 0
	store %..string* %560, %..string** %582
	%583 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %581, i64 0, i32 1
	store i64 2, i64* %583
	%584 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %581, i64 0, i32 2
	store i64 2, i64* %584
	%585 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 2
	%586 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %585, i64 0, i32 0
	store i64* %561, i64** %586
	%587 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %585, i64 0, i32 1
	store i64 2, i64* %587
	%588 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %585, i64 0, i32 2
	store i64 2, i64* %588
	%589 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %555, i64 0, i32 3
	%590 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %589, i64 0, i32 0
	store i1* %562, i1** %590
	%591 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %589, i64 0, i32 1
	store i64 2, i64* %591
	%592 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %589, i64 0, i32 2
	store i64 2, i64* %592
	%593 = getelementptr inbounds %Type_Info, %Type_Info* %551, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %593
	%594 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%595 = getelementptr inbounds %Type_Info, %Type_Info* %594, i64 0, i32 1
	store i64 16, i64* %595
	%596 = getelementptr inbounds %Type_Info, %Type_Info* %594, i64 0, i32 2
	store i64 8, i64* %596
	; Type_Info_Named
	%597 = bitcast %Type_Info* %594 to %Type_Info.Named*
	%598 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%599 = bitcast %Type_Info* %598 to %Type_Info*
	%600 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %597, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5f3, i64 0, i32 0), i64 3}, %..string* %600
	%601 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %597, i64 0, i32 3
	store %Type_Info* %599, %Type_Info** %601
	%602 = getelementptr inbounds %Type_Info, %Type_Info* %594, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %602
	%603 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%604 = getelementptr inbounds %Type_Info, %Type_Info* %603, i64 0, i32 1
	store i64 16, i64* %604
	%605 = getelementptr inbounds %Type_Info, %Type_Info* %603, i64 0, i32 2
	store i64 8, i64* %605
	; Type_Info_Struct
	%606 = bitcast %Type_Info* %603 to %Type_Info.Struct*
	%607 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %606, i64 0, i32 2
	%608 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 4
	store i1 false, i1* %608
	%609 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 5
	store i1 true, i1* %609
	%610 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 6
	store i1 false, i1* %610
	%611 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 40
	%612 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 40
	%613 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 19
	%614 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 17
	%615 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%616 = bitcast %Type_Info* %615 to %Type_Info*
	%617 = getelementptr inbounds %Type_Info*, %Type_Info** %611, i64 0
	%618 = getelementptr inbounds i64, i64* %613, i64 0
	%619 = getelementptr inbounds i1, i1* %614, i64 0
	%620 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %620, %Type_Info** %617
	%621 = getelementptr inbounds %..string, %..string* %612, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5f4, i64 0, i32 0), i64 4}, %..string* %621
	store i64 0, i64* %618
	store i1 false, i1* %619
	%622 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%623 = bitcast %Type_Info* %622 to %Type_Info*
	%624 = getelementptr inbounds %Type_Info*, %Type_Info** %611, i64 1
	%625 = getelementptr inbounds i64, i64* %613, i64 1
	%626 = getelementptr inbounds i1, i1* %614, i64 1
	%627 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %627, %Type_Info** %624
	%628 = getelementptr inbounds %..string, %..string* %612, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f5, i64 0, i32 0), i64 5}, %..string* %628
	store i64 8, i64* %625
	store i1 false, i1* %626
	%629 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 0
	%630 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %629, i64 0, i32 0
	store %Type_Info** %611, %Type_Info*** %630
	%631 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %629, i64 0, i32 1
	store i64 2, i64* %631
	%632 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %629, i64 0, i32 2
	store i64 2, i64* %632
	%633 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 1
	%634 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %633, i64 0, i32 0
	store %..string* %612, %..string** %634
	%635 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %633, i64 0, i32 1
	store i64 2, i64* %635
	%636 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %633, i64 0, i32 2
	store i64 2, i64* %636
	%637 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 2
	%638 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %637, i64 0, i32 0
	store i64* %613, i64** %638
	%639 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %637, i64 0, i32 1
	store i64 2, i64* %639
	%640 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %637, i64 0, i32 2
	store i64 2, i64* %640
	%641 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %607, i64 0, i32 3
	%642 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %641, i64 0, i32 0
	store i1* %614, i1** %642
	%643 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %641, i64 0, i32 1
	store i64 2, i64* %643
	%644 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %641, i64 0, i32 2
	store i64 2, i64* %644
	%645 = getelementptr inbounds %Type_Info, %Type_Info* %603, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %645
	%646 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%647 = getelementptr inbounds %Type_Info, %Type_Info* %646, i64 0, i32 1
	store i64 24, i64* %647
	%648 = getelementptr inbounds %Type_Info, %Type_Info* %646, i64 0, i32 2
	store i64 8, i64* %648
	; Type_Info_Named
	%649 = bitcast %Type_Info* %646 to %Type_Info.Named*
	%650 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%651 = bitcast %Type_Info* %650 to %Type_Info*
	%652 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %649, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$5f6, i64 0, i32 0), i64 7}, %..string* %652
	%653 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %649, i64 0, i32 3
	store %Type_Info* %651, %Type_Info** %653
	%654 = getelementptr inbounds %Type_Info, %Type_Info* %646, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %654
	%655 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%656 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 1
	store i64 24, i64* %656
	%657 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 2
	store i64 8, i64* %657
	; Type_Info_Struct
	%658 = bitcast %Type_Info* %655 to %Type_Info.Struct*
	%659 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %658, i64 0, i32 2
	%660 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 4
	store i1 false, i1* %660
	%661 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 5
	store i1 true, i1* %661
	%662 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 6
	store i1 false, i1* %662
	%663 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 42
	%664 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 42
	%665 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 21
	%666 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 19
	%667 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%668 = bitcast %Type_Info* %667 to %Type_Info*
	%669 = getelementptr inbounds %Type_Info*, %Type_Info** %663, i64 0
	%670 = getelementptr inbounds i64, i64* %665, i64 0
	%671 = getelementptr inbounds i1, i1* %666, i64 0
	%672 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %672, %Type_Info** %669
	%673 = getelementptr inbounds %..string, %..string* %664, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5f7, i64 0, i32 0), i64 4}, %..string* %673
	store i64 0, i64* %670
	store i1 false, i1* %671
	%674 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%675 = bitcast %Type_Info* %674 to %Type_Info*
	%676 = getelementptr inbounds %Type_Info*, %Type_Info** %663, i64 1
	%677 = getelementptr inbounds i64, i64* %665, i64 1
	%678 = getelementptr inbounds i1, i1* %666, i64 1
	%679 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %679, %Type_Info** %676
	%680 = getelementptr inbounds %..string, %..string* %664, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f8, i64 0, i32 0), i64 5}, %..string* %680
	store i64 8, i64* %677
	store i1 false, i1* %678
	%681 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%682 = bitcast %Type_Info* %681 to %Type_Info*
	%683 = getelementptr inbounds %Type_Info*, %Type_Info** %663, i64 2
	%684 = getelementptr inbounds i64, i64* %665, i64 2
	%685 = getelementptr inbounds i1, i1* %666, i64 2
	%686 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %686, %Type_Info** %683
	%687 = getelementptr inbounds %..string, %..string* %664, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5f9, i64 0, i32 0), i64 4}, %..string* %687
	store i64 16, i64* %684
	store i1 false, i1* %685
	%688 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 0
	%689 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %688, i64 0, i32 0
	store %Type_Info** %663, %Type_Info*** %689
	%690 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %688, i64 0, i32 1
	store i64 3, i64* %690
	%691 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %688, i64 0, i32 2
	store i64 3, i64* %691
	%692 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 1
	%693 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %692, i64 0, i32 0
	store %..string* %664, %..string** %693
	%694 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %692, i64 0, i32 1
	store i64 3, i64* %694
	%695 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %692, i64 0, i32 2
	store i64 3, i64* %695
	%696 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 2
	%697 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %696, i64 0, i32 0
	store i64* %665, i64** %697
	%698 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %696, i64 0, i32 1
	store i64 3, i64* %698
	%699 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %696, i64 0, i32 2
	store i64 3, i64* %699
	%700 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %659, i64 0, i32 3
	%701 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %700, i64 0, i32 0
	store i1* %666, i1** %701
	%702 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %700, i64 0, i32 1
	store i64 3, i64* %702
	%703 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %700, i64 0, i32 2
	store i64 3, i64* %703
	%704 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %704
	%705 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%706 = getelementptr inbounds %Type_Info, %Type_Info* %705, i64 0, i32 1
	store i64 8, i64* %706
	%707 = getelementptr inbounds %Type_Info, %Type_Info* %705, i64 0, i32 2
	store i64 8, i64* %707
	; Type_Info_Pointer
	%708 = bitcast %Type_Info* %705 to %Type_Info.Pointer*
	%709 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%710 = bitcast %Type_Info* %709 to %Type_Info*
	%711 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %708, i64 0, i32 2
	store %Type_Info* %710, %Type_Info** %711
	%712 = getelementptr inbounds %Type_Info, %Type_Info* %705, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %712
	%713 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%714 = getelementptr inbounds %Type_Info, %Type_Info* %713, i64 0, i32 1
	store i64 24, i64* %714
	%715 = getelementptr inbounds %Type_Info, %Type_Info* %713, i64 0, i32 2
	store i64 8, i64* %715
	; Type_Info_Named
	%716 = bitcast %Type_Info* %713 to %Type_Info.Named*
	%717 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%718 = bitcast %Type_Info* %717 to %Type_Info*
	%719 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %716, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$5fa, i64 0, i32 0), i64 6}, %..string* %719
	%720 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %716, i64 0, i32 3
	store %Type_Info* %718, %Type_Info** %720
	%721 = getelementptr inbounds %Type_Info, %Type_Info* %713, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %721
	%722 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%723 = getelementptr inbounds %Type_Info, %Type_Info* %722, i64 0, i32 1
	store i64 24, i64* %723
	%724 = getelementptr inbounds %Type_Info, %Type_Info* %722, i64 0, i32 2
	store i64 8, i64* %724
	; Type_Info_Struct
	%725 = bitcast %Type_Info* %722 to %Type_Info.Struct*
	%726 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %725, i64 0, i32 2
	%727 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 4
	store i1 false, i1* %727
	%728 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 5
	store i1 true, i1* %728
	%729 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 6
	store i1 false, i1* %729
	%730 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 45
	%731 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 45
	%732 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 24
	%733 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 22
	%734 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%735 = bitcast %Type_Info* %734 to %Type_Info*
	%736 = getelementptr inbounds %Type_Info*, %Type_Info** %730, i64 0
	%737 = getelementptr inbounds i64, i64* %732, i64 0
	%738 = getelementptr inbounds i1, i1* %733, i64 0
	%739 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %739, %Type_Info** %736
	%740 = getelementptr inbounds %..string, %..string* %731, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5fb, i64 0, i32 0), i64 4}, %..string* %740
	store i64 0, i64* %737
	store i1 false, i1* %738
	%741 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%742 = bitcast %Type_Info* %741 to %Type_Info*
	%743 = getelementptr inbounds %Type_Info*, %Type_Info** %730, i64 1
	%744 = getelementptr inbounds i64, i64* %732, i64 1
	%745 = getelementptr inbounds i1, i1* %733, i64 1
	%746 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %746, %Type_Info** %743
	%747 = getelementptr inbounds %..string, %..string* %731, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5fc, i64 0, i32 0), i64 5}, %..string* %747
	store i64 8, i64* %744
	store i1 false, i1* %745
	%748 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%749 = bitcast %Type_Info* %748 to %Type_Info*
	%750 = getelementptr inbounds %Type_Info*, %Type_Info** %730, i64 2
	%751 = getelementptr inbounds i64, i64* %732, i64 2
	%752 = getelementptr inbounds i1, i1* %733, i64 2
	%753 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %753, %Type_Info** %750
	%754 = getelementptr inbounds %..string, %..string* %731, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5fd, i64 0, i32 0), i64 4}, %..string* %754
	store i64 16, i64* %751
	store i1 false, i1* %752
	%755 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 0
	%756 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %755, i64 0, i32 0
	store %Type_Info** %730, %Type_Info*** %756
	%757 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %755, i64 0, i32 1
	store i64 3, i64* %757
	%758 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %755, i64 0, i32 2
	store i64 3, i64* %758
	%759 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 1
	%760 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %759, i64 0, i32 0
	store %..string* %731, %..string** %760
	%761 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %759, i64 0, i32 1
	store i64 3, i64* %761
	%762 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %759, i64 0, i32 2
	store i64 3, i64* %762
	%763 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 2
	%764 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %763, i64 0, i32 0
	store i64* %732, i64** %764
	%765 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %763, i64 0, i32 1
	store i64 3, i64* %765
	%766 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %763, i64 0, i32 2
	store i64 3, i64* %766
	%767 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %726, i64 0, i32 3
	%768 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %767, i64 0, i32 0
	store i1* %733, i1** %768
	%769 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %767, i64 0, i32 1
	store i64 3, i64* %769
	%770 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %767, i64 0, i32 2
	store i64 3, i64* %770
	%771 = getelementptr inbounds %Type_Info, %Type_Info* %722, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %771
	%772 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%773 = getelementptr inbounds %Type_Info, %Type_Info* %772, i64 0, i32 1
	store i64 8, i64* %773
	%774 = getelementptr inbounds %Type_Info, %Type_Info* %772, i64 0, i32 2
	store i64 8, i64* %774
	; Type_Info_Pointer
	%775 = bitcast %Type_Info* %772 to %Type_Info.Pointer*
	%776 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%777 = bitcast %Type_Info* %776 to %Type_Info*
	%778 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %775, i64 0, i32 2
	store %Type_Info* %777, %Type_Info** %778
	%779 = getelementptr inbounds %Type_Info, %Type_Info* %772, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %779
	%780 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%781 = getelementptr inbounds %Type_Info, %Type_Info* %780, i64 0, i32 1
	store i64 48, i64* %781
	%782 = getelementptr inbounds %Type_Info, %Type_Info* %780, i64 0, i32 2
	store i64 8, i64* %782
	; Type_Info_Named
	%783 = bitcast %Type_Info* %780 to %Type_Info.Named*
	%784 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 24
	%785 = bitcast %Type_Info* %784 to %Type_Info*
	%786 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %783, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5fe, i64 0, i32 0), i64 9}, %..string* %786
	%787 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %783, i64 0, i32 3
	store %Type_Info* %785, %Type_Info** %787
	%788 = getelementptr inbounds %Type_Info, %Type_Info* %780, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %788
	%789 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 24
	%790 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 1
	store i64 48, i64* %790
	%791 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 2
	store i64 8, i64* %791
	; Type_Info_Struct
	%792 = bitcast %Type_Info* %789 to %Type_Info.Struct*
	%793 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %792, i64 0, i32 2
	%794 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 4
	store i1 false, i1* %794
	%795 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 5
	store i1 true, i1* %795
	%796 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 6
	store i1 false, i1* %796
	%797 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 48
	%798 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 48
	%799 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 27
	%800 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 25
	%801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%802 = bitcast %Type_Info* %801 to %Type_Info*
	%803 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 0
	%804 = getelementptr inbounds i64, i64* %799, i64 0
	%805 = getelementptr inbounds i1, i1* %800, i64 0
	%806 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %806, %Type_Info** %803
	%807 = getelementptr inbounds %..string, %..string* %798, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5ff, i64 0, i32 0), i64 4}, %..string* %807
	store i64 0, i64* %804
	store i1 false, i1* %805
	%808 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%809 = bitcast %Type_Info* %808 to %Type_Info*
	%810 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 1
	%811 = getelementptr inbounds i64, i64* %799, i64 1
	%812 = getelementptr inbounds i1, i1* %800, i64 1
	%813 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %813, %Type_Info** %810
	%814 = getelementptr inbounds %..string, %..string* %798, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$600, i64 0, i32 0), i64 5}, %..string* %814
	store i64 8, i64* %811
	store i1 false, i1* %812
	%815 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%816 = bitcast %Type_Info* %815 to %Type_Info*
	%817 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 2
	%818 = getelementptr inbounds i64, i64* %799, i64 2
	%819 = getelementptr inbounds i1, i1* %800, i64 2
	%820 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %820, %Type_Info** %817
	%821 = getelementptr inbounds %..string, %..string* %798, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$601, i64 0, i32 0), i64 6}, %..string* %821
	store i64 16, i64* %818
	store i1 false, i1* %819
	%822 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%823 = bitcast %Type_Info* %822 to %Type_Info*
	%824 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 3
	%825 = getelementptr inbounds i64, i64* %799, i64 3
	%826 = getelementptr inbounds i1, i1* %800, i64 3
	%827 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %827, %Type_Info** %824
	%828 = getelementptr inbounds %..string, %..string* %798, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$602, i64 0, i32 0), i64 7}, %..string* %828
	store i64 24, i64* %825
	store i1 false, i1* %826
	%829 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%830 = bitcast %Type_Info* %829 to %Type_Info*
	%831 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 4
	%832 = getelementptr inbounds i64, i64* %799, i64 4
	%833 = getelementptr inbounds i1, i1* %800, i64 4
	%834 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %834, %Type_Info** %831
	%835 = getelementptr inbounds %..string, %..string* %798, i64 4
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$603, i64 0, i32 0), i64 8}, %..string* %835
	store i64 32, i64* %832
	store i1 false, i1* %833
	%836 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	%837 = bitcast %Type_Info* %836 to %Type_Info*
	%838 = getelementptr inbounds %Type_Info*, %Type_Info** %797, i64 5
	%839 = getelementptr inbounds i64, i64* %799, i64 5
	%840 = getelementptr inbounds i1, i1* %800, i64 5
	%841 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	store %Type_Info* %841, %Type_Info** %838
	%842 = getelementptr inbounds %..string, %..string* %798, i64 5
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$604, i64 0, i32 0), i64 10}, %..string* %842
	store i64 40, i64* %839
	store i1 false, i1* %840
	%843 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 0
	%844 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %843, i64 0, i32 0
	store %Type_Info** %797, %Type_Info*** %844
	%845 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %843, i64 0, i32 1
	store i64 6, i64* %845
	%846 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %843, i64 0, i32 2
	store i64 6, i64* %846
	%847 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 1
	%848 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %847, i64 0, i32 0
	store %..string* %798, %..string** %848
	%849 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %847, i64 0, i32 1
	store i64 6, i64* %849
	%850 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %847, i64 0, i32 2
	store i64 6, i64* %850
	%851 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 2
	%852 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %851, i64 0, i32 0
	store i64* %799, i64** %852
	%853 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %851, i64 0, i32 1
	store i64 6, i64* %853
	%854 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %851, i64 0, i32 2
	store i64 6, i64* %854
	%855 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %793, i64 0, i32 3
	%856 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %855, i64 0, i32 0
	store i1* %800, i1** %856
	%857 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %855, i64 0, i32 1
	store i64 6, i64* %857
	%858 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %855, i64 0, i32 2
	store i64 6, i64* %858
	%859 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %859
	%860 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%861 = getelementptr inbounds %Type_Info, %Type_Info* %860, i64 0, i32 1
	store i64 8, i64* %861
	%862 = getelementptr inbounds %Type_Info, %Type_Info* %860, i64 0, i32 2
	store i64 8, i64* %862
	; Type_Info_Pointer
	%863 = bitcast %Type_Info* %860 to %Type_Info.Pointer*
	%864 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%865 = bitcast %Type_Info* %864 to %Type_Info*
	%866 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %863, i64 0, i32 2
	store %Type_Info* %865, %Type_Info** %866
	%867 = getelementptr inbounds %Type_Info, %Type_Info* %860, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %867
	%868 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%869 = getelementptr inbounds %Type_Info, %Type_Info* %868, i64 0, i32 1
	store i64 8, i64* %869
	%870 = getelementptr inbounds %Type_Info, %Type_Info* %868, i64 0, i32 2
	store i64 8, i64* %870
	; Type_Info_Pointer
	%871 = bitcast %Type_Info* %868 to %Type_Info.Pointer*
	%872 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%873 = bitcast %Type_Info* %872 to %Type_Info*
	%874 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %871, i64 0, i32 2
	store %Type_Info* %873, %Type_Info** %874
	%875 = getelementptr inbounds %Type_Info, %Type_Info* %868, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %875
	%876 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	%877 = getelementptr inbounds %Type_Info, %Type_Info* %876, i64 0, i32 1
	store i64 8, i64* %877
	%878 = getelementptr inbounds %Type_Info, %Type_Info* %876, i64 0, i32 2
	store i64 8, i64* %878
	; Type_Info_Named
	%879 = bitcast %Type_Info* %876 to %Type_Info.Named*
	%880 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 26
	%881 = bitcast %Type_Info* %880 to %Type_Info*
	%882 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %879, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$605, i64 0, i32 0), i64 18}, %..string* %882
	%883 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %879, i64 0, i32 3
	store %Type_Info* %881, %Type_Info** %883
	%884 = getelementptr inbounds %Type_Info, %Type_Info* %876, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %884
	%885 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 26
	%886 = getelementptr inbounds %Type_Info, %Type_Info* %885, i64 0, i32 1
	store i64 8, i64* %886
	%887 = getelementptr inbounds %Type_Info, %Type_Info* %885, i64 0, i32 2
	store i64 8, i64* %887
	; Type_Info_Enum
	%888 = bitcast %Type_Info* %885 to %Type_Info.Enum*
	%889 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%890 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %888, i64 0, i32 2
	store %Type_Info* %889, %Type_Info** %890
	%891 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-1a, i64 0, i32 0
	%892 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-1a, i64 0, i32 0
	%893 = bitcast {[0 x <8 x i8>], [8 x i8]}* %892 to i64*
	store i64 0, i64* %893
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$606, i64 0, i32 0), i64 4}, %..string* %891
	%894 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-1a, i64 0, i32 1
	%895 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-1a, i64 0, i32 1
	%896 = bitcast {[0 x <8 x i8>], [8 x i8]}* %895 to i64*
	store i64 1, i64* %896
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$607, i64 0, i32 0), i64 1}, %..string* %894
	%897 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-1a, i64 0, i32 2
	%898 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-1a, i64 0, i32 2
	%899 = bitcast {[0 x <8 x i8>], [8 x i8]}* %898 to i64*
	store i64 2, i64* %899
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$608, i64 0, i32 0), i64 3}, %..string* %897
	%900 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-1a, i64 0, i32 3
	%901 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-1a, i64 0, i32 3
	%902 = bitcast {[0 x <8 x i8>], [8 x i8]}* %901 to i64*
	store i64 3, i64* %902
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$609, i64 0, i32 0), i64 4}, %..string* %900
	%903 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %888, i64 0, i32 3
	%904 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-1a, i64 0, i32 0
	%905 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %903, i64 0, i32 0
	store %..string* %904, %..string** %905
	%906 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %903, i64 0, i32 1
	store i64 4, i64* %906
	%907 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %888, i64 0, i32 4
	%908 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-1a, i64 0, i32 0
	%909 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %907, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %908, {[0 x <8 x i8>], [8 x i8]}** %909
	%910 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %907, i64 0, i32 1
	store i64 4, i64* %910
	%911 = getelementptr inbounds %Type_Info, %Type_Info* %885, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %911
	%912 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%913 = getelementptr inbounds %Type_Info, %Type_Info* %912, i64 0, i32 1
	store i64 40, i64* %913
	%914 = getelementptr inbounds %Type_Info, %Type_Info* %912, i64 0, i32 2
	store i64 8, i64* %914
	; Type_Info_Named
	%915 = bitcast %Type_Info* %912 to %Type_Info.Named*
	%916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%917 = bitcast %Type_Info* %916 to %Type_Info*
	%918 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %915, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$60a, i64 0, i32 0), i64 5}, %..string* %918
	%919 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %915, i64 0, i32 3
	store %Type_Info* %917, %Type_Info** %919
	%920 = getelementptr inbounds %Type_Info, %Type_Info* %912, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %920
	%921 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%922 = getelementptr inbounds %Type_Info, %Type_Info* %921, i64 0, i32 1
	store i64 40, i64* %922
	%923 = getelementptr inbounds %Type_Info, %Type_Info* %921, i64 0, i32 2
	store i64 8, i64* %923
	; Type_Info_Struct
	%924 = bitcast %Type_Info* %921 to %Type_Info.Struct*
	%925 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %924, i64 0, i32 2
	%926 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 4
	store i1 false, i1* %926
	%927 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 5
	store i1 true, i1* %927
	%928 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 6
	store i1 false, i1* %928
	%929 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 54
	%930 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 54
	%931 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 33
	%932 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 31
	%933 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%934 = bitcast %Type_Info* %933 to %Type_Info*
	%935 = getelementptr inbounds %Type_Info*, %Type_Info** %929, i64 0
	%936 = getelementptr inbounds i64, i64* %931, i64 0
	%937 = getelementptr inbounds i1, i1* %932, i64 0
	%938 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %938, %Type_Info** %935
	%939 = getelementptr inbounds %..string, %..string* %930, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$60b, i64 0, i32 0), i64 4}, %..string* %939
	store i64 0, i64* %936
	store i1 false, i1* %937
	%940 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%941 = bitcast %Type_Info* %940 to %Type_Info*
	%942 = getelementptr inbounds %Type_Info*, %Type_Info** %929, i64 1
	%943 = getelementptr inbounds i64, i64* %931, i64 1
	%944 = getelementptr inbounds i1, i1* %932, i64 1
	%945 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %945, %Type_Info** %942
	%946 = getelementptr inbounds %..string, %..string* %930, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$60c, i64 0, i32 0), i64 5}, %..string* %946
	store i64 8, i64* %943
	store i1 false, i1* %944
	%947 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%948 = bitcast %Type_Info* %947 to %Type_Info*
	%949 = getelementptr inbounds %Type_Info*, %Type_Info** %929, i64 2
	%950 = getelementptr inbounds i64, i64* %931, i64 2
	%951 = getelementptr inbounds i1, i1* %932, i64 2
	%952 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %952, %Type_Info** %949
	%953 = getelementptr inbounds %..string, %..string* %930, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$60d, i64 0, i32 0), i64 4}, %..string* %953
	store i64 16, i64* %950
	store i1 false, i1* %951
	%954 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%955 = bitcast %Type_Info* %954 to %Type_Info*
	%956 = getelementptr inbounds %Type_Info*, %Type_Info** %929, i64 3
	%957 = getelementptr inbounds i64, i64* %931, i64 3
	%958 = getelementptr inbounds i1, i1* %932, i64 3
	%959 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %959, %Type_Info** %956
	%960 = getelementptr inbounds %..string, %..string* %930, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$60e, i64 0, i32 0), i64 9}, %..string* %960
	store i64 24, i64* %957
	store i1 false, i1* %958
	%961 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%962 = bitcast %Type_Info* %961 to %Type_Info*
	%963 = getelementptr inbounds %Type_Info*, %Type_Info** %929, i64 4
	%964 = getelementptr inbounds i64, i64* %931, i64 4
	%965 = getelementptr inbounds i1, i1* %932, i64 4
	%966 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %966, %Type_Info** %963
	%967 = getelementptr inbounds %..string, %..string* %930, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$60f, i64 0, i32 0), i64 5}, %..string* %967
	store i64 32, i64* %964
	store i1 false, i1* %965
	%968 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 0
	%969 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %968, i64 0, i32 0
	store %Type_Info** %929, %Type_Info*** %969
	%970 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %968, i64 0, i32 1
	store i64 5, i64* %970
	%971 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %968, i64 0, i32 2
	store i64 5, i64* %971
	%972 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 1
	%973 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %972, i64 0, i32 0
	store %..string* %930, %..string** %973
	%974 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %972, i64 0, i32 1
	store i64 5, i64* %974
	%975 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %972, i64 0, i32 2
	store i64 5, i64* %975
	%976 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 2
	%977 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %976, i64 0, i32 0
	store i64* %931, i64** %977
	%978 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %976, i64 0, i32 1
	store i64 5, i64* %978
	%979 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %976, i64 0, i32 2
	store i64 5, i64* %979
	%980 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %925, i64 0, i32 3
	%981 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %980, i64 0, i32 0
	store i1* %932, i1** %981
	%982 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %980, i64 0, i32 1
	store i64 5, i64* %982
	%983 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %980, i64 0, i32 2
	store i64 5, i64* %983
	%984 = getelementptr inbounds %Type_Info, %Type_Info* %921, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %984
	%985 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%986 = getelementptr inbounds %Type_Info, %Type_Info* %985, i64 0, i32 1
	store i64 8, i64* %986
	%987 = getelementptr inbounds %Type_Info, %Type_Info* %985, i64 0, i32 2
	store i64 8, i64* %987
	; Type_Info_Pointer
	%988 = bitcast %Type_Info* %985 to %Type_Info.Pointer*
	%989 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%990 = bitcast %Type_Info* %989 to %Type_Info*
	%991 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %988, i64 0, i32 2
	store %Type_Info* %990, %Type_Info** %991
	%992 = getelementptr inbounds %Type_Info, %Type_Info* %985, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %992
	%993 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%994 = getelementptr inbounds %Type_Info, %Type_Info* %993, i64 0, i32 1
	store i64 32, i64* %994
	%995 = getelementptr inbounds %Type_Info, %Type_Info* %993, i64 0, i32 2
	store i64 8, i64* %995
	; Type_Info_Named
	%996 = bitcast %Type_Info* %993 to %Type_Info.Named*
	%997 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%998 = bitcast %Type_Info* %997 to %Type_Info*
	%999 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %996, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$610, i64 0, i32 0), i64 13}, %..string* %999
	%1000 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %996, i64 0, i32 3
	store %Type_Info* %998, %Type_Info** %1000
	%1001 = getelementptr inbounds %Type_Info, %Type_Info* %993, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1001
	%1002 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1003 = getelementptr inbounds %Type_Info, %Type_Info* %1002, i64 0, i32 1
	store i64 32, i64* %1003
	%1004 = getelementptr inbounds %Type_Info, %Type_Info* %1002, i64 0, i32 2
	store i64 8, i64* %1004
	; Type_Info_Struct
	%1005 = bitcast %Type_Info* %1002 to %Type_Info.Struct*
	%1006 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1005, i64 0, i32 2
	%1007 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 4
	store i1 false, i1* %1007
	%1008 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 5
	store i1 true, i1* %1008
	%1009 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 6
	store i1 false, i1* %1009
	%1010 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 59
	%1011 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 59
	%1012 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 38
	%1013 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 36
	%1014 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1015 = bitcast %Type_Info* %1014 to %Type_Info*
	%1016 = getelementptr inbounds %Type_Info*, %Type_Info** %1010, i64 0
	%1017 = getelementptr inbounds i64, i64* %1012, i64 0
	%1018 = getelementptr inbounds i1, i1* %1013, i64 0
	%1019 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1019, %Type_Info** %1016
	%1020 = getelementptr inbounds %..string, %..string* %1011, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$611, i64 0, i32 0), i64 4}, %..string* %1020
	store i64 0, i64* %1017
	store i1 false, i1* %1018
	%1021 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1022 = bitcast %Type_Info* %1021 to %Type_Info*
	%1023 = getelementptr inbounds %Type_Info*, %Type_Info** %1010, i64 1
	%1024 = getelementptr inbounds i64, i64* %1012, i64 1
	%1025 = getelementptr inbounds i1, i1* %1013, i64 1
	%1026 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1026, %Type_Info** %1023
	%1027 = getelementptr inbounds %..string, %..string* %1011, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$612, i64 0, i32 0), i64 5}, %..string* %1027
	store i64 8, i64* %1024
	store i1 false, i1* %1025
	%1028 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1029 = bitcast %Type_Info* %1028 to %Type_Info*
	%1030 = getelementptr inbounds %Type_Info*, %Type_Info** %1010, i64 2
	%1031 = getelementptr inbounds i64, i64* %1012, i64 2
	%1032 = getelementptr inbounds i1, i1* %1013, i64 2
	%1033 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1033, %Type_Info** %1030
	%1034 = getelementptr inbounds %..string, %..string* %1011, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$613, i64 0, i32 0), i64 4}, %..string* %1034
	store i64 16, i64* %1031
	store i1 false, i1* %1032
	%1035 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1036 = bitcast %Type_Info* %1035 to %Type_Info*
	%1037 = getelementptr inbounds %Type_Info*, %Type_Info** %1010, i64 3
	%1038 = getelementptr inbounds i64, i64* %1012, i64 3
	%1039 = getelementptr inbounds i1, i1* %1013, i64 3
	%1040 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1040, %Type_Info** %1037
	%1041 = getelementptr inbounds %..string, %..string* %1011, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$614, i64 0, i32 0), i64 9}, %..string* %1041
	store i64 24, i64* %1038
	store i1 false, i1* %1039
	%1042 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 0
	%1043 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1042, i64 0, i32 0
	store %Type_Info** %1010, %Type_Info*** %1043
	%1044 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1042, i64 0, i32 1
	store i64 4, i64* %1044
	%1045 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1042, i64 0, i32 2
	store i64 4, i64* %1045
	%1046 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 1
	%1047 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1046, i64 0, i32 0
	store %..string* %1011, %..string** %1047
	%1048 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1046, i64 0, i32 1
	store i64 4, i64* %1048
	%1049 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1046, i64 0, i32 2
	store i64 4, i64* %1049
	%1050 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 2
	%1051 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1050, i64 0, i32 0
	store i64* %1012, i64** %1051
	%1052 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1050, i64 0, i32 1
	store i64 4, i64* %1052
	%1053 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1050, i64 0, i32 2
	store i64 4, i64* %1053
	%1054 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1006, i64 0, i32 3
	%1055 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1054, i64 0, i32 0
	store i1* %1013, i1** %1055
	%1056 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1054, i64 0, i32 1
	store i64 4, i64* %1056
	%1057 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1054, i64 0, i32 2
	store i64 4, i64* %1057
	%1058 = getelementptr inbounds %Type_Info, %Type_Info* %1002, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1058
	%1059 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1060 = getelementptr inbounds %Type_Info, %Type_Info* %1059, i64 0, i32 1
	store i64 8, i64* %1060
	%1061 = getelementptr inbounds %Type_Info, %Type_Info* %1059, i64 0, i32 2
	store i64 8, i64* %1061
	; Type_Info_Pointer
	%1062 = bitcast %Type_Info* %1059 to %Type_Info.Pointer*
	%1063 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1064 = bitcast %Type_Info* %1063 to %Type_Info*
	%1065 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1062, i64 0, i32 2
	store %Type_Info* %1064, %Type_Info** %1065
	%1066 = getelementptr inbounds %Type_Info, %Type_Info* %1059, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1066
	%1067 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%1068 = getelementptr inbounds %Type_Info, %Type_Info* %1067, i64 0, i32 1
	store i64 32, i64* %1068
	%1069 = getelementptr inbounds %Type_Info, %Type_Info* %1067, i64 0, i32 2
	store i64 8, i64* %1069
	; Type_Info_Named
	%1070 = bitcast %Type_Info* %1067 to %Type_Info.Named*
	%1071 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1072 = bitcast %Type_Info* %1071 to %Type_Info*
	%1073 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1070, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$615, i64 0, i32 0), i64 5}, %..string* %1073
	%1074 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1070, i64 0, i32 3
	store %Type_Info* %1072, %Type_Info** %1074
	%1075 = getelementptr inbounds %Type_Info, %Type_Info* %1067, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1075
	%1076 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1077 = getelementptr inbounds %Type_Info, %Type_Info* %1076, i64 0, i32 1
	store i64 32, i64* %1077
	%1078 = getelementptr inbounds %Type_Info, %Type_Info* %1076, i64 0, i32 2
	store i64 8, i64* %1078
	; Type_Info_Struct
	%1079 = bitcast %Type_Info* %1076 to %Type_Info.Struct*
	%1080 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1079, i64 0, i32 2
	%1081 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 4
	store i1 false, i1* %1081
	%1082 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 5
	store i1 true, i1* %1082
	%1083 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 6
	store i1 false, i1* %1083
	%1084 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 63
	%1085 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 63
	%1086 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 42
	%1087 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 40
	%1088 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1089 = bitcast %Type_Info* %1088 to %Type_Info*
	%1090 = getelementptr inbounds %Type_Info*, %Type_Info** %1084, i64 0
	%1091 = getelementptr inbounds i64, i64* %1086, i64 0
	%1092 = getelementptr inbounds i1, i1* %1087, i64 0
	%1093 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1093, %Type_Info** %1090
	%1094 = getelementptr inbounds %..string, %..string* %1085, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$616, i64 0, i32 0), i64 4}, %..string* %1094
	store i64 0, i64* %1091
	store i1 false, i1* %1092
	%1095 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1096 = bitcast %Type_Info* %1095 to %Type_Info*
	%1097 = getelementptr inbounds %Type_Info*, %Type_Info** %1084, i64 1
	%1098 = getelementptr inbounds i64, i64* %1086, i64 1
	%1099 = getelementptr inbounds i1, i1* %1087, i64 1
	%1100 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1100, %Type_Info** %1097
	%1101 = getelementptr inbounds %..string, %..string* %1085, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$617, i64 0, i32 0), i64 5}, %..string* %1101
	store i64 8, i64* %1098
	store i1 false, i1* %1099
	%1102 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1103 = bitcast %Type_Info* %1102 to %Type_Info*
	%1104 = getelementptr inbounds %Type_Info*, %Type_Info** %1084, i64 2
	%1105 = getelementptr inbounds i64, i64* %1086, i64 2
	%1106 = getelementptr inbounds i1, i1* %1087, i64 2
	%1107 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1107, %Type_Info** %1104
	%1108 = getelementptr inbounds %..string, %..string* %1085, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$618, i64 0, i32 0), i64 4}, %..string* %1108
	store i64 16, i64* %1105
	store i1 false, i1* %1106
	%1109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1110 = bitcast %Type_Info* %1109 to %Type_Info*
	%1111 = getelementptr inbounds %Type_Info*, %Type_Info** %1084, i64 3
	%1112 = getelementptr inbounds i64, i64* %1086, i64 3
	%1113 = getelementptr inbounds i1, i1* %1087, i64 3
	%1114 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1114, %Type_Info** %1111
	%1115 = getelementptr inbounds %..string, %..string* %1085, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$619, i64 0, i32 0), i64 9}, %..string* %1115
	store i64 24, i64* %1112
	store i1 false, i1* %1113
	%1116 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 0
	%1117 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1116, i64 0, i32 0
	store %Type_Info** %1084, %Type_Info*** %1117
	%1118 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1116, i64 0, i32 1
	store i64 4, i64* %1118
	%1119 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1116, i64 0, i32 2
	store i64 4, i64* %1119
	%1120 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 1
	%1121 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1120, i64 0, i32 0
	store %..string* %1085, %..string** %1121
	%1122 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1120, i64 0, i32 1
	store i64 4, i64* %1122
	%1123 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1120, i64 0, i32 2
	store i64 4, i64* %1123
	%1124 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 2
	%1125 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1124, i64 0, i32 0
	store i64* %1086, i64** %1125
	%1126 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1124, i64 0, i32 1
	store i64 4, i64* %1126
	%1127 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1124, i64 0, i32 2
	store i64 4, i64* %1127
	%1128 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1080, i64 0, i32 3
	%1129 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1128, i64 0, i32 0
	store i1* %1087, i1** %1129
	%1130 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1128, i64 0, i32 1
	store i64 4, i64* %1130
	%1131 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1128, i64 0, i32 2
	store i64 4, i64* %1131
	%1132 = getelementptr inbounds %Type_Info, %Type_Info* %1076, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1132
	%1133 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1134 = getelementptr inbounds %Type_Info, %Type_Info* %1133, i64 0, i32 1
	store i64 8, i64* %1134
	%1135 = getelementptr inbounds %Type_Info, %Type_Info* %1133, i64 0, i32 2
	store i64 8, i64* %1135
	; Type_Info_Pointer
	%1136 = bitcast %Type_Info* %1133 to %Type_Info.Pointer*
	%1137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1138 = bitcast %Type_Info* %1137 to %Type_Info*
	%1139 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1136, i64 0, i32 2
	store %Type_Info* %1138, %Type_Info** %1139
	%1140 = getelementptr inbounds %Type_Info, %Type_Info* %1133, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1140
	%1141 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%1142 = getelementptr inbounds %Type_Info, %Type_Info* %1141, i64 0, i32 1
	store i64 40, i64* %1142
	%1143 = getelementptr inbounds %Type_Info, %Type_Info* %1141, i64 0, i32 2
	store i64 8, i64* %1143
	; Type_Info_Named
	%1144 = bitcast %Type_Info* %1141 to %Type_Info.Named*
	%1145 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%1146 = bitcast %Type_Info* %1145 to %Type_Info*
	%1147 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1144, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$61a, i64 0, i32 0), i64 6}, %..string* %1147
	%1148 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1144, i64 0, i32 3
	store %Type_Info* %1146, %Type_Info** %1148
	%1149 = getelementptr inbounds %Type_Info, %Type_Info* %1141, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1149
	%1150 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%1151 = getelementptr inbounds %Type_Info, %Type_Info* %1150, i64 0, i32 1
	store i64 40, i64* %1151
	%1152 = getelementptr inbounds %Type_Info, %Type_Info* %1150, i64 0, i32 2
	store i64 8, i64* %1152
	; Type_Info_Struct
	%1153 = bitcast %Type_Info* %1150 to %Type_Info.Struct*
	%1154 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1153, i64 0, i32 2
	%1155 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 4
	store i1 false, i1* %1155
	%1156 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 5
	store i1 true, i1* %1156
	%1157 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 6
	store i1 false, i1* %1157
	%1158 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 67
	%1159 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 67
	%1160 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 46
	%1161 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 44
	%1162 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1163 = bitcast %Type_Info* %1162 to %Type_Info*
	%1164 = getelementptr inbounds %Type_Info*, %Type_Info** %1158, i64 0
	%1165 = getelementptr inbounds i64, i64* %1160, i64 0
	%1166 = getelementptr inbounds i1, i1* %1161, i64 0
	%1167 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1167, %Type_Info** %1164
	%1168 = getelementptr inbounds %..string, %..string* %1159, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$61b, i64 0, i32 0), i64 4}, %..string* %1168
	store i64 0, i64* %1165
	store i1 false, i1* %1166
	%1169 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1170 = bitcast %Type_Info* %1169 to %Type_Info*
	%1171 = getelementptr inbounds %Type_Info*, %Type_Info** %1158, i64 1
	%1172 = getelementptr inbounds i64, i64* %1160, i64 1
	%1173 = getelementptr inbounds i1, i1* %1161, i64 1
	%1174 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1174, %Type_Info** %1171
	%1175 = getelementptr inbounds %..string, %..string* %1159, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$61c, i64 0, i32 0), i64 5}, %..string* %1175
	store i64 8, i64* %1172
	store i1 false, i1* %1173
	%1176 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1177 = bitcast %Type_Info* %1176 to %Type_Info*
	%1178 = getelementptr inbounds %Type_Info*, %Type_Info** %1158, i64 2
	%1179 = getelementptr inbounds i64, i64* %1160, i64 2
	%1180 = getelementptr inbounds i1, i1* %1161, i64 2
	%1181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1181, %Type_Info** %1178
	%1182 = getelementptr inbounds %..string, %..string* %1159, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$61d, i64 0, i32 0), i64 4}, %..string* %1182
	store i64 16, i64* %1179
	store i1 false, i1* %1180
	%1183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1184 = bitcast %Type_Info* %1183 to %Type_Info*
	%1185 = getelementptr inbounds %Type_Info*, %Type_Info** %1158, i64 3
	%1186 = getelementptr inbounds i64, i64* %1160, i64 3
	%1187 = getelementptr inbounds i1, i1* %1161, i64 3
	%1188 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1188, %Type_Info** %1185
	%1189 = getelementptr inbounds %..string, %..string* %1159, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$61e, i64 0, i32 0), i64 9}, %..string* %1189
	store i64 24, i64* %1186
	store i1 false, i1* %1187
	%1190 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1191 = bitcast %Type_Info* %1190 to %Type_Info*
	%1192 = getelementptr inbounds %Type_Info*, %Type_Info** %1158, i64 4
	%1193 = getelementptr inbounds i64, i64* %1160, i64 4
	%1194 = getelementptr inbounds i1, i1* %1161, i64 4
	%1195 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1195, %Type_Info** %1192
	%1196 = getelementptr inbounds %..string, %..string* %1159, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$61f, i64 0, i32 0), i64 5}, %..string* %1196
	store i64 32, i64* %1193
	store i1 false, i1* %1194
	%1197 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 0
	%1198 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1197, i64 0, i32 0
	store %Type_Info** %1158, %Type_Info*** %1198
	%1199 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1197, i64 0, i32 1
	store i64 5, i64* %1199
	%1200 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1197, i64 0, i32 2
	store i64 5, i64* %1200
	%1201 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 1
	%1202 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1201, i64 0, i32 0
	store %..string* %1159, %..string** %1202
	%1203 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1201, i64 0, i32 1
	store i64 5, i64* %1203
	%1204 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1201, i64 0, i32 2
	store i64 5, i64* %1204
	%1205 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 2
	%1206 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1205, i64 0, i32 0
	store i64* %1160, i64** %1206
	%1207 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1205, i64 0, i32 1
	store i64 5, i64* %1207
	%1208 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1205, i64 0, i32 2
	store i64 5, i64* %1208
	%1209 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1154, i64 0, i32 3
	%1210 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1209, i64 0, i32 0
	store i1* %1161, i1** %1210
	%1211 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1209, i64 0, i32 1
	store i64 5, i64* %1211
	%1212 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1209, i64 0, i32 2
	store i64 5, i64* %1212
	%1213 = getelementptr inbounds %Type_Info, %Type_Info* %1150, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1213
	%1214 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1215 = getelementptr inbounds %Type_Info, %Type_Info* %1214, i64 0, i32 1
	store i64 8, i64* %1215
	%1216 = getelementptr inbounds %Type_Info, %Type_Info* %1214, i64 0, i32 2
	store i64 8, i64* %1216
	; Type_Info_Pointer
	%1217 = bitcast %Type_Info* %1214 to %Type_Info.Pointer*
	%1218 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1219 = bitcast %Type_Info* %1218 to %Type_Info*
	%1220 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1217, i64 0, i32 2
	store %Type_Info* %1219, %Type_Info** %1220
	%1221 = getelementptr inbounds %Type_Info, %Type_Info* %1214, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1221
	%1222 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%1223 = getelementptr inbounds %Type_Info, %Type_Info* %1222, i64 0, i32 1
	store i64 120, i64* %1223
	%1224 = getelementptr inbounds %Type_Info, %Type_Info* %1222, i64 0, i32 2
	store i64 8, i64* %1224
	; Type_Info_Named
	%1225 = bitcast %Type_Info* %1222 to %Type_Info.Named*
	%1226 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1227 = bitcast %Type_Info* %1226 to %Type_Info*
	%1228 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1225, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$620, i64 0, i32 0), i64 5}, %..string* %1228
	%1229 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1225, i64 0, i32 3
	store %Type_Info* %1227, %Type_Info** %1229
	%1230 = getelementptr inbounds %Type_Info, %Type_Info* %1222, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1230
	%1231 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1232 = getelementptr inbounds %Type_Info, %Type_Info* %1231, i64 0, i32 1
	store i64 120, i64* %1232
	%1233 = getelementptr inbounds %Type_Info, %Type_Info* %1231, i64 0, i32 2
	store i64 8, i64* %1233
	; Type_Info_Struct
	%1234 = bitcast %Type_Info* %1231 to %Type_Info.Struct*
	%1235 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1234, i64 0, i32 2
	%1236 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 4
	store i1 false, i1* %1236
	%1237 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 5
	store i1 true, i1* %1237
	%1238 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 6
	store i1 false, i1* %1238
	%1239 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 72
	%1240 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 72
	%1241 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 51
	%1242 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 49
	%1243 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1244 = bitcast %Type_Info* %1243 to %Type_Info*
	%1245 = getelementptr inbounds %Type_Info*, %Type_Info** %1239, i64 0
	%1246 = getelementptr inbounds i64, i64* %1241, i64 0
	%1247 = getelementptr inbounds i1, i1* %1242, i64 0
	%1248 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1248, %Type_Info** %1245
	%1249 = getelementptr inbounds %..string, %..string* %1240, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$621, i64 0, i32 0), i64 4}, %..string* %1249
	store i64 0, i64* %1246
	store i1 false, i1* %1247
	%1250 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1251 = bitcast %Type_Info* %1250 to %Type_Info*
	%1252 = getelementptr inbounds %Type_Info*, %Type_Info** %1239, i64 1
	%1253 = getelementptr inbounds i64, i64* %1241, i64 1
	%1254 = getelementptr inbounds i1, i1* %1242, i64 1
	%1255 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1255, %Type_Info** %1252
	%1256 = getelementptr inbounds %..string, %..string* %1240, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$622, i64 0, i32 0), i64 5}, %..string* %1256
	store i64 8, i64* %1253
	store i1 false, i1* %1254
	%1257 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1258 = bitcast %Type_Info* %1257 to %Type_Info*
	%1259 = getelementptr inbounds %Type_Info*, %Type_Info** %1239, i64 2
	%1260 = getelementptr inbounds i64, i64* %1241, i64 2
	%1261 = getelementptr inbounds i1, i1* %1242, i64 2
	%1262 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1262, %Type_Info** %1259
	%1263 = getelementptr inbounds %..string, %..string* %1240, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$623, i64 0, i32 0), i64 6}, %..string* %1263
	store i64 16, i64* %1260
	store i1 true, i1* %1261
	%1264 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 0
	%1265 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1264, i64 0, i32 0
	store %Type_Info** %1239, %Type_Info*** %1265
	%1266 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1264, i64 0, i32 1
	store i64 3, i64* %1266
	%1267 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1264, i64 0, i32 2
	store i64 3, i64* %1267
	%1268 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 1
	%1269 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1268, i64 0, i32 0
	store %..string* %1240, %..string** %1269
	%1270 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1268, i64 0, i32 1
	store i64 3, i64* %1270
	%1271 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1268, i64 0, i32 2
	store i64 3, i64* %1271
	%1272 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 2
	%1273 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1272, i64 0, i32 0
	store i64* %1241, i64** %1273
	%1274 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1272, i64 0, i32 1
	store i64 3, i64* %1274
	%1275 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1272, i64 0, i32 2
	store i64 3, i64* %1275
	%1276 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1235, i64 0, i32 3
	%1277 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1276, i64 0, i32 0
	store i1* %1242, i1** %1277
	%1278 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1276, i64 0, i32 1
	store i64 3, i64* %1278
	%1279 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1276, i64 0, i32 2
	store i64 3, i64* %1279
	%1280 = getelementptr inbounds %Type_Info, %Type_Info* %1231, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1280
	%1281 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1282 = getelementptr inbounds %Type_Info, %Type_Info* %1281, i64 0, i32 1
	store i64 104, i64* %1282
	%1283 = getelementptr inbounds %Type_Info, %Type_Info* %1281, i64 0, i32 2
	store i64 8, i64* %1283
	; Type_Info_Named
	%1284 = bitcast %Type_Info* %1281 to %Type_Info.Named*
	%1285 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 36
	%1286 = bitcast %Type_Info* %1285 to %Type_Info*
	%1287 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1284, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$624, i64 0, i32 0), i64 16}, %..string* %1287
	%1288 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1284, i64 0, i32 3
	store %Type_Info* %1286, %Type_Info** %1288
	%1289 = getelementptr inbounds %Type_Info, %Type_Info* %1281, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1289
	%1290 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 36
	%1291 = getelementptr inbounds %Type_Info, %Type_Info* %1290, i64 0, i32 1
	store i64 104, i64* %1291
	%1292 = getelementptr inbounds %Type_Info, %Type_Info* %1290, i64 0, i32 2
	store i64 8, i64* %1292
	; Type_Info_Struct
	%1293 = bitcast %Type_Info* %1290 to %Type_Info.Struct*
	%1294 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1293, i64 0, i32 2
	%1295 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 4
	store i1 false, i1* %1295
	%1296 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 5
	store i1 true, i1* %1296
	%1297 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 6
	store i1 false, i1* %1297
	%1298 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 75
	%1299 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 75
	%1300 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 54
	%1301 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 52
	%1302 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1303 = bitcast %Type_Info* %1302 to %Type_Info*
	%1304 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 0
	%1305 = getelementptr inbounds i64, i64* %1300, i64 0
	%1306 = getelementptr inbounds i1, i1* %1301, i64 0
	%1307 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1307, %Type_Info** %1304
	%1308 = getelementptr inbounds %..string, %..string* %1299, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$625, i64 0, i32 0), i64 5}, %..string* %1308
	store i64 0, i64* %1305
	store i1 false, i1* %1306
	%1309 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1310 = bitcast %Type_Info* %1309 to %Type_Info*
	%1311 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 1
	%1312 = getelementptr inbounds i64, i64* %1300, i64 1
	%1313 = getelementptr inbounds i1, i1* %1301, i64 1
	%1314 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	store %Type_Info* %1314, %Type_Info** %1311
	%1315 = getelementptr inbounds %..string, %..string* %1299, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$626, i64 0, i32 0), i64 5}, %..string* %1315
	store i64 24, i64* %1312
	store i1 false, i1* %1313
	%1316 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1317 = bitcast %Type_Info* %1316 to %Type_Info*
	%1318 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 2
	%1319 = getelementptr inbounds i64, i64* %1300, i64 2
	%1320 = getelementptr inbounds i1, i1* %1301, i64 2
	%1321 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	store %Type_Info* %1321, %Type_Info** %1318
	%1322 = getelementptr inbounds %..string, %..string* %1299, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$627, i64 0, i32 0), i64 7}, %..string* %1322
	store i64 48, i64* %1319
	store i1 false, i1* %1320
	%1323 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 43
	%1324 = bitcast %Type_Info* %1323 to %Type_Info*
	%1325 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 3
	%1326 = getelementptr inbounds i64, i64* %1300, i64 3
	%1327 = getelementptr inbounds i1, i1* %1301, i64 3
	%1328 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 43
	store %Type_Info* %1328, %Type_Info** %1325
	%1329 = getelementptr inbounds %..string, %..string* %1299, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$628, i64 0, i32 0), i64 6}, %..string* %1329
	store i64 72, i64* %1326
	store i1 false, i1* %1327
	%1330 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%1331 = bitcast %Type_Info* %1330 to %Type_Info*
	%1332 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 4
	%1333 = getelementptr inbounds i64, i64* %1300, i64 4
	%1334 = getelementptr inbounds i1, i1* %1301, i64 4
	%1335 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %1335, %Type_Info** %1332
	%1336 = getelementptr inbounds %..string, %..string* %1299, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$629, i64 0, i32 0), i64 6}, %..string* %1336
	store i64 96, i64* %1333
	store i1 false, i1* %1334
	%1337 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%1338 = bitcast %Type_Info* %1337 to %Type_Info*
	%1339 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 5
	%1340 = getelementptr inbounds i64, i64* %1300, i64 5
	%1341 = getelementptr inbounds i1, i1* %1301, i64 5
	%1342 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %1342, %Type_Info** %1339
	%1343 = getelementptr inbounds %..string, %..string* %1299, i64 5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$62a, i64 0, i32 0), i64 7}, %..string* %1343
	store i64 97, i64* %1340
	store i1 false, i1* %1341
	%1344 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%1345 = bitcast %Type_Info* %1344 to %Type_Info*
	%1346 = getelementptr inbounds %Type_Info*, %Type_Info** %1298, i64 6
	%1347 = getelementptr inbounds i64, i64* %1300, i64 6
	%1348 = getelementptr inbounds i1, i1* %1301, i64 6
	%1349 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %1349, %Type_Info** %1346
	%1350 = getelementptr inbounds %..string, %..string* %1299, i64 6
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$62b, i64 0, i32 0), i64 12}, %..string* %1350
	store i64 98, i64* %1347
	store i1 false, i1* %1348
	%1351 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 0
	%1352 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1351, i64 0, i32 0
	store %Type_Info** %1298, %Type_Info*** %1352
	%1353 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1351, i64 0, i32 1
	store i64 7, i64* %1353
	%1354 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1351, i64 0, i32 2
	store i64 7, i64* %1354
	%1355 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 1
	%1356 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1355, i64 0, i32 0
	store %..string* %1299, %..string** %1356
	%1357 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1355, i64 0, i32 1
	store i64 7, i64* %1357
	%1358 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1355, i64 0, i32 2
	store i64 7, i64* %1358
	%1359 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 2
	%1360 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1359, i64 0, i32 0
	store i64* %1300, i64** %1360
	%1361 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1359, i64 0, i32 1
	store i64 7, i64* %1361
	%1362 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1359, i64 0, i32 2
	store i64 7, i64* %1362
	%1363 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1294, i64 0, i32 3
	%1364 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1363, i64 0, i32 0
	store i1* %1301, i1** %1364
	%1365 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1363, i64 0, i32 1
	store i64 7, i64* %1365
	%1366 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1363, i64 0, i32 2
	store i64 7, i64* %1366
	%1367 = getelementptr inbounds %Type_Info, %Type_Info* %1290, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1367
	%1368 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1369 = getelementptr inbounds %Type_Info, %Type_Info* %1368, i64 0, i32 1
	store i64 24, i64* %1369
	%1370 = getelementptr inbounds %Type_Info, %Type_Info* %1368, i64 0, i32 2
	store i64 8, i64* %1370
	; Type_Info_Slice
	%1371 = bitcast %Type_Info* %1368 to %Type_Info.Slice*
	%1372 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1373 = bitcast %Type_Info* %1372 to %Type_Info*
	%1374 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1371, i64 0, i32 2
	store %Type_Info* %1373, %Type_Info** %1374
	%1375 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1371, i64 0, i32 3
	store i64 8, i64* %1375
	%1376 = getelementptr inbounds %Type_Info, %Type_Info* %1368, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1376
	%1377 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1378 = getelementptr inbounds %Type_Info, %Type_Info* %1377, i64 0, i32 1
	store i64 8, i64* %1378
	%1379 = getelementptr inbounds %Type_Info, %Type_Info* %1377, i64 0, i32 2
	store i64 8, i64* %1379
	; Type_Info_Pointer
	%1380 = bitcast %Type_Info* %1377 to %Type_Info.Pointer*
	%1381 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1382 = bitcast %Type_Info* %1381 to %Type_Info*
	%1383 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1380, i64 0, i32 2
	store %Type_Info* %1382, %Type_Info** %1383
	%1384 = getelementptr inbounds %Type_Info, %Type_Info* %1377, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1384
	%1385 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1386 = getelementptr inbounds %Type_Info, %Type_Info* %1385, i64 0, i32 1
	store i64 8, i64* %1386
	%1387 = getelementptr inbounds %Type_Info, %Type_Info* %1385, i64 0, i32 2
	store i64 8, i64* %1387
	; Type_Info_Pointer
	%1388 = bitcast %Type_Info* %1385 to %Type_Info.Pointer*
	%1389 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1390 = bitcast %Type_Info* %1389 to %Type_Info*
	%1391 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1388, i64 0, i32 2
	store %Type_Info* %1390, %Type_Info** %1391
	%1392 = getelementptr inbounds %Type_Info, %Type_Info* %1385, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1392
	%1393 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1394 = getelementptr inbounds %Type_Info, %Type_Info* %1393, i64 0, i32 1
	store i64 24, i64* %1394
	%1395 = getelementptr inbounds %Type_Info, %Type_Info* %1393, i64 0, i32 2
	store i64 8, i64* %1395
	; Type_Info_Slice
	%1396 = bitcast %Type_Info* %1393 to %Type_Info.Slice*
	%1397 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1398 = bitcast %Type_Info* %1397 to %Type_Info*
	%1399 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1396, i64 0, i32 2
	store %Type_Info* %1398, %Type_Info** %1399
	%1400 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1396, i64 0, i32 3
	store i64 16, i64* %1400
	%1401 = getelementptr inbounds %Type_Info, %Type_Info* %1393, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1401
	%1402 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1403 = getelementptr inbounds %Type_Info, %Type_Info* %1402, i64 0, i32 1
	store i64 8, i64* %1403
	%1404 = getelementptr inbounds %Type_Info, %Type_Info* %1402, i64 0, i32 2
	store i64 8, i64* %1404
	; Type_Info_Pointer
	%1405 = bitcast %Type_Info* %1402 to %Type_Info.Pointer*
	%1406 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1407 = bitcast %Type_Info* %1406 to %Type_Info*
	%1408 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1405, i64 0, i32 2
	store %Type_Info* %1407, %Type_Info** %1408
	%1409 = getelementptr inbounds %Type_Info, %Type_Info* %1402, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1409
	%1410 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1411 = getelementptr inbounds %Type_Info, %Type_Info* %1410, i64 0, i32 1
	store i64 24, i64* %1411
	%1412 = getelementptr inbounds %Type_Info, %Type_Info* %1410, i64 0, i32 2
	store i64 8, i64* %1412
	; Type_Info_Slice
	%1413 = bitcast %Type_Info* %1410 to %Type_Info.Slice*
	%1414 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1415 = bitcast %Type_Info* %1414 to %Type_Info*
	%1416 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1413, i64 0, i32 2
	store %Type_Info* %1415, %Type_Info** %1416
	%1417 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1413, i64 0, i32 3
	store i64 8, i64* %1417
	%1418 = getelementptr inbounds %Type_Info, %Type_Info* %1410, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1418
	%1419 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1420 = getelementptr inbounds %Type_Info, %Type_Info* %1419, i64 0, i32 1
	store i64 8, i64* %1420
	%1421 = getelementptr inbounds %Type_Info, %Type_Info* %1419, i64 0, i32 2
	store i64 8, i64* %1421
	; Type_Info_Pointer
	%1422 = bitcast %Type_Info* %1419 to %Type_Info.Pointer*
	%1423 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1424 = bitcast %Type_Info* %1423 to %Type_Info*
	%1425 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1422, i64 0, i32 2
	store %Type_Info* %1424, %Type_Info** %1425
	%1426 = getelementptr inbounds %Type_Info, %Type_Info* %1419, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1426
	%1427 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 43
	%1428 = getelementptr inbounds %Type_Info, %Type_Info* %1427, i64 0, i32 1
	store i64 24, i64* %1428
	%1429 = getelementptr inbounds %Type_Info, %Type_Info* %1427, i64 0, i32 2
	store i64 8, i64* %1429
	; Type_Info_Slice
	%1430 = bitcast %Type_Info* %1427 to %Type_Info.Slice*
	%1431 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%1432 = bitcast %Type_Info* %1431 to %Type_Info*
	%1433 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1430, i64 0, i32 2
	store %Type_Info* %1432, %Type_Info** %1433
	%1434 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1430, i64 0, i32 3
	store i64 1, i64* %1434
	%1435 = getelementptr inbounds %Type_Info, %Type_Info* %1427, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1435
	%1436 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 44
	%1437 = getelementptr inbounds %Type_Info, %Type_Info* %1436, i64 0, i32 1
	store i64 8, i64* %1437
	%1438 = getelementptr inbounds %Type_Info, %Type_Info* %1436, i64 0, i32 2
	store i64 8, i64* %1438
	; Type_Info_Pointer
	%1439 = bitcast %Type_Info* %1436 to %Type_Info.Pointer*
	%1440 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%1441 = bitcast %Type_Info* %1440 to %Type_Info*
	%1442 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1439, i64 0, i32 2
	store %Type_Info* %1441, %Type_Info** %1442
	%1443 = getelementptr inbounds %Type_Info, %Type_Info* %1436, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1443
	%1444 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%1445 = getelementptr inbounds %Type_Info, %Type_Info* %1444, i64 0, i32 1
	store i64 120, i64* %1445
	%1446 = getelementptr inbounds %Type_Info, %Type_Info* %1444, i64 0, i32 2
	store i64 8, i64* %1446
	; Type_Info_Named
	%1447 = bitcast %Type_Info* %1444 to %Type_Info.Named*
	%1448 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1449 = bitcast %Type_Info* %1448 to %Type_Info*
	%1450 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1447, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$62c, i64 0, i32 0), i64 6}, %..string* %1450
	%1451 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1447, i64 0, i32 3
	store %Type_Info* %1449, %Type_Info** %1451
	%1452 = getelementptr inbounds %Type_Info, %Type_Info* %1444, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1452
	%1453 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1454 = getelementptr inbounds %Type_Info, %Type_Info* %1453, i64 0, i32 1
	store i64 120, i64* %1454
	%1455 = getelementptr inbounds %Type_Info, %Type_Info* %1453, i64 0, i32 2
	store i64 8, i64* %1455
	; Type_Info_Struct
	%1456 = bitcast %Type_Info* %1453 to %Type_Info.Struct*
	%1457 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1456, i64 0, i32 2
	%1458 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 4
	store i1 false, i1* %1458
	%1459 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 5
	store i1 true, i1* %1459
	%1460 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 6
	store i1 false, i1* %1460
	%1461 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 82
	%1462 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 82
	%1463 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 61
	%1464 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 59
	%1465 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1466 = bitcast %Type_Info* %1465 to %Type_Info*
	%1467 = getelementptr inbounds %Type_Info*, %Type_Info** %1461, i64 0
	%1468 = getelementptr inbounds i64, i64* %1463, i64 0
	%1469 = getelementptr inbounds i1, i1* %1464, i64 0
	%1470 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1470, %Type_Info** %1467
	%1471 = getelementptr inbounds %..string, %..string* %1462, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$62d, i64 0, i32 0), i64 4}, %..string* %1471
	store i64 0, i64* %1468
	store i1 false, i1* %1469
	%1472 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1473 = bitcast %Type_Info* %1472 to %Type_Info*
	%1474 = getelementptr inbounds %Type_Info*, %Type_Info** %1461, i64 1
	%1475 = getelementptr inbounds i64, i64* %1463, i64 1
	%1476 = getelementptr inbounds i1, i1* %1464, i64 1
	%1477 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1477, %Type_Info** %1474
	%1478 = getelementptr inbounds %..string, %..string* %1462, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$62e, i64 0, i32 0), i64 5}, %..string* %1478
	store i64 8, i64* %1475
	store i1 false, i1* %1476
	%1479 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1480 = bitcast %Type_Info* %1479 to %Type_Info*
	%1481 = getelementptr inbounds %Type_Info*, %Type_Info** %1461, i64 2
	%1482 = getelementptr inbounds i64, i64* %1463, i64 2
	%1483 = getelementptr inbounds i1, i1* %1464, i64 2
	%1484 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1484, %Type_Info** %1481
	%1485 = getelementptr inbounds %..string, %..string* %1462, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$62f, i64 0, i32 0), i64 6}, %..string* %1485
	store i64 16, i64* %1482
	store i1 true, i1* %1483
	%1486 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 0
	%1487 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1486, i64 0, i32 0
	store %Type_Info** %1461, %Type_Info*** %1487
	%1488 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1486, i64 0, i32 1
	store i64 3, i64* %1488
	%1489 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1486, i64 0, i32 2
	store i64 3, i64* %1489
	%1490 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 1
	%1491 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1490, i64 0, i32 0
	store %..string* %1462, %..string** %1491
	%1492 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1490, i64 0, i32 1
	store i64 3, i64* %1492
	%1493 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1490, i64 0, i32 2
	store i64 3, i64* %1493
	%1494 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 2
	%1495 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1494, i64 0, i32 0
	store i64* %1463, i64** %1495
	%1496 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1494, i64 0, i32 1
	store i64 3, i64* %1496
	%1497 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1494, i64 0, i32 2
	store i64 3, i64* %1497
	%1498 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1457, i64 0, i32 3
	%1499 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1498, i64 0, i32 0
	store i1* %1464, i1** %1499
	%1500 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1498, i64 0, i32 1
	store i64 3, i64* %1500
	%1501 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1498, i64 0, i32 2
	store i64 3, i64* %1501
	%1502 = getelementptr inbounds %Type_Info, %Type_Info* %1453, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1502
	%1503 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%1504 = getelementptr inbounds %Type_Info, %Type_Info* %1503, i64 0, i32 1
	store i64 120, i64* %1504
	%1505 = getelementptr inbounds %Type_Info, %Type_Info* %1503, i64 0, i32 2
	store i64 8, i64* %1505
	; Type_Info_Named
	%1506 = bitcast %Type_Info* %1503 to %Type_Info.Named*
	%1507 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1508 = bitcast %Type_Info* %1507 to %Type_Info*
	%1509 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1506, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$630, i64 0, i32 0), i64 9}, %..string* %1509
	%1510 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1506, i64 0, i32 3
	store %Type_Info* %1508, %Type_Info** %1510
	%1511 = getelementptr inbounds %Type_Info, %Type_Info* %1503, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1511
	%1512 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1513 = getelementptr inbounds %Type_Info, %Type_Info* %1512, i64 0, i32 1
	store i64 120, i64* %1513
	%1514 = getelementptr inbounds %Type_Info, %Type_Info* %1512, i64 0, i32 2
	store i64 8, i64* %1514
	; Type_Info_Struct
	%1515 = bitcast %Type_Info* %1512 to %Type_Info.Struct*
	%1516 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1515, i64 0, i32 2
	%1517 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 4
	store i1 false, i1* %1517
	%1518 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 5
	store i1 true, i1* %1518
	%1519 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 6
	store i1 false, i1* %1519
	%1520 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 85
	%1521 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 85
	%1522 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 64
	%1523 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 62
	%1524 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1525 = bitcast %Type_Info* %1524 to %Type_Info*
	%1526 = getelementptr inbounds %Type_Info*, %Type_Info** %1520, i64 0
	%1527 = getelementptr inbounds i64, i64* %1522, i64 0
	%1528 = getelementptr inbounds i1, i1* %1523, i64 0
	%1529 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1529, %Type_Info** %1526
	%1530 = getelementptr inbounds %..string, %..string* %1521, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$631, i64 0, i32 0), i64 4}, %..string* %1530
	store i64 0, i64* %1527
	store i1 false, i1* %1528
	%1531 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1532 = bitcast %Type_Info* %1531 to %Type_Info*
	%1533 = getelementptr inbounds %Type_Info*, %Type_Info** %1520, i64 1
	%1534 = getelementptr inbounds i64, i64* %1522, i64 1
	%1535 = getelementptr inbounds i1, i1* %1523, i64 1
	%1536 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1536, %Type_Info** %1533
	%1537 = getelementptr inbounds %..string, %..string* %1521, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$632, i64 0, i32 0), i64 5}, %..string* %1537
	store i64 8, i64* %1534
	store i1 false, i1* %1535
	%1538 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1539 = bitcast %Type_Info* %1538 to %Type_Info*
	%1540 = getelementptr inbounds %Type_Info*, %Type_Info** %1520, i64 2
	%1541 = getelementptr inbounds i64, i64* %1522, i64 2
	%1542 = getelementptr inbounds i1, i1* %1523, i64 2
	%1543 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1543, %Type_Info** %1540
	%1544 = getelementptr inbounds %..string, %..string* %1521, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$633, i64 0, i32 0), i64 6}, %..string* %1544
	store i64 16, i64* %1541
	store i1 true, i1* %1542
	%1545 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 0
	%1546 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1545, i64 0, i32 0
	store %Type_Info** %1520, %Type_Info*** %1546
	%1547 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1545, i64 0, i32 1
	store i64 3, i64* %1547
	%1548 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1545, i64 0, i32 2
	store i64 3, i64* %1548
	%1549 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 1
	%1550 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1549, i64 0, i32 0
	store %..string* %1521, %..string** %1550
	%1551 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1549, i64 0, i32 1
	store i64 3, i64* %1551
	%1552 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1549, i64 0, i32 2
	store i64 3, i64* %1552
	%1553 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 2
	%1554 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1553, i64 0, i32 0
	store i64* %1522, i64** %1554
	%1555 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1553, i64 0, i32 1
	store i64 3, i64* %1555
	%1556 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1553, i64 0, i32 2
	store i64 3, i64* %1556
	%1557 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1516, i64 0, i32 3
	%1558 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1557, i64 0, i32 0
	store i1* %1523, i1** %1558
	%1559 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1557, i64 0, i32 1
	store i64 3, i64* %1559
	%1560 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1557, i64 0, i32 2
	store i64 3, i64* %1560
	%1561 = getelementptr inbounds %Type_Info, %Type_Info* %1512, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1561
	%1562 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%1563 = getelementptr inbounds %Type_Info, %Type_Info* %1562, i64 0, i32 1
	store i64 136, i64* %1563
	%1564 = getelementptr inbounds %Type_Info, %Type_Info* %1562, i64 0, i32 2
	store i64 8, i64* %1564
	; Type_Info_Named
	%1565 = bitcast %Type_Info* %1562 to %Type_Info.Named*
	%1566 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 48
	%1567 = bitcast %Type_Info* %1566 to %Type_Info*
	%1568 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1565, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$634, i64 0, i32 0), i64 5}, %..string* %1568
	%1569 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1565, i64 0, i32 3
	store %Type_Info* %1567, %Type_Info** %1569
	%1570 = getelementptr inbounds %Type_Info, %Type_Info* %1562, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1570
	%1571 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 48
	%1572 = getelementptr inbounds %Type_Info, %Type_Info* %1571, i64 0, i32 1
	store i64 136, i64* %1572
	%1573 = getelementptr inbounds %Type_Info, %Type_Info* %1571, i64 0, i32 2
	store i64 8, i64* %1573
	; Type_Info_Struct
	%1574 = bitcast %Type_Info* %1571 to %Type_Info.Struct*
	%1575 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1574, i64 0, i32 2
	%1576 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 4
	store i1 false, i1* %1576
	%1577 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 5
	store i1 true, i1* %1577
	%1578 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 6
	store i1 false, i1* %1578
	%1579 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 88
	%1580 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 88
	%1581 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 67
	%1582 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 65
	%1583 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1584 = bitcast %Type_Info* %1583 to %Type_Info*
	%1585 = getelementptr inbounds %Type_Info*, %Type_Info** %1579, i64 0
	%1586 = getelementptr inbounds i64, i64* %1581, i64 0
	%1587 = getelementptr inbounds i1, i1* %1582, i64 0
	%1588 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1588, %Type_Info** %1585
	%1589 = getelementptr inbounds %..string, %..string* %1580, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$635, i64 0, i32 0), i64 4}, %..string* %1589
	store i64 0, i64* %1586
	store i1 false, i1* %1587
	%1590 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1591 = bitcast %Type_Info* %1590 to %Type_Info*
	%1592 = getelementptr inbounds %Type_Info*, %Type_Info** %1579, i64 1
	%1593 = getelementptr inbounds i64, i64* %1581, i64 1
	%1594 = getelementptr inbounds i1, i1* %1582, i64 1
	%1595 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1595, %Type_Info** %1592
	%1596 = getelementptr inbounds %..string, %..string* %1580, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$636, i64 0, i32 0), i64 5}, %..string* %1596
	store i64 8, i64* %1593
	store i1 false, i1* %1594
	%1597 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 49
	%1598 = bitcast %Type_Info* %1597 to %Type_Info*
	%1599 = getelementptr inbounds %Type_Info*, %Type_Info** %1579, i64 2
	%1600 = getelementptr inbounds i64, i64* %1581, i64 2
	%1601 = getelementptr inbounds i1, i1* %1582, i64 2
	%1602 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 49
	store %Type_Info* %1602, %Type_Info** %1599
	%1603 = getelementptr inbounds %..string, %..string* %1580, i64 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$637, i64 0, i32 0), i64 13}, %..string* %1603
	store i64 16, i64* %1600
	store i1 false, i1* %1601
	%1604 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1605 = bitcast %Type_Info* %1604 to %Type_Info*
	%1606 = getelementptr inbounds %Type_Info*, %Type_Info** %1579, i64 3
	%1607 = getelementptr inbounds i64, i64* %1581, i64 3
	%1608 = getelementptr inbounds i1, i1* %1582, i64 3
	%1609 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	store %Type_Info* %1609, %Type_Info** %1606
	%1610 = getelementptr inbounds %..string, %..string* %1580, i64 3
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$638, i64 0, i32 0), i64 13}, %..string* %1610
	store i64 88, i64* %1607
	store i1 false, i1* %1608
	%1611 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1612 = bitcast %Type_Info* %1611 to %Type_Info*
	%1613 = getelementptr inbounds %Type_Info*, %Type_Info** %1579, i64 4
	%1614 = getelementptr inbounds i64, i64* %1581, i64 4
	%1615 = getelementptr inbounds i1, i1* %1582, i64 4
	%1616 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1616, %Type_Info** %1613
	%1617 = getelementptr inbounds %..string, %..string* %1580, i64 4
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$639, i64 0, i32 0), i64 13}, %..string* %1617
	store i64 112, i64* %1614
	store i1 false, i1* %1615
	%1618 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 0
	%1619 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1618, i64 0, i32 0
	store %Type_Info** %1579, %Type_Info*** %1619
	%1620 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1618, i64 0, i32 1
	store i64 5, i64* %1620
	%1621 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1618, i64 0, i32 2
	store i64 5, i64* %1621
	%1622 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 1
	%1623 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1622, i64 0, i32 0
	store %..string* %1580, %..string** %1623
	%1624 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1622, i64 0, i32 1
	store i64 5, i64* %1624
	%1625 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1622, i64 0, i32 2
	store i64 5, i64* %1625
	%1626 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 2
	%1627 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1626, i64 0, i32 0
	store i64* %1581, i64** %1627
	%1628 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1626, i64 0, i32 1
	store i64 5, i64* %1628
	%1629 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1626, i64 0, i32 2
	store i64 5, i64* %1629
	%1630 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1575, i64 0, i32 3
	%1631 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1630, i64 0, i32 0
	store i1* %1582, i1** %1631
	%1632 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1630, i64 0, i32 1
	store i64 5, i64* %1632
	%1633 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1630, i64 0, i32 2
	store i64 5, i64* %1633
	%1634 = getelementptr inbounds %Type_Info, %Type_Info* %1571, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1634
	%1635 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 49
	%1636 = getelementptr inbounds %Type_Info, %Type_Info* %1635, i64 0, i32 1
	store i64 72, i64* %1636
	%1637 = getelementptr inbounds %Type_Info, %Type_Info* %1635, i64 0, i32 2
	store i64 8, i64* %1637
	; Type_Info_Struct
	%1638 = bitcast %Type_Info* %1635 to %Type_Info.Struct*
	%1639 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1638, i64 0, i32 2
	%1640 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 4
	store i1 false, i1* %1640
	%1641 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 5
	store i1 false, i1* %1641
	%1642 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 6
	store i1 false, i1* %1642
	%1643 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 93
	%1644 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 93
	%1645 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 72
	%1646 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 70
	%1647 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1648 = bitcast %Type_Info* %1647 to %Type_Info*
	%1649 = getelementptr inbounds %Type_Info*, %Type_Info** %1643, i64 0
	%1650 = getelementptr inbounds i64, i64* %1645, i64 0
	%1651 = getelementptr inbounds i1, i1* %1646, i64 0
	%1652 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1652, %Type_Info** %1649
	%1653 = getelementptr inbounds %..string, %..string* %1644, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63a, i64 0, i32 0), i64 5}, %..string* %1653
	store i64 0, i64* %1650
	store i1 false, i1* %1651
	%1654 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1655 = bitcast %Type_Info* %1654 to %Type_Info*
	%1656 = getelementptr inbounds %Type_Info*, %Type_Info** %1643, i64 1
	%1657 = getelementptr inbounds i64, i64* %1645, i64 1
	%1658 = getelementptr inbounds i1, i1* %1646, i64 1
	%1659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	store %Type_Info* %1659, %Type_Info** %1656
	%1660 = getelementptr inbounds %..string, %..string* %1644, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63b, i64 0, i32 0), i64 5}, %..string* %1660
	store i64 24, i64* %1657
	store i1 false, i1* %1658
	%1661 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1662 = bitcast %Type_Info* %1661 to %Type_Info*
	%1663 = getelementptr inbounds %Type_Info*, %Type_Info** %1643, i64 2
	%1664 = getelementptr inbounds i64, i64* %1645, i64 2
	%1665 = getelementptr inbounds i1, i1* %1646, i64 2
	%1666 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	store %Type_Info* %1666, %Type_Info** %1663
	%1667 = getelementptr inbounds %..string, %..string* %1644, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$63c, i64 0, i32 0), i64 7}, %..string* %1667
	store i64 48, i64* %1664
	store i1 false, i1* %1665
	%1668 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 0
	%1669 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1668, i64 0, i32 0
	store %Type_Info** %1643, %Type_Info*** %1669
	%1670 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1668, i64 0, i32 1
	store i64 3, i64* %1670
	%1671 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1668, i64 0, i32 2
	store i64 3, i64* %1671
	%1672 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 1
	%1673 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1672, i64 0, i32 0
	store %..string* %1644, %..string** %1673
	%1674 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1672, i64 0, i32 1
	store i64 3, i64* %1674
	%1675 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1672, i64 0, i32 2
	store i64 3, i64* %1675
	%1676 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 2
	%1677 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1676, i64 0, i32 0
	store i64* %1645, i64** %1677
	%1678 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1676, i64 0, i32 1
	store i64 3, i64* %1678
	%1679 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1676, i64 0, i32 2
	store i64 3, i64* %1679
	%1680 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1639, i64 0, i32 3
	%1681 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1680, i64 0, i32 0
	store i1* %1646, i1** %1681
	%1682 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1680, i64 0, i32 1
	store i64 3, i64* %1682
	%1683 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1680, i64 0, i32 2
	store i64 3, i64* %1683
	%1684 = getelementptr inbounds %Type_Info, %Type_Info* %1635, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1684
	%1685 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1686 = getelementptr inbounds %Type_Info, %Type_Info* %1685, i64 0, i32 1
	store i64 24, i64* %1686
	%1687 = getelementptr inbounds %Type_Info, %Type_Info* %1685, i64 0, i32 2
	store i64 8, i64* %1687
	; Type_Info_Slice
	%1688 = bitcast %Type_Info* %1685 to %Type_Info.Slice*
	%1689 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1690 = bitcast %Type_Info* %1689 to %Type_Info*
	%1691 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1688, i64 0, i32 2
	store %Type_Info* %1690, %Type_Info** %1691
	%1692 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1688, i64 0, i32 3
	store i64 8, i64* %1692
	%1693 = getelementptr inbounds %Type_Info, %Type_Info* %1685, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1693
	%1694 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1695 = getelementptr inbounds %Type_Info, %Type_Info* %1694, i64 0, i32 1
	store i64 8, i64* %1695
	%1696 = getelementptr inbounds %Type_Info, %Type_Info* %1694, i64 0, i32 2
	store i64 8, i64* %1696
	; Type_Info_Pointer
	%1697 = bitcast %Type_Info* %1694 to %Type_Info.Pointer*
	%1698 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1699 = bitcast %Type_Info* %1698 to %Type_Info*
	%1700 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1697, i64 0, i32 2
	store %Type_Info* %1699, %Type_Info** %1700
	%1701 = getelementptr inbounds %Type_Info, %Type_Info* %1694, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1701
	%1702 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1703 = getelementptr inbounds %Type_Info, %Type_Info* %1702, i64 0, i32 1
	store i64 8, i64* %1703
	%1704 = getelementptr inbounds %Type_Info, %Type_Info* %1702, i64 0, i32 2
	store i64 8, i64* %1704
	; Type_Info_Pointer
	%1705 = bitcast %Type_Info* %1702 to %Type_Info.Pointer*
	%1706 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1707 = bitcast %Type_Info* %1706 to %Type_Info*
	%1708 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1705, i64 0, i32 2
	store %Type_Info* %1707, %Type_Info** %1708
	%1709 = getelementptr inbounds %Type_Info, %Type_Info* %1702, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1709
	%1710 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1711 = getelementptr inbounds %Type_Info, %Type_Info* %1710, i64 0, i32 1
	store i64 24, i64* %1711
	%1712 = getelementptr inbounds %Type_Info, %Type_Info* %1710, i64 0, i32 2
	store i64 8, i64* %1712
	; Type_Info_Slice
	%1713 = bitcast %Type_Info* %1710 to %Type_Info.Slice*
	%1714 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1715 = bitcast %Type_Info* %1714 to %Type_Info*
	%1716 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1713, i64 0, i32 2
	store %Type_Info* %1715, %Type_Info** %1716
	%1717 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1713, i64 0, i32 3
	store i64 16, i64* %1717
	%1718 = getelementptr inbounds %Type_Info, %Type_Info* %1710, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1718
	%1719 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1720 = getelementptr inbounds %Type_Info, %Type_Info* %1719, i64 0, i32 1
	store i64 8, i64* %1720
	%1721 = getelementptr inbounds %Type_Info, %Type_Info* %1719, i64 0, i32 2
	store i64 8, i64* %1721
	; Type_Info_Pointer
	%1722 = bitcast %Type_Info* %1719 to %Type_Info.Pointer*
	%1723 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1724 = bitcast %Type_Info* %1723 to %Type_Info*
	%1725 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1722, i64 0, i32 2
	store %Type_Info* %1724, %Type_Info** %1725
	%1726 = getelementptr inbounds %Type_Info, %Type_Info* %1719, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1726
	%1727 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1728 = getelementptr inbounds %Type_Info, %Type_Info* %1727, i64 0, i32 1
	store i64 24, i64* %1728
	%1729 = getelementptr inbounds %Type_Info, %Type_Info* %1727, i64 0, i32 2
	store i64 8, i64* %1729
	; Type_Info_Slice
	%1730 = bitcast %Type_Info* %1727 to %Type_Info.Slice*
	%1731 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1732 = bitcast %Type_Info* %1731 to %Type_Info*
	%1733 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1730, i64 0, i32 2
	store %Type_Info* %1732, %Type_Info** %1733
	%1734 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1730, i64 0, i32 3
	store i64 8, i64* %1734
	%1735 = getelementptr inbounds %Type_Info, %Type_Info* %1727, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1735
	%1736 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1737 = getelementptr inbounds %Type_Info, %Type_Info* %1736, i64 0, i32 1
	store i64 8, i64* %1737
	%1738 = getelementptr inbounds %Type_Info, %Type_Info* %1736, i64 0, i32 2
	store i64 8, i64* %1738
	; Type_Info_Pointer
	%1739 = bitcast %Type_Info* %1736 to %Type_Info.Pointer*
	%1740 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1741 = bitcast %Type_Info* %1740 to %Type_Info*
	%1742 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1739, i64 0, i32 2
	store %Type_Info* %1741, %Type_Info** %1742
	%1743 = getelementptr inbounds %Type_Info, %Type_Info* %1736, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1743
	%1744 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1745 = getelementptr inbounds %Type_Info, %Type_Info* %1744, i64 0, i32 1
	store i64 24, i64* %1745
	%1746 = getelementptr inbounds %Type_Info, %Type_Info* %1744, i64 0, i32 2
	store i64 8, i64* %1746
	; Type_Info_Slice
	%1747 = bitcast %Type_Info* %1744 to %Type_Info.Slice*
	%1748 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1749 = bitcast %Type_Info* %1748 to %Type_Info*
	%1750 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1747, i64 0, i32 2
	store %Type_Info* %1749, %Type_Info** %1750
	%1751 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1747, i64 0, i32 3
	store i64 16, i64* %1751
	%1752 = getelementptr inbounds %Type_Info, %Type_Info* %1744, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1752
	%1753 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1754 = getelementptr inbounds %Type_Info, %Type_Info* %1753, i64 0, i32 1
	store i64 8, i64* %1754
	%1755 = getelementptr inbounds %Type_Info, %Type_Info* %1753, i64 0, i32 2
	store i64 8, i64* %1755
	; Type_Info_Pointer
	%1756 = bitcast %Type_Info* %1753 to %Type_Info.Pointer*
	%1757 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1758 = bitcast %Type_Info* %1757 to %Type_Info*
	%1759 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1756, i64 0, i32 2
	store %Type_Info* %1758, %Type_Info** %1759
	%1760 = getelementptr inbounds %Type_Info, %Type_Info* %1753, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1760
	%1761 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1762 = getelementptr inbounds %Type_Info, %Type_Info* %1761, i64 0, i32 1
	store i64 24, i64* %1762
	%1763 = getelementptr inbounds %Type_Info, %Type_Info* %1761, i64 0, i32 2
	store i64 8, i64* %1763
	; Type_Info_Slice
	%1764 = bitcast %Type_Info* %1761 to %Type_Info.Slice*
	%1765 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1766 = bitcast %Type_Info* %1765 to %Type_Info*
	%1767 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1764, i64 0, i32 2
	store %Type_Info* %1766, %Type_Info** %1767
	%1768 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1764, i64 0, i32 3
	store i64 8, i64* %1768
	%1769 = getelementptr inbounds %Type_Info, %Type_Info* %1761, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1769
	%1770 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1771 = getelementptr inbounds %Type_Info, %Type_Info* %1770, i64 0, i32 1
	store i64 8, i64* %1771
	%1772 = getelementptr inbounds %Type_Info, %Type_Info* %1770, i64 0, i32 2
	store i64 8, i64* %1772
	; Type_Info_Pointer
	%1773 = bitcast %Type_Info* %1770 to %Type_Info.Pointer*
	%1774 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1775 = bitcast %Type_Info* %1774 to %Type_Info*
	%1776 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1773, i64 0, i32 2
	store %Type_Info* %1775, %Type_Info** %1776
	%1777 = getelementptr inbounds %Type_Info, %Type_Info* %1770, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1777
	%1778 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1779 = getelementptr inbounds %Type_Info, %Type_Info* %1778, i64 0, i32 1
	store i64 8, i64* %1779
	%1780 = getelementptr inbounds %Type_Info, %Type_Info* %1778, i64 0, i32 2
	store i64 8, i64* %1780
	; Type_Info_Pointer
	%1781 = bitcast %Type_Info* %1778 to %Type_Info.Pointer*
	%1782 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1783 = bitcast %Type_Info* %1782 to %Type_Info*
	%1784 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1781, i64 0, i32 2
	store %Type_Info* %1783, %Type_Info** %1784
	%1785 = getelementptr inbounds %Type_Info, %Type_Info* %1778, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1785
	%1786 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%1787 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 1
	store i64 72, i64* %1787
	%1788 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 2
	store i64 8, i64* %1788
	; Type_Info_Named
	%1789 = bitcast %Type_Info* %1786 to %Type_Info.Named*
	%1790 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 51
	%1791 = bitcast %Type_Info* %1790 to %Type_Info*
	%1792 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1789, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$63d, i64 0, i32 0), i64 4}, %..string* %1792
	%1793 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1789, i64 0, i32 3
	store %Type_Info* %1791, %Type_Info** %1793
	%1794 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1794
	%1795 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 51
	%1796 = getelementptr inbounds %Type_Info, %Type_Info* %1795, i64 0, i32 1
	store i64 72, i64* %1796
	%1797 = getelementptr inbounds %Type_Info, %Type_Info* %1795, i64 0, i32 2
	store i64 8, i64* %1797
	; Type_Info_Struct
	%1798 = bitcast %Type_Info* %1795 to %Type_Info.Struct*
	%1799 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1798, i64 0, i32 2
	%1800 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 4
	store i1 false, i1* %1800
	%1801 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 5
	store i1 true, i1* %1801
	%1802 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 6
	store i1 false, i1* %1802
	%1803 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 96
	%1804 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 96
	%1805 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 75
	%1806 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 73
	%1807 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1808 = bitcast %Type_Info* %1807 to %Type_Info*
	%1809 = getelementptr inbounds %Type_Info*, %Type_Info** %1803, i64 0
	%1810 = getelementptr inbounds i64, i64* %1805, i64 0
	%1811 = getelementptr inbounds i1, i1* %1806, i64 0
	%1812 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1812, %Type_Info** %1809
	%1813 = getelementptr inbounds %..string, %..string* %1804, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$63e, i64 0, i32 0), i64 4}, %..string* %1813
	store i64 0, i64* %1810
	store i1 false, i1* %1811
	%1814 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1815 = bitcast %Type_Info* %1814 to %Type_Info*
	%1816 = getelementptr inbounds %Type_Info*, %Type_Info** %1803, i64 1
	%1817 = getelementptr inbounds i64, i64* %1805, i64 1
	%1818 = getelementptr inbounds i1, i1* %1806, i64 1
	%1819 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1819, %Type_Info** %1816
	%1820 = getelementptr inbounds %..string, %..string* %1804, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63f, i64 0, i32 0), i64 5}, %..string* %1820
	store i64 8, i64* %1817
	store i1 false, i1* %1818
	%1821 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1822 = bitcast %Type_Info* %1821 to %Type_Info*
	%1823 = getelementptr inbounds %Type_Info*, %Type_Info** %1803, i64 2
	%1824 = getelementptr inbounds i64, i64* %1805, i64 2
	%1825 = getelementptr inbounds i1, i1* %1806, i64 2
	%1826 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1826, %Type_Info** %1823
	%1827 = getelementptr inbounds %..string, %..string* %1804, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$640, i64 0, i32 0), i64 4}, %..string* %1827
	store i64 16, i64* %1824
	store i1 false, i1* %1825
	%1828 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1829 = bitcast %Type_Info* %1828 to %Type_Info*
	%1830 = getelementptr inbounds %Type_Info*, %Type_Info** %1803, i64 3
	%1831 = getelementptr inbounds i64, i64* %1805, i64 3
	%1832 = getelementptr inbounds i1, i1* %1806, i64 3
	%1833 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	store %Type_Info* %1833, %Type_Info** %1830
	%1834 = getelementptr inbounds %..string, %..string* %1804, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$641, i64 0, i32 0), i64 5}, %..string* %1834
	store i64 24, i64* %1831
	store i1 false, i1* %1832
	%1835 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 52
	%1836 = bitcast %Type_Info* %1835 to %Type_Info*
	%1837 = getelementptr inbounds %Type_Info*, %Type_Info** %1803, i64 4
	%1838 = getelementptr inbounds i64, i64* %1805, i64 4
	%1839 = getelementptr inbounds i1, i1* %1806, i64 4
	%1840 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 52
	store %Type_Info* %1840, %Type_Info** %1837
	%1841 = getelementptr inbounds %..string, %..string* %1804, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$642, i64 0, i32 0), i64 6}, %..string* %1841
	store i64 48, i64* %1838
	store i1 false, i1* %1839
	%1842 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 0
	%1843 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1842, i64 0, i32 0
	store %Type_Info** %1803, %Type_Info*** %1843
	%1844 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1842, i64 0, i32 1
	store i64 5, i64* %1844
	%1845 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1842, i64 0, i32 2
	store i64 5, i64* %1845
	%1846 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 1
	%1847 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1846, i64 0, i32 0
	store %..string* %1804, %..string** %1847
	%1848 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1846, i64 0, i32 1
	store i64 5, i64* %1848
	%1849 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1846, i64 0, i32 2
	store i64 5, i64* %1849
	%1850 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 2
	%1851 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1850, i64 0, i32 0
	store i64* %1805, i64** %1851
	%1852 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1850, i64 0, i32 1
	store i64 5, i64* %1852
	%1853 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1850, i64 0, i32 2
	store i64 5, i64* %1853
	%1854 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1799, i64 0, i32 3
	%1855 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1854, i64 0, i32 0
	store i1* %1806, i1** %1855
	%1856 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1854, i64 0, i32 1
	store i64 5, i64* %1856
	%1857 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %1854, i64 0, i32 2
	store i64 5, i64* %1857
	%1858 = getelementptr inbounds %Type_Info, %Type_Info* %1795, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %1858
	%1859 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1860 = getelementptr inbounds %Type_Info, %Type_Info* %1859, i64 0, i32 1
	store i64 8, i64* %1860
	%1861 = getelementptr inbounds %Type_Info, %Type_Info* %1859, i64 0, i32 2
	store i64 8, i64* %1861
	; Type_Info_Pointer
	%1862 = bitcast %Type_Info* %1859 to %Type_Info.Pointer*
	%1863 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1864 = bitcast %Type_Info* %1863 to %Type_Info*
	%1865 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1862, i64 0, i32 2
	store %Type_Info* %1864, %Type_Info** %1865
	%1866 = getelementptr inbounds %Type_Info, %Type_Info* %1859, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1866
	%1867 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1868 = getelementptr inbounds %Type_Info, %Type_Info* %1867, i64 0, i32 1
	store i64 24, i64* %1868
	%1869 = getelementptr inbounds %Type_Info, %Type_Info* %1867, i64 0, i32 2
	store i64 8, i64* %1869
	; Type_Info_Slice
	%1870 = bitcast %Type_Info* %1867 to %Type_Info.Slice*
	%1871 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1872 = bitcast %Type_Info* %1871 to %Type_Info*
	%1873 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1870, i64 0, i32 2
	store %Type_Info* %1872, %Type_Info** %1873
	%1874 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1870, i64 0, i32 3
	store i64 16, i64* %1874
	%1875 = getelementptr inbounds %Type_Info, %Type_Info* %1867, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1875
	%1876 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1877 = getelementptr inbounds %Type_Info, %Type_Info* %1876, i64 0, i32 1
	store i64 8, i64* %1877
	%1878 = getelementptr inbounds %Type_Info, %Type_Info* %1876, i64 0, i32 2
	store i64 8, i64* %1878
	; Type_Info_Pointer
	%1879 = bitcast %Type_Info* %1876 to %Type_Info.Pointer*
	%1880 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%1881 = bitcast %Type_Info* %1880 to %Type_Info*
	%1882 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1879, i64 0, i32 2
	store %Type_Info* %1881, %Type_Info** %1882
	%1883 = getelementptr inbounds %Type_Info, %Type_Info* %1876, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1883
	%1884 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 52
	%1885 = getelementptr inbounds %Type_Info, %Type_Info* %1884, i64 0, i32 1
	store i64 24, i64* %1885
	%1886 = getelementptr inbounds %Type_Info, %Type_Info* %1884, i64 0, i32 2
	store i64 8, i64* %1886
	; Type_Info_Slice
	%1887 = bitcast %Type_Info* %1884 to %Type_Info.Slice*
	%1888 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%1889 = bitcast %Type_Info* %1888 to %Type_Info*
	%1890 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1887, i64 0, i32 2
	store %Type_Info* %1889, %Type_Info** %1890
	%1891 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %1887, i64 0, i32 3
	store i64 8, i64* %1891
	%1892 = getelementptr inbounds %Type_Info, %Type_Info* %1884, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %1892
	%1893 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%1894 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 1
	store i64 8, i64* %1894
	%1895 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 2
	store i64 8, i64* %1895
	; Type_Info_Named
	%1896 = bitcast %Type_Info* %1893 to %Type_Info.Named*
	%1897 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%1898 = bitcast %Type_Info* %1897 to %Type_Info*
	%1899 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1896, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$643, i64 0, i32 0), i64 20}, %..string* %1899
	%1900 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1896, i64 0, i32 3
	store %Type_Info* %1898, %Type_Info** %1900
	%1901 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1901
	%1902 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%1903 = getelementptr inbounds %Type_Info, %Type_Info* %1902, i64 0, i32 1
	store i64 8, i64* %1903
	%1904 = getelementptr inbounds %Type_Info, %Type_Info* %1902, i64 0, i32 2
	store i64 8, i64* %1904
	; Type_Info_RawUnion
	%1905 = bitcast %Type_Info* %1902 to %Type_Info.Raw_Union*
	%1906 = getelementptr inbounds %Type_Info.Raw_Union, %Type_Info.Raw_Union* %1905, i64 0, i32 2
	%1907 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 101
	%1908 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 101
	%1909 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 80
	%1910 = getelementptr inbounds %Type_Info*, %Type_Info** %1907, i64 0
	%1911 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %1911, %Type_Info** %1910
	%1912 = getelementptr inbounds %..string, %..string* %1908, i64 0
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$644, i64 0, i32 0), i64 1}, %..string* %1912
	%1913 = getelementptr inbounds %Type_Info*, %Type_Info** %1907, i64 1
	%1914 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %1914, %Type_Info** %1913
	%1915 = getelementptr inbounds %..string, %..string* %1908, i64 1
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$645, i64 0, i32 0), i64 1}, %..string* %1915
	%1916 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1906, i64 0, i32 0
	%1917 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1916, i64 0, i32 0
	store %Type_Info** %1907, %Type_Info*** %1917
	%1918 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1916, i64 0, i32 1
	store i64 2, i64* %1918
	%1919 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %1916, i64 0, i32 2
	store i64 2, i64* %1919
	%1920 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1906, i64 0, i32 1
	%1921 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1920, i64 0, i32 0
	store %..string* %1908, %..string** %1921
	%1922 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1920, i64 0, i32 1
	store i64 2, i64* %1922
	%1923 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %1920, i64 0, i32 2
	store i64 2, i64* %1923
	%1924 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1906, i64 0, i32 2
	%1925 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1924, i64 0, i32 0
	store i64* %1909, i64** %1925
	%1926 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1924, i64 0, i32 1
	store i64 2, i64* %1926
	%1927 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %1924, i64 0, i32 2
	store i64 2, i64* %1927
	%1928 = getelementptr inbounds %Type_Info, %Type_Info* %1902, i64 0, i32 4 ; UnionTagPtr
	store i64 18, i64* %1928
	%1929 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%1930 = getelementptr inbounds %Type_Info, %Type_Info* %1929, i64 0, i32 1
	store i64 8, i64* %1930
	%1931 = getelementptr inbounds %Type_Info, %Type_Info* %1929, i64 0, i32 2
	store i64 8, i64* %1931
	; Type_Info_Basic
	%1932 = bitcast %Type_Info* %1929 to %Type_Info.Float*
	%1933 = getelementptr inbounds %Type_Info, %Type_Info* %1929, i64 0, i32 4 ; UnionTagPtr
	store i64 3, i64* %1933
	%1934 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%1935 = getelementptr inbounds %Type_Info, %Type_Info* %1934, i64 0, i32 1
	store i64 8, i64* %1935
	%1936 = getelementptr inbounds %Type_Info, %Type_Info* %1934, i64 0, i32 2
	store i64 8, i64* %1936
	; Type_Info_Basic
	%1937 = bitcast %Type_Info* %1934 to %Type_Info.Integer*
	%1938 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %1937, i64 0, i32 2
	store i1 true, i1* %1938
	%1939 = getelementptr inbounds %Type_Info, %Type_Info* %1934, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %1939
	%1940 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%1941 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 1
	store i64 8, i64* %1941
	%1942 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 2
	store i64 8, i64* %1942
	; Type_Info_Pointer
	%1943 = bitcast %Type_Info* %1940 to %Type_Info.Pointer*
	%1944 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%1945 = bitcast %Type_Info* %1944 to %Type_Info*
	%1946 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %1943, i64 0, i32 2
	store %Type_Info* %1945, %Type_Info** %1946
	%1947 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %1947
	%1948 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%1949 = getelementptr inbounds %Type_Info, %Type_Info* %1948, i64 0, i32 1
	store i64 48, i64* %1949
	%1950 = getelementptr inbounds %Type_Info, %Type_Info* %1948, i64 0, i32 2
	store i64 8, i64* %1950
	; Type_Info_Named
	%1951 = bitcast %Type_Info* %1948 to %Type_Info.Named*
	%1952 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%1953 = bitcast %Type_Info* %1952 to %Type_Info*
	%1954 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1951, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$646, i64 0, i32 0), i64 3}, %..string* %1954
	%1955 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %1951, i64 0, i32 3
	store %Type_Info* %1953, %Type_Info** %1955
	%1956 = getelementptr inbounds %Type_Info, %Type_Info* %1948, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %1956
	%1957 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%1958 = getelementptr inbounds %Type_Info, %Type_Info* %1957, i64 0, i32 1
	store i64 48, i64* %1958
	%1959 = getelementptr inbounds %Type_Info, %Type_Info* %1957, i64 0, i32 2
	store i64 8, i64* %1959
	; Type_Info_Struct
	%1960 = bitcast %Type_Info* %1957 to %Type_Info.Struct*
	%1961 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %1960, i64 0, i32 2
	%1962 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 4
	store i1 false, i1* %1962
	%1963 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 5
	store i1 true, i1* %1963
	%1964 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 6
	store i1 false, i1* %1964
	%1965 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 103
	%1966 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 103
	%1967 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 82
	%1968 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 78
	%1969 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1970 = bitcast %Type_Info* %1969 to %Type_Info*
	%1971 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 0
	%1972 = getelementptr inbounds i64, i64* %1967, i64 0
	%1973 = getelementptr inbounds i1, i1* %1968, i64 0
	%1974 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1974, %Type_Info** %1971
	%1975 = getelementptr inbounds %..string, %..string* %1966, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$647, i64 0, i32 0), i64 4}, %..string* %1975
	store i64 0, i64* %1972
	store i1 false, i1* %1973
	%1976 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1977 = bitcast %Type_Info* %1976 to %Type_Info*
	%1978 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 1
	%1979 = getelementptr inbounds i64, i64* %1967, i64 1
	%1980 = getelementptr inbounds i1, i1* %1968, i64 1
	%1981 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %1981, %Type_Info** %1978
	%1982 = getelementptr inbounds %..string, %..string* %1966, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$648, i64 0, i32 0), i64 5}, %..string* %1982
	store i64 8, i64* %1979
	store i1 false, i1* %1980
	%1983 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1984 = bitcast %Type_Info* %1983 to %Type_Info*
	%1985 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 2
	%1986 = getelementptr inbounds i64, i64* %1967, i64 2
	%1987 = getelementptr inbounds i1, i1* %1968, i64 2
	%1988 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1988, %Type_Info** %1985
	%1989 = getelementptr inbounds %..string, %..string* %1966, i64 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$649, i64 0, i32 0), i64 3}, %..string* %1989
	store i64 16, i64* %1986
	store i1 false, i1* %1987
	%1990 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1991 = bitcast %Type_Info* %1990 to %Type_Info*
	%1992 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 3
	%1993 = getelementptr inbounds i64, i64* %1967, i64 3
	%1994 = getelementptr inbounds i1, i1* %1968, i64 3
	%1995 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1995, %Type_Info** %1992
	%1996 = getelementptr inbounds %..string, %..string* %1966, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$64a, i64 0, i32 0), i64 5}, %..string* %1996
	store i64 24, i64* %1993
	store i1 false, i1* %1994
	%1997 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1998 = bitcast %Type_Info* %1997 to %Type_Info*
	%1999 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 4
	%2000 = getelementptr inbounds i64, i64* %1967, i64 4
	%2001 = getelementptr inbounds i1, i1* %1968, i64 4
	%2002 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %2002, %Type_Info** %1999
	%2003 = getelementptr inbounds %..string, %..string* %1966, i64 4
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$64b, i64 0, i32 0), i64 16}, %..string* %2003
	store i64 32, i64* %2000
	store i1 false, i1* %2001
	%2004 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2005 = bitcast %Type_Info* %2004 to %Type_Info*
	%2006 = getelementptr inbounds %Type_Info*, %Type_Info** %1965, i64 5
	%2007 = getelementptr inbounds i64, i64* %1967, i64 5
	%2008 = getelementptr inbounds i1, i1* %1968, i64 5
	%2009 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %2009, %Type_Info** %2006
	%2010 = getelementptr inbounds %..string, %..string* %1966, i64 5
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$64c, i64 0, i32 0), i64 5}, %..string* %2010
	store i64 40, i64* %2007
	store i1 false, i1* %2008
	%2011 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 0
	%2012 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2011, i64 0, i32 0
	store %Type_Info** %1965, %Type_Info*** %2012
	%2013 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2011, i64 0, i32 1
	store i64 6, i64* %2013
	%2014 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2011, i64 0, i32 2
	store i64 6, i64* %2014
	%2015 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 1
	%2016 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2015, i64 0, i32 0
	store %..string* %1966, %..string** %2016
	%2017 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2015, i64 0, i32 1
	store i64 6, i64* %2017
	%2018 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2015, i64 0, i32 2
	store i64 6, i64* %2018
	%2019 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 2
	%2020 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %2019, i64 0, i32 0
	store i64* %1967, i64** %2020
	%2021 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %2019, i64 0, i32 1
	store i64 6, i64* %2021
	%2022 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %2019, i64 0, i32 2
	store i64 6, i64* %2022
	%2023 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %1961, i64 0, i32 3
	%2024 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %2023, i64 0, i32 0
	store i1* %1968, i1** %2024
	%2025 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %2023, i64 0, i32 1
	store i64 6, i64* %2025
	%2026 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %2023, i64 0, i32 2
	store i64 6, i64* %2026
	%2027 = getelementptr inbounds %Type_Info, %Type_Info* %1957, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %2027
	%2028 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2029 = getelementptr inbounds %Type_Info, %Type_Info* %2028, i64 0, i32 1
	store i64 8, i64* %2029
	%2030 = getelementptr inbounds %Type_Info, %Type_Info* %2028, i64 0, i32 2
	store i64 8, i64* %2030
	; Type_Info_Pointer
	%2031 = bitcast %Type_Info* %2028 to %Type_Info.Pointer*
	%2032 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2033 = bitcast %Type_Info* %2032 to %Type_Info*
	%2034 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2031, i64 0, i32 2
	store %Type_Info* %2033, %Type_Info** %2034
	%2035 = getelementptr inbounds %Type_Info, %Type_Info* %2028, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2035
	%2036 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2037 = getelementptr inbounds %Type_Info, %Type_Info* %2036, i64 0, i32 1
	store i64 8, i64* %2037
	%2038 = getelementptr inbounds %Type_Info, %Type_Info* %2036, i64 0, i32 2
	store i64 8, i64* %2038
	; Type_Info_Pointer
	%2039 = bitcast %Type_Info* %2036 to %Type_Info.Pointer*
	%2040 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2041 = bitcast %Type_Info* %2040 to %Type_Info*
	%2042 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2039, i64 0, i32 2
	store %Type_Info* %2041, %Type_Info** %2042
	%2043 = getelementptr inbounds %Type_Info, %Type_Info* %2036, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2043
	%2044 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2045 = getelementptr inbounds %Type_Info, %Type_Info* %2044, i64 0, i32 1
	store i64 8, i64* %2045
	%2046 = getelementptr inbounds %Type_Info, %Type_Info* %2044, i64 0, i32 2
	store i64 8, i64* %2046
	; Type_Info_Pointer
	%2047 = bitcast %Type_Info* %2044 to %Type_Info.Pointer*
	%2048 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2049 = bitcast %Type_Info* %2048 to %Type_Info*
	%2050 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2047, i64 0, i32 2
	store %Type_Info* %2049, %Type_Info** %2050
	%2051 = getelementptr inbounds %Type_Info, %Type_Info* %2044, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2051
	%2052 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%2053 = getelementptr inbounds %Type_Info, %Type_Info* %2052, i64 0, i32 1
	store i64 8, i64* %2053
	%2054 = getelementptr inbounds %Type_Info, %Type_Info* %2052, i64 0, i32 2
	store i64 8, i64* %2054
	; Type_Info_Pointer
	%2055 = bitcast %Type_Info* %2052 to %Type_Info.Pointer*
	%2056 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%2057 = bitcast %Type_Info* %2056 to %Type_Info*
	%2058 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2055, i64 0, i32 2
	store %Type_Info* %2057, %Type_Info** %2058
	%2059 = getelementptr inbounds %Type_Info, %Type_Info* %2052, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2059
	%2060 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%2061 = getelementptr inbounds %Type_Info, %Type_Info* %2060, i64 0, i32 1
	store i64 8, i64* %2061
	%2062 = getelementptr inbounds %Type_Info, %Type_Info* %2060, i64 0, i32 2
	store i64 8, i64* %2062
	; Type_Info_Pointer
	%2063 = bitcast %Type_Info* %2060 to %Type_Info.Pointer*
	%2064 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%2065 = bitcast %Type_Info* %2064 to %Type_Info*
	%2066 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2063, i64 0, i32 2
	store %Type_Info* %2065, %Type_Info** %2066
	%2067 = getelementptr inbounds %Type_Info, %Type_Info* %2060, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2067
	%2068 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2069 = getelementptr inbounds %Type_Info, %Type_Info* %2068, i64 0, i32 1
	store i64 8, i64* %2069
	%2070 = getelementptr inbounds %Type_Info, %Type_Info* %2068, i64 0, i32 2
	store i64 8, i64* %2070
	; Type_Info_Pointer
	%2071 = bitcast %Type_Info* %2068 to %Type_Info.Pointer*
	%2072 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2073 = bitcast %Type_Info* %2072 to %Type_Info*
	%2074 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2071, i64 0, i32 2
	store %Type_Info* %2073, %Type_Info** %2074
	%2075 = getelementptr inbounds %Type_Info, %Type_Info* %2068, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2075
	%2076 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%2077 = getelementptr inbounds %Type_Info, %Type_Info* %2076, i64 0, i32 1
	store i64 4, i64* %2077
	%2078 = getelementptr inbounds %Type_Info, %Type_Info* %2076, i64 0, i32 2
	store i64 4, i64* %2078
	; Type_Info_Named
	%2079 = bitcast %Type_Info* %2076 to %Type_Info.Named*
	%2080 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%2081 = bitcast %Type_Info* %2080 to %Type_Info*
	%2082 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2079, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$64d, i64 0, i32 0), i64 11}, %..string* %2082
	%2083 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2079, i64 0, i32 3
	store %Type_Info* %2081, %Type_Info** %2083
	%2084 = getelementptr inbounds %Type_Info, %Type_Info* %2076, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %2084
	%2085 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%2086 = getelementptr inbounds %Type_Info, %Type_Info* %2085, i64 0, i32 1
	store i64 4, i64* %2086
	%2087 = getelementptr inbounds %Type_Info, %Type_Info* %2085, i64 0, i32 2
	store i64 4, i64* %2087
	; Type_Info_Enum
	%2088 = bitcast %Type_Info* %2085 to %Type_Info.Enum*
	%2089 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%2090 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2088, i64 0, i32 2
	store %Type_Info* %2089, %Type_Info** %2090
	%2091 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 0
	%2092 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 0
	%2093 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2092 to i64*
	store i64 33350, i64* %2093
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$64e, i64 0, i32 0), i64 3}, %..string* %2091
	%2094 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 1
	%2095 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 1
	%2096 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2095 to i64*
	store i64 33351, i64* %2096
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$64f, i64 0, i32 0), i64 12}, %..string* %2094
	%2097 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 2
	%2098 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 2
	%2099 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2098 to i64*
	store i64 33352, i64* %2099
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$650, i64 0, i32 0), i64 14}, %..string* %2097
	%2100 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 3
	%2101 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 3
	%2102 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2101 to i64*
	store i64 33353, i64* %2102
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$651, i64 0, i32 0), i64 10}, %..string* %2100
	%2103 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 4
	%2104 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 4
	%2105 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2104 to i64*
	store i64 33354, i64* %2105
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$652, i64 0, i32 0), i64 11}, %..string* %2103
	%2106 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 5
	%2107 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 5
	%2108 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2107 to i64*
	store i64 33355, i64* %2108
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$653, i64 0, i32 0), i64 5}, %..string* %2106
	%2109 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 6
	%2110 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 6
	%2111 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2110 to i64*
	store i64 4352, i64* %2111
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$654, i64 0, i32 0), i64 8}, %..string* %2109
	%2112 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2088, i64 0, i32 3
	%2113 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-3e, i64 0, i32 0
	%2114 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2112, i64 0, i32 0
	store %..string* %2113, %..string** %2114
	%2115 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2112, i64 0, i32 1
	store i64 7, i64* %2115
	%2116 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2088, i64 0, i32 4
	%2117 = getelementptr inbounds [7 x {[0 x <8 x i8>], [8 x i8]}], [7 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-3e, i64 0, i32 0
	%2118 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2116, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %2117, {[0 x <8 x i8>], [8 x i8]}** %2118
	%2119 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2116, i64 0, i32 1
	store i64 7, i64* %2119
	%2120 = getelementptr inbounds %Type_Info, %Type_Info* %2085, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %2120
	%2121 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%2122 = getelementptr inbounds %Type_Info, %Type_Info* %2121, i64 0, i32 1
	store i64 4, i64* %2122
	%2123 = getelementptr inbounds %Type_Info, %Type_Info* %2121, i64 0, i32 2
	store i64 4, i64* %2123
	; Type_Info_Basic
	%2124 = bitcast %Type_Info* %2121 to %Type_Info.Integer*
	%2125 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2124, i64 0, i32 2
	store i1 true, i1* %2125
	%2126 = getelementptr inbounds %Type_Info, %Type_Info* %2121, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2126
	%2127 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%2128 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 1
	store i64 4, i64* %2128
	%2129 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 2
	store i64 4, i64* %2129
	; Type_Info_Named
	%2130 = bitcast %Type_Info* %2127 to %Type_Info.Named*
	%2131 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%2132 = bitcast %Type_Info* %2131 to %Type_Info*
	%2133 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2130, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$655, i64 0, i32 0), i64 9}, %..string* %2133
	%2134 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2130, i64 0, i32 3
	store %Type_Info* %2132, %Type_Info** %2134
	%2135 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %2135
	%2136 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%2137 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 1
	store i64 4, i64* %2137
	%2138 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 2
	store i64 4, i64* %2138
	; Type_Info_Enum
	%2139 = bitcast %Type_Info* %2136 to %Type_Info.Enum*
	%2140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%2141 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2139, i64 0, i32 2
	store %Type_Info* %2140, %Type_Info** %2141
	%2142 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 0
	%2143 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 0
	%2144 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2143 to i64*
	store i64 33356, i64* %2144
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$656, i64 0, i32 0), i64 5}, %..string* %2142
	%2145 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 1
	%2146 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 1
	%2147 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2146 to i64*
	store i64 33357, i64* %2147
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$657, i64 0, i32 0), i64 18}, %..string* %2145
	%2148 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 2
	%2149 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 2
	%2150 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2149 to i64*
	store i64 33358, i64* %2150
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$658, i64 0, i32 0), i64 17}, %..string* %2148
	%2151 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 3
	%2152 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 3
	%2153 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2152 to i64*
	store i64 33359, i64* %2153
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$659, i64 0, i32 0), i64 11}, %..string* %2151
	%2154 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 4
	%2155 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 4
	%2156 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2155 to i64*
	store i64 33360, i64* %2156
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$65a, i64 0, i32 0), i64 11}, %..string* %2154
	%2157 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 5
	%2158 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 5
	%2159 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2158 to i64*
	store i64 33384, i64* %2159
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$65b, i64 0, i32 0), i64 6}, %..string* %2157
	%2160 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 6
	%2161 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 6
	%2162 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2161 to i64*
	store i64 33385, i64* %2162
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$65c, i64 0, i32 0), i64 9}, %..string* %2160
	%2163 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 7
	%2164 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 7
	%2165 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2164 to i64*
	store i64 33386, i64* %2165
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$65d, i64 0, i32 0), i64 8}, %..string* %2163
	%2166 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 8
	%2167 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 8
	%2168 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2167 to i64*
	store i64 33361, i64* %2168
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$65e, i64 0, i32 0), i64 5}, %..string* %2166
	%2169 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 9
	%2170 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 9
	%2171 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2170 to i64*
	store i64 4352, i64* %2171
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$65f, i64 0, i32 0), i64 8}, %..string* %2169
	%2172 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2139, i64 0, i32 3
	%2173 = getelementptr inbounds [10 x %..string], [10 x %..string]* @__$enum_names-41, i64 0, i32 0
	%2174 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2172, i64 0, i32 0
	store %..string* %2173, %..string** %2174
	%2175 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2172, i64 0, i32 1
	store i64 10, i64* %2175
	%2176 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2139, i64 0, i32 4
	%2177 = getelementptr inbounds [10 x {[0 x <8 x i8>], [8 x i8]}], [10 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-41, i64 0, i32 0
	%2178 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2176, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %2177, {[0 x <8 x i8>], [8 x i8]}** %2178
	%2179 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2176, i64 0, i32 1
	store i64 10, i64* %2179
	%2180 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %2180
	%2181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 66
	%2182 = getelementptr inbounds %Type_Info, %Type_Info* %2181, i64 0, i32 1
	store i64 4, i64* %2182
	%2183 = getelementptr inbounds %Type_Info, %Type_Info* %2181, i64 0, i32 2
	store i64 4, i64* %2183
	; Type_Info_Named
	%2184 = bitcast %Type_Info* %2181 to %Type_Info.Named*
	%2185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 67
	%2186 = bitcast %Type_Info* %2185 to %Type_Info*
	%2187 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2184, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$660, i64 0, i32 0), i64 13}, %..string* %2187
	%2188 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %2184, i64 0, i32 3
	store %Type_Info* %2186, %Type_Info** %2188
	%2189 = getelementptr inbounds %Type_Info, %Type_Info* %2181, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %2189
	%2190 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 67
	%2191 = getelementptr inbounds %Type_Info, %Type_Info* %2190, i64 0, i32 1
	store i64 4, i64* %2191
	%2192 = getelementptr inbounds %Type_Info, %Type_Info* %2190, i64 0, i32 2
	store i64 4, i64* %2192
	; Type_Info_Enum
	%2193 = bitcast %Type_Info* %2190 to %Type_Info.Enum*
	%2194 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%2195 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2193, i64 0, i32 2
	store %Type_Info* %2194, %Type_Info** %2195
	%2196 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 0
	%2197 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 0
	%2198 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2197 to i64*
	store i64 37190, i64* %2198
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$661, i64 0, i32 0), i64 4}, %..string* %2196
	%2199 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 1
	%2200 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 1
	%2201 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2200 to i64*
	store i64 37191, i64* %2201
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$662, i64 0, i32 0), i64 6}, %..string* %2199
	%2202 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 2
	%2203 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 2
	%2204 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2203 to i64*
	store i64 37192, i64* %2204
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$663, i64 0, i32 0), i64 3}, %..string* %2202
	%2205 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 3
	%2206 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 3
	%2207 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2206 to i64*
	store i64 33387, i64* %2207
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$664, i64 0, i32 0), i64 12}, %..string* %2205
	%2208 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 4
	%2209 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 4
	%2210 = bitcast {[0 x <8 x i8>], [8 x i8]}* %2209 to i64*
	store i64 4352, i64* %2210
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$665, i64 0, i32 0), i64 8}, %..string* %2208
	%2211 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2193, i64 0, i32 3
	%2212 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-43, i64 0, i32 0
	%2213 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2211, i64 0, i32 0
	store %..string* %2212, %..string** %2213
	%2214 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2211, i64 0, i32 1
	store i64 5, i64* %2214
	%2215 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %2193, i64 0, i32 4
	%2216 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-43, i64 0, i32 0
	%2217 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2215, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %2216, {[0 x <8 x i8>], [8 x i8]}** %2217
	%2218 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %2215, i64 0, i32 1
	store i64 5, i64* %2218
	%2219 = getelementptr inbounds %Type_Info, %Type_Info* %2190, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %2219
	%2220 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%2221 = getelementptr inbounds %Type_Info, %Type_Info* %2220, i64 0, i32 1
	store i64 4, i64* %2221
	%2222 = getelementptr inbounds %Type_Info, %Type_Info* %2220, i64 0, i32 2
	store i64 4, i64* %2222
	; Type_Info_Basic
	%2223 = bitcast %Type_Info* %2220 to %Type_Info.Float*
	%2224 = getelementptr inbounds %Type_Info, %Type_Info* %2220, i64 0, i32 4 ; UnionTagPtr
	store i64 3, i64* %2224
	%2225 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%2226 = getelementptr inbounds %Type_Info, %Type_Info* %2225, i64 0, i32 1
	store i64 8, i64* %2226
	%2227 = getelementptr inbounds %Type_Info, %Type_Info* %2225, i64 0, i32 2
	store i64 8, i64* %2227
	; Type_Info_Pointer
	%2228 = bitcast %Type_Info* %2225 to %Type_Info.Pointer*
	%2229 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%2230 = bitcast %Type_Info* %2229 to %Type_Info*
	%2231 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2228, i64 0, i32 2
	store %Type_Info* %2230, %Type_Info** %2231
	%2232 = getelementptr inbounds %Type_Info, %Type_Info* %2225, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2232
	%2233 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%2234 = getelementptr inbounds %Type_Info, %Type_Info* %2233, i64 0, i32 1
	store i64 8, i64* %2234
	%2235 = getelementptr inbounds %Type_Info, %Type_Info* %2233, i64 0, i32 2
	store i64 8, i64* %2235
	; Type_Info_Pointer
	%2236 = bitcast %Type_Info* %2233 to %Type_Info.Pointer*
	%2237 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%2238 = bitcast %Type_Info* %2237 to %Type_Info*
	%2239 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2236, i64 0, i32 2
	store %Type_Info* %2238, %Type_Info** %2239
	%2240 = getelementptr inbounds %Type_Info, %Type_Info* %2233, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2240
	%2241 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%2242 = getelementptr inbounds %Type_Info, %Type_Info* %2241, i64 0, i32 1
	store i64 8, i64* %2242
	%2243 = getelementptr inbounds %Type_Info, %Type_Info* %2241, i64 0, i32 2
	store i64 8, i64* %2243
	; Type_Info_Basic
	%2244 = bitcast %Type_Info* %2241 to %Type_Info.Integer*
	%2245 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2244, i64 0, i32 2
	store i1 false, i1* %2245
	%2246 = getelementptr inbounds %Type_Info, %Type_Info* %2241, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2246
	%2247 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%2248 = getelementptr inbounds %Type_Info, %Type_Info* %2247, i64 0, i32 1
	store i64 8, i64* %2248
	%2249 = getelementptr inbounds %Type_Info, %Type_Info* %2247, i64 0, i32 2
	store i64 8, i64* %2249
	; Type_Info_Pointer
	%2250 = bitcast %Type_Info* %2247 to %Type_Info.Pointer*
	%2251 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%2252 = bitcast %Type_Info* %2251 to %Type_Info*
	%2253 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2250, i64 0, i32 2
	store %Type_Info* %2252, %Type_Info** %2253
	%2254 = getelementptr inbounds %Type_Info, %Type_Info* %2247, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2254
	%2255 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 72
	%2256 = getelementptr inbounds %Type_Info, %Type_Info* %2255, i64 0, i32 1
	store i64 8, i64* %2256
	%2257 = getelementptr inbounds %Type_Info, %Type_Info* %2255, i64 0, i32 2
	store i64 8, i64* %2257
	; Type_Info_Pointer
	%2258 = bitcast %Type_Info* %2255 to %Type_Info.Pointer*
	%2259 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%2260 = bitcast %Type_Info* %2259 to %Type_Info*
	%2261 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2258, i64 0, i32 2
	store %Type_Info* %2260, %Type_Info** %2261
	%2262 = getelementptr inbounds %Type_Info, %Type_Info* %2255, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2262
	%2263 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 73
	%2264 = getelementptr inbounds %Type_Info, %Type_Info* %2263, i64 0, i32 1
	store i64 8, i64* %2264
	%2265 = getelementptr inbounds %Type_Info, %Type_Info* %2263, i64 0, i32 2
	store i64 8, i64* %2265
	; Type_Info_Pointer
	%2266 = bitcast %Type_Info* %2263 to %Type_Info.Pointer*
	%2267 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%2268 = bitcast %Type_Info* %2267 to %Type_Info*
	%2269 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2266, i64 0, i32 2
	store %Type_Info* %2268, %Type_Info** %2269
	%2270 = getelementptr inbounds %Type_Info, %Type_Info* %2263, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2270
	%2271 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%2272 = getelementptr inbounds %Type_Info, %Type_Info* %2271, i64 0, i32 1
	store i64 8, i64* %2272
	%2273 = getelementptr inbounds %Type_Info, %Type_Info* %2271, i64 0, i32 2
	store i64 8, i64* %2273
	; Type_Info_Pointer
	%2274 = bitcast %Type_Info* %2271 to %Type_Info.Pointer*
	%2275 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%2276 = bitcast %Type_Info* %2275 to %Type_Info*
	%2277 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2274, i64 0, i32 2
	store %Type_Info* %2276, %Type_Info** %2277
	%2278 = getelementptr inbounds %Type_Info, %Type_Info* %2271, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2278
	%2279 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%2280 = getelementptr inbounds %Type_Info, %Type_Info* %2279, i64 0, i32 1
	store i64 8, i64* %2280
	%2281 = getelementptr inbounds %Type_Info, %Type_Info* %2279, i64 0, i32 2
	store i64 8, i64* %2281
	; Type_Info_Pointer
	%2282 = bitcast %Type_Info* %2279 to %Type_Info.Pointer*
	%2283 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%2284 = bitcast %Type_Info* %2283 to %Type_Info*
	%2285 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2282, i64 0, i32 2
	store %Type_Info* %2284, %Type_Info** %2285
	%2286 = getelementptr inbounds %Type_Info, %Type_Info* %2279, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2286
	%2287 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%2288 = getelementptr inbounds %Type_Info, %Type_Info* %2287, i64 0, i32 1
	store i64 8, i64* %2288
	%2289 = getelementptr inbounds %Type_Info, %Type_Info* %2287, i64 0, i32 2
	store i64 8, i64* %2289
	; Type_Info_Pointer
	%2290 = bitcast %Type_Info* %2287 to %Type_Info.Pointer*
	%2291 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%2292 = bitcast %Type_Info* %2291 to %Type_Info*
	%2293 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2290, i64 0, i32 2
	store %Type_Info* %2292, %Type_Info** %2293
	%2294 = getelementptr inbounds %Type_Info, %Type_Info* %2287, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2294
	%2295 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 77
	%2296 = getelementptr inbounds %Type_Info, %Type_Info* %2295, i64 0, i32 1
	store i64 8, i64* %2296
	%2297 = getelementptr inbounds %Type_Info, %Type_Info* %2295, i64 0, i32 2
	store i64 8, i64* %2297
	; Type_Info_Pointer
	%2298 = bitcast %Type_Info* %2295 to %Type_Info.Pointer*
	%2299 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%2300 = bitcast %Type_Info* %2299 to %Type_Info*
	%2301 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2298, i64 0, i32 2
	store %Type_Info* %2300, %Type_Info** %2301
	%2302 = getelementptr inbounds %Type_Info, %Type_Info* %2295, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2302
	%2303 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%2304 = getelementptr inbounds %Type_Info, %Type_Info* %2303, i64 0, i32 1
	store i64 8, i64* %2304
	%2305 = getelementptr inbounds %Type_Info, %Type_Info* %2303, i64 0, i32 2
	store i64 8, i64* %2305
	; Type_Info_Pointer
	%2306 = bitcast %Type_Info* %2303 to %Type_Info.Pointer*
	%2307 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%2308 = bitcast %Type_Info* %2307 to %Type_Info*
	%2309 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2306, i64 0, i32 2
	store %Type_Info* %2308, %Type_Info** %2309
	%2310 = getelementptr inbounds %Type_Info, %Type_Info* %2303, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2310
	%2311 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%2312 = getelementptr inbounds %Type_Info, %Type_Info* %2311, i64 0, i32 1
	store i64 8, i64* %2312
	%2313 = getelementptr inbounds %Type_Info, %Type_Info* %2311, i64 0, i32 2
	store i64 8, i64* %2313
	; Type_Info_Pointer
	%2314 = bitcast %Type_Info* %2311 to %Type_Info.Pointer*
	%2315 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%2316 = bitcast %Type_Info* %2315 to %Type_Info*
	%2317 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2314, i64 0, i32 2
	store %Type_Info* %2316, %Type_Info** %2317
	%2318 = getelementptr inbounds %Type_Info, %Type_Info* %2311, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2318
	%2319 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%2320 = getelementptr inbounds %Type_Info, %Type_Info* %2319, i64 0, i32 1
	store i64 8, i64* %2320
	%2321 = getelementptr inbounds %Type_Info, %Type_Info* %2319, i64 0, i32 2
	store i64 8, i64* %2321
	; Type_Info_Pointer
	%2322 = bitcast %Type_Info* %2319 to %Type_Info.Pointer*
	%2323 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%2324 = bitcast %Type_Info* %2323 to %Type_Info*
	%2325 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2322, i64 0, i32 2
	store %Type_Info* %2324, %Type_Info** %2325
	%2326 = getelementptr inbounds %Type_Info, %Type_Info* %2319, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2326
	%2327 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%2328 = getelementptr inbounds %Type_Info, %Type_Info* %2327, i64 0, i32 1
	store i64 8, i64* %2328
	%2329 = getelementptr inbounds %Type_Info, %Type_Info* %2327, i64 0, i32 2
	store i64 8, i64* %2329
	; Type_Info_Pointer
	%2330 = bitcast %Type_Info* %2327 to %Type_Info.Pointer*
	%2331 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%2332 = bitcast %Type_Info* %2331 to %Type_Info*
	%2333 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2330, i64 0, i32 2
	store %Type_Info* %2332, %Type_Info** %2333
	%2334 = getelementptr inbounds %Type_Info, %Type_Info* %2327, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2334
	%2335 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%2336 = getelementptr inbounds %Type_Info, %Type_Info* %2335, i64 0, i32 1
	store i64 8, i64* %2336
	%2337 = getelementptr inbounds %Type_Info, %Type_Info* %2335, i64 0, i32 2
	store i64 8, i64* %2337
	; Type_Info_Pointer
	%2338 = bitcast %Type_Info* %2335 to %Type_Info.Pointer*
	%2339 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%2340 = bitcast %Type_Info* %2339 to %Type_Info*
	%2341 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2338, i64 0, i32 2
	store %Type_Info* %2340, %Type_Info** %2341
	%2342 = getelementptr inbounds %Type_Info, %Type_Info* %2335, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2342
	%2343 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%2344 = getelementptr inbounds %Type_Info, %Type_Info* %2343, i64 0, i32 1
	store i64 8, i64* %2344
	%2345 = getelementptr inbounds %Type_Info, %Type_Info* %2343, i64 0, i32 2
	store i64 8, i64* %2345
	; Type_Info_Pointer
	%2346 = bitcast %Type_Info* %2343 to %Type_Info.Pointer*
	%2347 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%2348 = bitcast %Type_Info* %2347 to %Type_Info*
	%2349 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2346, i64 0, i32 2
	store %Type_Info* %2348, %Type_Info** %2349
	%2350 = getelementptr inbounds %Type_Info, %Type_Info* %2343, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2350
	%2351 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%2352 = getelementptr inbounds %Type_Info, %Type_Info* %2351, i64 0, i32 1
	store i64 8, i64* %2352
	%2353 = getelementptr inbounds %Type_Info, %Type_Info* %2351, i64 0, i32 2
	store i64 8, i64* %2353
	; Type_Info_Pointer
	%2354 = bitcast %Type_Info* %2351 to %Type_Info.Pointer*
	%2355 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%2356 = bitcast %Type_Info* %2355 to %Type_Info*
	%2357 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2354, i64 0, i32 2
	store %Type_Info* %2356, %Type_Info** %2357
	%2358 = getelementptr inbounds %Type_Info, %Type_Info* %2351, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2358
	%2359 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%2360 = getelementptr inbounds %Type_Info, %Type_Info* %2359, i64 0, i32 1
	store i64 8, i64* %2360
	%2361 = getelementptr inbounds %Type_Info, %Type_Info* %2359, i64 0, i32 2
	store i64 8, i64* %2361
	; Type_Info_Pointer
	%2362 = bitcast %Type_Info* %2359 to %Type_Info.Pointer*
	%2363 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%2364 = bitcast %Type_Info* %2363 to %Type_Info*
	%2365 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2362, i64 0, i32 2
	store %Type_Info* %2364, %Type_Info** %2365
	%2366 = getelementptr inbounds %Type_Info, %Type_Info* %2359, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2366
	%2367 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%2368 = getelementptr inbounds %Type_Info, %Type_Info* %2367, i64 0, i32 1
	store i64 8, i64* %2368
	%2369 = getelementptr inbounds %Type_Info, %Type_Info* %2367, i64 0, i32 2
	store i64 8, i64* %2369
	; Type_Info_Pointer
	%2370 = bitcast %Type_Info* %2367 to %Type_Info.Pointer*
	%2371 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%2372 = bitcast %Type_Info* %2371 to %Type_Info*
	%2373 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2370, i64 0, i32 2
	store %Type_Info* %2372, %Type_Info** %2373
	%2374 = getelementptr inbounds %Type_Info, %Type_Info* %2367, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2374
	%2375 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2376 = getelementptr inbounds %Type_Info, %Type_Info* %2375, i64 0, i32 1
	store i64 8, i64* %2376
	%2377 = getelementptr inbounds %Type_Info, %Type_Info* %2375, i64 0, i32 2
	store i64 8, i64* %2377
	; Type_Info_Pointer
	%2378 = bitcast %Type_Info* %2375 to %Type_Info.Pointer*
	%2379 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2380 = bitcast %Type_Info* %2379 to %Type_Info*
	%2381 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2378, i64 0, i32 2
	store %Type_Info* %2380, %Type_Info** %2381
	%2382 = getelementptr inbounds %Type_Info, %Type_Info* %2375, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2382
	%2383 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%2384 = getelementptr inbounds %Type_Info, %Type_Info* %2383, i64 0, i32 1
	store i64 8, i64* %2384
	%2385 = getelementptr inbounds %Type_Info, %Type_Info* %2383, i64 0, i32 2
	store i64 8, i64* %2385
	; Type_Info_Pointer
	%2386 = bitcast %Type_Info* %2383 to %Type_Info.Pointer*
	%2387 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%2388 = bitcast %Type_Info* %2387 to %Type_Info*
	%2389 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2386, i64 0, i32 2
	store %Type_Info* %2388, %Type_Info** %2389
	%2390 = getelementptr inbounds %Type_Info, %Type_Info* %2383, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2390
	%2391 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2392 = getelementptr inbounds %Type_Info, %Type_Info* %2391, i64 0, i32 1
	store i64 8, i64* %2392
	%2393 = getelementptr inbounds %Type_Info, %Type_Info* %2391, i64 0, i32 2
	store i64 8, i64* %2393
	; Type_Info_Pointer
	%2394 = bitcast %Type_Info* %2391 to %Type_Info.Pointer*
	%2395 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2396 = bitcast %Type_Info* %2395 to %Type_Info*
	%2397 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2394, i64 0, i32 2
	store %Type_Info* %2396, %Type_Info** %2397
	%2398 = getelementptr inbounds %Type_Info, %Type_Info* %2391, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2398
	%2399 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2400 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 1
	store i64 8, i64* %2400
	%2401 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 2
	store i64 8, i64* %2401
	; Type_Info_Pointer
	%2402 = bitcast %Type_Info* %2399 to %Type_Info.Pointer*
	%2403 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2404 = bitcast %Type_Info* %2403 to %Type_Info*
	%2405 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2402, i64 0, i32 2
	store %Type_Info* %2404, %Type_Info** %2405
	%2406 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2406
	%2407 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%2408 = getelementptr inbounds %Type_Info, %Type_Info* %2407, i64 0, i32 1
	store i64 8, i64* %2408
	%2409 = getelementptr inbounds %Type_Info, %Type_Info* %2407, i64 0, i32 2
	store i64 8, i64* %2409
	; Type_Info_Pointer
	%2410 = bitcast %Type_Info* %2407 to %Type_Info.Pointer*
	%2411 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%2412 = bitcast %Type_Info* %2411 to %Type_Info*
	%2413 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2410, i64 0, i32 2
	store %Type_Info* %2412, %Type_Info** %2413
	%2414 = getelementptr inbounds %Type_Info, %Type_Info* %2407, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2414
	%2415 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%2416 = getelementptr inbounds %Type_Info, %Type_Info* %2415, i64 0, i32 1
	store i64 8, i64* %2416
	%2417 = getelementptr inbounds %Type_Info, %Type_Info* %2415, i64 0, i32 2
	store i64 8, i64* %2417
	; Type_Info_Pointer
	%2418 = bitcast %Type_Info* %2415 to %Type_Info.Pointer*
	%2419 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%2420 = bitcast %Type_Info* %2419 to %Type_Info*
	%2421 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2418, i64 0, i32 2
	store %Type_Info* %2420, %Type_Info** %2421
	%2422 = getelementptr inbounds %Type_Info, %Type_Info* %2415, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2422
	%2423 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%2424 = getelementptr inbounds %Type_Info, %Type_Info* %2423, i64 0, i32 1
	store i64 1, i64* %2424
	%2425 = getelementptr inbounds %Type_Info, %Type_Info* %2423, i64 0, i32 2
	store i64 1, i64* %2425
	; Type_Info_Basic
	%2426 = bitcast %Type_Info* %2423 to %Type_Info.Integer*
	%2427 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2426, i64 0, i32 2
	store i1 true, i1* %2427
	%2428 = getelementptr inbounds %Type_Info, %Type_Info* %2423, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2428
	%2429 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%2430 = getelementptr inbounds %Type_Info, %Type_Info* %2429, i64 0, i32 1
	store i64 2, i64* %2430
	%2431 = getelementptr inbounds %Type_Info, %Type_Info* %2429, i64 0, i32 2
	store i64 2, i64* %2431
	; Type_Info_Basic
	%2432 = bitcast %Type_Info* %2429 to %Type_Info.Integer*
	%2433 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2432, i64 0, i32 2
	store i1 true, i1* %2433
	%2434 = getelementptr inbounds %Type_Info, %Type_Info* %2429, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2434
	%2435 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%2436 = getelementptr inbounds %Type_Info, %Type_Info* %2435, i64 0, i32 1
	store i64 2, i64* %2436
	%2437 = getelementptr inbounds %Type_Info, %Type_Info* %2435, i64 0, i32 2
	store i64 2, i64* %2437
	; Type_Info_Basic
	%2438 = bitcast %Type_Info* %2435 to %Type_Info.Integer*
	%2439 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2438, i64 0, i32 2
	store i1 false, i1* %2439
	%2440 = getelementptr inbounds %Type_Info, %Type_Info* %2435, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2440
	%2441 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%2442 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 1
	store i64 4, i64* %2442
	%2443 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 2
	store i64 4, i64* %2443
	; Type_Info_Basic
	%2444 = bitcast %Type_Info* %2441 to %Type_Info.Integer*
	%2445 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2444, i64 0, i32 2
	store i1 false, i1* %2445
	%2446 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2446
	%2447 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%2448 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 1
	store i64 8, i64* %2448
	%2449 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 2
	store i64 8, i64* %2449
	; Type_Info_Basic
	%2450 = bitcast %Type_Info* %2447 to %Type_Info.Integer*
	%2451 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %2450, i64 0, i32 2
	store i1 false, i1* %2451
	%2452 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %2452
	%2453 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 94
	%2454 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 1
	store i64 16, i64* %2454
	%2455 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 2
	store i64 8, i64* %2455
	; Type_Info_Basic
	%2456 = bitcast %Type_Info* %2453 to %Type_Info.Any*
	%2457 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 4 ; UnionTagPtr
	store i64 8, i64* %2457
	%2458 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2459 = getelementptr inbounds %Type_Info, %Type_Info* %2458, i64 0, i32 1
	store i64 8, i64* %2459
	%2460 = getelementptr inbounds %Type_Info, %Type_Info* %2458, i64 0, i32 2
	store i64 8, i64* %2460
	; Type_Info_Pointer
	%2461 = bitcast %Type_Info* %2458 to %Type_Info.Pointer*
	%2462 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2463 = bitcast %Type_Info* %2462 to %Type_Info*
	%2464 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2461, i64 0, i32 2
	store %Type_Info* %2463, %Type_Info** %2464
	%2465 = getelementptr inbounds %Type_Info, %Type_Info* %2458, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2465
	%2466 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%2467 = getelementptr inbounds %Type_Info, %Type_Info* %2466, i64 0, i32 1
	store i64 8, i64* %2467
	%2468 = getelementptr inbounds %Type_Info, %Type_Info* %2466, i64 0, i32 2
	store i64 8, i64* %2468
	; Type_Info_Basic
	%2469 = bitcast %Type_Info* %2466 to %Type_Info.Pointer*
	%2470 = getelementptr inbounds %Type_Info, %Type_Info* %2466, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2470
	%2471 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%2472 = getelementptr inbounds %Type_Info, %Type_Info* %2471, i64 0, i32 1
	store i64 8, i64* %2472
	%2473 = getelementptr inbounds %Type_Info, %Type_Info* %2471, i64 0, i32 2
	store i64 8, i64* %2473
	; Type_Info_Pointer
	%2474 = bitcast %Type_Info* %2471 to %Type_Info.Pointer*
	%2475 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%2476 = bitcast %Type_Info* %2475 to %Type_Info*
	%2477 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2474, i64 0, i32 2
	store %Type_Info* %2476, %Type_Info** %2477
	%2478 = getelementptr inbounds %Type_Info, %Type_Info* %2471, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2478
	%2479 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%2480 = getelementptr inbounds %Type_Info, %Type_Info* %2479, i64 0, i32 1
	store i64 8, i64* %2480
	%2481 = getelementptr inbounds %Type_Info, %Type_Info* %2479, i64 0, i32 2
	store i64 8, i64* %2481
	; Type_Info_Pointer
	%2482 = bitcast %Type_Info* %2479 to %Type_Info.Pointer*
	%2483 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%2484 = bitcast %Type_Info* %2483 to %Type_Info*
	%2485 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2482, i64 0, i32 2
	store %Type_Info* %2484, %Type_Info** %2485
	%2486 = getelementptr inbounds %Type_Info, %Type_Info* %2479, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2486
	%2487 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2488 = getelementptr inbounds %Type_Info, %Type_Info* %2487, i64 0, i32 1
	store i64 8, i64* %2488
	%2489 = getelementptr inbounds %Type_Info, %Type_Info* %2487, i64 0, i32 2
	store i64 8, i64* %2489
	; Type_Info_Pointer
	%2490 = bitcast %Type_Info* %2487 to %Type_Info.Pointer*
	%2491 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2492 = bitcast %Type_Info* %2491 to %Type_Info*
	%2493 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2490, i64 0, i32 2
	store %Type_Info* %2492, %Type_Info** %2493
	%2494 = getelementptr inbounds %Type_Info, %Type_Info* %2487, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2494
	%2495 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%2496 = getelementptr inbounds %Type_Info, %Type_Info* %2495, i64 0, i32 1
	store i64 8, i64* %2496
	%2497 = getelementptr inbounds %Type_Info, %Type_Info* %2495, i64 0, i32 2
	store i64 8, i64* %2497
	; Type_Info_Pointer
	%2498 = bitcast %Type_Info* %2495 to %Type_Info.Pointer*
	%2499 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%2500 = bitcast %Type_Info* %2499 to %Type_Info*
	%2501 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2498, i64 0, i32 2
	store %Type_Info* %2500, %Type_Info** %2501
	%2502 = getelementptr inbounds %Type_Info, %Type_Info* %2495, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2502
	%2503 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%2504 = getelementptr inbounds %Type_Info, %Type_Info* %2503, i64 0, i32 1
	store i64 8, i64* %2504
	%2505 = getelementptr inbounds %Type_Info, %Type_Info* %2503, i64 0, i32 2
	store i64 8, i64* %2505
	; Type_Info_Pointer
	%2506 = bitcast %Type_Info* %2503 to %Type_Info.Pointer*
	%2507 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%2508 = bitcast %Type_Info* %2507 to %Type_Info*
	%2509 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2506, i64 0, i32 2
	store %Type_Info* %2508, %Type_Info** %2509
	%2510 = getelementptr inbounds %Type_Info, %Type_Info* %2503, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2510
	%2511 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%2512 = getelementptr inbounds %Type_Info, %Type_Info* %2511, i64 0, i32 1
	store i64 8, i64* %2512
	%2513 = getelementptr inbounds %Type_Info, %Type_Info* %2511, i64 0, i32 2
	store i64 8, i64* %2513
	; Type_Info_Pointer
	%2514 = bitcast %Type_Info* %2511 to %Type_Info.Pointer*
	%2515 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%2516 = bitcast %Type_Info* %2515 to %Type_Info*
	%2517 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2514, i64 0, i32 2
	store %Type_Info* %2516, %Type_Info** %2517
	%2518 = getelementptr inbounds %Type_Info, %Type_Info* %2511, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2518
	%2519 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 72
	%2520 = getelementptr inbounds %Type_Info, %Type_Info* %2519, i64 0, i32 1
	store i64 8, i64* %2520
	%2521 = getelementptr inbounds %Type_Info, %Type_Info* %2519, i64 0, i32 2
	store i64 8, i64* %2521
	; Type_Info_Pointer
	%2522 = bitcast %Type_Info* %2519 to %Type_Info.Pointer*
	%2523 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%2524 = bitcast %Type_Info* %2523 to %Type_Info*
	%2525 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2522, i64 0, i32 2
	store %Type_Info* %2524, %Type_Info** %2525
	%2526 = getelementptr inbounds %Type_Info, %Type_Info* %2519, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2526
	%2527 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 73
	%2528 = getelementptr inbounds %Type_Info, %Type_Info* %2527, i64 0, i32 1
	store i64 8, i64* %2528
	%2529 = getelementptr inbounds %Type_Info, %Type_Info* %2527, i64 0, i32 2
	store i64 8, i64* %2529
	; Type_Info_Pointer
	%2530 = bitcast %Type_Info* %2527 to %Type_Info.Pointer*
	%2531 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%2532 = bitcast %Type_Info* %2531 to %Type_Info*
	%2533 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2530, i64 0, i32 2
	store %Type_Info* %2532, %Type_Info** %2533
	%2534 = getelementptr inbounds %Type_Info, %Type_Info* %2527, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2534
	%2535 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%2536 = getelementptr inbounds %Type_Info, %Type_Info* %2535, i64 0, i32 1
	store i64 8, i64* %2536
	%2537 = getelementptr inbounds %Type_Info, %Type_Info* %2535, i64 0, i32 2
	store i64 8, i64* %2537
	; Type_Info_Pointer
	%2538 = bitcast %Type_Info* %2535 to %Type_Info.Pointer*
	%2539 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%2540 = bitcast %Type_Info* %2539 to %Type_Info*
	%2541 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2538, i64 0, i32 2
	store %Type_Info* %2540, %Type_Info** %2541
	%2542 = getelementptr inbounds %Type_Info, %Type_Info* %2535, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2542
	%2543 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%2544 = getelementptr inbounds %Type_Info, %Type_Info* %2543, i64 0, i32 1
	store i64 8, i64* %2544
	%2545 = getelementptr inbounds %Type_Info, %Type_Info* %2543, i64 0, i32 2
	store i64 8, i64* %2545
	; Type_Info_Pointer
	%2546 = bitcast %Type_Info* %2543 to %Type_Info.Pointer*
	%2547 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%2548 = bitcast %Type_Info* %2547 to %Type_Info*
	%2549 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2546, i64 0, i32 2
	store %Type_Info* %2548, %Type_Info** %2549
	%2550 = getelementptr inbounds %Type_Info, %Type_Info* %2543, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2550
	%2551 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2552 = getelementptr inbounds %Type_Info, %Type_Info* %2551, i64 0, i32 1
	store i64 8, i64* %2552
	%2553 = getelementptr inbounds %Type_Info, %Type_Info* %2551, i64 0, i32 2
	store i64 8, i64* %2553
	; Type_Info_Pointer
	%2554 = bitcast %Type_Info* %2551 to %Type_Info.Pointer*
	%2555 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2556 = bitcast %Type_Info* %2555 to %Type_Info*
	%2557 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2554, i64 0, i32 2
	store %Type_Info* %2556, %Type_Info** %2557
	%2558 = getelementptr inbounds %Type_Info, %Type_Info* %2551, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2558
	%2559 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 77
	%2560 = getelementptr inbounds %Type_Info, %Type_Info* %2559, i64 0, i32 1
	store i64 8, i64* %2560
	%2561 = getelementptr inbounds %Type_Info, %Type_Info* %2559, i64 0, i32 2
	store i64 8, i64* %2561
	; Type_Info_Pointer
	%2562 = bitcast %Type_Info* %2559 to %Type_Info.Pointer*
	%2563 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%2564 = bitcast %Type_Info* %2563 to %Type_Info*
	%2565 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2562, i64 0, i32 2
	store %Type_Info* %2564, %Type_Info** %2565
	%2566 = getelementptr inbounds %Type_Info, %Type_Info* %2559, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2566
	%2567 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%2568 = getelementptr inbounds %Type_Info, %Type_Info* %2567, i64 0, i32 1
	store i64 8, i64* %2568
	%2569 = getelementptr inbounds %Type_Info, %Type_Info* %2567, i64 0, i32 2
	store i64 8, i64* %2569
	; Type_Info_Pointer
	%2570 = bitcast %Type_Info* %2567 to %Type_Info.Pointer*
	%2571 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%2572 = bitcast %Type_Info* %2571 to %Type_Info*
	%2573 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2570, i64 0, i32 2
	store %Type_Info* %2572, %Type_Info** %2573
	%2574 = getelementptr inbounds %Type_Info, %Type_Info* %2567, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2574
	%2575 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%2576 = getelementptr inbounds %Type_Info, %Type_Info* %2575, i64 0, i32 1
	store i64 8, i64* %2576
	%2577 = getelementptr inbounds %Type_Info, %Type_Info* %2575, i64 0, i32 2
	store i64 8, i64* %2577
	; Type_Info_Pointer
	%2578 = bitcast %Type_Info* %2575 to %Type_Info.Pointer*
	%2579 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%2580 = bitcast %Type_Info* %2579 to %Type_Info*
	%2581 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2578, i64 0, i32 2
	store %Type_Info* %2580, %Type_Info** %2581
	%2582 = getelementptr inbounds %Type_Info, %Type_Info* %2575, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2582
	%2583 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%2584 = getelementptr inbounds %Type_Info, %Type_Info* %2583, i64 0, i32 1
	store i64 8, i64* %2584
	%2585 = getelementptr inbounds %Type_Info, %Type_Info* %2583, i64 0, i32 2
	store i64 8, i64* %2585
	; Type_Info_Pointer
	%2586 = bitcast %Type_Info* %2583 to %Type_Info.Pointer*
	%2587 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%2588 = bitcast %Type_Info* %2587 to %Type_Info*
	%2589 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2586, i64 0, i32 2
	store %Type_Info* %2588, %Type_Info** %2589
	%2590 = getelementptr inbounds %Type_Info, %Type_Info* %2583, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2590
	%2591 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%2592 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 1
	store i64 8, i64* %2592
	%2593 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 2
	store i64 8, i64* %2593
	; Type_Info_Pointer
	%2594 = bitcast %Type_Info* %2591 to %Type_Info.Pointer*
	%2595 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%2596 = bitcast %Type_Info* %2595 to %Type_Info*
	%2597 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2594, i64 0, i32 2
	store %Type_Info* %2596, %Type_Info** %2597
	%2598 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2598
	%2599 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%2600 = getelementptr inbounds %Type_Info, %Type_Info* %2599, i64 0, i32 1
	store i64 8, i64* %2600
	%2601 = getelementptr inbounds %Type_Info, %Type_Info* %2599, i64 0, i32 2
	store i64 8, i64* %2601
	; Type_Info_Pointer
	%2602 = bitcast %Type_Info* %2599 to %Type_Info.Pointer*
	%2603 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%2604 = bitcast %Type_Info* %2603 to %Type_Info*
	%2605 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2602, i64 0, i32 2
	store %Type_Info* %2604, %Type_Info** %2605
	%2606 = getelementptr inbounds %Type_Info, %Type_Info* %2599, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2606
	%2607 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2608 = getelementptr inbounds %Type_Info, %Type_Info* %2607, i64 0, i32 1
	store i64 8, i64* %2608
	%2609 = getelementptr inbounds %Type_Info, %Type_Info* %2607, i64 0, i32 2
	store i64 8, i64* %2609
	; Type_Info_Pointer
	%2610 = bitcast %Type_Info* %2607 to %Type_Info.Pointer*
	%2611 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2612 = bitcast %Type_Info* %2611 to %Type_Info*
	%2613 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2610, i64 0, i32 2
	store %Type_Info* %2612, %Type_Info** %2613
	%2614 = getelementptr inbounds %Type_Info, %Type_Info* %2607, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2614
	%2615 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%2616 = getelementptr inbounds %Type_Info, %Type_Info* %2615, i64 0, i32 1
	store i64 8, i64* %2616
	%2617 = getelementptr inbounds %Type_Info, %Type_Info* %2615, i64 0, i32 2
	store i64 8, i64* %2617
	; Type_Info_Pointer
	%2618 = bitcast %Type_Info* %2615 to %Type_Info.Pointer*
	%2619 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%2620 = bitcast %Type_Info* %2619 to %Type_Info*
	%2621 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2618, i64 0, i32 2
	store %Type_Info* %2620, %Type_Info** %2621
	%2622 = getelementptr inbounds %Type_Info, %Type_Info* %2615, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2622
	%2623 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2624 = getelementptr inbounds %Type_Info, %Type_Info* %2623, i64 0, i32 1
	store i64 8, i64* %2624
	%2625 = getelementptr inbounds %Type_Info, %Type_Info* %2623, i64 0, i32 2
	store i64 8, i64* %2625
	; Type_Info_Pointer
	%2626 = bitcast %Type_Info* %2623 to %Type_Info.Pointer*
	%2627 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2628 = bitcast %Type_Info* %2627 to %Type_Info*
	%2629 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2626, i64 0, i32 2
	store %Type_Info* %2628, %Type_Info** %2629
	%2630 = getelementptr inbounds %Type_Info, %Type_Info* %2623, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2630
	%2631 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2632 = getelementptr inbounds %Type_Info, %Type_Info* %2631, i64 0, i32 1
	store i64 8, i64* %2632
	%2633 = getelementptr inbounds %Type_Info, %Type_Info* %2631, i64 0, i32 2
	store i64 8, i64* %2633
	; Type_Info_Pointer
	%2634 = bitcast %Type_Info* %2631 to %Type_Info.Pointer*
	%2635 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%2636 = bitcast %Type_Info* %2635 to %Type_Info*
	%2637 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2634, i64 0, i32 2
	store %Type_Info* %2636, %Type_Info** %2637
	%2638 = getelementptr inbounds %Type_Info, %Type_Info* %2631, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2638
	%2639 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%2640 = getelementptr inbounds %Type_Info, %Type_Info* %2639, i64 0, i32 1
	store i64 8, i64* %2640
	%2641 = getelementptr inbounds %Type_Info, %Type_Info* %2639, i64 0, i32 2
	store i64 8, i64* %2641
	; Type_Info_Pointer
	%2642 = bitcast %Type_Info* %2639 to %Type_Info.Pointer*
	%2643 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%2644 = bitcast %Type_Info* %2643 to %Type_Info*
	%2645 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2642, i64 0, i32 2
	store %Type_Info* %2644, %Type_Info** %2645
	%2646 = getelementptr inbounds %Type_Info, %Type_Info* %2639, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2646
	%2647 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%2648 = getelementptr inbounds %Type_Info, %Type_Info* %2647, i64 0, i32 1
	store i64 8, i64* %2648
	%2649 = getelementptr inbounds %Type_Info, %Type_Info* %2647, i64 0, i32 2
	store i64 8, i64* %2649
	; Type_Info_Pointer
	%2650 = bitcast %Type_Info* %2647 to %Type_Info.Pointer*
	%2651 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%2652 = bitcast %Type_Info* %2651 to %Type_Info*
	%2653 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2650, i64 0, i32 2
	store %Type_Info* %2652, %Type_Info** %2653
	%2654 = getelementptr inbounds %Type_Info, %Type_Info* %2647, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2654
	%2655 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%2656 = getelementptr inbounds %Type_Info, %Type_Info* %2655, i64 0, i32 1
	store i64 8, i64* %2656
	%2657 = getelementptr inbounds %Type_Info, %Type_Info* %2655, i64 0, i32 2
	store i64 8, i64* %2657
	; Type_Info_Pointer
	%2658 = bitcast %Type_Info* %2655 to %Type_Info.Pointer*
	%2659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%2660 = bitcast %Type_Info* %2659 to %Type_Info*
	%2661 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2658, i64 0, i32 2
	store %Type_Info* %2660, %Type_Info** %2661
	%2662 = getelementptr inbounds %Type_Info, %Type_Info* %2655, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2662
	%2663 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%2664 = getelementptr inbounds %Type_Info, %Type_Info* %2663, i64 0, i32 1
	store i64 8, i64* %2664
	%2665 = getelementptr inbounds %Type_Info, %Type_Info* %2663, i64 0, i32 2
	store i64 8, i64* %2665
	; Type_Info_Pointer
	%2666 = bitcast %Type_Info* %2663 to %Type_Info.Pointer*
	%2667 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%2668 = bitcast %Type_Info* %2667 to %Type_Info*
	%2669 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2666, i64 0, i32 2
	store %Type_Info* %2668, %Type_Info** %2669
	%2670 = getelementptr inbounds %Type_Info, %Type_Info* %2663, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2670
	%2671 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2672 = getelementptr inbounds %Type_Info, %Type_Info* %2671, i64 0, i32 1
	store i64 8, i64* %2672
	%2673 = getelementptr inbounds %Type_Info, %Type_Info* %2671, i64 0, i32 2
	store i64 8, i64* %2673
	; Type_Info_Pointer
	%2674 = bitcast %Type_Info* %2671 to %Type_Info.Pointer*
	%2675 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2676 = bitcast %Type_Info* %2675 to %Type_Info*
	%2677 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2674, i64 0, i32 2
	store %Type_Info* %2676, %Type_Info** %2677
	%2678 = getelementptr inbounds %Type_Info, %Type_Info* %2671, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2678
	%2679 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 96
	%2680 = getelementptr inbounds %Type_Info, %Type_Info* %2679, i64 0, i32 1
	store i64 8, i64* %2680
	%2681 = getelementptr inbounds %Type_Info, %Type_Info* %2679, i64 0, i32 2
	store i64 8, i64* %2681
	; Type_Info_Basic
	%2682 = bitcast %Type_Info* %2679 to %Type_Info.Complex*
	%2683 = getelementptr inbounds %Type_Info, %Type_Info* %2679, i64 0, i32 4 ; UnionTagPtr
	store i64 4, i64* %2683
	%2684 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 97
	%2685 = getelementptr inbounds %Type_Info, %Type_Info* %2684, i64 0, i32 1
	store i64 16, i64* %2685
	%2686 = getelementptr inbounds %Type_Info, %Type_Info* %2684, i64 0, i32 2
	store i64 8, i64* %2686
	; Type_Info_Basic
	%2687 = bitcast %Type_Info* %2684 to %Type_Info.Complex*
	%2688 = getelementptr inbounds %Type_Info, %Type_Info* %2684, i64 0, i32 4 ; UnionTagPtr
	store i64 4, i64* %2688
	%2689 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 98
	%2690 = getelementptr inbounds %Type_Info, %Type_Info* %2689, i64 0, i32 1
	store i64 16, i64* %2690
	%2691 = getelementptr inbounds %Type_Info, %Type_Info* %2689, i64 0, i32 2
	store i64 8, i64* %2691
	; Type_Info_Basic
	%2692 = bitcast %Type_Info* %2689 to %Type_Info.Quaternion*
	%2693 = getelementptr inbounds %Type_Info, %Type_Info* %2689, i64 0, i32 4 ; UnionTagPtr
	store i64 5, i64* %2693
	%2694 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 99
	%2695 = getelementptr inbounds %Type_Info, %Type_Info* %2694, i64 0, i32 1
	store i64 32, i64* %2695
	%2696 = getelementptr inbounds %Type_Info, %Type_Info* %2694, i64 0, i32 2
	store i64 8, i64* %2696
	; Type_Info_Basic
	%2697 = bitcast %Type_Info* %2694 to %Type_Info.Quaternion*
	%2698 = getelementptr inbounds %Type_Info, %Type_Info* %2694, i64 0, i32 4 ; UnionTagPtr
	store i64 5, i64* %2698
	%2699 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 100
	%2700 = getelementptr inbounds %Type_Info, %Type_Info* %2699, i64 0, i32 1
	store i64 8, i64* %2700
	%2701 = getelementptr inbounds %Type_Info, %Type_Info* %2699, i64 0, i32 2
	store i64 8, i64* %2701
	; Type_Info_Proc
	%2702 = bitcast %Type_Info* %2699 to %Type_Info.Procedure*
	%2703 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2702, i64 0, i32 2
	%2704 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2702, i64 0, i32 3
	%2705 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2702, i64 0, i32 4
	%2706 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2702, i64 0, i32 5
	%2707 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 101
	%2708 = bitcast %Type_Info* %2707 to %Type_Info*
	store %Type_Info* %2708, %Type_Info** %2703
	store i1 false, i1* %2705
	store i64 1, i64* %2706
	%2709 = getelementptr inbounds %Type_Info, %Type_Info* %2699, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2709
	%2710 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 101
	%2711 = getelementptr inbounds %Type_Info, %Type_Info* %2710, i64 0, i32 1
	store i64 24, i64* %2711
	%2712 = getelementptr inbounds %Type_Info, %Type_Info* %2710, i64 0, i32 2
	store i64 8, i64* %2712
	; Type_Info_Tuple
	%2713 = bitcast %Type_Info* %2710 to %Type_Info.Tuple*
	%2714 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2713, i64 0, i32 2
	%2715 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 109
	%2716 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 109
	%2717 = getelementptr inbounds %Type_Info*, %Type_Info** %2715, i64 0
	%2718 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2718, %Type_Info** %2717
	%2719 = getelementptr inbounds %..string, %..string* %2716, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$666, i64 0, i32 0), i64 4}, %..string* %2719
	%2720 = getelementptr inbounds %Type_Info*, %Type_Info** %2715, i64 1
	%2721 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2721, %Type_Info** %2720
	%2722 = getelementptr inbounds %..string, %..string* %2716, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$667, i64 0, i32 0), i64 5}, %..string* %2722
	%2723 = getelementptr inbounds %Type_Info*, %Type_Info** %2715, i64 2
	%2724 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2724, %Type_Info** %2723
	%2725 = getelementptr inbounds %..string, %..string* %2716, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$668, i64 0, i32 0), i64 5}, %..string* %2725
	%2726 = getelementptr inbounds %Type_Info*, %Type_Info** %2715, i64 3
	%2727 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %2727, %Type_Info** %2726
	%2728 = getelementptr inbounds %..string, %..string* %2716, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$669, i64 0, i32 0), i64 7}, %..string* %2728
	%2729 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2714, i64 0, i32 0
	%2730 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2729, i64 0, i32 0
	store %Type_Info** %2715, %Type_Info*** %2730
	%2731 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2729, i64 0, i32 1
	store i64 4, i64* %2731
	%2732 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2729, i64 0, i32 2
	store i64 4, i64* %2732
	%2733 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2714, i64 0, i32 1
	%2734 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2733, i64 0, i32 0
	store %..string* %2716, %..string** %2734
	%2735 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2733, i64 0, i32 1
	store i64 4, i64* %2735
	%2736 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2733, i64 0, i32 2
	store i64 4, i64* %2736
	%2737 = getelementptr inbounds %Type_Info, %Type_Info* %2710, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2737
	%2738 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%2739 = getelementptr inbounds %Type_Info, %Type_Info* %2738, i64 0, i32 1
	store i64 8, i64* %2739
	%2740 = getelementptr inbounds %Type_Info, %Type_Info* %2738, i64 0, i32 2
	store i64 8, i64* %2740
	; Type_Info_Proc
	%2741 = bitcast %Type_Info* %2738 to %Type_Info.Procedure*
	%2742 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2741, i64 0, i32 2
	%2743 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2741, i64 0, i32 3
	%2744 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2741, i64 0, i32 4
	%2745 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2741, i64 0, i32 5
	%2746 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%2747 = bitcast %Type_Info* %2746 to %Type_Info*
	store %Type_Info* %2747, %Type_Info** %2742
	store i1 false, i1* %2744
	store i64 1, i64* %2745
	%2748 = getelementptr inbounds %Type_Info, %Type_Info* %2738, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2748
	%2749 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%2750 = getelementptr inbounds %Type_Info, %Type_Info* %2749, i64 0, i32 1
	store i64 12, i64* %2750
	%2751 = getelementptr inbounds %Type_Info, %Type_Info* %2749, i64 0, i32 2
	store i64 4, i64* %2751
	; Type_Info_Tuple
	%2752 = bitcast %Type_Info* %2749 to %Type_Info.Tuple*
	%2753 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2752, i64 0, i32 2
	%2754 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 113
	%2755 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 113
	%2756 = getelementptr inbounds %Type_Info*, %Type_Info** %2754, i64 0
	%2757 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2757, %Type_Info** %2756
	%2758 = getelementptr inbounds %..string, %..string* %2755, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$66a, i64 0, i32 0), i64 4}, %..string* %2758
	%2759 = getelementptr inbounds %Type_Info*, %Type_Info** %2754, i64 1
	%2760 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2760, %Type_Info** %2759
	%2761 = getelementptr inbounds %..string, %..string* %2755, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$66b, i64 0, i32 0), i64 5}, %..string* %2761
	%2762 = getelementptr inbounds %Type_Info*, %Type_Info** %2754, i64 2
	%2763 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2763, %Type_Info** %2762
	%2764 = getelementptr inbounds %..string, %..string* %2755, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$66c, i64 0, i32 0), i64 5}, %..string* %2764
	%2765 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2753, i64 0, i32 0
	%2766 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2765, i64 0, i32 0
	store %Type_Info** %2754, %Type_Info*** %2766
	%2767 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2765, i64 0, i32 1
	store i64 3, i64* %2767
	%2768 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2765, i64 0, i32 2
	store i64 3, i64* %2768
	%2769 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2753, i64 0, i32 1
	%2770 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2769, i64 0, i32 0
	store %..string* %2755, %..string** %2770
	%2771 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2769, i64 0, i32 1
	store i64 3, i64* %2771
	%2772 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2769, i64 0, i32 2
	store i64 3, i64* %2772
	%2773 = getelementptr inbounds %Type_Info, %Type_Info* %2749, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2773
	%2774 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%2775 = getelementptr inbounds %Type_Info, %Type_Info* %2774, i64 0, i32 1
	store i64 8, i64* %2775
	%2776 = getelementptr inbounds %Type_Info, %Type_Info* %2774, i64 0, i32 2
	store i64 8, i64* %2776
	; Type_Info_Proc
	%2777 = bitcast %Type_Info* %2774 to %Type_Info.Procedure*
	%2778 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2777, i64 0, i32 2
	%2779 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2777, i64 0, i32 3
	%2780 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2777, i64 0, i32 4
	%2781 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2777, i64 0, i32 5
	%2782 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%2783 = bitcast %Type_Info* %2782 to %Type_Info*
	store %Type_Info* %2783, %Type_Info** %2778
	store i1 false, i1* %2780
	store i64 1, i64* %2781
	%2784 = getelementptr inbounds %Type_Info, %Type_Info* %2774, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2784
	%2785 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%2786 = getelementptr inbounds %Type_Info, %Type_Info* %2785, i64 0, i32 1
	store i64 4, i64* %2786
	%2787 = getelementptr inbounds %Type_Info, %Type_Info* %2785, i64 0, i32 2
	store i64 4, i64* %2787
	; Type_Info_Tuple
	%2788 = bitcast %Type_Info* %2785 to %Type_Info.Tuple*
	%2789 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2788, i64 0, i32 2
	%2790 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 116
	%2791 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 116
	%2792 = getelementptr inbounds %Type_Info*, %Type_Info** %2790, i64 0
	%2793 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %2793, %Type_Info** %2792
	%2794 = getelementptr inbounds %..string, %..string* %2791, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$66d, i64 0, i32 0), i64 6}, %..string* %2794
	%2795 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2789, i64 0, i32 0
	%2796 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2795, i64 0, i32 0
	store %Type_Info** %2790, %Type_Info*** %2796
	%2797 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2795, i64 0, i32 1
	store i64 1, i64* %2797
	%2798 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2795, i64 0, i32 2
	store i64 1, i64* %2798
	%2799 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2789, i64 0, i32 1
	%2800 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2799, i64 0, i32 0
	store %..string* %2791, %..string** %2800
	%2801 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2799, i64 0, i32 1
	store i64 1, i64* %2801
	%2802 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2799, i64 0, i32 2
	store i64 1, i64* %2802
	%2803 = getelementptr inbounds %Type_Info, %Type_Info* %2785, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2803
	%2804 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 106
	%2805 = getelementptr inbounds %Type_Info, %Type_Info* %2804, i64 0, i32 1
	store i64 8, i64* %2805
	%2806 = getelementptr inbounds %Type_Info, %Type_Info* %2804, i64 0, i32 2
	store i64 8, i64* %2806
	; Type_Info_Proc
	%2807 = bitcast %Type_Info* %2804 to %Type_Info.Procedure*
	%2808 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2807, i64 0, i32 2
	%2809 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2807, i64 0, i32 3
	%2810 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2807, i64 0, i32 4
	%2811 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2807, i64 0, i32 5
	%2812 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 107
	%2813 = bitcast %Type_Info* %2812 to %Type_Info*
	store %Type_Info* %2813, %Type_Info** %2808
	store i1 false, i1* %2810
	store i64 1, i64* %2811
	%2814 = getelementptr inbounds %Type_Info, %Type_Info* %2804, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2814
	%2815 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 107
	%2816 = getelementptr inbounds %Type_Info, %Type_Info* %2815, i64 0, i32 1
	store i64 32, i64* %2816
	%2817 = getelementptr inbounds %Type_Info, %Type_Info* %2815, i64 0, i32 2
	store i64 8, i64* %2817
	; Type_Info_Tuple
	%2818 = bitcast %Type_Info* %2815 to %Type_Info.Tuple*
	%2819 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2818, i64 0, i32 2
	%2820 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 117
	%2821 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 117
	%2822 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 0
	%2823 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %2823, %Type_Info** %2822
	%2824 = getelementptr inbounds %..string, %..string* %2821, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$66e, i64 0, i32 0), i64 5}, %..string* %2824
	%2825 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 1
	%2826 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2826, %Type_Info** %2825
	%2827 = getelementptr inbounds %..string, %..string* %2821, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$66f, i64 0, i32 0), i64 4}, %..string* %2827
	%2828 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 2
	%2829 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2829, %Type_Info** %2828
	%2830 = getelementptr inbounds %..string, %..string* %2821, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$670, i64 0, i32 0), i64 4}, %..string* %2830
	%2831 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 3
	%2832 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %2832, %Type_Info** %2831
	%2833 = getelementptr inbounds %..string, %..string* %2821, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$671, i64 0, i32 0), i64 10}, %..string* %2833
	%2834 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 4
	%2835 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %2835, %Type_Info** %2834
	%2836 = getelementptr inbounds %..string, %..string* %2821, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$672, i64 0, i32 0), i64 6}, %..string* %2836
	%2837 = getelementptr inbounds %Type_Info*, %Type_Info** %2820, i64 5
	%2838 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %2838, %Type_Info** %2837
	%2839 = getelementptr inbounds %..string, %..string* %2821, i64 5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$673, i64 0, i32 0), i64 7}, %..string* %2839
	%2840 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2819, i64 0, i32 0
	%2841 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2840, i64 0, i32 0
	store %Type_Info** %2820, %Type_Info*** %2841
	%2842 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2840, i64 0, i32 1
	store i64 6, i64* %2842
	%2843 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2840, i64 0, i32 2
	store i64 6, i64* %2843
	%2844 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2819, i64 0, i32 1
	%2845 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2844, i64 0, i32 0
	store %..string* %2821, %..string** %2845
	%2846 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2844, i64 0, i32 1
	store i64 6, i64* %2846
	%2847 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2844, i64 0, i32 2
	store i64 6, i64* %2847
	%2848 = getelementptr inbounds %Type_Info, %Type_Info* %2815, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2848
	%2849 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%2850 = getelementptr inbounds %Type_Info, %Type_Info* %2849, i64 0, i32 1
	store i64 8, i64* %2850
	%2851 = getelementptr inbounds %Type_Info, %Type_Info* %2849, i64 0, i32 2
	store i64 8, i64* %2851
	; Type_Info_Proc
	%2852 = bitcast %Type_Info* %2849 to %Type_Info.Procedure*
	%2853 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2852, i64 0, i32 2
	%2854 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2852, i64 0, i32 3
	%2855 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2852, i64 0, i32 4
	%2856 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2852, i64 0, i32 5
	%2857 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%2858 = bitcast %Type_Info* %2857 to %Type_Info*
	store %Type_Info* %2858, %Type_Info** %2853
	store i1 false, i1* %2855
	store i64 1, i64* %2856
	%2859 = getelementptr inbounds %Type_Info, %Type_Info* %2849, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2859
	%2860 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%2861 = getelementptr inbounds %Type_Info, %Type_Info* %2860, i64 0, i32 1
	store i64 4, i64* %2861
	%2862 = getelementptr inbounds %Type_Info, %Type_Info* %2860, i64 0, i32 2
	store i64 4, i64* %2862
	; Type_Info_Tuple
	%2863 = bitcast %Type_Info* %2860 to %Type_Info.Tuple*
	%2864 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2863, i64 0, i32 2
	%2865 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 123
	%2866 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 123
	%2867 = getelementptr inbounds %Type_Info*, %Type_Info** %2865, i64 0
	%2868 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %2868, %Type_Info** %2867
	%2869 = getelementptr inbounds %..string, %..string* %2866, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$674, i64 0, i32 0), i64 5}, %..string* %2869
	%2870 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2864, i64 0, i32 0
	%2871 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2870, i64 0, i32 0
	store %Type_Info** %2865, %Type_Info*** %2871
	%2872 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2870, i64 0, i32 1
	store i64 1, i64* %2872
	%2873 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2870, i64 0, i32 2
	store i64 1, i64* %2873
	%2874 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2864, i64 0, i32 1
	%2875 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2874, i64 0, i32 0
	store %..string* %2866, %..string** %2875
	%2876 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2874, i64 0, i32 1
	store i64 1, i64* %2876
	%2877 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2874, i64 0, i32 2
	store i64 1, i64* %2877
	%2878 = getelementptr inbounds %Type_Info, %Type_Info* %2860, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2878
	%2879 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%2880 = getelementptr inbounds %Type_Info, %Type_Info* %2879, i64 0, i32 1
	store i64 8, i64* %2880
	%2881 = getelementptr inbounds %Type_Info, %Type_Info* %2879, i64 0, i32 2
	store i64 8, i64* %2881
	; Type_Info_Proc
	%2882 = bitcast %Type_Info* %2879 to %Type_Info.Procedure*
	%2883 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2882, i64 0, i32 2
	%2884 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2882, i64 0, i32 3
	%2885 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2882, i64 0, i32 4
	%2886 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2882, i64 0, i32 5
	%2887 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%2888 = bitcast %Type_Info* %2887 to %Type_Info*
	store %Type_Info* %2888, %Type_Info** %2883
	store i1 false, i1* %2885
	store i64 1, i64* %2886
	%2889 = getelementptr inbounds %Type_Info, %Type_Info* %2879, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2889
	%2890 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%2891 = getelementptr inbounds %Type_Info, %Type_Info* %2890, i64 0, i32 1
	store i64 16, i64* %2891
	%2892 = getelementptr inbounds %Type_Info, %Type_Info* %2890, i64 0, i32 2
	store i64 8, i64* %2892
	; Type_Info_Tuple
	%2893 = bitcast %Type_Info* %2890 to %Type_Info.Tuple*
	%2894 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2893, i64 0, i32 2
	%2895 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 124
	%2896 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 124
	%2897 = getelementptr inbounds %Type_Info*, %Type_Info** %2895, i64 0
	%2898 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2898, %Type_Info** %2897
	%2899 = getelementptr inbounds %..string, %..string* %2896, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$675, i64 0, i32 0), i64 5}, %..string* %2899
	%2900 = getelementptr inbounds %Type_Info*, %Type_Info** %2895, i64 1
	%2901 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %2901, %Type_Info** %2900
	%2902 = getelementptr inbounds %..string, %..string* %2896, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$676, i64 0, i32 0), i64 7}, %..string* %2902
	%2903 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2894, i64 0, i32 0
	%2904 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2903, i64 0, i32 0
	store %Type_Info** %2895, %Type_Info*** %2904
	%2905 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2903, i64 0, i32 1
	store i64 2, i64* %2905
	%2906 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2903, i64 0, i32 2
	store i64 2, i64* %2906
	%2907 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2894, i64 0, i32 1
	%2908 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2907, i64 0, i32 0
	store %..string* %2896, %..string** %2908
	%2909 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2907, i64 0, i32 1
	store i64 2, i64* %2909
	%2910 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2907, i64 0, i32 2
	store i64 2, i64* %2910
	%2911 = getelementptr inbounds %Type_Info, %Type_Info* %2890, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2911
	%2912 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%2913 = getelementptr inbounds %Type_Info, %Type_Info* %2912, i64 0, i32 1
	store i64 8, i64* %2913
	%2914 = getelementptr inbounds %Type_Info, %Type_Info* %2912, i64 0, i32 2
	store i64 8, i64* %2914
	; Type_Info_Pointer
	%2915 = bitcast %Type_Info* %2912 to %Type_Info.Pointer*
	%2916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%2917 = bitcast %Type_Info* %2916 to %Type_Info*
	%2918 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %2915, i64 0, i32 2
	store %Type_Info* %2917, %Type_Info** %2918
	%2919 = getelementptr inbounds %Type_Info, %Type_Info* %2912, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %2919
	%2920 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 111
	%2921 = getelementptr inbounds %Type_Info, %Type_Info* %2920, i64 0, i32 1
	store i64 8, i64* %2921
	%2922 = getelementptr inbounds %Type_Info, %Type_Info* %2920, i64 0, i32 2
	store i64 8, i64* %2922
	; Type_Info_Proc
	%2923 = bitcast %Type_Info* %2920 to %Type_Info.Procedure*
	%2924 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2923, i64 0, i32 2
	%2925 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2923, i64 0, i32 3
	%2926 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2923, i64 0, i32 4
	%2927 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2923, i64 0, i32 5
	%2928 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	%2929 = bitcast %Type_Info* %2928 to %Type_Info*
	store %Type_Info* %2929, %Type_Info** %2924
	store i1 false, i1* %2926
	store i64 1, i64* %2927
	%2930 = getelementptr inbounds %Type_Info, %Type_Info* %2920, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2930
	%2931 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	%2932 = getelementptr inbounds %Type_Info, %Type_Info* %2931, i64 0, i32 1
	store i64 24, i64* %2932
	%2933 = getelementptr inbounds %Type_Info, %Type_Info* %2931, i64 0, i32 2
	store i64 8, i64* %2933
	; Type_Info_Tuple
	%2934 = bitcast %Type_Info* %2931 to %Type_Info.Tuple*
	%2935 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2934, i64 0, i32 2
	%2936 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 126
	%2937 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 126
	%2938 = getelementptr inbounds %Type_Info*, %Type_Info** %2936, i64 0
	%2939 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2939, %Type_Info** %2938
	%2940 = getelementptr inbounds %..string, %..string* %2937, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$677, i64 0, i32 0), i64 6}, %..string* %2940
	%2941 = getelementptr inbounds %Type_Info*, %Type_Info** %2936, i64 1
	%2942 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2942, %Type_Info** %2941
	%2943 = getelementptr inbounds %..string, %..string* %2937, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$678, i64 0, i32 0), i64 4}, %..string* %2943
	%2944 = getelementptr inbounds %Type_Info*, %Type_Info** %2936, i64 2
	%2945 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %2945, %Type_Info** %2944
	%2946 = getelementptr inbounds %..string, %..string* %2937, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$679, i64 0, i32 0), i64 4}, %..string* %2946
	%2947 = getelementptr inbounds %Type_Info*, %Type_Info** %2936, i64 3
	%2948 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2948, %Type_Info** %2947
	%2949 = getelementptr inbounds %..string, %..string* %2937, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$67a, i64 0, i32 0), i64 5}, %..string* %2949
	%2950 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2935, i64 0, i32 0
	%2951 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2950, i64 0, i32 0
	store %Type_Info** %2936, %Type_Info*** %2951
	%2952 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2950, i64 0, i32 1
	store i64 4, i64* %2952
	%2953 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2950, i64 0, i32 2
	store i64 4, i64* %2953
	%2954 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2935, i64 0, i32 1
	%2955 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2954, i64 0, i32 0
	store %..string* %2937, %..string** %2955
	%2956 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2954, i64 0, i32 1
	store i64 4, i64* %2956
	%2957 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2954, i64 0, i32 2
	store i64 4, i64* %2957
	%2958 = getelementptr inbounds %Type_Info, %Type_Info* %2931, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2958
	%2959 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%2960 = getelementptr inbounds %Type_Info, %Type_Info* %2959, i64 0, i32 1
	store i64 8, i64* %2960
	%2961 = getelementptr inbounds %Type_Info, %Type_Info* %2959, i64 0, i32 2
	store i64 8, i64* %2961
	; Type_Info_Proc
	%2962 = bitcast %Type_Info* %2959 to %Type_Info.Procedure*
	%2963 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2962, i64 0, i32 2
	%2964 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2962, i64 0, i32 3
	%2965 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2962, i64 0, i32 4
	%2966 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2962, i64 0, i32 5
	%2967 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%2968 = bitcast %Type_Info* %2967 to %Type_Info*
	store %Type_Info* %2968, %Type_Info** %2963
	store i1 false, i1* %2965
	store i64 1, i64* %2966
	%2969 = getelementptr inbounds %Type_Info, %Type_Info* %2959, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %2969
	%2970 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%2971 = getelementptr inbounds %Type_Info, %Type_Info* %2970, i64 0, i32 1
	store i64 8, i64* %2971
	%2972 = getelementptr inbounds %Type_Info, %Type_Info* %2970, i64 0, i32 2
	store i64 4, i64* %2972
	; Type_Info_Tuple
	%2973 = bitcast %Type_Info* %2970 to %Type_Info.Tuple*
	%2974 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %2973, i64 0, i32 2
	%2975 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 130
	%2976 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 130
	%2977 = getelementptr inbounds %Type_Info*, %Type_Info** %2975, i64 0
	%2978 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %2978, %Type_Info** %2977
	%2979 = getelementptr inbounds %..string, %..string* %2976, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$67b, i64 0, i32 0), i64 6}, %..string* %2979
	%2980 = getelementptr inbounds %Type_Info*, %Type_Info** %2975, i64 1
	%2981 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %2981, %Type_Info** %2980
	%2982 = getelementptr inbounds %..string, %..string* %2976, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$67c, i64 0, i32 0), i64 6}, %..string* %2982
	%2983 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2974, i64 0, i32 0
	%2984 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2983, i64 0, i32 0
	store %Type_Info** %2975, %Type_Info*** %2984
	%2985 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2983, i64 0, i32 1
	store i64 2, i64* %2985
	%2986 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %2983, i64 0, i32 2
	store i64 2, i64* %2986
	%2987 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %2974, i64 0, i32 1
	%2988 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2987, i64 0, i32 0
	store %..string* %2976, %..string** %2988
	%2989 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2987, i64 0, i32 1
	store i64 2, i64* %2989
	%2990 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %2987, i64 0, i32 2
	store i64 2, i64* %2990
	%2991 = getelementptr inbounds %Type_Info, %Type_Info* %2970, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %2991
	%2992 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%2993 = getelementptr inbounds %Type_Info, %Type_Info* %2992, i64 0, i32 1
	store i64 8, i64* %2993
	%2994 = getelementptr inbounds %Type_Info, %Type_Info* %2992, i64 0, i32 2
	store i64 8, i64* %2994
	; Type_Info_Proc
	%2995 = bitcast %Type_Info* %2992 to %Type_Info.Procedure*
	%2996 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2995, i64 0, i32 2
	%2997 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2995, i64 0, i32 3
	%2998 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2995, i64 0, i32 4
	%2999 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %2995, i64 0, i32 5
	%3000 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%3001 = bitcast %Type_Info* %3000 to %Type_Info*
	store %Type_Info* %3001, %Type_Info** %2996
	store i1 false, i1* %2998
	store i64 1, i64* %2999
	%3002 = getelementptr inbounds %Type_Info, %Type_Info* %2992, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3002
	%3003 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%3004 = getelementptr inbounds %Type_Info, %Type_Info* %3003, i64 0, i32 1
	store i64 16, i64* %3004
	%3005 = getelementptr inbounds %Type_Info, %Type_Info* %3003, i64 0, i32 2
	store i64 8, i64* %3005
	; Type_Info_Tuple
	%3006 = bitcast %Type_Info* %3003 to %Type_Info.Tuple*
	%3007 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3006, i64 0, i32 2
	%3008 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 132
	%3009 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 132
	%3010 = getelementptr inbounds %Type_Info*, %Type_Info** %3008, i64 0
	%3011 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3011, %Type_Info** %3010
	%3012 = getelementptr inbounds %..string, %..string* %3009, i64 0
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$67d, i64 0, i32 0), i64 1}, %..string* %3012
	%3013 = getelementptr inbounds %Type_Info*, %Type_Info** %3008, i64 1
	%3014 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %3014, %Type_Info** %3013
	%3015 = getelementptr inbounds %..string, %..string* %3009, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$67e, i64 0, i32 0), i64 6}, %..string* %3015
	%3016 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3007, i64 0, i32 0
	%3017 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3016, i64 0, i32 0
	store %Type_Info** %3008, %Type_Info*** %3017
	%3018 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3016, i64 0, i32 1
	store i64 2, i64* %3018
	%3019 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3016, i64 0, i32 2
	store i64 2, i64* %3019
	%3020 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3007, i64 0, i32 1
	%3021 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3020, i64 0, i32 0
	store %..string* %3009, %..string** %3021
	%3022 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3020, i64 0, i32 1
	store i64 2, i64* %3022
	%3023 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3020, i64 0, i32 2
	store i64 2, i64* %3023
	%3024 = getelementptr inbounds %Type_Info, %Type_Info* %3003, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3024
	%3025 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%3026 = getelementptr inbounds %Type_Info, %Type_Info* %3025, i64 0, i32 1
	store i64 8, i64* %3026
	%3027 = getelementptr inbounds %Type_Info, %Type_Info* %3025, i64 0, i32 2
	store i64 8, i64* %3027
	; Type_Info_Pointer
	%3028 = bitcast %Type_Info* %3025 to %Type_Info.Pointer*
	%3029 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%3030 = bitcast %Type_Info* %3029 to %Type_Info*
	%3031 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3028, i64 0, i32 2
	store %Type_Info* %3030, %Type_Info** %3031
	%3032 = getelementptr inbounds %Type_Info, %Type_Info* %3025, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3032
	%3033 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%3034 = getelementptr inbounds %Type_Info, %Type_Info* %3033, i64 0, i32 1
	store i64 8, i64* %3034
	%3035 = getelementptr inbounds %Type_Info, %Type_Info* %3033, i64 0, i32 2
	store i64 8, i64* %3035
	; Type_Info_Proc
	%3036 = bitcast %Type_Info* %3033 to %Type_Info.Procedure*
	%3037 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3036, i64 0, i32 2
	%3038 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3036, i64 0, i32 3
	%3039 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3036, i64 0, i32 4
	%3040 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3036, i64 0, i32 5
	%3041 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 116
	%3042 = bitcast %Type_Info* %3041 to %Type_Info*
	store %Type_Info* %3042, %Type_Info** %3037
	store i1 false, i1* %3039
	store i64 1, i64* %3040
	%3043 = getelementptr inbounds %Type_Info, %Type_Info* %3033, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3043
	%3044 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 116
	%3045 = getelementptr inbounds %Type_Info, %Type_Info* %3044, i64 0, i32 1
	store i64 32, i64* %3045
	%3046 = getelementptr inbounds %Type_Info, %Type_Info* %3044, i64 0, i32 2
	store i64 8, i64* %3046
	; Type_Info_Tuple
	%3047 = bitcast %Type_Info* %3044 to %Type_Info.Tuple*
	%3048 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3047, i64 0, i32 2
	%3049 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 134
	%3050 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 134
	%3051 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 0
	%3052 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3052, %Type_Info** %3051
	%3053 = getelementptr inbounds %..string, %..string* %3050, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$67f, i64 0, i32 0), i64 6}, %..string* %3053
	%3054 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 1
	%3055 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3055, %Type_Info** %3054
	%3056 = getelementptr inbounds %..string, %..string* %3050, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$680, i64 0, i32 0), i64 4}, %..string* %3056
	%3057 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 2
	%3058 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3058, %Type_Info** %3057
	%3059 = getelementptr inbounds %..string, %..string* %3050, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$681, i64 0, i32 0), i64 8}, %..string* %3059
	%3060 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 3
	%3061 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3061, %Type_Info** %3060
	%3062 = getelementptr inbounds %..string, %..string* %3050, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$682, i64 0, i32 0), i64 5}, %..string* %3062
	%3063 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 4
	%3064 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %3064, %Type_Info** %3063
	%3065 = getelementptr inbounds %..string, %..string* %3050, i64 4
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$683, i64 0, i32 0), i64 3}, %..string* %3065
	%3066 = getelementptr inbounds %Type_Info*, %Type_Info** %3049, i64 5
	%3067 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %3067, %Type_Info** %3066
	%3068 = getelementptr inbounds %..string, %..string* %3050, i64 5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$684, i64 0, i32 0), i64 7}, %..string* %3068
	%3069 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3048, i64 0, i32 0
	%3070 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3069, i64 0, i32 0
	store %Type_Info** %3049, %Type_Info*** %3070
	%3071 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3069, i64 0, i32 1
	store i64 6, i64* %3071
	%3072 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3069, i64 0, i32 2
	store i64 6, i64* %3072
	%3073 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3048, i64 0, i32 1
	%3074 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3073, i64 0, i32 0
	store %..string* %3050, %..string** %3074
	%3075 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3073, i64 0, i32 1
	store i64 6, i64* %3075
	%3076 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3073, i64 0, i32 2
	store i64 6, i64* %3076
	%3077 = getelementptr inbounds %Type_Info, %Type_Info* %3044, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3077
	%3078 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%3079 = getelementptr inbounds %Type_Info, %Type_Info* %3078, i64 0, i32 1
	store i64 8, i64* %3079
	%3080 = getelementptr inbounds %Type_Info, %Type_Info* %3078, i64 0, i32 2
	store i64 8, i64* %3080
	; Type_Info_Pointer
	%3081 = bitcast %Type_Info* %3078 to %Type_Info.Pointer*
	%3082 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%3083 = bitcast %Type_Info* %3082 to %Type_Info*
	%3084 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3081, i64 0, i32 2
	store %Type_Info* %3083, %Type_Info** %3084
	%3085 = getelementptr inbounds %Type_Info, %Type_Info* %3078, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3085
	%3086 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 117
	%3087 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 1
	store i64 8, i64* %3087
	%3088 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 2
	store i64 8, i64* %3088
	; Type_Info_Proc
	%3089 = bitcast %Type_Info* %3086 to %Type_Info.Procedure*
	%3090 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3089, i64 0, i32 2
	%3091 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3089, i64 0, i32 3
	%3092 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3089, i64 0, i32 4
	%3093 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3089, i64 0, i32 5
	%3094 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 118
	%3095 = bitcast %Type_Info* %3094 to %Type_Info*
	store %Type_Info* %3095, %Type_Info** %3090
	store i1 false, i1* %3092
	store i64 1, i64* %3093
	%3096 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3096
	%3097 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 118
	%3098 = getelementptr inbounds %Type_Info, %Type_Info* %3097, i64 0, i32 1
	store i64 16, i64* %3098
	%3099 = getelementptr inbounds %Type_Info, %Type_Info* %3097, i64 0, i32 2
	store i64 8, i64* %3099
	; Type_Info_Tuple
	%3100 = bitcast %Type_Info* %3097 to %Type_Info.Tuple*
	%3101 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3100, i64 0, i32 2
	%3102 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 140
	%3103 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 140
	%3104 = getelementptr inbounds %Type_Info*, %Type_Info** %3102, i64 0
	%3105 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 119
	store %Type_Info* %3105, %Type_Info** %3104
	%3106 = getelementptr inbounds %..string, %..string* %3103, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$685, i64 0, i32 0), i64 8}, %..string* %3106
	%3107 = getelementptr inbounds %Type_Info*, %Type_Info** %3102, i64 1
	%3108 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %3108, %Type_Info** %3107
	%3109 = getelementptr inbounds %..string, %..string* %3103, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$686, i64 0, i32 0), i64 9}, %..string* %3109
	%3110 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3101, i64 0, i32 0
	%3111 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3110, i64 0, i32 0
	store %Type_Info** %3102, %Type_Info*** %3111
	%3112 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3110, i64 0, i32 1
	store i64 2, i64* %3112
	%3113 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3110, i64 0, i32 2
	store i64 2, i64* %3113
	%3114 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3101, i64 0, i32 1
	%3115 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3114, i64 0, i32 0
	store %..string* %3103, %..string** %3115
	%3116 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3114, i64 0, i32 1
	store i64 2, i64* %3116
	%3117 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3114, i64 0, i32 2
	store i64 2, i64* %3117
	%3118 = getelementptr inbounds %Type_Info, %Type_Info* %3097, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3118
	%3119 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 119
	%3120 = getelementptr inbounds %Type_Info, %Type_Info* %3119, i64 0, i32 1
	store i64 8, i64* %3120
	%3121 = getelementptr inbounds %Type_Info, %Type_Info* %3119, i64 0, i32 2
	store i64 8, i64* %3121
	; Type_Info_Named
	%3122 = bitcast %Type_Info* %3119 to %Type_Info.Named*
	%3123 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 120
	%3124 = bitcast %Type_Info* %3123 to %Type_Info*
	%3125 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %3122, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$687, i64 0, i32 0), i64 24}, %..string* %3125
	%3126 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %3122, i64 0, i32 3
	store %Type_Info* %3124, %Type_Info** %3126
	%3127 = getelementptr inbounds %Type_Info, %Type_Info* %3119, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %3127
	%3128 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 120
	%3129 = getelementptr inbounds %Type_Info, %Type_Info* %3128, i64 0, i32 1
	store i64 8, i64* %3129
	%3130 = getelementptr inbounds %Type_Info, %Type_Info* %3128, i64 0, i32 2
	store i64 8, i64* %3130
	; Type_Info_Proc
	%3131 = bitcast %Type_Info* %3128 to %Type_Info.Procedure*
	%3132 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3131, i64 0, i32 2
	%3133 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3131, i64 0, i32 3
	%3134 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3131, i64 0, i32 4
	%3135 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3131, i64 0, i32 5
	%3136 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 121
	%3137 = bitcast %Type_Info* %3136 to %Type_Info*
	store %Type_Info* %3137, %Type_Info** %3132
	store i1 false, i1* %3134
	store i64 1, i64* %3135
	%3138 = getelementptr inbounds %Type_Info, %Type_Info* %3128, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3138
	%3139 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 121
	%3140 = getelementptr inbounds %Type_Info, %Type_Info* %3139, i64 0, i32 1
	store i64 40, i64* %3140
	%3141 = getelementptr inbounds %Type_Info, %Type_Info* %3139, i64 0, i32 2
	store i64 8, i64* %3141
	; Type_Info_Tuple
	%3142 = bitcast %Type_Info* %3139 to %Type_Info.Tuple*
	%3143 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3142, i64 0, i32 2
	%3144 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 142
	%3145 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 142
	%3146 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 0
	%3147 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	store %Type_Info* %3147, %Type_Info** %3146
	%3148 = getelementptr inbounds %..string, %..string* %3145, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$688, i64 0, i32 0), i64 6}, %..string* %3148
	%3149 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 1
	%3150 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	store %Type_Info* %3150, %Type_Info** %3149
	%3151 = getelementptr inbounds %..string, %..string* %3145, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$689, i64 0, i32 0), i64 4}, %..string* %3151
	%3152 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 2
	%3153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3153, %Type_Info** %3152
	%3154 = getelementptr inbounds %..string, %..string* %3145, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$68a, i64 0, i32 0), i64 2}, %..string* %3154
	%3155 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 3
	%3156 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 66
	store %Type_Info* %3156, %Type_Info** %3155
	%3157 = getelementptr inbounds %..string, %..string* %3145, i64 3
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$68b, i64 0, i32 0), i64 8}, %..string* %3157
	%3158 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 4
	%3159 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3159, %Type_Info** %3158
	%3160 = getelementptr inbounds %..string, %..string* %3145, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$68c, i64 0, i32 0), i64 6}, %..string* %3160
	%3161 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 5
	%3162 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %3162, %Type_Info** %3161
	%3163 = getelementptr inbounds %..string, %..string* %3145, i64 5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$68d, i64 0, i32 0), i64 7}, %..string* %3163
	%3164 = getelementptr inbounds %Type_Info*, %Type_Info** %3144, i64 6
	%3165 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %3165, %Type_Info** %3164
	%3166 = getelementptr inbounds %..string, %..string* %3145, i64 6
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$68e, i64 0, i32 0), i64 9}, %..string* %3166
	%3167 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3143, i64 0, i32 0
	%3168 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3167, i64 0, i32 0
	store %Type_Info** %3144, %Type_Info*** %3168
	%3169 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3167, i64 0, i32 1
	store i64 7, i64* %3169
	%3170 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3167, i64 0, i32 2
	store i64 7, i64* %3170
	%3171 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3143, i64 0, i32 1
	%3172 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3171, i64 0, i32 0
	store %..string* %3145, %..string** %3172
	%3173 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3171, i64 0, i32 1
	store i64 7, i64* %3173
	%3174 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3171, i64 0, i32 2
	store i64 7, i64* %3174
	%3175 = getelementptr inbounds %Type_Info, %Type_Info* %3139, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3175
	%3176 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3177 = getelementptr inbounds %Type_Info, %Type_Info* %3176, i64 0, i32 1
	store i64 8, i64* %3177
	%3178 = getelementptr inbounds %Type_Info, %Type_Info* %3176, i64 0, i32 2
	store i64 8, i64* %3178
	; Type_Info_Pointer
	%3179 = bitcast %Type_Info* %3176 to %Type_Info.Pointer*
	%3180 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3181 = bitcast %Type_Info* %3180 to %Type_Info*
	%3182 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3179, i64 0, i32 2
	store %Type_Info* %3181, %Type_Info** %3182
	%3183 = getelementptr inbounds %Type_Info, %Type_Info* %3176, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3183
	%3184 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3185 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 1
	store i64 1, i64* %3185
	%3186 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 2
	store i64 1, i64* %3186
	; Type_Info_Basic
	%3187 = bitcast %Type_Info* %3184 to %Type_Info.Integer*
	%3188 = getelementptr inbounds %Type_Info.Integer, %Type_Info.Integer* %3187, i64 0, i32 2
	store i1 false, i1* %3188
	%3189 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 4 ; UnionTagPtr
	store i64 2, i64* %3189
	%3190 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 122
	%3191 = getelementptr inbounds %Type_Info, %Type_Info* %3190, i64 0, i32 1
	store i64 8, i64* %3191
	%3192 = getelementptr inbounds %Type_Info, %Type_Info* %3190, i64 0, i32 2
	store i64 8, i64* %3192
	; Type_Info_Proc
	%3193 = bitcast %Type_Info* %3190 to %Type_Info.Procedure*
	%3194 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3193, i64 0, i32 2
	%3195 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3193, i64 0, i32 3
	%3196 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3193, i64 0, i32 4
	%3197 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3193, i64 0, i32 5
	%3198 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 123
	%3199 = bitcast %Type_Info* %3198 to %Type_Info*
	store %Type_Info* %3199, %Type_Info** %3194
	store i1 false, i1* %3196
	store i64 1, i64* %3197
	%3200 = getelementptr inbounds %Type_Info, %Type_Info* %3190, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3200
	%3201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 123
	%3202 = getelementptr inbounds %Type_Info, %Type_Info* %3201, i64 0, i32 1
	store i64 16, i64* %3202
	%3203 = getelementptr inbounds %Type_Info, %Type_Info* %3201, i64 0, i32 2
	store i64 8, i64* %3203
	; Type_Info_Tuple
	%3204 = bitcast %Type_Info* %3201 to %Type_Info.Tuple*
	%3205 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3204, i64 0, i32 2
	%3206 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 149
	%3207 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 149
	%3208 = getelementptr inbounds %Type_Info*, %Type_Info** %3206, i64 0
	%3209 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3209, %Type_Info** %3208
	%3210 = getelementptr inbounds %..string, %..string* %3207, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$68f, i64 0, i32 0), i64 6}, %..string* %3210
	%3211 = getelementptr inbounds %Type_Info*, %Type_Info** %3206, i64 1
	%3212 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3212, %Type_Info** %3211
	%3213 = getelementptr inbounds %..string, %..string* %3207, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$690, i64 0, i32 0), i64 5}, %..string* %3213
	%3214 = getelementptr inbounds %Type_Info*, %Type_Info** %3206, i64 2
	%3215 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	store %Type_Info* %3215, %Type_Info** %3214
	%3216 = getelementptr inbounds %..string, %..string* %3207, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$691, i64 0, i32 0), i64 6}, %..string* %3216
	%3217 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3205, i64 0, i32 0
	%3218 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3217, i64 0, i32 0
	store %Type_Info** %3206, %Type_Info*** %3218
	%3219 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3217, i64 0, i32 1
	store i64 3, i64* %3219
	%3220 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3217, i64 0, i32 2
	store i64 3, i64* %3220
	%3221 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3205, i64 0, i32 1
	%3222 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3221, i64 0, i32 0
	store %..string* %3207, %..string** %3222
	%3223 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3221, i64 0, i32 1
	store i64 3, i64* %3223
	%3224 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3221, i64 0, i32 2
	store i64 3, i64* %3224
	%3225 = getelementptr inbounds %Type_Info, %Type_Info* %3201, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3225
	%3226 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%3227 = getelementptr inbounds %Type_Info, %Type_Info* %3226, i64 0, i32 1
	store i64 8, i64* %3227
	%3228 = getelementptr inbounds %Type_Info, %Type_Info* %3226, i64 0, i32 2
	store i64 8, i64* %3228
	; Type_Info_Pointer
	%3229 = bitcast %Type_Info* %3226 to %Type_Info.Pointer*
	%3230 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%3231 = bitcast %Type_Info* %3230 to %Type_Info*
	%3232 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3229, i64 0, i32 2
	store %Type_Info* %3231, %Type_Info** %3232
	%3233 = getelementptr inbounds %Type_Info, %Type_Info* %3226, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3233
	%3234 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 125
	%3235 = getelementptr inbounds %Type_Info, %Type_Info* %3234, i64 0, i32 1
	store i64 8, i64* %3235
	%3236 = getelementptr inbounds %Type_Info, %Type_Info* %3234, i64 0, i32 2
	store i64 8, i64* %3236
	; Type_Info_Proc
	%3237 = bitcast %Type_Info* %3234 to %Type_Info.Procedure*
	%3238 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3237, i64 0, i32 2
	%3239 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3237, i64 0, i32 3
	%3240 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3237, i64 0, i32 4
	%3241 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3237, i64 0, i32 5
	%3242 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 126
	%3243 = bitcast %Type_Info* %3242 to %Type_Info*
	store %Type_Info* %3243, %Type_Info** %3238
	store i1 false, i1* %3240
	store i64 1, i64* %3241
	%3244 = getelementptr inbounds %Type_Info, %Type_Info* %3234, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3244
	%3245 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 126
	%3246 = getelementptr inbounds %Type_Info, %Type_Info* %3245, i64 0, i32 1
	store i64 24, i64* %3246
	%3247 = getelementptr inbounds %Type_Info, %Type_Info* %3245, i64 0, i32 2
	store i64 8, i64* %3247
	; Type_Info_Tuple
	%3248 = bitcast %Type_Info* %3245 to %Type_Info.Tuple*
	%3249 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3248, i64 0, i32 2
	%3250 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 152
	%3251 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 152
	%3252 = getelementptr inbounds %Type_Info*, %Type_Info** %3250, i64 0
	%3253 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3253, %Type_Info** %3252
	%3254 = getelementptr inbounds %..string, %..string* %3251, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$692, i64 0, i32 0), i64 6}, %..string* %3254
	%3255 = getelementptr inbounds %Type_Info*, %Type_Info** %3250, i64 1
	%3256 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3256, %Type_Info** %3255
	%3257 = getelementptr inbounds %..string, %..string* %3251, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$693, i64 0, i32 0), i64 9}, %..string* %3257
	%3258 = getelementptr inbounds %Type_Info*, %Type_Info** %3250, i64 2
	%3259 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	store %Type_Info* %3259, %Type_Info** %3258
	%3260 = getelementptr inbounds %..string, %..string* %3251, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$694, i64 0, i32 0), i64 6}, %..string* %3260
	%3261 = getelementptr inbounds %Type_Info*, %Type_Info** %3250, i64 3
	%3262 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %3262, %Type_Info** %3261
	%3263 = getelementptr inbounds %..string, %..string* %3251, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$695, i64 0, i32 0), i64 7}, %..string* %3263
	%3264 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3249, i64 0, i32 0
	%3265 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3264, i64 0, i32 0
	store %Type_Info** %3250, %Type_Info*** %3265
	%3266 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3264, i64 0, i32 1
	store i64 4, i64* %3266
	%3267 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3264, i64 0, i32 2
	store i64 4, i64* %3267
	%3268 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3249, i64 0, i32 1
	%3269 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3268, i64 0, i32 0
	store %..string* %3251, %..string** %3269
	%3270 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3268, i64 0, i32 1
	store i64 4, i64* %3270
	%3271 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3268, i64 0, i32 2
	store i64 4, i64* %3271
	%3272 = getelementptr inbounds %Type_Info, %Type_Info* %3245, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3272
	%3273 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%3274 = getelementptr inbounds %Type_Info, %Type_Info* %3273, i64 0, i32 1
	store i64 8, i64* %3274
	%3275 = getelementptr inbounds %Type_Info, %Type_Info* %3273, i64 0, i32 2
	store i64 8, i64* %3275
	; Type_Info_Pointer
	%3276 = bitcast %Type_Info* %3273 to %Type_Info.Pointer*
	%3277 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%3278 = bitcast %Type_Info* %3277 to %Type_Info*
	%3279 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3276, i64 0, i32 2
	store %Type_Info* %3278, %Type_Info** %3279
	%3280 = getelementptr inbounds %Type_Info, %Type_Info* %3273, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3280
	%3281 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3282 = getelementptr inbounds %Type_Info, %Type_Info* %3281, i64 0, i32 1
	store i64 8, i64* %3282
	%3283 = getelementptr inbounds %Type_Info, %Type_Info* %3281, i64 0, i32 2
	store i64 8, i64* %3283
	; Type_Info_Pointer
	%3284 = bitcast %Type_Info* %3281 to %Type_Info.Pointer*
	%3285 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3286 = bitcast %Type_Info* %3285 to %Type_Info*
	%3287 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3284, i64 0, i32 2
	store %Type_Info* %3286, %Type_Info** %3287
	%3288 = getelementptr inbounds %Type_Info, %Type_Info* %3281, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3288
	%3289 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 127
	%3290 = getelementptr inbounds %Type_Info, %Type_Info* %3289, i64 0, i32 1
	store i64 8, i64* %3290
	%3291 = getelementptr inbounds %Type_Info, %Type_Info* %3289, i64 0, i32 2
	store i64 8, i64* %3291
	; Type_Info_Proc
	%3292 = bitcast %Type_Info* %3289 to %Type_Info.Procedure*
	%3293 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3292, i64 0, i32 2
	%3294 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3292, i64 0, i32 3
	%3295 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3292, i64 0, i32 4
	%3296 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3292, i64 0, i32 5
	%3297 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%3298 = bitcast %Type_Info* %3297 to %Type_Info*
	store %Type_Info* %3298, %Type_Info** %3293
	%3299 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%3300 = bitcast %Type_Info* %3299 to %Type_Info*
	store %Type_Info* %3300, %Type_Info** %3294
	store i1 false, i1* %3295
	store i64 1, i64* %3296
	%3301 = getelementptr inbounds %Type_Info, %Type_Info* %3289, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3301
	%3302 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%3303 = getelementptr inbounds %Type_Info, %Type_Info* %3302, i64 0, i32 1
	store i64 8, i64* %3303
	%3304 = getelementptr inbounds %Type_Info, %Type_Info* %3302, i64 0, i32 2
	store i64 4, i64* %3304
	; Type_Info_Tuple
	%3305 = bitcast %Type_Info* %3302 to %Type_Info.Tuple*
	%3306 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3305, i64 0, i32 2
	%3307 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 156
	%3308 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 156
	%3309 = getelementptr inbounds %Type_Info*, %Type_Info** %3307, i64 0
	%3310 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3310, %Type_Info** %3309
	%3311 = getelementptr inbounds %..string, %..string* %3308, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$696, i64 0, i32 0), i64 4}, %..string* %3311
	%3312 = getelementptr inbounds %Type_Info*, %Type_Info** %3307, i64 1
	%3313 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3313, %Type_Info** %3312
	%3314 = getelementptr inbounds %..string, %..string* %3308, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$697, i64 0, i32 0), i64 5}, %..string* %3314
	%3315 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3306, i64 0, i32 0
	%3316 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3315, i64 0, i32 0
	store %Type_Info** %3307, %Type_Info*** %3316
	%3317 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3315, i64 0, i32 1
	store i64 2, i64* %3317
	%3318 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3315, i64 0, i32 2
	store i64 2, i64* %3318
	%3319 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3306, i64 0, i32 1
	%3320 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3319, i64 0, i32 0
	store %..string* %3308, %..string** %3320
	%3321 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3319, i64 0, i32 1
	store i64 2, i64* %3321
	%3322 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3319, i64 0, i32 2
	store i64 2, i64* %3322
	%3323 = getelementptr inbounds %Type_Info, %Type_Info* %3302, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3323
	%3324 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%3325 = getelementptr inbounds %Type_Info, %Type_Info* %3324, i64 0, i32 1
	store i64 8, i64* %3325
	%3326 = getelementptr inbounds %Type_Info, %Type_Info* %3324, i64 0, i32 2
	store i64 8, i64* %3326
	; Type_Info_Tuple
	%3327 = bitcast %Type_Info* %3324 to %Type_Info.Tuple*
	%3328 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3327, i64 0, i32 2
	%3329 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 158
	%3330 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 158
	%3331 = getelementptr inbounds %Type_Info*, %Type_Info** %3329, i64 0
	%3332 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %3332, %Type_Info** %3331
	%3333 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3328, i64 0, i32 0
	%3334 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3333, i64 0, i32 0
	store %Type_Info** %3329, %Type_Info*** %3334
	%3335 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3333, i64 0, i32 1
	store i64 1, i64* %3335
	%3336 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3333, i64 0, i32 2
	store i64 1, i64* %3336
	%3337 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3328, i64 0, i32 1
	%3338 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3337, i64 0, i32 0
	store %..string* %3330, %..string** %3338
	%3339 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3337, i64 0, i32 1
	store i64 1, i64* %3339
	%3340 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3337, i64 0, i32 2
	store i64 1, i64* %3340
	%3341 = getelementptr inbounds %Type_Info, %Type_Info* %3324, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3341
	%3342 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3343 = getelementptr inbounds %Type_Info, %Type_Info* %3342, i64 0, i32 1
	store i64 8, i64* %3343
	%3344 = getelementptr inbounds %Type_Info, %Type_Info* %3342, i64 0, i32 2
	store i64 8, i64* %3344
	; Type_Info_Pointer
	%3345 = bitcast %Type_Info* %3342 to %Type_Info.Pointer*
	%3346 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3347 = bitcast %Type_Info* %3346 to %Type_Info*
	%3348 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3345, i64 0, i32 2
	store %Type_Info* %3347, %Type_Info** %3348
	%3349 = getelementptr inbounds %Type_Info, %Type_Info* %3342, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3349
	%3350 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%3351 = getelementptr inbounds %Type_Info, %Type_Info* %3350, i64 0, i32 1
	store i64 8, i64* %3351
	%3352 = getelementptr inbounds %Type_Info, %Type_Info* %3350, i64 0, i32 2
	store i64 8, i64* %3352
	; Type_Info_Proc
	%3353 = bitcast %Type_Info* %3350 to %Type_Info.Procedure*
	%3354 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3353, i64 0, i32 2
	%3355 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3353, i64 0, i32 3
	%3356 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3353, i64 0, i32 4
	%3357 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3353, i64 0, i32 5
	%3358 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3359 = bitcast %Type_Info* %3358 to %Type_Info*
	store %Type_Info* %3359, %Type_Info** %3354
	store i1 false, i1* %3356
	store i64 1, i64* %3357
	%3360 = getelementptr inbounds %Type_Info, %Type_Info* %3350, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3360
	%3361 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3362 = getelementptr inbounds %Type_Info, %Type_Info* %3361, i64 0, i32 1
	store i64 4, i64* %3362
	%3363 = getelementptr inbounds %Type_Info, %Type_Info* %3361, i64 0, i32 2
	store i64 4, i64* %3363
	; Type_Info_Tuple
	%3364 = bitcast %Type_Info* %3361 to %Type_Info.Tuple*
	%3365 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3364, i64 0, i32 2
	%3366 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 159
	%3367 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 159
	%3368 = getelementptr inbounds %Type_Info*, %Type_Info** %3366, i64 0
	%3369 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3369, %Type_Info** %3368
	%3370 = getelementptr inbounds %..string, %..string* %3367, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$698, i64 0, i32 0), i64 4}, %..string* %3370
	%3371 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3365, i64 0, i32 0
	%3372 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3371, i64 0, i32 0
	store %Type_Info** %3366, %Type_Info*** %3372
	%3373 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3371, i64 0, i32 1
	store i64 1, i64* %3373
	%3374 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3371, i64 0, i32 2
	store i64 1, i64* %3374
	%3375 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3365, i64 0, i32 1
	%3376 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3375, i64 0, i32 0
	store %..string* %3367, %..string** %3376
	%3377 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3375, i64 0, i32 1
	store i64 1, i64* %3377
	%3378 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3375, i64 0, i32 2
	store i64 1, i64* %3378
	%3379 = getelementptr inbounds %Type_Info, %Type_Info* %3361, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3379
	%3380 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%3381 = getelementptr inbounds %Type_Info, %Type_Info* %3380, i64 0, i32 1
	store i64 8, i64* %3381
	%3382 = getelementptr inbounds %Type_Info, %Type_Info* %3380, i64 0, i32 2
	store i64 8, i64* %3382
	; Type_Info_Proc
	%3383 = bitcast %Type_Info* %3380 to %Type_Info.Procedure*
	%3384 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3383, i64 0, i32 2
	%3385 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3383, i64 0, i32 3
	%3386 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3383, i64 0, i32 4
	%3387 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3383, i64 0, i32 5
	%3388 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%3389 = bitcast %Type_Info* %3388 to %Type_Info*
	store %Type_Info* %3389, %Type_Info** %3384
	store i1 false, i1* %3386
	store i64 1, i64* %3387
	%3390 = getelementptr inbounds %Type_Info, %Type_Info* %3380, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3390
	%3391 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%3392 = getelementptr inbounds %Type_Info, %Type_Info* %3391, i64 0, i32 1
	store i64 8, i64* %3392
	%3393 = getelementptr inbounds %Type_Info, %Type_Info* %3391, i64 0, i32 2
	store i64 4, i64* %3393
	; Type_Info_Tuple
	%3394 = bitcast %Type_Info* %3391 to %Type_Info.Tuple*
	%3395 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3394, i64 0, i32 2
	%3396 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 160
	%3397 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 160
	%3398 = getelementptr inbounds %Type_Info*, %Type_Info** %3396, i64 0
	%3399 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3399, %Type_Info** %3398
	%3400 = getelementptr inbounds %..string, %..string* %3397, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$699, i64 0, i32 0), i64 7}, %..string* %3400
	%3401 = getelementptr inbounds %Type_Info*, %Type_Info** %3396, i64 1
	%3402 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3402, %Type_Info** %3401
	%3403 = getelementptr inbounds %..string, %..string* %3397, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$69a, i64 0, i32 0), i64 9}, %..string* %3403
	%3404 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3395, i64 0, i32 0
	%3405 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3404, i64 0, i32 0
	store %Type_Info** %3396, %Type_Info*** %3405
	%3406 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3404, i64 0, i32 1
	store i64 2, i64* %3406
	%3407 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3404, i64 0, i32 2
	store i64 2, i64* %3407
	%3408 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3395, i64 0, i32 1
	%3409 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3408, i64 0, i32 0
	store %..string* %3397, %..string** %3409
	%3410 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3408, i64 0, i32 1
	store i64 2, i64* %3410
	%3411 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3408, i64 0, i32 2
	store i64 2, i64* %3411
	%3412 = getelementptr inbounds %Type_Info, %Type_Info* %3391, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3412
	%3413 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%3414 = getelementptr inbounds %Type_Info, %Type_Info* %3413, i64 0, i32 1
	store i64 8, i64* %3414
	%3415 = getelementptr inbounds %Type_Info, %Type_Info* %3413, i64 0, i32 2
	store i64 8, i64* %3415
	; Type_Info_Proc
	%3416 = bitcast %Type_Info* %3413 to %Type_Info.Procedure*
	%3417 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3416, i64 0, i32 2
	%3418 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3416, i64 0, i32 3
	%3419 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3416, i64 0, i32 4
	%3420 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3416, i64 0, i32 5
	%3421 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3422 = bitcast %Type_Info* %3421 to %Type_Info*
	store %Type_Info* %3422, %Type_Info** %3417
	store i1 false, i1* %3419
	store i64 1, i64* %3420
	%3423 = getelementptr inbounds %Type_Info, %Type_Info* %3413, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3423
	%3424 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3425 = getelementptr inbounds %Type_Info, %Type_Info* %3424, i64 0, i32 1
	store i64 4, i64* %3425
	%3426 = getelementptr inbounds %Type_Info, %Type_Info* %3424, i64 0, i32 2
	store i64 4, i64* %3426
	; Type_Info_Tuple
	%3427 = bitcast %Type_Info* %3424 to %Type_Info.Tuple*
	%3428 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3427, i64 0, i32 2
	%3429 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 162
	%3430 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 162
	%3431 = getelementptr inbounds %Type_Info*, %Type_Info** %3429, i64 0
	%3432 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3432, %Type_Info** %3431
	%3433 = getelementptr inbounds %..string, %..string* %3430, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$69b, i64 0, i32 0), i64 6}, %..string* %3433
	%3434 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3428, i64 0, i32 0
	%3435 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3434, i64 0, i32 0
	store %Type_Info** %3429, %Type_Info*** %3435
	%3436 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3434, i64 0, i32 1
	store i64 1, i64* %3436
	%3437 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3434, i64 0, i32 2
	store i64 1, i64* %3437
	%3438 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3428, i64 0, i32 1
	%3439 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3438, i64 0, i32 0
	store %..string* %3430, %..string** %3439
	%3440 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3438, i64 0, i32 1
	store i64 1, i64* %3440
	%3441 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3438, i64 0, i32 2
	store i64 1, i64* %3441
	%3442 = getelementptr inbounds %Type_Info, %Type_Info* %3424, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3442
	%3443 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 133
	%3444 = getelementptr inbounds %Type_Info, %Type_Info* %3443, i64 0, i32 1
	store i64 8, i64* %3444
	%3445 = getelementptr inbounds %Type_Info, %Type_Info* %3443, i64 0, i32 2
	store i64 8, i64* %3445
	; Type_Info_Proc
	%3446 = bitcast %Type_Info* %3443 to %Type_Info.Procedure*
	%3447 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3446, i64 0, i32 2
	%3448 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3446, i64 0, i32 3
	%3449 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3446, i64 0, i32 4
	%3450 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3446, i64 0, i32 5
	%3451 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3452 = bitcast %Type_Info* %3451 to %Type_Info*
	store %Type_Info* %3452, %Type_Info** %3447
	%3453 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3454 = bitcast %Type_Info* %3453 to %Type_Info*
	store %Type_Info* %3454, %Type_Info** %3448
	store i1 false, i1* %3449
	store i64 1, i64* %3450
	%3455 = getelementptr inbounds %Type_Info, %Type_Info* %3443, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3455
	%3456 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3457 = getelementptr inbounds %Type_Info, %Type_Info* %3456, i64 0, i32 1
	store i64 4, i64* %3457
	%3458 = getelementptr inbounds %Type_Info, %Type_Info* %3456, i64 0, i32 2
	store i64 4, i64* %3458
	; Type_Info_Tuple
	%3459 = bitcast %Type_Info* %3456 to %Type_Info.Tuple*
	%3460 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3459, i64 0, i32 2
	%3461 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 163
	%3462 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 163
	%3463 = getelementptr inbounds %Type_Info*, %Type_Info** %3461, i64 0
	%3464 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3464, %Type_Info** %3463
	%3465 = getelementptr inbounds %..string, %..string* %3462, i64 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$69c, i64 0, i32 0), i64 11}, %..string* %3465
	%3466 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3460, i64 0, i32 0
	%3467 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3466, i64 0, i32 0
	store %Type_Info** %3461, %Type_Info*** %3467
	%3468 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3466, i64 0, i32 1
	store i64 1, i64* %3468
	%3469 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3466, i64 0, i32 2
	store i64 1, i64* %3469
	%3470 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3460, i64 0, i32 1
	%3471 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3470, i64 0, i32 0
	store %..string* %3462, %..string** %3471
	%3472 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3470, i64 0, i32 1
	store i64 1, i64* %3472
	%3473 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3470, i64 0, i32 2
	store i64 1, i64* %3473
	%3474 = getelementptr inbounds %Type_Info, %Type_Info* %3456, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3474
	%3475 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3476 = getelementptr inbounds %Type_Info, %Type_Info* %3475, i64 0, i32 1
	store i64 4, i64* %3476
	%3477 = getelementptr inbounds %Type_Info, %Type_Info* %3475, i64 0, i32 2
	store i64 4, i64* %3477
	; Type_Info_Tuple
	%3478 = bitcast %Type_Info* %3475 to %Type_Info.Tuple*
	%3479 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3478, i64 0, i32 2
	%3480 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 164
	%3481 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 164
	%3482 = getelementptr inbounds %Type_Info*, %Type_Info** %3480, i64 0
	%3483 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3483, %Type_Info** %3482
	%3484 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3479, i64 0, i32 0
	%3485 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3484, i64 0, i32 0
	store %Type_Info** %3480, %Type_Info*** %3485
	%3486 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3484, i64 0, i32 1
	store i64 1, i64* %3486
	%3487 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3484, i64 0, i32 2
	store i64 1, i64* %3487
	%3488 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3479, i64 0, i32 1
	%3489 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3488, i64 0, i32 0
	store %..string* %3481, %..string** %3489
	%3490 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3488, i64 0, i32 1
	store i64 1, i64* %3490
	%3491 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3488, i64 0, i32 2
	store i64 1, i64* %3491
	%3492 = getelementptr inbounds %Type_Info, %Type_Info* %3475, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3492
	%3493 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 134
	%3494 = getelementptr inbounds %Type_Info, %Type_Info* %3493, i64 0, i32 1
	store i64 8, i64* %3494
	%3495 = getelementptr inbounds %Type_Info, %Type_Info* %3493, i64 0, i32 2
	store i64 8, i64* %3495
	; Type_Info_Proc
	%3496 = bitcast %Type_Info* %3493 to %Type_Info.Procedure*
	%3497 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3496, i64 0, i32 2
	%3498 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3496, i64 0, i32 3
	%3499 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3496, i64 0, i32 4
	%3500 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3496, i64 0, i32 5
	%3501 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 135
	%3502 = bitcast %Type_Info* %3501 to %Type_Info*
	store %Type_Info* %3502, %Type_Info** %3497
	store i1 false, i1* %3499
	store i64 1, i64* %3500
	%3503 = getelementptr inbounds %Type_Info, %Type_Info* %3493, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3503
	%3504 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 135
	%3505 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 1
	store i64 24, i64* %3505
	%3506 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 2
	store i64 8, i64* %3506
	; Type_Info_Tuple
	%3507 = bitcast %Type_Info* %3504 to %Type_Info.Tuple*
	%3508 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3507, i64 0, i32 2
	%3509 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 165
	%3510 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 165
	%3511 = getelementptr inbounds %Type_Info*, %Type_Info** %3509, i64 0
	%3512 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3512, %Type_Info** %3511
	%3513 = getelementptr inbounds %..string, %..string* %3510, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$69d, i64 0, i32 0), i64 6}, %..string* %3513
	%3514 = getelementptr inbounds %Type_Info*, %Type_Info** %3509, i64 1
	%3515 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3515, %Type_Info** %3514
	%3516 = getelementptr inbounds %..string, %..string* %3510, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$69e, i64 0, i32 0), i64 5}, %..string* %3516
	%3517 = getelementptr inbounds %Type_Info*, %Type_Info** %3509, i64 2
	%3518 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 136
	store %Type_Info* %3518, %Type_Info** %3517
	%3519 = getelementptr inbounds %..string, %..string* %3510, i64 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$69f, i64 0, i32 0), i64 3}, %..string* %3519
	%3520 = getelementptr inbounds %Type_Info*, %Type_Info** %3509, i64 3
	%3521 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	store %Type_Info* %3521, %Type_Info** %3520
	%3522 = getelementptr inbounds %..string, %..string* %3510, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6a0, i64 0, i32 0), i64 6}, %..string* %3522
	%3523 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3508, i64 0, i32 0
	%3524 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3523, i64 0, i32 0
	store %Type_Info** %3509, %Type_Info*** %3524
	%3525 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3523, i64 0, i32 1
	store i64 4, i64* %3525
	%3526 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3523, i64 0, i32 2
	store i64 4, i64* %3526
	%3527 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3508, i64 0, i32 1
	%3528 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3527, i64 0, i32 0
	store %..string* %3510, %..string** %3528
	%3529 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3527, i64 0, i32 1
	store i64 4, i64* %3529
	%3530 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3527, i64 0, i32 2
	store i64 4, i64* %3530
	%3531 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3531
	%3532 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 136
	%3533 = getelementptr inbounds %Type_Info, %Type_Info* %3532, i64 0, i32 1
	store i64 8, i64* %3533
	%3534 = getelementptr inbounds %Type_Info, %Type_Info* %3532, i64 0, i32 2
	store i64 8, i64* %3534
	; Type_Info_Pointer
	%3535 = bitcast %Type_Info* %3532 to %Type_Info.Pointer*
	%3536 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3537 = bitcast %Type_Info* %3536 to %Type_Info*
	%3538 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3535, i64 0, i32 2
	store %Type_Info* %3537, %Type_Info** %3538
	%3539 = getelementptr inbounds %Type_Info, %Type_Info* %3532, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3539
	%3540 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3541 = getelementptr inbounds %Type_Info, %Type_Info* %3540, i64 0, i32 1
	store i64 8, i64* %3541
	%3542 = getelementptr inbounds %Type_Info, %Type_Info* %3540, i64 0, i32 2
	store i64 8, i64* %3542
	; Type_Info_Pointer
	%3543 = bitcast %Type_Info* %3540 to %Type_Info.Pointer*
	%3544 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3545 = bitcast %Type_Info* %3544 to %Type_Info*
	%3546 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3543, i64 0, i32 2
	store %Type_Info* %3545, %Type_Info** %3546
	%3547 = getelementptr inbounds %Type_Info, %Type_Info* %3540, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3547
	%3548 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%3549 = getelementptr inbounds %Type_Info, %Type_Info* %3548, i64 0, i32 1
	store i64 8, i64* %3549
	%3550 = getelementptr inbounds %Type_Info, %Type_Info* %3548, i64 0, i32 2
	store i64 8, i64* %3550
	; Type_Info_Pointer
	%3551 = bitcast %Type_Info* %3548 to %Type_Info.Pointer*
	%3552 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%3553 = bitcast %Type_Info* %3552 to %Type_Info*
	%3554 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %3551, i64 0, i32 2
	store %Type_Info* %3553, %Type_Info** %3554
	%3555 = getelementptr inbounds %Type_Info, %Type_Info* %3548, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %3555
	%3556 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 137
	%3557 = getelementptr inbounds %Type_Info, %Type_Info* %3556, i64 0, i32 1
	store i64 8, i64* %3557
	%3558 = getelementptr inbounds %Type_Info, %Type_Info* %3556, i64 0, i32 2
	store i64 8, i64* %3558
	; Type_Info_Proc
	%3559 = bitcast %Type_Info* %3556 to %Type_Info.Procedure*
	%3560 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3559, i64 0, i32 2
	%3561 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3559, i64 0, i32 3
	%3562 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3559, i64 0, i32 4
	%3563 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3559, i64 0, i32 5
	%3564 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3565 = bitcast %Type_Info* %3564 to %Type_Info*
	store %Type_Info* %3565, %Type_Info** %3560
	store i1 false, i1* %3562
	store i64 1, i64* %3563
	%3566 = getelementptr inbounds %Type_Info, %Type_Info* %3556, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3566
	%3567 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3568 = getelementptr inbounds %Type_Info, %Type_Info* %3567, i64 0, i32 1
	store i64 8, i64* %3568
	%3569 = getelementptr inbounds %Type_Info, %Type_Info* %3567, i64 0, i32 2
	store i64 4, i64* %3569
	; Type_Info_Tuple
	%3570 = bitcast %Type_Info* %3567 to %Type_Info.Tuple*
	%3571 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3570, i64 0, i32 2
	%3572 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 169
	%3573 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 169
	%3574 = getelementptr inbounds %Type_Info*, %Type_Info** %3572, i64 0
	%3575 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3575, %Type_Info** %3574
	%3576 = getelementptr inbounds %..string, %..string* %3573, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a1, i64 0, i32 0), i64 7}, %..string* %3576
	%3577 = getelementptr inbounds %Type_Info*, %Type_Info** %3572, i64 1
	%3578 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3578, %Type_Info** %3577
	%3579 = getelementptr inbounds %..string, %..string* %3573, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6a2, i64 0, i32 0), i64 6}, %..string* %3579
	%3580 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3571, i64 0, i32 0
	%3581 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3580, i64 0, i32 0
	store %Type_Info** %3572, %Type_Info*** %3581
	%3582 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3580, i64 0, i32 1
	store i64 2, i64* %3582
	%3583 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3580, i64 0, i32 2
	store i64 2, i64* %3583
	%3584 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3571, i64 0, i32 1
	%3585 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3584, i64 0, i32 0
	store %..string* %3573, %..string** %3585
	%3586 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3584, i64 0, i32 1
	store i64 2, i64* %3586
	%3587 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3584, i64 0, i32 2
	store i64 2, i64* %3587
	%3588 = getelementptr inbounds %Type_Info, %Type_Info* %3567, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3588
	%3589 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 139
	%3590 = getelementptr inbounds %Type_Info, %Type_Info* %3589, i64 0, i32 1
	store i64 8, i64* %3590
	%3591 = getelementptr inbounds %Type_Info, %Type_Info* %3589, i64 0, i32 2
	store i64 8, i64* %3591
	; Type_Info_Proc
	%3592 = bitcast %Type_Info* %3589 to %Type_Info.Procedure*
	%3593 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3592, i64 0, i32 2
	%3594 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3592, i64 0, i32 3
	%3595 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3592, i64 0, i32 4
	%3596 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3592, i64 0, i32 5
	%3597 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3598 = bitcast %Type_Info* %3597 to %Type_Info*
	store %Type_Info* %3598, %Type_Info** %3594
	store i1 false, i1* %3595
	store i64 1, i64* %3596
	%3599 = getelementptr inbounds %Type_Info, %Type_Info* %3589, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3599
	%3600 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3601 = getelementptr inbounds %Type_Info, %Type_Info* %3600, i64 0, i32 1
	store i64 4, i64* %3601
	%3602 = getelementptr inbounds %Type_Info, %Type_Info* %3600, i64 0, i32 2
	store i64 4, i64* %3602
	; Type_Info_Tuple
	%3603 = bitcast %Type_Info* %3600 to %Type_Info.Tuple*
	%3604 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3603, i64 0, i32 2
	%3605 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 171
	%3606 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 171
	%3607 = getelementptr inbounds %Type_Info*, %Type_Info** %3605, i64 0
	%3608 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3608, %Type_Info** %3607
	%3609 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3604, i64 0, i32 0
	%3610 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3609, i64 0, i32 0
	store %Type_Info** %3605, %Type_Info*** %3610
	%3611 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3609, i64 0, i32 1
	store i64 1, i64* %3611
	%3612 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3609, i64 0, i32 2
	store i64 1, i64* %3612
	%3613 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3604, i64 0, i32 1
	%3614 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3613, i64 0, i32 0
	store %..string* %3606, %..string** %3614
	%3615 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3613, i64 0, i32 1
	store i64 1, i64* %3615
	%3616 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3613, i64 0, i32 2
	store i64 1, i64* %3616
	%3617 = getelementptr inbounds %Type_Info, %Type_Info* %3600, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3617
	%3618 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%3619 = getelementptr inbounds %Type_Info, %Type_Info* %3618, i64 0, i32 1
	store i64 8, i64* %3619
	%3620 = getelementptr inbounds %Type_Info, %Type_Info* %3618, i64 0, i32 2
	store i64 8, i64* %3620
	; Type_Info_Proc
	%3621 = bitcast %Type_Info* %3618 to %Type_Info.Procedure*
	%3622 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3621, i64 0, i32 2
	%3623 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3621, i64 0, i32 3
	%3624 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3621, i64 0, i32 4
	%3625 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3621, i64 0, i32 5
	%3626 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3627 = bitcast %Type_Info* %3626 to %Type_Info*
	store %Type_Info* %3627, %Type_Info** %3622
	store i1 false, i1* %3624
	store i64 1, i64* %3625
	%3628 = getelementptr inbounds %Type_Info, %Type_Info* %3618, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3628
	%3629 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3630 = getelementptr inbounds %Type_Info, %Type_Info* %3629, i64 0, i32 1
	store i64 4, i64* %3630
	%3631 = getelementptr inbounds %Type_Info, %Type_Info* %3629, i64 0, i32 2
	store i64 4, i64* %3631
	; Type_Info_Tuple
	%3632 = bitcast %Type_Info* %3629 to %Type_Info.Tuple*
	%3633 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3632, i64 0, i32 2
	%3634 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 172
	%3635 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 172
	%3636 = getelementptr inbounds %Type_Info*, %Type_Info** %3634, i64 0
	%3637 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3637, %Type_Info** %3636
	%3638 = getelementptr inbounds %..string, %..string* %3635, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a3, i64 0, i32 0), i64 7}, %..string* %3638
	%3639 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3633, i64 0, i32 0
	%3640 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3639, i64 0, i32 0
	store %Type_Info** %3634, %Type_Info*** %3640
	%3641 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3639, i64 0, i32 1
	store i64 1, i64* %3641
	%3642 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3639, i64 0, i32 2
	store i64 1, i64* %3642
	%3643 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3633, i64 0, i32 1
	%3644 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3643, i64 0, i32 0
	store %..string* %3635, %..string** %3644
	%3645 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3643, i64 0, i32 1
	store i64 1, i64* %3645
	%3646 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3643, i64 0, i32 2
	store i64 1, i64* %3646
	%3647 = getelementptr inbounds %Type_Info, %Type_Info* %3629, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3647
	%3648 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%3649 = getelementptr inbounds %Type_Info, %Type_Info* %3648, i64 0, i32 1
	store i64 8, i64* %3649
	%3650 = getelementptr inbounds %Type_Info, %Type_Info* %3648, i64 0, i32 2
	store i64 8, i64* %3650
	; Type_Info_Proc
	%3651 = bitcast %Type_Info* %3648 to %Type_Info.Procedure*
	%3652 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3651, i64 0, i32 2
	%3653 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3651, i64 0, i32 3
	%3654 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3651, i64 0, i32 4
	%3655 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3651, i64 0, i32 5
	%3656 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3657 = bitcast %Type_Info* %3656 to %Type_Info*
	store %Type_Info* %3657, %Type_Info** %3652
	store i1 false, i1* %3654
	store i64 1, i64* %3655
	%3658 = getelementptr inbounds %Type_Info, %Type_Info* %3648, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3658
	%3659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%3660 = getelementptr inbounds %Type_Info, %Type_Info* %3659, i64 0, i32 1
	store i64 4, i64* %3660
	%3661 = getelementptr inbounds %Type_Info, %Type_Info* %3659, i64 0, i32 2
	store i64 4, i64* %3661
	; Type_Info_Tuple
	%3662 = bitcast %Type_Info* %3659 to %Type_Info.Tuple*
	%3663 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3662, i64 0, i32 2
	%3664 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 173
	%3665 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 173
	%3666 = getelementptr inbounds %Type_Info*, %Type_Info** %3664, i64 0
	%3667 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %3667, %Type_Info** %3666
	%3668 = getelementptr inbounds %..string, %..string* %3665, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a4, i64 0, i32 0), i64 7}, %..string* %3668
	%3669 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3663, i64 0, i32 0
	%3670 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3669, i64 0, i32 0
	store %Type_Info** %3664, %Type_Info*** %3670
	%3671 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3669, i64 0, i32 1
	store i64 1, i64* %3671
	%3672 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3669, i64 0, i32 2
	store i64 1, i64* %3672
	%3673 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3663, i64 0, i32 1
	%3674 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3673, i64 0, i32 0
	store %..string* %3665, %..string** %3674
	%3675 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3673, i64 0, i32 1
	store i64 1, i64* %3675
	%3676 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3673, i64 0, i32 2
	store i64 1, i64* %3676
	%3677 = getelementptr inbounds %Type_Info, %Type_Info* %3659, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3677
	%3678 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%3679 = getelementptr inbounds %Type_Info, %Type_Info* %3678, i64 0, i32 1
	store i64 8, i64* %3679
	%3680 = getelementptr inbounds %Type_Info, %Type_Info* %3678, i64 0, i32 2
	store i64 8, i64* %3680
	; Type_Info_Proc
	%3681 = bitcast %Type_Info* %3678 to %Type_Info.Procedure*
	%3682 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3681, i64 0, i32 2
	%3683 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3681, i64 0, i32 3
	%3684 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3681, i64 0, i32 4
	%3685 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3681, i64 0, i32 5
	%3686 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3687 = bitcast %Type_Info* %3686 to %Type_Info*
	store %Type_Info* %3687, %Type_Info** %3682
	store i1 false, i1* %3684
	store i64 1, i64* %3685
	%3688 = getelementptr inbounds %Type_Info, %Type_Info* %3678, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3688
	%3689 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3690 = getelementptr inbounds %Type_Info, %Type_Info* %3689, i64 0, i32 1
	store i64 4, i64* %3690
	%3691 = getelementptr inbounds %Type_Info, %Type_Info* %3689, i64 0, i32 2
	store i64 4, i64* %3691
	; Type_Info_Tuple
	%3692 = bitcast %Type_Info* %3689 to %Type_Info.Tuple*
	%3693 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3692, i64 0, i32 2
	%3694 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 174
	%3695 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 174
	%3696 = getelementptr inbounds %Type_Info*, %Type_Info** %3694, i64 0
	%3697 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3697, %Type_Info** %3696
	%3698 = getelementptr inbounds %..string, %..string* %3695, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a5, i64 0, i32 0), i64 7}, %..string* %3698
	%3699 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3693, i64 0, i32 0
	%3700 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3699, i64 0, i32 0
	store %Type_Info** %3694, %Type_Info*** %3700
	%3701 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3699, i64 0, i32 1
	store i64 1, i64* %3701
	%3702 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3699, i64 0, i32 2
	store i64 1, i64* %3702
	%3703 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3693, i64 0, i32 1
	%3704 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3703, i64 0, i32 0
	store %..string* %3695, %..string** %3704
	%3705 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3703, i64 0, i32 1
	store i64 1, i64* %3705
	%3706 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3703, i64 0, i32 2
	store i64 1, i64* %3706
	%3707 = getelementptr inbounds %Type_Info, %Type_Info* %3689, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3707
	%3708 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%3709 = getelementptr inbounds %Type_Info, %Type_Info* %3708, i64 0, i32 1
	store i64 8, i64* %3709
	%3710 = getelementptr inbounds %Type_Info, %Type_Info* %3708, i64 0, i32 2
	store i64 8, i64* %3710
	; Type_Info_Proc
	%3711 = bitcast %Type_Info* %3708 to %Type_Info.Procedure*
	%3712 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3711, i64 0, i32 2
	%3713 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3711, i64 0, i32 3
	%3714 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3711, i64 0, i32 4
	%3715 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3711, i64 0, i32 5
	%3716 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%3717 = bitcast %Type_Info* %3716 to %Type_Info*
	store %Type_Info* %3717, %Type_Info** %3712
	store i1 false, i1* %3714
	store i64 1, i64* %3715
	%3718 = getelementptr inbounds %Type_Info, %Type_Info* %3708, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3718
	%3719 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%3720 = getelementptr inbounds %Type_Info, %Type_Info* %3719, i64 0, i32 1
	store i64 8, i64* %3720
	%3721 = getelementptr inbounds %Type_Info, %Type_Info* %3719, i64 0, i32 2
	store i64 4, i64* %3721
	; Type_Info_Tuple
	%3722 = bitcast %Type_Info* %3719 to %Type_Info.Tuple*
	%3723 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3722, i64 0, i32 2
	%3724 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 175
	%3725 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 175
	%3726 = getelementptr inbounds %Type_Info*, %Type_Info** %3724, i64 0
	%3727 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3727, %Type_Info** %3726
	%3728 = getelementptr inbounds %..string, %..string* %3725, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6a6, i64 0, i32 0), i64 3}, %..string* %3728
	%3729 = getelementptr inbounds %Type_Info*, %Type_Info** %3724, i64 1
	%3730 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3730, %Type_Info** %3729
	%3731 = getelementptr inbounds %..string, %..string* %3725, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6a7, i64 0, i32 0), i64 2}, %..string* %3731
	%3732 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3723, i64 0, i32 0
	%3733 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3732, i64 0, i32 0
	store %Type_Info** %3724, %Type_Info*** %3733
	%3734 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3732, i64 0, i32 1
	store i64 2, i64* %3734
	%3735 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3732, i64 0, i32 2
	store i64 2, i64* %3735
	%3736 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3723, i64 0, i32 1
	%3737 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3736, i64 0, i32 0
	store %..string* %3725, %..string** %3737
	%3738 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3736, i64 0, i32 1
	store i64 2, i64* %3738
	%3739 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3736, i64 0, i32 2
	store i64 2, i64* %3739
	%3740 = getelementptr inbounds %Type_Info, %Type_Info* %3719, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3740
	%3741 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%3742 = getelementptr inbounds %Type_Info, %Type_Info* %3741, i64 0, i32 1
	store i64 8, i64* %3742
	%3743 = getelementptr inbounds %Type_Info, %Type_Info* %3741, i64 0, i32 2
	store i64 8, i64* %3743
	; Type_Info_Proc
	%3744 = bitcast %Type_Info* %3741 to %Type_Info.Procedure*
	%3745 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3744, i64 0, i32 2
	%3746 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3744, i64 0, i32 3
	%3747 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3744, i64 0, i32 4
	%3748 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3744, i64 0, i32 5
	%3749 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%3750 = bitcast %Type_Info* %3749 to %Type_Info*
	store %Type_Info* %3750, %Type_Info** %3745
	store i1 false, i1* %3747
	store i64 1, i64* %3748
	%3751 = getelementptr inbounds %Type_Info, %Type_Info* %3741, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3751
	%3752 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%3753 = getelementptr inbounds %Type_Info, %Type_Info* %3752, i64 0, i32 1
	store i64 12, i64* %3753
	%3754 = getelementptr inbounds %Type_Info, %Type_Info* %3752, i64 0, i32 2
	store i64 4, i64* %3754
	; Type_Info_Tuple
	%3755 = bitcast %Type_Info* %3752 to %Type_Info.Tuple*
	%3756 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3755, i64 0, i32 2
	%3757 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 177
	%3758 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 177
	%3759 = getelementptr inbounds %Type_Info*, %Type_Info** %3757, i64 0
	%3760 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3760, %Type_Info** %3759
	%3761 = getelementptr inbounds %..string, %..string* %3758, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6a8, i64 0, i32 0), i64 3}, %..string* %3761
	%3762 = getelementptr inbounds %Type_Info*, %Type_Info** %3757, i64 1
	%3763 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3763, %Type_Info** %3762
	%3764 = getelementptr inbounds %..string, %..string* %3758, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6a9, i64 0, i32 0), i64 2}, %..string* %3764
	%3765 = getelementptr inbounds %Type_Info*, %Type_Info** %3757, i64 2
	%3766 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3766, %Type_Info** %3765
	%3767 = getelementptr inbounds %..string, %..string* %3758, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6aa, i64 0, i32 0), i64 2}, %..string* %3767
	%3768 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3756, i64 0, i32 0
	%3769 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3768, i64 0, i32 0
	store %Type_Info** %3757, %Type_Info*** %3769
	%3770 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3768, i64 0, i32 1
	store i64 3, i64* %3770
	%3771 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3768, i64 0, i32 2
	store i64 3, i64* %3771
	%3772 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3756, i64 0, i32 1
	%3773 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3772, i64 0, i32 0
	store %..string* %3758, %..string** %3773
	%3774 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3772, i64 0, i32 1
	store i64 3, i64* %3774
	%3775 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3772, i64 0, i32 2
	store i64 3, i64* %3775
	%3776 = getelementptr inbounds %Type_Info, %Type_Info* %3752, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3776
	%3777 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 140
	%3778 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 1
	store i64 8, i64* %3778
	%3779 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 2
	store i64 8, i64* %3779
	; Type_Info_Proc
	%3780 = bitcast %Type_Info* %3777 to %Type_Info.Procedure*
	%3781 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3780, i64 0, i32 2
	%3782 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3780, i64 0, i32 3
	%3783 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3780, i64 0, i32 4
	%3784 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3780, i64 0, i32 5
	%3785 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 141
	%3786 = bitcast %Type_Info* %3785 to %Type_Info*
	store %Type_Info* %3786, %Type_Info** %3781
	store i1 false, i1* %3783
	store i64 1, i64* %3784
	%3787 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3787
	%3788 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 141
	%3789 = getelementptr inbounds %Type_Info, %Type_Info* %3788, i64 0, i32 1
	store i64 16, i64* %3789
	%3790 = getelementptr inbounds %Type_Info, %Type_Info* %3788, i64 0, i32 2
	store i64 4, i64* %3790
	; Type_Info_Tuple
	%3791 = bitcast %Type_Info* %3788 to %Type_Info.Tuple*
	%3792 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3791, i64 0, i32 2
	%3793 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 180
	%3794 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 180
	%3795 = getelementptr inbounds %Type_Info*, %Type_Info** %3793, i64 0
	%3796 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3796, %Type_Info** %3795
	%3797 = getelementptr inbounds %..string, %..string* %3794, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6ab, i64 0, i32 0), i64 3}, %..string* %3797
	%3798 = getelementptr inbounds %Type_Info*, %Type_Info** %3793, i64 1
	%3799 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3799, %Type_Info** %3798
	%3800 = getelementptr inbounds %..string, %..string* %3794, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6ac, i64 0, i32 0), i64 2}, %..string* %3800
	%3801 = getelementptr inbounds %Type_Info*, %Type_Info** %3793, i64 2
	%3802 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3802, %Type_Info** %3801
	%3803 = getelementptr inbounds %..string, %..string* %3794, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6ad, i64 0, i32 0), i64 2}, %..string* %3803
	%3804 = getelementptr inbounds %Type_Info*, %Type_Info** %3793, i64 3
	%3805 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3805, %Type_Info** %3804
	%3806 = getelementptr inbounds %..string, %..string* %3794, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6ae, i64 0, i32 0), i64 2}, %..string* %3806
	%3807 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3792, i64 0, i32 0
	%3808 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3807, i64 0, i32 0
	store %Type_Info** %3793, %Type_Info*** %3808
	%3809 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3807, i64 0, i32 1
	store i64 4, i64* %3809
	%3810 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3807, i64 0, i32 2
	store i64 4, i64* %3810
	%3811 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3792, i64 0, i32 1
	%3812 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3811, i64 0, i32 0
	store %..string* %3794, %..string** %3812
	%3813 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3811, i64 0, i32 1
	store i64 4, i64* %3813
	%3814 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3811, i64 0, i32 2
	store i64 4, i64* %3814
	%3815 = getelementptr inbounds %Type_Info, %Type_Info* %3788, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3815
	%3816 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%3817 = getelementptr inbounds %Type_Info, %Type_Info* %3816, i64 0, i32 1
	store i64 8, i64* %3817
	%3818 = getelementptr inbounds %Type_Info, %Type_Info* %3816, i64 0, i32 2
	store i64 8, i64* %3818
	; Type_Info_Proc
	%3819 = bitcast %Type_Info* %3816 to %Type_Info.Procedure*
	%3820 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3819, i64 0, i32 2
	%3821 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3819, i64 0, i32 3
	%3822 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3819, i64 0, i32 4
	%3823 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3819, i64 0, i32 5
	%3824 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3825 = bitcast %Type_Info* %3824 to %Type_Info*
	store %Type_Info* %3825, %Type_Info** %3820
	store i1 false, i1* %3822
	store i64 1, i64* %3823
	%3826 = getelementptr inbounds %Type_Info, %Type_Info* %3816, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3826
	%3827 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3828 = getelementptr inbounds %Type_Info, %Type_Info* %3827, i64 0, i32 1
	store i64 20, i64* %3828
	%3829 = getelementptr inbounds %Type_Info, %Type_Info* %3827, i64 0, i32 2
	store i64 4, i64* %3829
	; Type_Info_Tuple
	%3830 = bitcast %Type_Info* %3827 to %Type_Info.Tuple*
	%3831 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3830, i64 0, i32 2
	%3832 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 184
	%3833 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 184
	%3834 = getelementptr inbounds %Type_Info*, %Type_Info** %3832, i64 0
	%3835 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3835, %Type_Info** %3834
	%3836 = getelementptr inbounds %..string, %..string* %3833, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6af, i64 0, i32 0), i64 3}, %..string* %3836
	%3837 = getelementptr inbounds %Type_Info*, %Type_Info** %3832, i64 1
	%3838 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3838, %Type_Info** %3837
	%3839 = getelementptr inbounds %..string, %..string* %3833, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b0, i64 0, i32 0), i64 2}, %..string* %3839
	%3840 = getelementptr inbounds %Type_Info*, %Type_Info** %3832, i64 2
	%3841 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3841, %Type_Info** %3840
	%3842 = getelementptr inbounds %..string, %..string* %3833, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b1, i64 0, i32 0), i64 2}, %..string* %3842
	%3843 = getelementptr inbounds %Type_Info*, %Type_Info** %3832, i64 3
	%3844 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3844, %Type_Info** %3843
	%3845 = getelementptr inbounds %..string, %..string* %3833, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b2, i64 0, i32 0), i64 2}, %..string* %3845
	%3846 = getelementptr inbounds %Type_Info*, %Type_Info** %3832, i64 4
	%3847 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3847, %Type_Info** %3846
	%3848 = getelementptr inbounds %..string, %..string* %3833, i64 4
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b3, i64 0, i32 0), i64 2}, %..string* %3848
	%3849 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3831, i64 0, i32 0
	%3850 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3849, i64 0, i32 0
	store %Type_Info** %3832, %Type_Info*** %3850
	%3851 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3849, i64 0, i32 1
	store i64 5, i64* %3851
	%3852 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3849, i64 0, i32 2
	store i64 5, i64* %3852
	%3853 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3831, i64 0, i32 1
	%3854 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3853, i64 0, i32 0
	store %..string* %3833, %..string** %3854
	%3855 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3853, i64 0, i32 1
	store i64 5, i64* %3855
	%3856 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3853, i64 0, i32 2
	store i64 5, i64* %3856
	%3857 = getelementptr inbounds %Type_Info, %Type_Info* %3827, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3857
	%3858 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 144
	%3859 = getelementptr inbounds %Type_Info, %Type_Info* %3858, i64 0, i32 1
	store i64 8, i64* %3859
	%3860 = getelementptr inbounds %Type_Info, %Type_Info* %3858, i64 0, i32 2
	store i64 8, i64* %3860
	; Type_Info_Proc
	%3861 = bitcast %Type_Info* %3858 to %Type_Info.Procedure*
	%3862 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3861, i64 0, i32 2
	%3863 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3861, i64 0, i32 3
	%3864 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3861, i64 0, i32 4
	%3865 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3861, i64 0, i32 5
	%3866 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3867 = bitcast %Type_Info* %3866 to %Type_Info*
	store %Type_Info* %3867, %Type_Info** %3862
	store i1 false, i1* %3864
	store i64 1, i64* %3865
	%3868 = getelementptr inbounds %Type_Info, %Type_Info* %3858, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3868
	%3869 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3870 = getelementptr inbounds %Type_Info, %Type_Info* %3869, i64 0, i32 1
	store i64 8, i64* %3870
	%3871 = getelementptr inbounds %Type_Info, %Type_Info* %3869, i64 0, i32 2
	store i64 4, i64* %3871
	; Type_Info_Tuple
	%3872 = bitcast %Type_Info* %3869 to %Type_Info.Tuple*
	%3873 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3872, i64 0, i32 2
	%3874 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 189
	%3875 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 189
	%3876 = getelementptr inbounds %Type_Info*, %Type_Info** %3874, i64 0
	%3877 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3877, %Type_Info** %3876
	%3878 = getelementptr inbounds %..string, %..string* %3875, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6b4, i64 0, i32 0), i64 3}, %..string* %3878
	%3879 = getelementptr inbounds %Type_Info*, %Type_Info** %3874, i64 1
	%3880 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3880, %Type_Info** %3879
	%3881 = getelementptr inbounds %..string, %..string* %3875, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b5, i64 0, i32 0), i64 2}, %..string* %3881
	%3882 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3873, i64 0, i32 0
	%3883 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3882, i64 0, i32 0
	store %Type_Info** %3874, %Type_Info*** %3883
	%3884 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3882, i64 0, i32 1
	store i64 2, i64* %3884
	%3885 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3882, i64 0, i32 2
	store i64 2, i64* %3885
	%3886 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3873, i64 0, i32 1
	%3887 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3886, i64 0, i32 0
	store %..string* %3875, %..string** %3887
	%3888 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3886, i64 0, i32 1
	store i64 2, i64* %3888
	%3889 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3886, i64 0, i32 2
	store i64 2, i64* %3889
	%3890 = getelementptr inbounds %Type_Info, %Type_Info* %3869, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3890
	%3891 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%3892 = getelementptr inbounds %Type_Info, %Type_Info* %3891, i64 0, i32 1
	store i64 8, i64* %3892
	%3893 = getelementptr inbounds %Type_Info, %Type_Info* %3891, i64 0, i32 2
	store i64 8, i64* %3893
	; Type_Info_Proc
	%3894 = bitcast %Type_Info* %3891 to %Type_Info.Procedure*
	%3895 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3894, i64 0, i32 2
	%3896 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3894, i64 0, i32 3
	%3897 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3894, i64 0, i32 4
	%3898 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3894, i64 0, i32 5
	%3899 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 147
	%3900 = bitcast %Type_Info* %3899 to %Type_Info*
	store %Type_Info* %3900, %Type_Info** %3895
	store i1 false, i1* %3897
	store i64 1, i64* %3898
	%3901 = getelementptr inbounds %Type_Info, %Type_Info* %3891, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3901
	%3902 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 147
	%3903 = getelementptr inbounds %Type_Info, %Type_Info* %3902, i64 0, i32 1
	store i64 12, i64* %3903
	%3904 = getelementptr inbounds %Type_Info, %Type_Info* %3902, i64 0, i32 2
	store i64 4, i64* %3904
	; Type_Info_Tuple
	%3905 = bitcast %Type_Info* %3902 to %Type_Info.Tuple*
	%3906 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3905, i64 0, i32 2
	%3907 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 191
	%3908 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 191
	%3909 = getelementptr inbounds %Type_Info*, %Type_Info** %3907, i64 0
	%3910 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3910, %Type_Info** %3909
	%3911 = getelementptr inbounds %..string, %..string* %3908, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6b6, i64 0, i32 0), i64 3}, %..string* %3911
	%3912 = getelementptr inbounds %Type_Info*, %Type_Info** %3907, i64 1
	%3913 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3913, %Type_Info** %3912
	%3914 = getelementptr inbounds %..string, %..string* %3908, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b7, i64 0, i32 0), i64 2}, %..string* %3914
	%3915 = getelementptr inbounds %Type_Info*, %Type_Info** %3907, i64 2
	%3916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3916, %Type_Info** %3915
	%3917 = getelementptr inbounds %..string, %..string* %3908, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6b8, i64 0, i32 0), i64 2}, %..string* %3917
	%3918 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3906, i64 0, i32 0
	%3919 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3918, i64 0, i32 0
	store %Type_Info** %3907, %Type_Info*** %3919
	%3920 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3918, i64 0, i32 1
	store i64 3, i64* %3920
	%3921 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3918, i64 0, i32 2
	store i64 3, i64* %3921
	%3922 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3906, i64 0, i32 1
	%3923 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3922, i64 0, i32 0
	store %..string* %3908, %..string** %3923
	%3924 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3922, i64 0, i32 1
	store i64 3, i64* %3924
	%3925 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3922, i64 0, i32 2
	store i64 3, i64* %3925
	%3926 = getelementptr inbounds %Type_Info, %Type_Info* %3902, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3926
	%3927 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 148
	%3928 = getelementptr inbounds %Type_Info, %Type_Info* %3927, i64 0, i32 1
	store i64 8, i64* %3928
	%3929 = getelementptr inbounds %Type_Info, %Type_Info* %3927, i64 0, i32 2
	store i64 8, i64* %3929
	; Type_Info_Proc
	%3930 = bitcast %Type_Info* %3927 to %Type_Info.Procedure*
	%3931 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3930, i64 0, i32 2
	%3932 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3930, i64 0, i32 3
	%3933 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3930, i64 0, i32 4
	%3934 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3930, i64 0, i32 5
	%3935 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 149
	%3936 = bitcast %Type_Info* %3935 to %Type_Info*
	store %Type_Info* %3936, %Type_Info** %3931
	store i1 false, i1* %3933
	store i64 1, i64* %3934
	%3937 = getelementptr inbounds %Type_Info, %Type_Info* %3927, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3937
	%3938 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 149
	%3939 = getelementptr inbounds %Type_Info, %Type_Info* %3938, i64 0, i32 1
	store i64 16, i64* %3939
	%3940 = getelementptr inbounds %Type_Info, %Type_Info* %3938, i64 0, i32 2
	store i64 4, i64* %3940
	; Type_Info_Tuple
	%3941 = bitcast %Type_Info* %3938 to %Type_Info.Tuple*
	%3942 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3941, i64 0, i32 2
	%3943 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 194
	%3944 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 194
	%3945 = getelementptr inbounds %Type_Info*, %Type_Info** %3943, i64 0
	%3946 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3946, %Type_Info** %3945
	%3947 = getelementptr inbounds %..string, %..string* %3944, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6b9, i64 0, i32 0), i64 3}, %..string* %3947
	%3948 = getelementptr inbounds %Type_Info*, %Type_Info** %3943, i64 1
	%3949 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3949, %Type_Info** %3948
	%3950 = getelementptr inbounds %..string, %..string* %3944, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6ba, i64 0, i32 0), i64 2}, %..string* %3950
	%3951 = getelementptr inbounds %Type_Info*, %Type_Info** %3943, i64 2
	%3952 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3952, %Type_Info** %3951
	%3953 = getelementptr inbounds %..string, %..string* %3944, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6bb, i64 0, i32 0), i64 2}, %..string* %3953
	%3954 = getelementptr inbounds %Type_Info*, %Type_Info** %3943, i64 3
	%3955 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3955, %Type_Info** %3954
	%3956 = getelementptr inbounds %..string, %..string* %3944, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6bc, i64 0, i32 0), i64 2}, %..string* %3956
	%3957 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3942, i64 0, i32 0
	%3958 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3957, i64 0, i32 0
	store %Type_Info** %3943, %Type_Info*** %3958
	%3959 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3957, i64 0, i32 1
	store i64 4, i64* %3959
	%3960 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3957, i64 0, i32 2
	store i64 4, i64* %3960
	%3961 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3942, i64 0, i32 1
	%3962 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3961, i64 0, i32 0
	store %..string* %3944, %..string** %3962
	%3963 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3961, i64 0, i32 1
	store i64 4, i64* %3963
	%3964 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %3961, i64 0, i32 2
	store i64 4, i64* %3964
	%3965 = getelementptr inbounds %Type_Info, %Type_Info* %3938, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %3965
	%3966 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%3967 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 1
	store i64 8, i64* %3967
	%3968 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 2
	store i64 8, i64* %3968
	; Type_Info_Proc
	%3969 = bitcast %Type_Info* %3966 to %Type_Info.Procedure*
	%3970 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3969, i64 0, i32 2
	%3971 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3969, i64 0, i32 3
	%3972 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3969, i64 0, i32 4
	%3973 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %3969, i64 0, i32 5
	%3974 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%3975 = bitcast %Type_Info* %3974 to %Type_Info*
	store %Type_Info* %3975, %Type_Info** %3970
	store i1 false, i1* %3972
	store i64 1, i64* %3973
	%3976 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %3976
	%3977 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%3978 = getelementptr inbounds %Type_Info, %Type_Info* %3977, i64 0, i32 1
	store i64 20, i64* %3978
	%3979 = getelementptr inbounds %Type_Info, %Type_Info* %3977, i64 0, i32 2
	store i64 4, i64* %3979
	; Type_Info_Tuple
	%3980 = bitcast %Type_Info* %3977 to %Type_Info.Tuple*
	%3981 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %3980, i64 0, i32 2
	%3982 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 198
	%3983 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 198
	%3984 = getelementptr inbounds %Type_Info*, %Type_Info** %3982, i64 0
	%3985 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %3985, %Type_Info** %3984
	%3986 = getelementptr inbounds %..string, %..string* %3983, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6bd, i64 0, i32 0), i64 3}, %..string* %3986
	%3987 = getelementptr inbounds %Type_Info*, %Type_Info** %3982, i64 1
	%3988 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3988, %Type_Info** %3987
	%3989 = getelementptr inbounds %..string, %..string* %3983, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6be, i64 0, i32 0), i64 2}, %..string* %3989
	%3990 = getelementptr inbounds %Type_Info*, %Type_Info** %3982, i64 2
	%3991 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3991, %Type_Info** %3990
	%3992 = getelementptr inbounds %..string, %..string* %3983, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6bf, i64 0, i32 0), i64 2}, %..string* %3992
	%3993 = getelementptr inbounds %Type_Info*, %Type_Info** %3982, i64 3
	%3994 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3994, %Type_Info** %3993
	%3995 = getelementptr inbounds %..string, %..string* %3983, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6c0, i64 0, i32 0), i64 2}, %..string* %3995
	%3996 = getelementptr inbounds %Type_Info*, %Type_Info** %3982, i64 4
	%3997 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %3997, %Type_Info** %3996
	%3998 = getelementptr inbounds %..string, %..string* %3983, i64 4
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6c1, i64 0, i32 0), i64 2}, %..string* %3998
	%3999 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3981, i64 0, i32 0
	%4000 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3999, i64 0, i32 0
	store %Type_Info** %3982, %Type_Info*** %4000
	%4001 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3999, i64 0, i32 1
	store i64 5, i64* %4001
	%4002 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %3999, i64 0, i32 2
	store i64 5, i64* %4002
	%4003 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %3981, i64 0, i32 1
	%4004 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4003, i64 0, i32 0
	store %..string* %3983, %..string** %4004
	%4005 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4003, i64 0, i32 1
	store i64 5, i64* %4005
	%4006 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4003, i64 0, i32 2
	store i64 5, i64* %4006
	%4007 = getelementptr inbounds %Type_Info, %Type_Info* %3977, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4007
	%4008 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 152
	%4009 = getelementptr inbounds %Type_Info, %Type_Info* %4008, i64 0, i32 1
	store i64 8, i64* %4009
	%4010 = getelementptr inbounds %Type_Info, %Type_Info* %4008, i64 0, i32 2
	store i64 8, i64* %4010
	; Type_Info_Proc
	%4011 = bitcast %Type_Info* %4008 to %Type_Info.Procedure*
	%4012 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4011, i64 0, i32 2
	%4013 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4011, i64 0, i32 3
	%4014 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4011, i64 0, i32 4
	%4015 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4011, i64 0, i32 5
	%4016 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 153
	%4017 = bitcast %Type_Info* %4016 to %Type_Info*
	store %Type_Info* %4017, %Type_Info** %4012
	store i1 false, i1* %4014
	store i64 1, i64* %4015
	%4018 = getelementptr inbounds %Type_Info, %Type_Info* %4008, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4018
	%4019 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 153
	%4020 = getelementptr inbounds %Type_Info, %Type_Info* %4019, i64 0, i32 1
	store i64 24, i64* %4020
	%4021 = getelementptr inbounds %Type_Info, %Type_Info* %4019, i64 0, i32 2
	store i64 8, i64* %4021
	; Type_Info_Tuple
	%4022 = bitcast %Type_Info* %4019 to %Type_Info.Tuple*
	%4023 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4022, i64 0, i32 2
	%4024 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 203
	%4025 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 203
	%4026 = getelementptr inbounds %Type_Info*, %Type_Info** %4024, i64 0
	%4027 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4027, %Type_Info** %4026
	%4028 = getelementptr inbounds %..string, %..string* %4025, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6c2, i64 0, i32 0), i64 3}, %..string* %4028
	%4029 = getelementptr inbounds %Type_Info*, %Type_Info** %4024, i64 1
	%4030 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4030, %Type_Info** %4029
	%4031 = getelementptr inbounds %..string, %..string* %4025, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6c3, i64 0, i32 0), i64 5}, %..string* %4031
	%4032 = getelementptr inbounds %Type_Info*, %Type_Info** %4024, i64 2
	%4033 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4033, %Type_Info** %4032
	%4034 = getelementptr inbounds %..string, %..string* %4025, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6c4, i64 0, i32 0), i64 9}, %..string* %4034
	%4035 = getelementptr inbounds %Type_Info*, %Type_Info** %4024, i64 3
	%4036 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 154
	store %Type_Info* %4036, %Type_Info** %4035
	%4037 = getelementptr inbounds %..string, %..string* %4025, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6c5, i64 0, i32 0), i64 5}, %..string* %4037
	%4038 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4023, i64 0, i32 0
	%4039 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4038, i64 0, i32 0
	store %Type_Info** %4024, %Type_Info*** %4039
	%4040 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4038, i64 0, i32 1
	store i64 4, i64* %4040
	%4041 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4038, i64 0, i32 2
	store i64 4, i64* %4041
	%4042 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4023, i64 0, i32 1
	%4043 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4042, i64 0, i32 0
	store %..string* %4025, %..string** %4043
	%4044 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4042, i64 0, i32 1
	store i64 4, i64* %4044
	%4045 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4042, i64 0, i32 2
	store i64 4, i64* %4045
	%4046 = getelementptr inbounds %Type_Info, %Type_Info* %4019, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4046
	%4047 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 154
	%4048 = getelementptr inbounds %Type_Info, %Type_Info* %4047, i64 0, i32 1
	store i64 8, i64* %4048
	%4049 = getelementptr inbounds %Type_Info, %Type_Info* %4047, i64 0, i32 2
	store i64 8, i64* %4049
	; Type_Info_Pointer
	%4050 = bitcast %Type_Info* %4047 to %Type_Info.Pointer*
	%4051 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%4052 = bitcast %Type_Info* %4051 to %Type_Info*
	%4053 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4050, i64 0, i32 2
	store %Type_Info* %4052, %Type_Info** %4053
	%4054 = getelementptr inbounds %Type_Info, %Type_Info* %4047, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4054
	%4055 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%4056 = getelementptr inbounds %Type_Info, %Type_Info* %4055, i64 0, i32 1
	store i64 8, i64* %4056
	%4057 = getelementptr inbounds %Type_Info, %Type_Info* %4055, i64 0, i32 2
	store i64 8, i64* %4057
	; Type_Info_Proc
	%4058 = bitcast %Type_Info* %4055 to %Type_Info.Procedure*
	%4059 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4058, i64 0, i32 2
	%4060 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4058, i64 0, i32 3
	%4061 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4058, i64 0, i32 4
	%4062 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4058, i64 0, i32 5
	%4063 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4064 = bitcast %Type_Info* %4063 to %Type_Info*
	store %Type_Info* %4064, %Type_Info** %4059
	%4065 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4066 = bitcast %Type_Info* %4065 to %Type_Info*
	store %Type_Info* %4066, %Type_Info** %4060
	store i1 false, i1* %4061
	store i64 1, i64* %4062
	%4067 = getelementptr inbounds %Type_Info, %Type_Info* %4055, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4067
	%4068 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4069 = getelementptr inbounds %Type_Info, %Type_Info* %4068, i64 0, i32 1
	store i64 16, i64* %4069
	%4070 = getelementptr inbounds %Type_Info, %Type_Info* %4068, i64 0, i32 2
	store i64 8, i64* %4070
	; Type_Info_Tuple
	%4071 = bitcast %Type_Info* %4068 to %Type_Info.Tuple*
	%4072 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4071, i64 0, i32 2
	%4073 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 207
	%4074 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 207
	%4075 = getelementptr inbounds %Type_Info*, %Type_Info** %4073, i64 0
	%4076 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4076, %Type_Info** %4075
	%4077 = getelementptr inbounds %..string, %..string* %4074, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6c6, i64 0, i32 0), i64 7}, %..string* %4077
	%4078 = getelementptr inbounds %Type_Info*, %Type_Info** %4073, i64 1
	%4079 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %4079, %Type_Info** %4078
	%4080 = getelementptr inbounds %..string, %..string* %4074, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6c7, i64 0, i32 0), i64 4}, %..string* %4080
	%4081 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4072, i64 0, i32 0
	%4082 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4081, i64 0, i32 0
	store %Type_Info** %4073, %Type_Info*** %4082
	%4083 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4081, i64 0, i32 1
	store i64 2, i64* %4083
	%4084 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4081, i64 0, i32 2
	store i64 2, i64* %4084
	%4085 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4072, i64 0, i32 1
	%4086 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4085, i64 0, i32 0
	store %..string* %4074, %..string** %4086
	%4087 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4085, i64 0, i32 1
	store i64 2, i64* %4087
	%4088 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4085, i64 0, i32 2
	store i64 2, i64* %4088
	%4089 = getelementptr inbounds %Type_Info, %Type_Info* %4068, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4089
	%4090 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4091 = getelementptr inbounds %Type_Info, %Type_Info* %4090, i64 0, i32 1
	store i64 8, i64* %4091
	%4092 = getelementptr inbounds %Type_Info, %Type_Info* %4090, i64 0, i32 2
	store i64 8, i64* %4092
	; Type_Info_Pointer
	%4093 = bitcast %Type_Info* %4090 to %Type_Info.Pointer*
	%4094 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4095 = bitcast %Type_Info* %4094 to %Type_Info*
	%4096 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4093, i64 0, i32 2
	store %Type_Info* %4095, %Type_Info** %4096
	%4097 = getelementptr inbounds %Type_Info, %Type_Info* %4090, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4097
	%4098 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4099 = getelementptr inbounds %Type_Info, %Type_Info* %4098, i64 0, i32 1
	store i64 4, i64* %4099
	%4100 = getelementptr inbounds %Type_Info, %Type_Info* %4098, i64 0, i32 2
	store i64 4, i64* %4100
	; Type_Info_Tuple
	%4101 = bitcast %Type_Info* %4098 to %Type_Info.Tuple*
	%4102 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4101, i64 0, i32 2
	%4103 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 209
	%4104 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 209
	%4105 = getelementptr inbounds %Type_Info*, %Type_Info** %4103, i64 0
	%4106 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4106, %Type_Info** %4105
	%4107 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4102, i64 0, i32 0
	%4108 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4107, i64 0, i32 0
	store %Type_Info** %4103, %Type_Info*** %4108
	%4109 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4107, i64 0, i32 1
	store i64 1, i64* %4109
	%4110 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4107, i64 0, i32 2
	store i64 1, i64* %4110
	%4111 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4102, i64 0, i32 1
	%4112 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4111, i64 0, i32 0
	store %..string* %4104, %..string** %4112
	%4113 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4111, i64 0, i32 1
	store i64 1, i64* %4113
	%4114 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4111, i64 0, i32 2
	store i64 1, i64* %4114
	%4115 = getelementptr inbounds %Type_Info, %Type_Info* %4098, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4115
	%4116 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%4117 = getelementptr inbounds %Type_Info, %Type_Info* %4116, i64 0, i32 1
	store i64 8, i64* %4117
	%4118 = getelementptr inbounds %Type_Info, %Type_Info* %4116, i64 0, i32 2
	store i64 8, i64* %4118
	; Type_Info_Proc
	%4119 = bitcast %Type_Info* %4116 to %Type_Info.Procedure*
	%4120 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4119, i64 0, i32 2
	%4121 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4119, i64 0, i32 3
	%4122 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4119, i64 0, i32 4
	%4123 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4119, i64 0, i32 5
	%4124 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4125 = bitcast %Type_Info* %4124 to %Type_Info*
	store %Type_Info* %4125, %Type_Info** %4120
	%4126 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4127 = bitcast %Type_Info* %4126 to %Type_Info*
	store %Type_Info* %4127, %Type_Info** %4121
	store i1 false, i1* %4122
	store i64 1, i64* %4123
	%4128 = getelementptr inbounds %Type_Info, %Type_Info* %4116, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4128
	%4129 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4130 = getelementptr inbounds %Type_Info, %Type_Info* %4129, i64 0, i32 1
	store i64 16, i64* %4130
	%4131 = getelementptr inbounds %Type_Info, %Type_Info* %4129, i64 0, i32 2
	store i64 8, i64* %4131
	; Type_Info_Tuple
	%4132 = bitcast %Type_Info* %4129 to %Type_Info.Tuple*
	%4133 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4132, i64 0, i32 2
	%4134 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 210
	%4135 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 210
	%4136 = getelementptr inbounds %Type_Info*, %Type_Info** %4134, i64 0
	%4137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4137, %Type_Info** %4136
	%4138 = getelementptr inbounds %..string, %..string* %4135, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6c8, i64 0, i32 0), i64 7}, %..string* %4138
	%4139 = getelementptr inbounds %Type_Info*, %Type_Info** %4134, i64 1
	%4140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %4140, %Type_Info** %4139
	%4141 = getelementptr inbounds %..string, %..string* %4135, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6c9, i64 0, i32 0), i64 4}, %..string* %4141
	%4142 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4133, i64 0, i32 0
	%4143 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4142, i64 0, i32 0
	store %Type_Info** %4134, %Type_Info*** %4143
	%4144 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4142, i64 0, i32 1
	store i64 2, i64* %4144
	%4145 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4142, i64 0, i32 2
	store i64 2, i64* %4145
	%4146 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4133, i64 0, i32 1
	%4147 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4146, i64 0, i32 0
	store %..string* %4135, %..string** %4147
	%4148 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4146, i64 0, i32 1
	store i64 2, i64* %4148
	%4149 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4146, i64 0, i32 2
	store i64 2, i64* %4149
	%4150 = getelementptr inbounds %Type_Info, %Type_Info* %4129, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4150
	%4151 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4152 = getelementptr inbounds %Type_Info, %Type_Info* %4151, i64 0, i32 1
	store i64 8, i64* %4152
	%4153 = getelementptr inbounds %Type_Info, %Type_Info* %4151, i64 0, i32 2
	store i64 8, i64* %4153
	; Type_Info_Pointer
	%4154 = bitcast %Type_Info* %4151 to %Type_Info.Pointer*
	%4155 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4156 = bitcast %Type_Info* %4155 to %Type_Info*
	%4157 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4154, i64 0, i32 2
	store %Type_Info* %4156, %Type_Info** %4157
	%4158 = getelementptr inbounds %Type_Info, %Type_Info* %4151, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4158
	%4159 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4160 = getelementptr inbounds %Type_Info, %Type_Info* %4159, i64 0, i32 1
	store i64 4, i64* %4160
	%4161 = getelementptr inbounds %Type_Info, %Type_Info* %4159, i64 0, i32 2
	store i64 4, i64* %4161
	; Type_Info_Tuple
	%4162 = bitcast %Type_Info* %4159 to %Type_Info.Tuple*
	%4163 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4162, i64 0, i32 2
	%4164 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 212
	%4165 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 212
	%4166 = getelementptr inbounds %Type_Info*, %Type_Info** %4164, i64 0
	%4167 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4167, %Type_Info** %4166
	%4168 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4163, i64 0, i32 0
	%4169 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4168, i64 0, i32 0
	store %Type_Info** %4164, %Type_Info*** %4169
	%4170 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4168, i64 0, i32 1
	store i64 1, i64* %4170
	%4171 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4168, i64 0, i32 2
	store i64 1, i64* %4171
	%4172 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4163, i64 0, i32 1
	%4173 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4172, i64 0, i32 0
	store %..string* %4165, %..string** %4173
	%4174 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4172, i64 0, i32 1
	store i64 1, i64* %4174
	%4175 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4172, i64 0, i32 2
	store i64 1, i64* %4175
	%4176 = getelementptr inbounds %Type_Info, %Type_Info* %4159, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4176
	%4177 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%4178 = getelementptr inbounds %Type_Info, %Type_Info* %4177, i64 0, i32 1
	store i64 8, i64* %4178
	%4179 = getelementptr inbounds %Type_Info, %Type_Info* %4177, i64 0, i32 2
	store i64 8, i64* %4179
	; Type_Info_Proc
	%4180 = bitcast %Type_Info* %4177 to %Type_Info.Procedure*
	%4181 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4180, i64 0, i32 2
	%4182 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4180, i64 0, i32 3
	%4183 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4180, i64 0, i32 4
	%4184 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4180, i64 0, i32 5
	%4185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%4186 = bitcast %Type_Info* %4185 to %Type_Info*
	store %Type_Info* %4186, %Type_Info** %4181
	store i1 false, i1* %4183
	store i64 1, i64* %4184
	%4187 = getelementptr inbounds %Type_Info, %Type_Info* %4177, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4187
	%4188 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%4189 = getelementptr inbounds %Type_Info, %Type_Info* %4188, i64 0, i32 1
	store i64 8, i64* %4189
	%4190 = getelementptr inbounds %Type_Info, %Type_Info* %4188, i64 0, i32 2
	store i64 4, i64* %4190
	; Type_Info_Tuple
	%4191 = bitcast %Type_Info* %4188 to %Type_Info.Tuple*
	%4192 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4191, i64 0, i32 2
	%4193 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 213
	%4194 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 213
	%4195 = getelementptr inbounds %Type_Info*, %Type_Info** %4193, i64 0
	%4196 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4196, %Type_Info** %4195
	%4197 = getelementptr inbounds %..string, %..string* %4194, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6ca, i64 0, i32 0), i64 4}, %..string* %4197
	%4198 = getelementptr inbounds %Type_Info*, %Type_Info** %4193, i64 1
	%4199 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4199, %Type_Info** %4198
	%4200 = getelementptr inbounds %..string, %..string* %4194, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6cb, i64 0, i32 0), i64 4}, %..string* %4200
	%4201 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4192, i64 0, i32 0
	%4202 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4201, i64 0, i32 0
	store %Type_Info** %4193, %Type_Info*** %4202
	%4203 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4201, i64 0, i32 1
	store i64 2, i64* %4203
	%4204 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4201, i64 0, i32 2
	store i64 2, i64* %4204
	%4205 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4192, i64 0, i32 1
	%4206 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4205, i64 0, i32 0
	store %..string* %4194, %..string** %4206
	%4207 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4205, i64 0, i32 1
	store i64 2, i64* %4207
	%4208 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4205, i64 0, i32 2
	store i64 2, i64* %4208
	%4209 = getelementptr inbounds %Type_Info, %Type_Info* %4188, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4209
	%4210 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%4211 = getelementptr inbounds %Type_Info, %Type_Info* %4210, i64 0, i32 1
	store i64 8, i64* %4211
	%4212 = getelementptr inbounds %Type_Info, %Type_Info* %4210, i64 0, i32 2
	store i64 8, i64* %4212
	; Type_Info_Proc
	%4213 = bitcast %Type_Info* %4210 to %Type_Info.Procedure*
	%4214 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4213, i64 0, i32 2
	%4215 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4213, i64 0, i32 3
	%4216 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4213, i64 0, i32 4
	%4217 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4213, i64 0, i32 5
	%4218 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4219 = bitcast %Type_Info* %4218 to %Type_Info*
	store %Type_Info* %4219, %Type_Info** %4214
	store i1 false, i1* %4216
	store i64 1, i64* %4217
	%4220 = getelementptr inbounds %Type_Info, %Type_Info* %4210, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4220
	%4221 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4222 = getelementptr inbounds %Type_Info, %Type_Info* %4221, i64 0, i32 1
	store i64 4, i64* %4222
	%4223 = getelementptr inbounds %Type_Info, %Type_Info* %4221, i64 0, i32 2
	store i64 4, i64* %4223
	; Type_Info_Tuple
	%4224 = bitcast %Type_Info* %4221 to %Type_Info.Tuple*
	%4225 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4224, i64 0, i32 2
	%4226 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 215
	%4227 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 215
	%4228 = getelementptr inbounds %Type_Info*, %Type_Info** %4226, i64 0
	%4229 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4229, %Type_Info** %4228
	%4230 = getelementptr inbounds %..string, %..string* %4227, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6cc, i64 0, i32 0), i64 6}, %..string* %4230
	%4231 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4225, i64 0, i32 0
	%4232 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4231, i64 0, i32 0
	store %Type_Info** %4226, %Type_Info*** %4232
	%4233 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4231, i64 0, i32 1
	store i64 1, i64* %4233
	%4234 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4231, i64 0, i32 2
	store i64 1, i64* %4234
	%4235 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4225, i64 0, i32 1
	%4236 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4235, i64 0, i32 0
	store %..string* %4227, %..string** %4236
	%4237 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4235, i64 0, i32 1
	store i64 1, i64* %4237
	%4238 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4235, i64 0, i32 2
	store i64 1, i64* %4238
	%4239 = getelementptr inbounds %Type_Info, %Type_Info* %4221, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4239
	%4240 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%4241 = getelementptr inbounds %Type_Info, %Type_Info* %4240, i64 0, i32 1
	store i64 8, i64* %4241
	%4242 = getelementptr inbounds %Type_Info, %Type_Info* %4240, i64 0, i32 2
	store i64 8, i64* %4242
	; Type_Info_Proc
	%4243 = bitcast %Type_Info* %4240 to %Type_Info.Procedure*
	%4244 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4243, i64 0, i32 2
	%4245 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4243, i64 0, i32 3
	%4246 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4243, i64 0, i32 4
	%4247 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4243, i64 0, i32 5
	%4248 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4249 = bitcast %Type_Info* %4248 to %Type_Info*
	store %Type_Info* %4249, %Type_Info** %4244
	store i1 false, i1* %4246
	store i64 1, i64* %4247
	%4250 = getelementptr inbounds %Type_Info, %Type_Info* %4240, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4250
	%4251 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4252 = getelementptr inbounds %Type_Info, %Type_Info* %4251, i64 0, i32 1
	store i64 4, i64* %4252
	%4253 = getelementptr inbounds %Type_Info, %Type_Info* %4251, i64 0, i32 2
	store i64 4, i64* %4253
	; Type_Info_Tuple
	%4254 = bitcast %Type_Info* %4251 to %Type_Info.Tuple*
	%4255 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4254, i64 0, i32 2
	%4256 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 216
	%4257 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 216
	%4258 = getelementptr inbounds %Type_Info*, %Type_Info** %4256, i64 0
	%4259 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4259, %Type_Info** %4258
	%4260 = getelementptr inbounds %..string, %..string* %4257, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6cd, i64 0, i32 0), i64 3}, %..string* %4260
	%4261 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4255, i64 0, i32 0
	%4262 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4261, i64 0, i32 0
	store %Type_Info** %4256, %Type_Info*** %4262
	%4263 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4261, i64 0, i32 1
	store i64 1, i64* %4263
	%4264 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4261, i64 0, i32 2
	store i64 1, i64* %4264
	%4265 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4255, i64 0, i32 1
	%4266 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4265, i64 0, i32 0
	store %..string* %4257, %..string** %4266
	%4267 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4265, i64 0, i32 1
	store i64 1, i64* %4267
	%4268 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4265, i64 0, i32 2
	store i64 1, i64* %4268
	%4269 = getelementptr inbounds %Type_Info, %Type_Info* %4251, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4269
	%4270 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%4271 = getelementptr inbounds %Type_Info, %Type_Info* %4270, i64 0, i32 1
	store i64 8, i64* %4271
	%4272 = getelementptr inbounds %Type_Info, %Type_Info* %4270, i64 0, i32 2
	store i64 8, i64* %4272
	; Type_Info_Proc
	%4273 = bitcast %Type_Info* %4270 to %Type_Info.Procedure*
	%4274 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4273, i64 0, i32 2
	%4275 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4273, i64 0, i32 3
	%4276 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4273, i64 0, i32 4
	%4277 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4273, i64 0, i32 5
	%4278 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4279 = bitcast %Type_Info* %4278 to %Type_Info*
	store %Type_Info* %4279, %Type_Info** %4274
	store i1 false, i1* %4276
	store i64 1, i64* %4277
	%4280 = getelementptr inbounds %Type_Info, %Type_Info* %4270, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4280
	%4281 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4282 = getelementptr inbounds %Type_Info, %Type_Info* %4281, i64 0, i32 1
	store i64 4, i64* %4282
	%4283 = getelementptr inbounds %Type_Info, %Type_Info* %4281, i64 0, i32 2
	store i64 4, i64* %4283
	; Type_Info_Tuple
	%4284 = bitcast %Type_Info* %4281 to %Type_Info.Tuple*
	%4285 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4284, i64 0, i32 2
	%4286 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 217
	%4287 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 217
	%4288 = getelementptr inbounds %Type_Info*, %Type_Info** %4286, i64 0
	%4289 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4289, %Type_Info** %4288
	%4290 = getelementptr inbounds %..string, %..string* %4287, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6ce, i64 0, i32 0), i64 4}, %..string* %4290
	%4291 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4285, i64 0, i32 0
	%4292 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4291, i64 0, i32 0
	store %Type_Info** %4286, %Type_Info*** %4292
	%4293 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4291, i64 0, i32 1
	store i64 1, i64* %4293
	%4294 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4291, i64 0, i32 2
	store i64 1, i64* %4294
	%4295 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4285, i64 0, i32 1
	%4296 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4295, i64 0, i32 0
	store %..string* %4287, %..string** %4296
	%4297 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4295, i64 0, i32 1
	store i64 1, i64* %4297
	%4298 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4295, i64 0, i32 2
	store i64 1, i64* %4298
	%4299 = getelementptr inbounds %Type_Info, %Type_Info* %4281, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4299
	%4300 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 157
	%4301 = getelementptr inbounds %Type_Info, %Type_Info* %4300, i64 0, i32 1
	store i64 8, i64* %4301
	%4302 = getelementptr inbounds %Type_Info, %Type_Info* %4300, i64 0, i32 2
	store i64 8, i64* %4302
	; Type_Info_Proc
	%4303 = bitcast %Type_Info* %4300 to %Type_Info.Procedure*
	%4304 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4303, i64 0, i32 2
	%4305 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4303, i64 0, i32 3
	%4306 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4303, i64 0, i32 4
	%4307 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4303, i64 0, i32 5
	%4308 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 158
	%4309 = bitcast %Type_Info* %4308 to %Type_Info*
	store %Type_Info* %4309, %Type_Info** %4304
	store i1 false, i1* %4306
	store i64 1, i64* %4307
	%4310 = getelementptr inbounds %Type_Info, %Type_Info* %4300, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4310
	%4311 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 158
	%4312 = getelementptr inbounds %Type_Info, %Type_Info* %4311, i64 0, i32 1
	store i64 16, i64* %4312
	%4313 = getelementptr inbounds %Type_Info, %Type_Info* %4311, i64 0, i32 2
	store i64 8, i64* %4313
	; Type_Info_Tuple
	%4314 = bitcast %Type_Info* %4311 to %Type_Info.Tuple*
	%4315 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4314, i64 0, i32 2
	%4316 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 218
	%4317 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 218
	%4318 = getelementptr inbounds %Type_Info*, %Type_Info** %4316, i64 0
	%4319 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4319, %Type_Info** %4318
	%4320 = getelementptr inbounds %..string, %..string* %4317, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6cf, i64 0, i32 0), i64 7}, %..string* %4320
	%4321 = getelementptr inbounds %Type_Info*, %Type_Info** %4316, i64 1
	%4322 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4322, %Type_Info** %4321
	%4323 = getelementptr inbounds %..string, %..string* %4317, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$6d0, i64 0, i32 0), i64 11}, %..string* %4323
	%4324 = getelementptr inbounds %Type_Info*, %Type_Info** %4316, i64 2
	%4325 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %4325, %Type_Info** %4324
	%4326 = getelementptr inbounds %..string, %..string* %4317, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6d1, i64 0, i32 0), i64 4}, %..string* %4326
	%4327 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4315, i64 0, i32 0
	%4328 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4327, i64 0, i32 0
	store %Type_Info** %4316, %Type_Info*** %4328
	%4329 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4327, i64 0, i32 1
	store i64 3, i64* %4329
	%4330 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4327, i64 0, i32 2
	store i64 3, i64* %4330
	%4331 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4315, i64 0, i32 1
	%4332 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4331, i64 0, i32 0
	store %..string* %4317, %..string** %4332
	%4333 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4331, i64 0, i32 1
	store i64 3, i64* %4333
	%4334 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4331, i64 0, i32 2
	store i64 3, i64* %4334
	%4335 = getelementptr inbounds %Type_Info, %Type_Info* %4311, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4335
	%4336 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4337 = getelementptr inbounds %Type_Info, %Type_Info* %4336, i64 0, i32 1
	store i64 8, i64* %4337
	%4338 = getelementptr inbounds %Type_Info, %Type_Info* %4336, i64 0, i32 2
	store i64 8, i64* %4338
	; Type_Info_Pointer
	%4339 = bitcast %Type_Info* %4336 to %Type_Info.Pointer*
	%4340 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4341 = bitcast %Type_Info* %4340 to %Type_Info*
	%4342 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4339, i64 0, i32 2
	store %Type_Info* %4341, %Type_Info** %4342
	%4343 = getelementptr inbounds %Type_Info, %Type_Info* %4336, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4343
	%4344 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 159
	%4345 = getelementptr inbounds %Type_Info, %Type_Info* %4344, i64 0, i32 1
	store i64 8, i64* %4345
	%4346 = getelementptr inbounds %Type_Info, %Type_Info* %4344, i64 0, i32 2
	store i64 8, i64* %4346
	; Type_Info_Proc
	%4347 = bitcast %Type_Info* %4344 to %Type_Info.Procedure*
	%4348 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4347, i64 0, i32 2
	%4349 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4347, i64 0, i32 3
	%4350 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4347, i64 0, i32 4
	%4351 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4347, i64 0, i32 5
	%4352 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4353 = bitcast %Type_Info* %4352 to %Type_Info*
	store %Type_Info* %4353, %Type_Info** %4348
	%4354 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%4355 = bitcast %Type_Info* %4354 to %Type_Info*
	store %Type_Info* %4355, %Type_Info** %4349
	store i1 false, i1* %4350
	store i64 1, i64* %4351
	%4356 = getelementptr inbounds %Type_Info, %Type_Info* %4344, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4356
	%4357 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4358 = getelementptr inbounds %Type_Info, %Type_Info* %4357, i64 0, i32 1
	store i64 4, i64* %4358
	%4359 = getelementptr inbounds %Type_Info, %Type_Info* %4357, i64 0, i32 2
	store i64 4, i64* %4359
	; Type_Info_Tuple
	%4360 = bitcast %Type_Info* %4357 to %Type_Info.Tuple*
	%4361 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4360, i64 0, i32 2
	%4362 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 221
	%4363 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 221
	%4364 = getelementptr inbounds %Type_Info*, %Type_Info** %4362, i64 0
	%4365 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4365, %Type_Info** %4364
	%4366 = getelementptr inbounds %..string, %..string* %4363, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6d2, i64 0, i32 0), i64 4}, %..string* %4366
	%4367 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4361, i64 0, i32 0
	%4368 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4367, i64 0, i32 0
	store %Type_Info** %4362, %Type_Info*** %4368
	%4369 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4367, i64 0, i32 1
	store i64 1, i64* %4369
	%4370 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4367, i64 0, i32 2
	store i64 1, i64* %4370
	%4371 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4361, i64 0, i32 1
	%4372 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4371, i64 0, i32 0
	store %..string* %4363, %..string** %4372
	%4373 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4371, i64 0, i32 1
	store i64 1, i64* %4373
	%4374 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4371, i64 0, i32 2
	store i64 1, i64* %4374
	%4375 = getelementptr inbounds %Type_Info, %Type_Info* %4357, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4375
	%4376 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%4377 = getelementptr inbounds %Type_Info, %Type_Info* %4376, i64 0, i32 1
	store i64 8, i64* %4377
	%4378 = getelementptr inbounds %Type_Info, %Type_Info* %4376, i64 0, i32 2
	store i64 8, i64* %4378
	; Type_Info_Tuple
	%4379 = bitcast %Type_Info* %4376 to %Type_Info.Tuple*
	%4380 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4379, i64 0, i32 2
	%4381 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 222
	%4382 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 222
	%4383 = getelementptr inbounds %Type_Info*, %Type_Info** %4381, i64 0
	%4384 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %4384, %Type_Info** %4383
	%4385 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4380, i64 0, i32 0
	%4386 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4385, i64 0, i32 0
	store %Type_Info** %4381, %Type_Info*** %4386
	%4387 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4385, i64 0, i32 1
	store i64 1, i64* %4387
	%4388 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4385, i64 0, i32 2
	store i64 1, i64* %4388
	%4389 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4380, i64 0, i32 1
	%4390 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4389, i64 0, i32 0
	store %..string* %4382, %..string** %4390
	%4391 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4389, i64 0, i32 1
	store i64 1, i64* %4391
	%4392 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4389, i64 0, i32 2
	store i64 1, i64* %4392
	%4393 = getelementptr inbounds %Type_Info, %Type_Info* %4376, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4393
	%4394 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4395 = getelementptr inbounds %Type_Info, %Type_Info* %4394, i64 0, i32 1
	store i64 8, i64* %4395
	%4396 = getelementptr inbounds %Type_Info, %Type_Info* %4394, i64 0, i32 2
	store i64 8, i64* %4396
	; Type_Info_Pointer
	%4397 = bitcast %Type_Info* %4394 to %Type_Info.Pointer*
	%4398 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4399 = bitcast %Type_Info* %4398 to %Type_Info*
	%4400 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4397, i64 0, i32 2
	store %Type_Info* %4399, %Type_Info** %4400
	%4401 = getelementptr inbounds %Type_Info, %Type_Info* %4394, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4401
	%4402 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 160
	%4403 = getelementptr inbounds %Type_Info, %Type_Info* %4402, i64 0, i32 1
	store i64 8, i64* %4403
	%4404 = getelementptr inbounds %Type_Info, %Type_Info* %4402, i64 0, i32 2
	store i64 8, i64* %4404
	; Type_Info_Proc
	%4405 = bitcast %Type_Info* %4402 to %Type_Info.Procedure*
	%4406 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4405, i64 0, i32 2
	%4407 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4405, i64 0, i32 3
	%4408 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4405, i64 0, i32 4
	%4409 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4405, i64 0, i32 5
	%4410 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 161
	%4411 = bitcast %Type_Info* %4410 to %Type_Info*
	store %Type_Info* %4411, %Type_Info** %4406
	store i1 false, i1* %4408
	store i64 1, i64* %4409
	%4412 = getelementptr inbounds %Type_Info, %Type_Info* %4402, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4412
	%4413 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 161
	%4414 = getelementptr inbounds %Type_Info, %Type_Info* %4413, i64 0, i32 1
	store i64 40, i64* %4414
	%4415 = getelementptr inbounds %Type_Info, %Type_Info* %4413, i64 0, i32 2
	store i64 8, i64* %4415
	; Type_Info_Tuple
	%4416 = bitcast %Type_Info* %4413 to %Type_Info.Tuple*
	%4417 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4416, i64 0, i32 2
	%4418 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 223
	%4419 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 223
	%4420 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 0
	%4421 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4421, %Type_Info** %4420
	%4422 = getelementptr inbounds %..string, %..string* %4419, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6d3, i64 0, i32 0), i64 6}, %..string* %4422
	%4423 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 1
	%4424 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4424, %Type_Info** %4423
	%4425 = getelementptr inbounds %..string, %..string* %4419, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6d4, i64 0, i32 0), i64 5}, %..string* %4425
	%4426 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 2
	%4427 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4427, %Type_Info** %4426
	%4428 = getelementptr inbounds %..string, %..string* %4419, i64 2
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6d5, i64 0, i32 0), i64 15}, %..string* %4428
	%4429 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 3
	%4430 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4430, %Type_Info** %4429
	%4431 = getelementptr inbounds %..string, %..string* %4419, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6d6, i64 0, i32 0), i64 5}, %..string* %4431
	%4432 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 4
	%4433 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4433, %Type_Info** %4432
	%4434 = getelementptr inbounds %..string, %..string* %4419, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6d7, i64 0, i32 0), i64 6}, %..string* %4434
	%4435 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 5
	%4436 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4436, %Type_Info** %4435
	%4437 = getelementptr inbounds %..string, %..string* %4419, i64 5
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6d8, i64 0, i32 0), i64 6}, %..string* %4437
	%4438 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 6
	%4439 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4439, %Type_Info** %4438
	%4440 = getelementptr inbounds %..string, %..string* %4419, i64 6
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6d9, i64 0, i32 0), i64 6}, %..string* %4440
	%4441 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 7
	%4442 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4442, %Type_Info** %4441
	%4443 = getelementptr inbounds %..string, %..string* %4419, i64 7
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6da, i64 0, i32 0), i64 5}, %..string* %4443
	%4444 = getelementptr inbounds %Type_Info*, %Type_Info** %4418, i64 8
	%4445 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %4445, %Type_Info** %4444
	%4446 = getelementptr inbounds %..string, %..string* %4419, i64 8
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6db, i64 0, i32 0), i64 4}, %..string* %4446
	%4447 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4417, i64 0, i32 0
	%4448 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4447, i64 0, i32 0
	store %Type_Info** %4418, %Type_Info*** %4448
	%4449 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4447, i64 0, i32 1
	store i64 9, i64* %4449
	%4450 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4447, i64 0, i32 2
	store i64 9, i64* %4450
	%4451 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4417, i64 0, i32 1
	%4452 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4451, i64 0, i32 0
	store %..string* %4419, %..string** %4452
	%4453 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4451, i64 0, i32 1
	store i64 9, i64* %4453
	%4454 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4451, i64 0, i32 2
	store i64 9, i64* %4454
	%4455 = getelementptr inbounds %Type_Info, %Type_Info* %4413, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4455
	%4456 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%4457 = getelementptr inbounds %Type_Info, %Type_Info* %4456, i64 0, i32 1
	store i64 8, i64* %4457
	%4458 = getelementptr inbounds %Type_Info, %Type_Info* %4456, i64 0, i32 2
	store i64 8, i64* %4458
	; Type_Info_Proc
	%4459 = bitcast %Type_Info* %4456 to %Type_Info.Procedure*
	%4460 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4459, i64 0, i32 2
	%4461 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4459, i64 0, i32 3
	%4462 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4459, i64 0, i32 4
	%4463 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4459, i64 0, i32 5
	%4464 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%4465 = bitcast %Type_Info* %4464 to %Type_Info*
	store %Type_Info* %4465, %Type_Info** %4460
	store i1 false, i1* %4462
	store i64 1, i64* %4463
	%4466 = getelementptr inbounds %Type_Info, %Type_Info* %4456, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4466
	%4467 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%4468 = getelementptr inbounds %Type_Info, %Type_Info* %4467, i64 0, i32 1
	store i64 12, i64* %4468
	%4469 = getelementptr inbounds %Type_Info, %Type_Info* %4467, i64 0, i32 2
	store i64 4, i64* %4469
	; Type_Info_Tuple
	%4470 = bitcast %Type_Info* %4467 to %Type_Info.Tuple*
	%4471 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4470, i64 0, i32 2
	%4472 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 232
	%4473 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 232
	%4474 = getelementptr inbounds %Type_Info*, %Type_Info** %4472, i64 0
	%4475 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4475, %Type_Info** %4474
	%4476 = getelementptr inbounds %..string, %..string* %4473, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6dc, i64 0, i32 0), i64 6}, %..string* %4476
	%4477 = getelementptr inbounds %Type_Info*, %Type_Info** %4472, i64 1
	%4478 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4478, %Type_Info** %4477
	%4479 = getelementptr inbounds %..string, %..string* %4473, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6dd, i64 0, i32 0), i64 5}, %..string* %4479
	%4480 = getelementptr inbounds %Type_Info*, %Type_Info** %4472, i64 2
	%4481 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4481, %Type_Info** %4480
	%4482 = getelementptr inbounds %..string, %..string* %4473, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6de, i64 0, i32 0), i64 5}, %..string* %4482
	%4483 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4471, i64 0, i32 0
	%4484 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4483, i64 0, i32 0
	store %Type_Info** %4472, %Type_Info*** %4484
	%4485 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4483, i64 0, i32 1
	store i64 3, i64* %4485
	%4486 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4483, i64 0, i32 2
	store i64 3, i64* %4486
	%4487 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4471, i64 0, i32 1
	%4488 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4487, i64 0, i32 0
	store %..string* %4473, %..string** %4488
	%4489 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4487, i64 0, i32 1
	store i64 3, i64* %4489
	%4490 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4487, i64 0, i32 2
	store i64 3, i64* %4490
	%4491 = getelementptr inbounds %Type_Info, %Type_Info* %4467, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4491
	%4492 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%4493 = getelementptr inbounds %Type_Info, %Type_Info* %4492, i64 0, i32 1
	store i64 8, i64* %4493
	%4494 = getelementptr inbounds %Type_Info, %Type_Info* %4492, i64 0, i32 2
	store i64 8, i64* %4494
	; Type_Info_Proc
	%4495 = bitcast %Type_Info* %4492 to %Type_Info.Procedure*
	%4496 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4495, i64 0, i32 2
	%4497 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4495, i64 0, i32 3
	%4498 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4495, i64 0, i32 4
	%4499 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4495, i64 0, i32 5
	%4500 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%4501 = bitcast %Type_Info* %4500 to %Type_Info*
	store %Type_Info* %4501, %Type_Info** %4496
	store i1 false, i1* %4498
	store i64 1, i64* %4499
	%4502 = getelementptr inbounds %Type_Info, %Type_Info* %4492, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4502
	%4503 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%4504 = getelementptr inbounds %Type_Info, %Type_Info* %4503, i64 0, i32 1
	store i64 8, i64* %4504
	%4505 = getelementptr inbounds %Type_Info, %Type_Info* %4503, i64 0, i32 2
	store i64 4, i64* %4505
	; Type_Info_Tuple
	%4506 = bitcast %Type_Info* %4503 to %Type_Info.Tuple*
	%4507 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4506, i64 0, i32 2
	%4508 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 235
	%4509 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 235
	%4510 = getelementptr inbounds %Type_Info*, %Type_Info** %4508, i64 0
	%4511 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4511, %Type_Info** %4510
	%4512 = getelementptr inbounds %..string, %..string* %4509, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6df, i64 0, i32 0), i64 6}, %..string* %4512
	%4513 = getelementptr inbounds %Type_Info*, %Type_Info** %4508, i64 1
	%4514 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %4514, %Type_Info** %4513
	%4515 = getelementptr inbounds %..string, %..string* %4509, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6e0, i64 0, i32 0), i64 7}, %..string* %4515
	%4516 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4507, i64 0, i32 0
	%4517 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4516, i64 0, i32 0
	store %Type_Info** %4508, %Type_Info*** %4517
	%4518 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4516, i64 0, i32 1
	store i64 2, i64* %4518
	%4519 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4516, i64 0, i32 2
	store i64 2, i64* %4519
	%4520 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4507, i64 0, i32 1
	%4521 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4520, i64 0, i32 0
	store %..string* %4509, %..string** %4521
	%4522 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4520, i64 0, i32 1
	store i64 2, i64* %4522
	%4523 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4520, i64 0, i32 2
	store i64 2, i64* %4523
	%4524 = getelementptr inbounds %Type_Info, %Type_Info* %4503, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4524
	%4525 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%4526 = getelementptr inbounds %Type_Info, %Type_Info* %4525, i64 0, i32 1
	store i64 8, i64* %4526
	%4527 = getelementptr inbounds %Type_Info, %Type_Info* %4525, i64 0, i32 2
	store i64 8, i64* %4527
	; Type_Info_Proc
	%4528 = bitcast %Type_Info* %4525 to %Type_Info.Procedure*
	%4529 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4528, i64 0, i32 2
	%4530 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4528, i64 0, i32 3
	%4531 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4528, i64 0, i32 4
	%4532 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4528, i64 0, i32 5
	%4533 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%4534 = bitcast %Type_Info* %4533 to %Type_Info*
	store %Type_Info* %4534, %Type_Info** %4529
	store i1 false, i1* %4531
	store i64 1, i64* %4532
	%4535 = getelementptr inbounds %Type_Info, %Type_Info* %4525, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4535
	%4536 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%4537 = getelementptr inbounds %Type_Info, %Type_Info* %4536, i64 0, i32 1
	store i64 16, i64* %4537
	%4538 = getelementptr inbounds %Type_Info, %Type_Info* %4536, i64 0, i32 2
	store i64 8, i64* %4538
	; Type_Info_Tuple
	%4539 = bitcast %Type_Info* %4536 to %Type_Info.Tuple*
	%4540 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4539, i64 0, i32 2
	%4541 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 237
	%4542 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 237
	%4543 = getelementptr inbounds %Type_Info*, %Type_Info** %4541, i64 0
	%4544 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4544, %Type_Info** %4543
	%4545 = getelementptr inbounds %..string, %..string* %4542, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6e1, i64 0, i32 0), i64 5}, %..string* %4545
	%4546 = getelementptr inbounds %Type_Info*, %Type_Info** %4541, i64 1
	%4547 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %4547, %Type_Info** %4546
	%4548 = getelementptr inbounds %..string, %..string* %4542, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6e2, i64 0, i32 0), i64 6}, %..string* %4548
	%4549 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4540, i64 0, i32 0
	%4550 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4549, i64 0, i32 0
	store %Type_Info** %4541, %Type_Info*** %4550
	%4551 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4549, i64 0, i32 1
	store i64 2, i64* %4551
	%4552 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4549, i64 0, i32 2
	store i64 2, i64* %4552
	%4553 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4540, i64 0, i32 1
	%4554 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4553, i64 0, i32 0
	store %..string* %4542, %..string** %4554
	%4555 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4553, i64 0, i32 1
	store i64 2, i64* %4555
	%4556 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4553, i64 0, i32 2
	store i64 2, i64* %4556
	%4557 = getelementptr inbounds %Type_Info, %Type_Info* %4536, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4557
	%4558 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%4559 = getelementptr inbounds %Type_Info, %Type_Info* %4558, i64 0, i32 1
	store i64 8, i64* %4559
	%4560 = getelementptr inbounds %Type_Info, %Type_Info* %4558, i64 0, i32 2
	store i64 8, i64* %4560
	; Type_Info_Pointer
	%4561 = bitcast %Type_Info* %4558 to %Type_Info.Pointer*
	%4562 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%4563 = bitcast %Type_Info* %4562 to %Type_Info*
	%4564 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4561, i64 0, i32 2
	store %Type_Info* %4563, %Type_Info** %4564
	%4565 = getelementptr inbounds %Type_Info, %Type_Info* %4558, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4565
	%4566 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%4567 = getelementptr inbounds %Type_Info, %Type_Info* %4566, i64 0, i32 1
	store i64 8, i64* %4567
	%4568 = getelementptr inbounds %Type_Info, %Type_Info* %4566, i64 0, i32 2
	store i64 8, i64* %4568
	; Type_Info_Proc
	%4569 = bitcast %Type_Info* %4566 to %Type_Info.Procedure*
	%4570 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4569, i64 0, i32 2
	%4571 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4569, i64 0, i32 3
	%4572 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4569, i64 0, i32 4
	%4573 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4569, i64 0, i32 5
	%4574 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%4575 = bitcast %Type_Info* %4574 to %Type_Info*
	store %Type_Info* %4575, %Type_Info** %4570
	store i1 false, i1* %4572
	store i64 1, i64* %4573
	%4576 = getelementptr inbounds %Type_Info, %Type_Info* %4566, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4576
	%4577 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%4578 = getelementptr inbounds %Type_Info, %Type_Info* %4577, i64 0, i32 1
	store i64 8, i64* %4578
	%4579 = getelementptr inbounds %Type_Info, %Type_Info* %4577, i64 0, i32 2
	store i64 4, i64* %4579
	; Type_Info_Tuple
	%4580 = bitcast %Type_Info* %4577 to %Type_Info.Tuple*
	%4581 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4580, i64 0, i32 2
	%4582 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 239
	%4583 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 239
	%4584 = getelementptr inbounds %Type_Info*, %Type_Info** %4582, i64 0
	%4585 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4585, %Type_Info** %4584
	%4586 = getelementptr inbounds %..string, %..string* %4583, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6e3, i64 0, i32 0), i64 7}, %..string* %4586
	%4587 = getelementptr inbounds %Type_Info*, %Type_Info** %4582, i64 1
	%4588 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4588, %Type_Info** %4587
	%4589 = getelementptr inbounds %..string, %..string* %4583, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6e4, i64 0, i32 0), i64 7}, %..string* %4589
	%4590 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4581, i64 0, i32 0
	%4591 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4590, i64 0, i32 0
	store %Type_Info** %4582, %Type_Info*** %4591
	%4592 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4590, i64 0, i32 1
	store i64 2, i64* %4592
	%4593 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4590, i64 0, i32 2
	store i64 2, i64* %4593
	%4594 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4581, i64 0, i32 1
	%4595 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4594, i64 0, i32 0
	store %..string* %4583, %..string** %4595
	%4596 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4594, i64 0, i32 1
	store i64 2, i64* %4596
	%4597 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4594, i64 0, i32 2
	store i64 2, i64* %4597
	%4598 = getelementptr inbounds %Type_Info, %Type_Info* %4577, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4598
	%4599 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 162
	%4600 = getelementptr inbounds %Type_Info, %Type_Info* %4599, i64 0, i32 1
	store i64 8, i64* %4600
	%4601 = getelementptr inbounds %Type_Info, %Type_Info* %4599, i64 0, i32 2
	store i64 8, i64* %4601
	; Type_Info_Proc
	%4602 = bitcast %Type_Info* %4599 to %Type_Info.Procedure*
	%4603 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4602, i64 0, i32 2
	%4604 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4602, i64 0, i32 3
	%4605 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4602, i64 0, i32 4
	%4606 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4602, i64 0, i32 5
	%4607 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 163
	%4608 = bitcast %Type_Info* %4607 to %Type_Info*
	store %Type_Info* %4608, %Type_Info** %4603
	store i1 false, i1* %4605
	store i64 1, i64* %4606
	%4609 = getelementptr inbounds %Type_Info, %Type_Info* %4599, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4609
	%4610 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 163
	%4611 = getelementptr inbounds %Type_Info, %Type_Info* %4610, i64 0, i32 1
	store i64 16, i64* %4611
	%4612 = getelementptr inbounds %Type_Info, %Type_Info* %4610, i64 0, i32 2
	store i64 8, i64* %4612
	; Type_Info_Tuple
	%4613 = bitcast %Type_Info* %4610 to %Type_Info.Tuple*
	%4614 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4613, i64 0, i32 2
	%4615 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 241
	%4616 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 241
	%4617 = getelementptr inbounds %Type_Info*, %Type_Info** %4615, i64 0
	%4618 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4618, %Type_Info** %4617
	%4619 = getelementptr inbounds %..string, %..string* %4616, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6e5, i64 0, i32 0), i64 4}, %..string* %4619
	%4620 = getelementptr inbounds %Type_Info*, %Type_Info** %4615, i64 1
	%4621 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	store %Type_Info* %4621, %Type_Info** %4620
	%4622 = getelementptr inbounds %..string, %..string* %4616, i64 1
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$6e6, i64 0, i32 0), i64 1}, %..string* %4622
	%4623 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4614, i64 0, i32 0
	%4624 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4623, i64 0, i32 0
	store %Type_Info** %4615, %Type_Info*** %4624
	%4625 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4623, i64 0, i32 1
	store i64 2, i64* %4625
	%4626 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4623, i64 0, i32 2
	store i64 2, i64* %4626
	%4627 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4614, i64 0, i32 1
	%4628 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4627, i64 0, i32 0
	store %..string* %4616, %..string** %4628
	%4629 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4627, i64 0, i32 1
	store i64 2, i64* %4629
	%4630 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4627, i64 0, i32 2
	store i64 2, i64* %4630
	%4631 = getelementptr inbounds %Type_Info, %Type_Info* %4610, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4631
	%4632 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%4633 = getelementptr inbounds %Type_Info, %Type_Info* %4632, i64 0, i32 1
	store i64 8, i64* %4633
	%4634 = getelementptr inbounds %Type_Info, %Type_Info* %4632, i64 0, i32 2
	store i64 8, i64* %4634
	; Type_Info_Pointer
	%4635 = bitcast %Type_Info* %4632 to %Type_Info.Pointer*
	%4636 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4637 = bitcast %Type_Info* %4636 to %Type_Info*
	%4638 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4635, i64 0, i32 2
	store %Type_Info* %4637, %Type_Info** %4638
	%4639 = getelementptr inbounds %Type_Info, %Type_Info* %4632, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4639
	%4640 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%4641 = getelementptr inbounds %Type_Info, %Type_Info* %4640, i64 0, i32 1
	store i64 8, i64* %4641
	%4642 = getelementptr inbounds %Type_Info, %Type_Info* %4640, i64 0, i32 2
	store i64 8, i64* %4642
	; Type_Info_Proc
	%4643 = bitcast %Type_Info* %4640 to %Type_Info.Procedure*
	%4644 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4643, i64 0, i32 2
	%4645 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4643, i64 0, i32 3
	%4646 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4643, i64 0, i32 4
	%4647 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4643, i64 0, i32 5
	%4648 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4649 = bitcast %Type_Info* %4648 to %Type_Info*
	store %Type_Info* %4649, %Type_Info** %4644
	store i1 false, i1* %4646
	store i64 1, i64* %4647
	%4650 = getelementptr inbounds %Type_Info, %Type_Info* %4640, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4650
	%4651 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4652 = getelementptr inbounds %Type_Info, %Type_Info* %4651, i64 0, i32 1
	store i64 4, i64* %4652
	%4653 = getelementptr inbounds %Type_Info, %Type_Info* %4651, i64 0, i32 2
	store i64 4, i64* %4653
	; Type_Info_Tuple
	%4654 = bitcast %Type_Info* %4651 to %Type_Info.Tuple*
	%4655 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4654, i64 0, i32 2
	%4656 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 243
	%4657 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 243
	%4658 = getelementptr inbounds %Type_Info*, %Type_Info** %4656, i64 0
	%4659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4659, %Type_Info** %4658
	%4660 = getelementptr inbounds %..string, %..string* %4657, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6e7, i64 0, i32 0), i64 3}, %..string* %4660
	%4661 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4655, i64 0, i32 0
	%4662 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4661, i64 0, i32 0
	store %Type_Info** %4656, %Type_Info*** %4662
	%4663 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4661, i64 0, i32 1
	store i64 1, i64* %4663
	%4664 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4661, i64 0, i32 2
	store i64 1, i64* %4664
	%4665 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4655, i64 0, i32 1
	%4666 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4665, i64 0, i32 0
	store %..string* %4657, %..string** %4666
	%4667 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4665, i64 0, i32 1
	store i64 1, i64* %4667
	%4668 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4665, i64 0, i32 2
	store i64 1, i64* %4668
	%4669 = getelementptr inbounds %Type_Info, %Type_Info* %4651, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4669
	%4670 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%4671 = getelementptr inbounds %Type_Info, %Type_Info* %4670, i64 0, i32 1
	store i64 8, i64* %4671
	%4672 = getelementptr inbounds %Type_Info, %Type_Info* %4670, i64 0, i32 2
	store i64 8, i64* %4672
	; Type_Info_Proc
	%4673 = bitcast %Type_Info* %4670 to %Type_Info.Procedure*
	%4674 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4673, i64 0, i32 2
	%4675 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4673, i64 0, i32 3
	%4676 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4673, i64 0, i32 4
	%4677 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4673, i64 0, i32 5
	%4678 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4679 = bitcast %Type_Info* %4678 to %Type_Info*
	store %Type_Info* %4679, %Type_Info** %4674
	store i1 false, i1* %4676
	store i64 1, i64* %4677
	%4680 = getelementptr inbounds %Type_Info, %Type_Info* %4670, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4680
	%4681 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%4682 = getelementptr inbounds %Type_Info, %Type_Info* %4681, i64 0, i32 1
	store i64 4, i64* %4682
	%4683 = getelementptr inbounds %Type_Info, %Type_Info* %4681, i64 0, i32 2
	store i64 4, i64* %4683
	; Type_Info_Tuple
	%4684 = bitcast %Type_Info* %4681 to %Type_Info.Tuple*
	%4685 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %4684, i64 0, i32 2
	%4686 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 244
	%4687 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 244
	%4688 = getelementptr inbounds %Type_Info*, %Type_Info** %4686, i64 0
	%4689 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4689, %Type_Info** %4688
	%4690 = getelementptr inbounds %..string, %..string* %4687, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6e8, i64 0, i32 0), i64 4}, %..string* %4690
	%4691 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4685, i64 0, i32 0
	%4692 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4691, i64 0, i32 0
	store %Type_Info** %4686, %Type_Info*** %4692
	%4693 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4691, i64 0, i32 1
	store i64 1, i64* %4693
	%4694 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4691, i64 0, i32 2
	store i64 1, i64* %4694
	%4695 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4685, i64 0, i32 1
	%4696 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4695, i64 0, i32 0
	store %..string* %4687, %..string** %4696
	%4697 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4695, i64 0, i32 1
	store i64 1, i64* %4697
	%4698 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4695, i64 0, i32 2
	store i64 1, i64* %4698
	%4699 = getelementptr inbounds %Type_Info, %Type_Info* %4681, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %4699
	%4700 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 164
	%4701 = getelementptr inbounds %Type_Info, %Type_Info* %4700, i64 0, i32 1
	store i64 256, i64* %4701
	%4702 = getelementptr inbounds %Type_Info, %Type_Info* %4700, i64 0, i32 2
	store i64 8, i64* %4702
	; Type_Info_Named
	%4703 = bitcast %Type_Info* %4700 to %Type_Info.Named*
	%4704 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 165
	%4705 = bitcast %Type_Info* %4704 to %Type_Info*
	%4706 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4703, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6e9, i64 0, i32 0), i64 6}, %..string* %4706
	%4707 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4703, i64 0, i32 3
	store %Type_Info* %4705, %Type_Info** %4707
	%4708 = getelementptr inbounds %Type_Info, %Type_Info* %4700, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %4708
	%4709 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 165
	%4710 = getelementptr inbounds %Type_Info, %Type_Info* %4709, i64 0, i32 1
	store i64 256, i64* %4710
	%4711 = getelementptr inbounds %Type_Info, %Type_Info* %4709, i64 0, i32 2
	store i64 8, i64* %4711
	; Type_Info_Struct
	%4712 = bitcast %Type_Info* %4709 to %Type_Info.Struct*
	%4713 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %4712, i64 0, i32 2
	%4714 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 4
	store i1 false, i1* %4714
	%4715 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 5
	store i1 false, i1* %4715
	%4716 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 6
	store i1 false, i1* %4716
	%4717 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 245
	%4718 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 245
	%4719 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 88
	%4720 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 84
	%4721 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 178
	%4722 = bitcast %Type_Info* %4721 to %Type_Info*
	%4723 = getelementptr inbounds %Type_Info*, %Type_Info** %4717, i64 0
	%4724 = getelementptr inbounds i64, i64* %4719, i64 0
	%4725 = getelementptr inbounds i1, i1* %4720, i64 0
	%4726 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 178
	store %Type_Info* %4726, %Type_Info** %4723
	%4727 = getelementptr inbounds %..string, %..string* %4718, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6ea, i64 0, i32 0), i64 9}, %..string* %4727
	store i64 184, i64* %4724
	store i1 false, i1* %4725
	%4728 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 179
	%4729 = bitcast %Type_Info* %4728 to %Type_Info*
	%4730 = getelementptr inbounds %Type_Info*, %Type_Info** %4717, i64 1
	%4731 = getelementptr inbounds i64, i64* %4719, i64 1
	%4732 = getelementptr inbounds i1, i1* %4720, i64 1
	%4733 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 179
	store %Type_Info* %4733, %Type_Info** %4730
	%4734 = getelementptr inbounds %..string, %..string* %4718, i64 1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6eb, i64 0, i32 0), i64 12}, %..string* %4734
	store i64 192, i64* %4731
	store i1 false, i1* %4732
	%4735 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 180
	%4736 = bitcast %Type_Info* %4735 to %Type_Info*
	%4737 = getelementptr inbounds %Type_Info*, %Type_Info** %4717, i64 2
	%4738 = getelementptr inbounds i64, i64* %4719, i64 2
	%4739 = getelementptr inbounds i1, i1* %4720, i64 2
	%4740 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 180
	store %Type_Info* %4740, %Type_Info** %4737
	%4741 = getelementptr inbounds %..string, %..string* %4718, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6ec, i64 0, i32 0), i64 9}, %..string* %4741
	store i64 200, i64* %4738
	store i1 false, i1* %4739
	%4742 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4743 = bitcast %Type_Info* %4742 to %Type_Info*
	%4744 = getelementptr inbounds %Type_Info*, %Type_Info** %4717, i64 3
	%4745 = getelementptr inbounds i64, i64* %4719, i64 3
	%4746 = getelementptr inbounds i1, i1* %4720, i64 3
	%4747 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	store %Type_Info* %4747, %Type_Info** %4744
	%4748 = getelementptr inbounds %..string, %..string* %4718, i64 3
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6ed, i64 0, i32 0), i64 3}, %..string* %4748
	store i64 0, i64* %4745
	store i1 false, i1* %4746
	%4749 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 181
	%4750 = bitcast %Type_Info* %4749 to %Type_Info*
	%4751 = getelementptr inbounds %Type_Info*, %Type_Info** %4717, i64 4
	%4752 = getelementptr inbounds i64, i64* %4719, i64 4
	%4753 = getelementptr inbounds i1, i1* %4720, i64 4
	%4754 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 181
	store %Type_Info* %4754, %Type_Info** %4751
	%4755 = getelementptr inbounds %..string, %..string* %4718, i64 4
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6ee, i64 0, i32 0), i64 15}, %..string* %4755
	store i64 208, i64* %4752
	store i1 false, i1* %4753
	%4756 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 0
	%4757 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4756, i64 0, i32 0
	store %Type_Info** %4717, %Type_Info*** %4757
	%4758 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4756, i64 0, i32 1
	store i64 5, i64* %4758
	%4759 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4756, i64 0, i32 2
	store i64 5, i64* %4759
	%4760 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 1
	%4761 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4760, i64 0, i32 0
	store %..string* %4718, %..string** %4761
	%4762 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4760, i64 0, i32 1
	store i64 5, i64* %4762
	%4763 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4760, i64 0, i32 2
	store i64 5, i64* %4763
	%4764 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 2
	%4765 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4764, i64 0, i32 0
	store i64* %4719, i64** %4765
	%4766 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4764, i64 0, i32 1
	store i64 5, i64* %4766
	%4767 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4764, i64 0, i32 2
	store i64 5, i64* %4767
	%4768 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4713, i64 0, i32 3
	%4769 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4768, i64 0, i32 0
	store i1* %4720, i1** %4769
	%4770 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4768, i64 0, i32 1
	store i64 5, i64* %4770
	%4771 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4768, i64 0, i32 2
	store i64 5, i64* %4771
	%4772 = getelementptr inbounds %Type_Info, %Type_Info* %4709, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %4772
	%4773 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4774 = getelementptr inbounds %Type_Info, %Type_Info* %4773, i64 0, i32 1
	store i64 184, i64* %4774
	%4775 = getelementptr inbounds %Type_Info, %Type_Info* %4773, i64 0, i32 2
	store i64 8, i64* %4775
	; Type_Info_Named
	%4776 = bitcast %Type_Info* %4773 to %Type_Info.Named*
	%4777 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4778 = bitcast %Type_Info* %4777 to %Type_Info*
	%4779 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4776, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6ef, i64 0, i32 0), i64 12}, %..string* %4779
	%4780 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4776, i64 0, i32 3
	store %Type_Info* %4778, %Type_Info** %4780
	%4781 = getelementptr inbounds %Type_Info, %Type_Info* %4773, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %4781
	%4782 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4783 = getelementptr inbounds %Type_Info, %Type_Info* %4782, i64 0, i32 1
	store i64 184, i64* %4783
	%4784 = getelementptr inbounds %Type_Info, %Type_Info* %4782, i64 0, i32 2
	store i64 8, i64* %4784
	; Type_Info_Struct
	%4785 = bitcast %Type_Info* %4782 to %Type_Info.Struct*
	%4786 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %4785, i64 0, i32 2
	%4787 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 4
	store i1 false, i1* %4787
	%4788 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 5
	store i1 false, i1* %4788
	%4789 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 6
	store i1 false, i1* %4789
	%4790 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 250
	%4791 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 250
	%4792 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 93
	%4793 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 89
	%4794 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 177
	%4795 = bitcast %Type_Info* %4794 to %Type_Info*
	%4796 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 0
	%4797 = getelementptr inbounds i64, i64* %4792, i64 0
	%4798 = getelementptr inbounds i1, i1* %4793, i64 0
	%4799 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 177
	store %Type_Info* %4799, %Type_Info** %4796
	%4800 = getelementptr inbounds %..string, %..string* %4791, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6f0, i64 0, i32 0), i64 3}, %..string* %4800
	store i64 144, i64* %4797
	store i1 false, i1* %4798
	%4801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4802 = bitcast %Type_Info* %4801 to %Type_Info*
	%4803 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 1
	%4804 = getelementptr inbounds i64, i64* %4792, i64 1
	%4805 = getelementptr inbounds i1, i1* %4793, i64 1
	%4806 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4806, %Type_Info** %4803
	%4807 = getelementptr inbounds %..string, %..string* %4791, i64 1
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6f1, i64 0, i32 0), i64 15}, %..string* %4807
	store i64 152, i64* %4804
	store i1 false, i1* %4805
	%4808 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4809 = bitcast %Type_Info* %4808 to %Type_Info*
	%4810 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 2
	%4811 = getelementptr inbounds i64, i64* %4792, i64 2
	%4812 = getelementptr inbounds i1, i1* %4793, i64 2
	%4813 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4813, %Type_Info** %4810
	%4814 = getelementptr inbounds %..string, %..string* %4791, i64 2
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6f2, i64 0, i32 0), i64 15}, %..string* %4814
	store i64 156, i64* %4811
	store i1 false, i1* %4812
	%4815 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4816 = bitcast %Type_Info* %4815 to %Type_Info*
	%4817 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 3
	%4818 = getelementptr inbounds i64, i64* %4792, i64 3
	%4819 = getelementptr inbounds i1, i1* %4793, i64 3
	%4820 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4820, %Type_Info** %4817
	%4821 = getelementptr inbounds %..string, %..string* %4791, i64 3
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6f3, i64 0, i32 0), i64 15}, %..string* %4821
	store i64 160, i64* %4818
	store i1 false, i1* %4819
	%4822 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4823 = bitcast %Type_Info* %4822 to %Type_Info*
	%4824 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 4
	%4825 = getelementptr inbounds i64, i64* %4792, i64 4
	%4826 = getelementptr inbounds i1, i1* %4793, i64 4
	%4827 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4827, %Type_Info** %4824
	%4828 = getelementptr inbounds %..string, %..string* %4791, i64 4
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$6f4, i64 0, i32 0), i64 15}, %..string* %4828
	store i64 164, i64* %4825
	store i1 false, i1* %4826
	%4829 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4830 = bitcast %Type_Info* %4829 to %Type_Info*
	%4831 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 5
	%4832 = getelementptr inbounds i64, i64* %4792, i64 5
	%4833 = getelementptr inbounds i1, i1* %4793, i64 5
	%4834 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %4834, %Type_Info** %4831
	%4835 = getelementptr inbounds %..string, %..string* %4791, i64 5
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6f5, i64 0, i32 0), i64 13}, %..string* %4835
	store i64 80, i64* %4832
	store i1 false, i1* %4833
	%4836 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4837 = bitcast %Type_Info* %4836 to %Type_Info*
	%4838 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 6
	%4839 = getelementptr inbounds i64, i64* %4792, i64 6
	%4840 = getelementptr inbounds i1, i1* %4793, i64 6
	%4841 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %4841, %Type_Info** %4838
	%4842 = getelementptr inbounds %..string, %..string* %4791, i64 6
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$6f6, i64 0, i32 0), i64 17}, %..string* %4842
	store i64 96, i64* %4839
	store i1 false, i1* %4840
	%4843 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4844 = bitcast %Type_Info* %4843 to %Type_Info*
	%4845 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 7
	%4846 = getelementptr inbounds i64, i64* %4792, i64 7
	%4847 = getelementptr inbounds i1, i1* %4793, i64 7
	%4848 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %4848, %Type_Info** %4845
	%4849 = getelementptr inbounds %..string, %..string* %4791, i64 7
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6f7, i64 0, i32 0), i64 12}, %..string* %4849
	store i64 112, i64* %4846
	store i1 false, i1* %4847
	%4850 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4851 = bitcast %Type_Info* %4850 to %Type_Info*
	%4852 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 8
	%4853 = getelementptr inbounds i64, i64* %4792, i64 8
	%4854 = getelementptr inbounds i1, i1* %4793, i64 8
	%4855 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %4855, %Type_Info** %4852
	%4856 = getelementptr inbounds %..string, %..string* %4791, i64 8
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$6f8, i64 0, i32 0), i64 14}, %..string* %4856
	store i64 128, i64* %4853
	store i1 false, i1* %4854
	%4857 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4858 = bitcast %Type_Info* %4857 to %Type_Info*
	%4859 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 9
	%4860 = getelementptr inbounds i64, i64* %4792, i64 9
	%4861 = getelementptr inbounds i1, i1* %4793, i64 9
	%4862 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4862, %Type_Info** %4859
	%4863 = getelementptr inbounds %..string, %..string* %4791, i64 9
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6f9, i64 0, i32 0), i64 12}, %..string* %4863
	store i64 168, i64* %4860
	store i1 false, i1* %4861
	%4864 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4865 = bitcast %Type_Info* %4864 to %Type_Info*
	%4866 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 10
	%4867 = getelementptr inbounds i64, i64* %4792, i64 10
	%4868 = getelementptr inbounds i1, i1* %4793, i64 10
	%4869 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4869, %Type_Info** %4866
	%4870 = getelementptr inbounds %..string, %..string* %4791, i64 10
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6fa, i64 0, i32 0), i64 13}, %..string* %4870
	store i64 172, i64* %4867
	store i1 false, i1* %4868
	%4871 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	%4872 = bitcast %Type_Info* %4871 to %Type_Info*
	%4873 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 11
	%4874 = getelementptr inbounds i64, i64* %4792, i64 11
	%4875 = getelementptr inbounds i1, i1* %4793, i64 11
	%4876 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	store %Type_Info* %4876, %Type_Info** %4873
	%4877 = getelementptr inbounds %..string, %..string* %4791, i64 11
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$6fb, i64 0, i32 0), i64 10}, %..string* %4877
	store i64 0, i64* %4874
	store i1 false, i1* %4875
	%4878 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%4879 = bitcast %Type_Info* %4878 to %Type_Info*
	%4880 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 12
	%4881 = getelementptr inbounds i64, i64* %4792, i64 12
	%4882 = getelementptr inbounds i1, i1* %4793, i64 12
	%4883 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %4883, %Type_Info** %4880
	%4884 = getelementptr inbounds %..string, %..string* %4791, i64 12
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$6fc, i64 0, i32 0), i64 16}, %..string* %4884
	store i64 176, i64* %4881
	store i1 false, i1* %4882
	%4885 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	%4886 = bitcast %Type_Info* %4885 to %Type_Info*
	%4887 = getelementptr inbounds %Type_Info*, %Type_Info** %4790, i64 13
	%4888 = getelementptr inbounds i64, i64* %4792, i64 13
	%4889 = getelementptr inbounds i1, i1* %4793, i64 13
	%4890 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	store %Type_Info* %4890, %Type_Info** %4887
	%4891 = getelementptr inbounds %..string, %..string* %4791, i64 13
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6fd, i64 0, i32 0), i64 13}, %..string* %4891
	store i64 40, i64* %4888
	store i1 false, i1* %4889
	%4892 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 0
	%4893 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4892, i64 0, i32 0
	store %Type_Info** %4790, %Type_Info*** %4893
	%4894 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4892, i64 0, i32 1
	store i64 14, i64* %4894
	%4895 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4892, i64 0, i32 2
	store i64 14, i64* %4895
	%4896 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 1
	%4897 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4896, i64 0, i32 0
	store %..string* %4791, %..string** %4897
	%4898 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4896, i64 0, i32 1
	store i64 14, i64* %4898
	%4899 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4896, i64 0, i32 2
	store i64 14, i64* %4899
	%4900 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 2
	%4901 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4900, i64 0, i32 0
	store i64* %4792, i64** %4901
	%4902 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4900, i64 0, i32 1
	store i64 14, i64* %4902
	%4903 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4900, i64 0, i32 2
	store i64 14, i64* %4903
	%4904 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4786, i64 0, i32 3
	%4905 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4904, i64 0, i32 0
	store i1* %4793, i1** %4905
	%4906 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4904, i64 0, i32 1
	store i64 14, i64* %4906
	%4907 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4904, i64 0, i32 2
	store i64 14, i64* %4907
	%4908 = getelementptr inbounds %Type_Info, %Type_Info* %4782, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %4908
	%4909 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	%4910 = getelementptr inbounds %Type_Info, %Type_Info* %4909, i64 0, i32 1
	store i64 40, i64* %4910
	%4911 = getelementptr inbounds %Type_Info, %Type_Info* %4909, i64 0, i32 2
	store i64 8, i64* %4911
	; Type_Info_DynamicArray
	%4912 = bitcast %Type_Info* %4909 to %Type_Info.Dynamic_Array*
	%4913 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4914 = bitcast %Type_Info* %4913 to %Type_Info*
	%4915 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %4912, i64 0, i32 2
	store %Type_Info* %4914, %Type_Info** %4915
	%4916 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %4912, i64 0, i32 3
	store i64 16, i64* %4916
	%4917 = getelementptr inbounds %Type_Info, %Type_Info* %4909, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %4917
	%4918 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%4919 = getelementptr inbounds %Type_Info, %Type_Info* %4918, i64 0, i32 1
	store i64 8, i64* %4919
	%4920 = getelementptr inbounds %Type_Info, %Type_Info* %4918, i64 0, i32 2
	store i64 8, i64* %4920
	; Type_Info_Pointer
	%4921 = bitcast %Type_Info* %4918 to %Type_Info.Pointer*
	%4922 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4923 = bitcast %Type_Info* %4922 to %Type_Info*
	%4924 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %4921, i64 0, i32 2
	store %Type_Info* %4923, %Type_Info** %4924
	%4925 = getelementptr inbounds %Type_Info, %Type_Info* %4918, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %4925
	%4926 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 169
	%4927 = getelementptr inbounds %Type_Info, %Type_Info* %4926, i64 0, i32 1
	store i64 16, i64* %4927
	%4928 = getelementptr inbounds %Type_Info, %Type_Info* %4926, i64 0, i32 2
	store i64 8, i64* %4928
	; Type_Info_Named
	%4929 = bitcast %Type_Info* %4926 to %Type_Info.Named*
	%4930 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 170
	%4931 = bitcast %Type_Info* %4930 to %Type_Info*
	%4932 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4929, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6fe, i64 0, i32 0), i64 9}, %..string* %4932
	%4933 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4929, i64 0, i32 3
	store %Type_Info* %4931, %Type_Info** %4933
	%4934 = getelementptr inbounds %Type_Info, %Type_Info* %4926, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %4934
	%4935 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 170
	%4936 = getelementptr inbounds %Type_Info, %Type_Info* %4935, i64 0, i32 1
	store i64 16, i64* %4936
	%4937 = getelementptr inbounds %Type_Info, %Type_Info* %4935, i64 0, i32 2
	store i64 8, i64* %4937
	; Type_Info_Struct
	%4938 = bitcast %Type_Info* %4935 to %Type_Info.Struct*
	%4939 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %4938, i64 0, i32 2
	%4940 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 4
	store i1 false, i1* %4940
	%4941 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 5
	store i1 true, i1* %4941
	%4942 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 6
	store i1 false, i1* %4942
	%4943 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 264
	%4944 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 264
	%4945 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 107
	%4946 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 103
	%4947 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 171
	%4948 = bitcast %Type_Info* %4947 to %Type_Info*
	%4949 = getelementptr inbounds %Type_Info*, %Type_Info** %4943, i64 0
	%4950 = getelementptr inbounds i64, i64* %4945, i64 0
	%4951 = getelementptr inbounds i1, i1* %4946, i64 0
	%4952 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 171
	store %Type_Info* %4952, %Type_Info** %4949
	%4953 = getelementptr inbounds %..string, %..string* %4944, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6ff, i64 0, i32 0), i64 9}, %..string* %4953
	store i64 0, i64* %4950
	store i1 false, i1* %4951
	%4954 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%4955 = bitcast %Type_Info* %4954 to %Type_Info*
	%4956 = getelementptr inbounds %Type_Info*, %Type_Info** %4943, i64 1
	%4957 = getelementptr inbounds i64, i64* %4945, i64 1
	%4958 = getelementptr inbounds i1, i1* %4946, i64 1
	%4959 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %4959, %Type_Info** %4956
	%4960 = getelementptr inbounds %..string, %..string* %4944, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$700, i64 0, i32 0), i64 4}, %..string* %4960
	store i64 8, i64* %4957
	store i1 false, i1* %4958
	%4961 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 0
	%4962 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4961, i64 0, i32 0
	store %Type_Info** %4943, %Type_Info*** %4962
	%4963 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4961, i64 0, i32 1
	store i64 2, i64* %4963
	%4964 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %4961, i64 0, i32 2
	store i64 2, i64* %4964
	%4965 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 1
	%4966 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4965, i64 0, i32 0
	store %..string* %4944, %..string** %4966
	%4967 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4965, i64 0, i32 1
	store i64 2, i64* %4967
	%4968 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %4965, i64 0, i32 2
	store i64 2, i64* %4968
	%4969 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 2
	%4970 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4969, i64 0, i32 0
	store i64* %4945, i64** %4970
	%4971 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4969, i64 0, i32 1
	store i64 2, i64* %4971
	%4972 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %4969, i64 0, i32 2
	store i64 2, i64* %4972
	%4973 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %4939, i64 0, i32 3
	%4974 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4973, i64 0, i32 0
	store i1* %4946, i1** %4974
	%4975 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4973, i64 0, i32 1
	store i64 2, i64* %4975
	%4976 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %4973, i64 0, i32 2
	store i64 2, i64* %4976
	%4977 = getelementptr inbounds %Type_Info, %Type_Info* %4935, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %4977
	%4978 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 171
	%4979 = getelementptr inbounds %Type_Info, %Type_Info* %4978, i64 0, i32 1
	store i64 8, i64* %4979
	%4980 = getelementptr inbounds %Type_Info, %Type_Info* %4978, i64 0, i32 2
	store i64 8, i64* %4980
	; Type_Info_Named
	%4981 = bitcast %Type_Info* %4978 to %Type_Info.Named*
	%4982 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 172
	%4983 = bitcast %Type_Info* %4982 to %Type_Info*
	%4984 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4981, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$701, i64 0, i32 0), i64 14}, %..string* %4984
	%4985 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %4981, i64 0, i32 3
	store %Type_Info* %4983, %Type_Info** %4985
	%4986 = getelementptr inbounds %Type_Info, %Type_Info* %4978, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %4986
	%4987 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 172
	%4988 = getelementptr inbounds %Type_Info, %Type_Info* %4987, i64 0, i32 1
	store i64 8, i64* %4988
	%4989 = getelementptr inbounds %Type_Info, %Type_Info* %4987, i64 0, i32 2
	store i64 8, i64* %4989
	; Type_Info_Proc
	%4990 = bitcast %Type_Info* %4987 to %Type_Info.Procedure*
	%4991 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4990, i64 0, i32 2
	%4992 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4990, i64 0, i32 3
	%4993 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4990, i64 0, i32 4
	%4994 = getelementptr inbounds %Type_Info.Procedure, %Type_Info.Procedure* %4990, i64 0, i32 5
	%4995 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 173
	%4996 = bitcast %Type_Info* %4995 to %Type_Info*
	store %Type_Info* %4996, %Type_Info** %4991
	%4997 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 176
	%4998 = bitcast %Type_Info* %4997 to %Type_Info*
	store %Type_Info* %4998, %Type_Info** %4992
	store i1 false, i1* %4993
	store i64 0, i64* %4994
	%4999 = getelementptr inbounds %Type_Info, %Type_Info* %4987, i64 0, i32 4 ; UnionTagPtr
	store i64 11, i64* %4999
	%5000 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 173
	%5001 = getelementptr inbounds %Type_Info, %Type_Info* %5000, i64 0, i32 1
	store i64 56, i64* %5001
	%5002 = getelementptr inbounds %Type_Info, %Type_Info* %5000, i64 0, i32 2
	store i64 8, i64* %5002
	; Type_Info_Tuple
	%5003 = bitcast %Type_Info* %5000 to %Type_Info.Tuple*
	%5004 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %5003, i64 0, i32 2
	%5005 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 266
	%5006 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 266
	%5007 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 0
	%5008 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %5008, %Type_Info** %5007
	%5009 = getelementptr inbounds %..string, %..string* %5006, i64 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$702, i64 0, i32 0), i64 14}, %..string* %5009
	%5010 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 1
	%5011 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 174
	store %Type_Info* %5011, %Type_Info** %5010
	%5012 = getelementptr inbounds %..string, %..string* %5006, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$703, i64 0, i32 0), i64 4}, %..string* %5012
	%5013 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 2
	%5014 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5014, %Type_Info** %5013
	%5015 = getelementptr inbounds %..string, %..string* %5006, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$704, i64 0, i32 0), i64 4}, %..string* %5015
	%5016 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 3
	%5017 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5017, %Type_Info** %5016
	%5018 = getelementptr inbounds %..string, %..string* %5006, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$705, i64 0, i32 0), i64 9}, %..string* %5018
	%5019 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 4
	%5020 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %5020, %Type_Info** %5019
	%5021 = getelementptr inbounds %..string, %..string* %5006, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$706, i64 0, i32 0), i64 10}, %..string* %5021
	%5022 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 5
	%5023 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5023, %Type_Info** %5022
	%5024 = getelementptr inbounds %..string, %..string* %5006, i64 5
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$707, i64 0, i32 0), i64 8}, %..string* %5024
	%5025 = getelementptr inbounds %Type_Info*, %Type_Info** %5005, i64 6
	%5026 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	store %Type_Info* %5026, %Type_Info** %5025
	%5027 = getelementptr inbounds %..string, %..string* %5006, i64 6
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$708, i64 0, i32 0), i64 5}, %..string* %5027
	%5028 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5004, i64 0, i32 0
	%5029 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5028, i64 0, i32 0
	store %Type_Info** %5005, %Type_Info*** %5029
	%5030 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5028, i64 0, i32 1
	store i64 7, i64* %5030
	%5031 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5028, i64 0, i32 2
	store i64 7, i64* %5031
	%5032 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5004, i64 0, i32 1
	%5033 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5032, i64 0, i32 0
	store %..string* %5006, %..string** %5033
	%5034 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5032, i64 0, i32 1
	store i64 7, i64* %5034
	%5035 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5032, i64 0, i32 2
	store i64 7, i64* %5035
	%5036 = getelementptr inbounds %Type_Info, %Type_Info* %5000, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %5036
	%5037 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 174
	%5038 = getelementptr inbounds %Type_Info, %Type_Info* %5037, i64 0, i32 1
	store i64 1, i64* %5038
	%5039 = getelementptr inbounds %Type_Info, %Type_Info* %5037, i64 0, i32 2
	store i64 1, i64* %5039
	; Type_Info_Named
	%5040 = bitcast %Type_Info* %5037 to %Type_Info.Named*
	%5041 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 175
	%5042 = bitcast %Type_Info* %5041 to %Type_Info*
	%5043 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5040, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$709, i64 0, i32 0), i64 14}, %..string* %5043
	%5044 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5040, i64 0, i32 3
	store %Type_Info* %5042, %Type_Info** %5044
	%5045 = getelementptr inbounds %Type_Info, %Type_Info* %5037, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5045
	%5046 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 175
	%5047 = getelementptr inbounds %Type_Info, %Type_Info* %5046, i64 0, i32 1
	store i64 1, i64* %5047
	%5048 = getelementptr inbounds %Type_Info, %Type_Info* %5046, i64 0, i32 2
	store i64 1, i64* %5048
	; Type_Info_Enum
	%5049 = bitcast %Type_Info* %5046 to %Type_Info.Enum*
	%5050 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5051 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %5049, i64 0, i32 2
	store %Type_Info* %5050, %Type_Info** %5051
	%5052 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-af, i64 0, i32 0
	%5053 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-af, i64 0, i32 0
	%5054 = bitcast {[0 x <8 x i8>], [8 x i8]}* %5053 to i64*
	store i64 0, i64* %5054
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$70a, i64 0, i32 0), i64 5}, %..string* %5052
	%5055 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-af, i64 0, i32 1
	%5056 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-af, i64 0, i32 1
	%5057 = bitcast {[0 x <8 x i8>], [8 x i8]}* %5056 to i64*
	store i64 1, i64* %5057
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$70b, i64 0, i32 0), i64 4}, %..string* %5055
	%5058 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-af, i64 0, i32 2
	%5059 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-af, i64 0, i32 2
	%5060 = bitcast {[0 x <8 x i8>], [8 x i8]}* %5059 to i64*
	store i64 2, i64* %5060
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$70c, i64 0, i32 0), i64 8}, %..string* %5058
	%5061 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-af, i64 0, i32 3
	%5062 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-af, i64 0, i32 3
	%5063 = bitcast {[0 x <8 x i8>], [8 x i8]}* %5062 to i64*
	store i64 3, i64* %5063
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$70d, i64 0, i32 0), i64 6}, %..string* %5061
	%5064 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %5049, i64 0, i32 3
	%5065 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-af, i64 0, i32 0
	%5066 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5064, i64 0, i32 0
	store %..string* %5065, %..string** %5066
	%5067 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5064, i64 0, i32 1
	store i64 4, i64* %5067
	%5068 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %5049, i64 0, i32 4
	%5069 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-af, i64 0, i32 0
	%5070 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %5068, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %5069, {[0 x <8 x i8>], [8 x i8]}** %5070
	%5071 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %5068, i64 0, i32 1
	store i64 4, i64* %5071
	%5072 = getelementptr inbounds %Type_Info, %Type_Info* %5046, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %5072
	%5073 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 176
	%5074 = getelementptr inbounds %Type_Info, %Type_Info* %5073, i64 0, i32 1
	store i64 8, i64* %5074
	%5075 = getelementptr inbounds %Type_Info, %Type_Info* %5073, i64 0, i32 2
	store i64 8, i64* %5075
	; Type_Info_Tuple
	%5076 = bitcast %Type_Info* %5073 to %Type_Info.Tuple*
	%5077 = getelementptr inbounds %Type_Info.Tuple, %Type_Info.Tuple* %5076, i64 0, i32 2
	%5078 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 273
	%5079 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 273
	%5080 = getelementptr inbounds %Type_Info*, %Type_Info** %5078, i64 0
	%5081 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	store %Type_Info* %5081, %Type_Info** %5080
	%5082 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5077, i64 0, i32 0
	%5083 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5082, i64 0, i32 0
	store %Type_Info** %5078, %Type_Info*** %5083
	%5084 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5082, i64 0, i32 1
	store i64 1, i64* %5084
	%5085 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5082, i64 0, i32 2
	store i64 1, i64* %5085
	%5086 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5077, i64 0, i32 1
	%5087 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5086, i64 0, i32 0
	store %..string* %5079, %..string** %5087
	%5088 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5086, i64 0, i32 1
	store i64 1, i64* %5088
	%5089 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5086, i64 0, i32 2
	store i64 1, i64* %5089
	%5090 = getelementptr inbounds %Type_Info, %Type_Info* %5073, i64 0, i32 4 ; UnionTagPtr
	store i64 16, i64* %5090
	%5091 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	%5092 = getelementptr inbounds %Type_Info, %Type_Info* %5091, i64 0, i32 1
	store i64 40, i64* %5092
	%5093 = getelementptr inbounds %Type_Info, %Type_Info* %5091, i64 0, i32 2
	store i64 8, i64* %5093
	; Type_Info_DynamicArray
	%5094 = bitcast %Type_Info* %5091 to %Type_Info.Dynamic_Array*
	%5095 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5096 = bitcast %Type_Info* %5095 to %Type_Info*
	%5097 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %5094, i64 0, i32 2
	store %Type_Info* %5096, %Type_Info** %5097
	%5098 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %5094, i64 0, i32 3
	store i64 16, i64* %5098
	%5099 = getelementptr inbounds %Type_Info, %Type_Info* %5091, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %5099
	%5100 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%5101 = getelementptr inbounds %Type_Info, %Type_Info* %5100, i64 0, i32 1
	store i64 8, i64* %5101
	%5102 = getelementptr inbounds %Type_Info, %Type_Info* %5100, i64 0, i32 2
	store i64 8, i64* %5102
	; Type_Info_Pointer
	%5103 = bitcast %Type_Info* %5100 to %Type_Info.Pointer*
	%5104 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5105 = bitcast %Type_Info* %5104 to %Type_Info*
	%5106 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %5103, i64 0, i32 2
	store %Type_Info* %5105, %Type_Info** %5106
	%5107 = getelementptr inbounds %Type_Info, %Type_Info* %5100, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %5107
	%5108 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 177
	%5109 = getelementptr inbounds %Type_Info, %Type_Info* %5108, i64 0, i32 1
	store i64 8, i64* %5109
	%5110 = getelementptr inbounds %Type_Info, %Type_Info* %5108, i64 0, i32 2
	store i64 8, i64* %5110
	; Type_Info_Named
	%5111 = bitcast %Type_Info* %5108 to %Type_Info.Named*
	%5112 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%5113 = bitcast %Type_Info* %5112 to %Type_Info*
	%5114 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5111, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$70e, i64 0, i32 0), i64 5}, %..string* %5114
	%5115 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5111, i64 0, i32 3
	store %Type_Info* %5113, %Type_Info** %5115
	%5116 = getelementptr inbounds %Type_Info, %Type_Info* %5108, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5116
	%5117 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 178
	%5118 = getelementptr inbounds %Type_Info, %Type_Info* %5117, i64 0, i32 1
	store i64 8, i64* %5118
	%5119 = getelementptr inbounds %Type_Info, %Type_Info* %5117, i64 0, i32 2
	store i64 8, i64* %5119
	; Type_Info_Named
	%5120 = bitcast %Type_Info* %5117 to %Type_Info.Named*
	%5121 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%5122 = bitcast %Type_Info* %5121 to %Type_Info*
	%5123 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5120, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$70f, i64 0, i32 0), i64 9}, %..string* %5123
	%5124 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5120, i64 0, i32 3
	store %Type_Info* %5122, %Type_Info** %5124
	%5125 = getelementptr inbounds %Type_Info, %Type_Info* %5117, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5125
	%5126 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 179
	%5127 = getelementptr inbounds %Type_Info, %Type_Info* %5126, i64 0, i32 1
	store i64 8, i64* %5127
	%5128 = getelementptr inbounds %Type_Info, %Type_Info* %5126, i64 0, i32 2
	store i64 8, i64* %5128
	; Type_Info_Named
	%5129 = bitcast %Type_Info* %5126 to %Type_Info.Named*
	%5130 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%5131 = bitcast %Type_Info* %5130 to %Type_Info*
	%5132 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5129, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$710, i64 0, i32 0), i64 9}, %..string* %5132
	%5133 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5129, i64 0, i32 3
	store %Type_Info* %5131, %Type_Info** %5133
	%5134 = getelementptr inbounds %Type_Info, %Type_Info* %5126, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5134
	%5135 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 180
	%5136 = getelementptr inbounds %Type_Info, %Type_Info* %5135, i64 0, i32 1
	store i64 8, i64* %5136
	%5137 = getelementptr inbounds %Type_Info, %Type_Info* %5135, i64 0, i32 2
	store i64 8, i64* %5137
	; Type_Info_Named
	%5138 = bitcast %Type_Info* %5135 to %Type_Info.Named*
	%5139 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%5140 = bitcast %Type_Info* %5139 to %Type_Info*
	%5141 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5138, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$711, i64 0, i32 0), i64 3}, %..string* %5141
	%5142 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5138, i64 0, i32 3
	store %Type_Info* %5140, %Type_Info** %5142
	%5143 = getelementptr inbounds %Type_Info, %Type_Info* %5135, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5143
	%5144 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 181
	%5145 = getelementptr inbounds %Type_Info, %Type_Info* %5144, i64 0, i32 1
	store i64 44, i64* %5145
	%5146 = getelementptr inbounds %Type_Info, %Type_Info* %5144, i64 0, i32 2
	store i64 4, i64* %5146
	; Type_Info_Named
	%5147 = bitcast %Type_Info* %5144 to %Type_Info.Named*
	%5148 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 182
	%5149 = bitcast %Type_Info* %5148 to %Type_Info*
	%5150 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5147, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$712, i64 0, i32 0), i64 16}, %..string* %5150
	%5151 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5147, i64 0, i32 3
	store %Type_Info* %5149, %Type_Info** %5151
	%5152 = getelementptr inbounds %Type_Info, %Type_Info* %5144, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5152
	%5153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 182
	%5154 = getelementptr inbounds %Type_Info, %Type_Info* %5153, i64 0, i32 1
	store i64 44, i64* %5154
	%5155 = getelementptr inbounds %Type_Info, %Type_Info* %5153, i64 0, i32 2
	store i64 4, i64* %5155
	; Type_Info_Struct
	%5156 = bitcast %Type_Info* %5153 to %Type_Info.Struct*
	%5157 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5156, i64 0, i32 2
	%5158 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 4
	store i1 false, i1* %5158
	%5159 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 5
	store i1 true, i1* %5159
	%5160 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 6
	store i1 false, i1* %5160
	%5161 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 274
	%5162 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 274
	%5163 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 109
	%5164 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 105
	%5165 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%5166 = bitcast %Type_Info* %5165 to %Type_Info*
	%5167 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 0
	%5168 = getelementptr inbounds i64, i64* %5163, i64 0
	%5169 = getelementptr inbounds i1, i1* %5164, i64 0
	%5170 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %5170, %Type_Info** %5167
	%5171 = getelementptr inbounds %..string, %..string* %5162, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$713, i64 0, i32 0), i64 6}, %..string* %5171
	store i64 0, i64* %5168
	store i1 false, i1* %5169
	%5172 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%5173 = bitcast %Type_Info* %5172 to %Type_Info*
	%5174 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 1
	%5175 = getelementptr inbounds i64, i64* %5163, i64 1
	%5176 = getelementptr inbounds i1, i1* %5164, i64 1
	%5177 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %5177, %Type_Info** %5174
	%5178 = getelementptr inbounds %..string, %..string* %5162, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$714, i64 0, i32 0), i64 5}, %..string* %5178
	store i64 4, i64* %5175
	store i1 false, i1* %5176
	%5179 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%5180 = bitcast %Type_Info* %5179 to %Type_Info*
	%5181 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 2
	%5182 = getelementptr inbounds i64, i64* %5163, i64 2
	%5183 = getelementptr inbounds i1, i1* %5164, i64 2
	%5184 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %5184, %Type_Info** %5181
	%5185 = getelementptr inbounds %..string, %..string* %5162, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$715, i64 0, i32 0), i64 8}, %..string* %5185
	store i64 8, i64* %5182
	store i1 false, i1* %5183
	%5186 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	%5187 = bitcast %Type_Info* %5186 to %Type_Info*
	%5188 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 3
	%5189 = getelementptr inbounds i64, i64* %5163, i64 3
	%5190 = getelementptr inbounds i1, i1* %5164, i64 3
	%5191 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	store %Type_Info* %5191, %Type_Info** %5188
	%5192 = getelementptr inbounds %..string, %..string* %5162, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$716, i64 0, i32 0), i64 7}, %..string* %5192
	store i64 12, i64* %5189
	store i1 false, i1* %5190
	%5193 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	%5194 = bitcast %Type_Info* %5193 to %Type_Info*
	%5195 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 4
	%5196 = getelementptr inbounds i64, i64* %5163, i64 4
	%5197 = getelementptr inbounds i1, i1* %5164, i64 4
	%5198 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	store %Type_Info* %5198, %Type_Info** %5195
	%5199 = getelementptr inbounds %..string, %..string* %5162, i64 4
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$717, i64 0, i32 0), i64 7}, %..string* %5199
	store i64 20, i64* %5196
	store i1 false, i1* %5197
	%5200 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 185
	%5201 = bitcast %Type_Info* %5200 to %Type_Info*
	%5202 = getelementptr inbounds %Type_Info*, %Type_Info** %5161, i64 5
	%5203 = getelementptr inbounds i64, i64* %5163, i64 5
	%5204 = getelementptr inbounds i1, i1* %5164, i64 5
	%5205 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 185
	store %Type_Info* %5205, %Type_Info** %5202
	%5206 = getelementptr inbounds %..string, %..string* %5162, i64 5
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$718, i64 0, i32 0), i64 10}, %..string* %5206
	store i64 28, i64* %5203
	store i1 false, i1* %5204
	%5207 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 0
	%5208 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5207, i64 0, i32 0
	store %Type_Info** %5161, %Type_Info*** %5208
	%5209 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5207, i64 0, i32 1
	store i64 6, i64* %5209
	%5210 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5207, i64 0, i32 2
	store i64 6, i64* %5210
	%5211 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 1
	%5212 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5211, i64 0, i32 0
	store %..string* %5162, %..string** %5212
	%5213 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5211, i64 0, i32 1
	store i64 6, i64* %5213
	%5214 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5211, i64 0, i32 2
	store i64 6, i64* %5214
	%5215 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 2
	%5216 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5215, i64 0, i32 0
	store i64* %5163, i64** %5216
	%5217 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5215, i64 0, i32 1
	store i64 6, i64* %5217
	%5218 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5215, i64 0, i32 2
	store i64 6, i64* %5218
	%5219 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5157, i64 0, i32 3
	%5220 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5219, i64 0, i32 0
	store i1* %5164, i1** %5220
	%5221 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5219, i64 0, i32 1
	store i64 6, i64* %5221
	%5222 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5219, i64 0, i32 2
	store i64 6, i64* %5222
	%5223 = getelementptr inbounds %Type_Info, %Type_Info* %5153, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5223
	%5224 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	%5225 = getelementptr inbounds %Type_Info, %Type_Info* %5224, i64 0, i32 1
	store i64 8, i64* %5225
	%5226 = getelementptr inbounds %Type_Info, %Type_Info* %5224, i64 0, i32 2
	store i64 4, i64* %5226
	; Type_Info_Named
	%5227 = bitcast %Type_Info* %5224 to %Type_Info.Named*
	%5228 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 184
	%5229 = bitcast %Type_Info* %5228 to %Type_Info*
	%5230 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5227, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$719, i64 0, i32 0), i64 5}, %..string* %5230
	%5231 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5227, i64 0, i32 3
	store %Type_Info* %5229, %Type_Info** %5231
	%5232 = getelementptr inbounds %Type_Info, %Type_Info* %5224, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5232
	%5233 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 184
	%5234 = getelementptr inbounds %Type_Info, %Type_Info* %5233, i64 0, i32 1
	store i64 8, i64* %5234
	%5235 = getelementptr inbounds %Type_Info, %Type_Info* %5233, i64 0, i32 2
	store i64 4, i64* %5235
	; Type_Info_Struct
	%5236 = bitcast %Type_Info* %5233 to %Type_Info.Struct*
	%5237 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5236, i64 0, i32 2
	%5238 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 4
	store i1 false, i1* %5238
	%5239 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 5
	store i1 true, i1* %5239
	%5240 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 6
	store i1 false, i1* %5240
	%5241 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 280
	%5242 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 280
	%5243 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 115
	%5244 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 111
	%5245 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5246 = bitcast %Type_Info* %5245 to %Type_Info*
	%5247 = getelementptr inbounds %Type_Info*, %Type_Info** %5241, i64 0
	%5248 = getelementptr inbounds i64, i64* %5243, i64 0
	%5249 = getelementptr inbounds i1, i1* %5244, i64 0
	%5250 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5250, %Type_Info** %5247
	%5251 = getelementptr inbounds %..string, %..string* %5242, i64 0
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$71a, i64 0, i32 0), i64 1}, %..string* %5251
	store i64 0, i64* %5248
	store i1 false, i1* %5249
	%5252 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5253 = bitcast %Type_Info* %5252 to %Type_Info*
	%5254 = getelementptr inbounds %Type_Info*, %Type_Info** %5241, i64 1
	%5255 = getelementptr inbounds i64, i64* %5243, i64 1
	%5256 = getelementptr inbounds i1, i1* %5244, i64 1
	%5257 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5257, %Type_Info** %5254
	%5258 = getelementptr inbounds %..string, %..string* %5242, i64 1
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$71b, i64 0, i32 0), i64 1}, %..string* %5258
	store i64 4, i64* %5255
	store i1 false, i1* %5256
	%5259 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 0
	%5260 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5259, i64 0, i32 0
	store %Type_Info** %5241, %Type_Info*** %5260
	%5261 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5259, i64 0, i32 1
	store i64 2, i64* %5261
	%5262 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5259, i64 0, i32 2
	store i64 2, i64* %5262
	%5263 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 1
	%5264 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5263, i64 0, i32 0
	store %..string* %5242, %..string** %5264
	%5265 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5263, i64 0, i32 1
	store i64 2, i64* %5265
	%5266 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5263, i64 0, i32 2
	store i64 2, i64* %5266
	%5267 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 2
	%5268 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5267, i64 0, i32 0
	store i64* %5243, i64** %5268
	%5269 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5267, i64 0, i32 1
	store i64 2, i64* %5269
	%5270 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5267, i64 0, i32 2
	store i64 2, i64* %5270
	%5271 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5237, i64 0, i32 3
	%5272 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5271, i64 0, i32 0
	store i1* %5244, i1** %5272
	%5273 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5271, i64 0, i32 1
	store i64 2, i64* %5273
	%5274 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5271, i64 0, i32 2
	store i64 2, i64* %5274
	%5275 = getelementptr inbounds %Type_Info, %Type_Info* %5233, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5275
	%5276 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 185
	%5277 = getelementptr inbounds %Type_Info, %Type_Info* %5276, i64 0, i32 1
	store i64 16, i64* %5277
	%5278 = getelementptr inbounds %Type_Info, %Type_Info* %5276, i64 0, i32 2
	store i64 4, i64* %5278
	; Type_Info_Named
	%5279 = bitcast %Type_Info* %5276 to %Type_Info.Named*
	%5280 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%5281 = bitcast %Type_Info* %5280 to %Type_Info*
	%5282 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5279, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$71c, i64 0, i32 0), i64 4}, %..string* %5282
	%5283 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5279, i64 0, i32 3
	store %Type_Info* %5281, %Type_Info** %5283
	%5284 = getelementptr inbounds %Type_Info, %Type_Info* %5276, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5284
	%5285 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%5286 = getelementptr inbounds %Type_Info, %Type_Info* %5285, i64 0, i32 1
	store i64 16, i64* %5286
	%5287 = getelementptr inbounds %Type_Info, %Type_Info* %5285, i64 0, i32 2
	store i64 4, i64* %5287
	; Type_Info_Struct
	%5288 = bitcast %Type_Info* %5285 to %Type_Info.Struct*
	%5289 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5288, i64 0, i32 2
	%5290 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 4
	store i1 false, i1* %5290
	%5291 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 5
	store i1 true, i1* %5291
	%5292 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 6
	store i1 false, i1* %5292
	%5293 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 282
	%5294 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 282
	%5295 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 117
	%5296 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 113
	%5297 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5298 = bitcast %Type_Info* %5297 to %Type_Info*
	%5299 = getelementptr inbounds %Type_Info*, %Type_Info** %5293, i64 0
	%5300 = getelementptr inbounds i64, i64* %5295, i64 0
	%5301 = getelementptr inbounds i1, i1* %5296, i64 0
	%5302 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5302, %Type_Info** %5299
	%5303 = getelementptr inbounds %..string, %..string* %5294, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$71d, i64 0, i32 0), i64 4}, %..string* %5303
	store i64 0, i64* %5300
	store i1 false, i1* %5301
	%5304 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5305 = bitcast %Type_Info* %5304 to %Type_Info*
	%5306 = getelementptr inbounds %Type_Info*, %Type_Info** %5293, i64 1
	%5307 = getelementptr inbounds i64, i64* %5295, i64 1
	%5308 = getelementptr inbounds i1, i1* %5296, i64 1
	%5309 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5309, %Type_Info** %5306
	%5310 = getelementptr inbounds %..string, %..string* %5294, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$71e, i64 0, i32 0), i64 3}, %..string* %5310
	store i64 4, i64* %5307
	store i1 false, i1* %5308
	%5311 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5312 = bitcast %Type_Info* %5311 to %Type_Info*
	%5313 = getelementptr inbounds %Type_Info*, %Type_Info** %5293, i64 2
	%5314 = getelementptr inbounds i64, i64* %5295, i64 2
	%5315 = getelementptr inbounds i1, i1* %5296, i64 2
	%5316 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5316, %Type_Info** %5313
	%5317 = getelementptr inbounds %..string, %..string* %5294, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$71f, i64 0, i32 0), i64 5}, %..string* %5317
	store i64 8, i64* %5314
	store i1 false, i1* %5315
	%5318 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5319 = bitcast %Type_Info* %5318 to %Type_Info*
	%5320 = getelementptr inbounds %Type_Info*, %Type_Info** %5293, i64 3
	%5321 = getelementptr inbounds i64, i64* %5295, i64 3
	%5322 = getelementptr inbounds i1, i1* %5296, i64 3
	%5323 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5323, %Type_Info** %5320
	%5324 = getelementptr inbounds %..string, %..string* %5294, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$720, i64 0, i32 0), i64 6}, %..string* %5324
	store i64 12, i64* %5321
	store i1 false, i1* %5322
	%5325 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 0
	%5326 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5325, i64 0, i32 0
	store %Type_Info** %5293, %Type_Info*** %5326
	%5327 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5325, i64 0, i32 1
	store i64 4, i64* %5327
	%5328 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5325, i64 0, i32 2
	store i64 4, i64* %5328
	%5329 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 1
	%5330 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5329, i64 0, i32 0
	store %..string* %5294, %..string** %5330
	%5331 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5329, i64 0, i32 1
	store i64 4, i64* %5331
	%5332 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5329, i64 0, i32 2
	store i64 4, i64* %5332
	%5333 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 2
	%5334 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5333, i64 0, i32 0
	store i64* %5295, i64** %5334
	%5335 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5333, i64 0, i32 1
	store i64 4, i64* %5335
	%5336 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5333, i64 0, i32 2
	store i64 4, i64* %5336
	%5337 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5289, i64 0, i32 3
	%5338 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5337, i64 0, i32 0
	store i1* %5296, i1** %5338
	%5339 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5337, i64 0, i32 1
	store i64 4, i64* %5339
	%5340 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5337, i64 0, i32 2
	store i64 4, i64* %5340
	%5341 = getelementptr inbounds %Type_Info, %Type_Info* %5285, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5341
	%5342 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%5343 = getelementptr inbounds %Type_Info, %Type_Info* %5342, i64 0, i32 1
	store i64 24, i64* %5343
	%5344 = getelementptr inbounds %Type_Info, %Type_Info* %5342, i64 0, i32 2
	store i64 8, i64* %5344
	; Type_Info_Named
	%5345 = bitcast %Type_Info* %5342 to %Type_Info.Named*
	%5346 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%5347 = bitcast %Type_Info* %5346 to %Type_Info*
	%5348 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5345, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$721, i64 0, i32 0), i64 9}, %..string* %5348
	%5349 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5345, i64 0, i32 3
	store %Type_Info* %5347, %Type_Info** %5349
	%5350 = getelementptr inbounds %Type_Info, %Type_Info* %5342, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5350
	%5351 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%5352 = getelementptr inbounds %Type_Info, %Type_Info* %5351, i64 0, i32 1
	store i64 24, i64* %5352
	%5353 = getelementptr inbounds %Type_Info, %Type_Info* %5351, i64 0, i32 2
	store i64 8, i64* %5353
	; Type_Info_Struct
	%5354 = bitcast %Type_Info* %5351 to %Type_Info.Struct*
	%5355 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5354, i64 0, i32 2
	%5356 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 4
	store i1 false, i1* %5356
	%5357 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 5
	store i1 false, i1* %5357
	%5358 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 6
	store i1 false, i1* %5358
	%5359 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 286
	%5360 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 286
	%5361 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 121
	%5362 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 117
	%5363 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 189
	%5364 = bitcast %Type_Info* %5363 to %Type_Info*
	%5365 = getelementptr inbounds %Type_Info*, %Type_Info** %5359, i64 0
	%5366 = getelementptr inbounds i64, i64* %5361, i64 0
	%5367 = getelementptr inbounds i1, i1* %5362, i64 0
	%5368 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 189
	store %Type_Info* %5368, %Type_Info** %5365
	%5369 = getelementptr inbounds %..string, %..string* %5360, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$722, i64 0, i32 0), i64 10}, %..string* %5369
	store i64 0, i64* %5366
	store i1 false, i1* %5367
	%5370 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 218
	%5371 = bitcast %Type_Info* %5370 to %Type_Info*
	%5372 = getelementptr inbounds %Type_Info*, %Type_Info** %5359, i64 1
	%5373 = getelementptr inbounds i64, i64* %5361, i64 1
	%5374 = getelementptr inbounds i1, i1* %5362, i64 1
	%5375 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 218
	store %Type_Info* %5375, %Type_Info** %5372
	%5376 = getelementptr inbounds %..string, %..string* %5360, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$723, i64 0, i32 0), i64 3}, %..string* %5376
	store i64 8, i64* %5373
	store i1 false, i1* %5374
	%5377 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 230
	%5378 = bitcast %Type_Info* %5377 to %Type_Info*
	%5379 = getelementptr inbounds %Type_Info*, %Type_Info** %5359, i64 2
	%5380 = getelementptr inbounds i64, i64* %5361, i64 2
	%5381 = getelementptr inbounds i1, i1* %5362, i64 2
	%5382 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 230
	store %Type_Info* %5382, %Type_Info** %5379
	%5383 = getelementptr inbounds %..string, %..string* %5360, i64 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$724, i64 0, i32 0), i64 10}, %..string* %5383
	store i64 16, i64* %5380
	store i1 false, i1* %5381
	%5384 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 0
	%5385 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5384, i64 0, i32 0
	store %Type_Info** %5359, %Type_Info*** %5385
	%5386 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5384, i64 0, i32 1
	store i64 3, i64* %5386
	%5387 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5384, i64 0, i32 2
	store i64 3, i64* %5387
	%5388 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 1
	%5389 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5388, i64 0, i32 0
	store %..string* %5360, %..string** %5389
	%5390 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5388, i64 0, i32 1
	store i64 3, i64* %5390
	%5391 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5388, i64 0, i32 2
	store i64 3, i64* %5391
	%5392 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 2
	%5393 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5392, i64 0, i32 0
	store i64* %5361, i64** %5393
	%5394 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5392, i64 0, i32 1
	store i64 3, i64* %5394
	%5395 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5392, i64 0, i32 2
	store i64 3, i64* %5395
	%5396 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5355, i64 0, i32 3
	%5397 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5396, i64 0, i32 0
	store i1* %5362, i1** %5397
	%5398 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5396, i64 0, i32 1
	store i64 3, i64* %5398
	%5399 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5396, i64 0, i32 2
	store i64 3, i64* %5399
	%5400 = getelementptr inbounds %Type_Info, %Type_Info* %5351, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5400
	%5401 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 189
	%5402 = getelementptr inbounds %Type_Info, %Type_Info* %5401, i64 0, i32 1
	store i64 8, i64* %5402
	%5403 = getelementptr inbounds %Type_Info, %Type_Info* %5401, i64 0, i32 2
	store i64 8, i64* %5403
	; Type_Info_Pointer
	%5404 = bitcast %Type_Info* %5401 to %Type_Info.Pointer*
	%5405 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 190
	%5406 = bitcast %Type_Info* %5405 to %Type_Info*
	%5407 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %5404, i64 0, i32 2
	store %Type_Info* %5406, %Type_Info** %5407
	%5408 = getelementptr inbounds %Type_Info, %Type_Info* %5401, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %5408
	%5409 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 190
	%5410 = getelementptr inbounds %Type_Info, %Type_Info* %5409, i64 0, i32 1
	store i64 24, i64* %5410
	%5411 = getelementptr inbounds %Type_Info, %Type_Info* %5409, i64 0, i32 2
	store i64 8, i64* %5411
	; Type_Info_Named
	%5412 = bitcast %Type_Info* %5409 to %Type_Info.Named*
	%5413 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 191
	%5414 = bitcast %Type_Info* %5413 to %Type_Info*
	%5415 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5412, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$725, i64 0, i32 0), i64 4}, %..string* %5415
	%5416 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5412, i64 0, i32 3
	store %Type_Info* %5414, %Type_Info** %5416
	%5417 = getelementptr inbounds %Type_Info, %Type_Info* %5409, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5417
	%5418 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 191
	%5419 = getelementptr inbounds %Type_Info, %Type_Info* %5418, i64 0, i32 1
	store i64 24, i64* %5419
	%5420 = getelementptr inbounds %Type_Info, %Type_Info* %5418, i64 0, i32 2
	store i64 8, i64* %5420
	; Type_Info_Struct
	%5421 = bitcast %Type_Info* %5418 to %Type_Info.Struct*
	%5422 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5421, i64 0, i32 2
	%5423 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 4
	store i1 false, i1* %5423
	%5424 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 5
	store i1 false, i1* %5424
	%5425 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 6
	store i1 false, i1* %5425
	%5426 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 289
	%5427 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 289
	%5428 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 124
	%5429 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 120
	%5430 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%5431 = bitcast %Type_Info* %5430 to %Type_Info*
	%5432 = getelementptr inbounds %Type_Info*, %Type_Info** %5426, i64 0
	%5433 = getelementptr inbounds i64, i64* %5428, i64 0
	%5434 = getelementptr inbounds i1, i1* %5429, i64 0
	%5435 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	store %Type_Info* %5435, %Type_Info** %5432
	%5436 = getelementptr inbounds %..string, %..string* %5427, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$726, i64 0, i32 0), i64 5}, %..string* %5436
	store i64 0, i64* %5433
	store i1 false, i1* %5434
	%5437 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%5438 = bitcast %Type_Info* %5437 to %Type_Info*
	%5439 = getelementptr inbounds %Type_Info*, %Type_Info** %5426, i64 1
	%5440 = getelementptr inbounds i64, i64* %5428, i64 1
	%5441 = getelementptr inbounds i1, i1* %5429, i64 1
	%5442 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	store %Type_Info* %5442, %Type_Info** %5439
	%5443 = getelementptr inbounds %..string, %..string* %5427, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$727, i64 0, i32 0), i64 3}, %..string* %5443
	store i64 8, i64* %5440
	store i1 false, i1* %5441
	%5444 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%5445 = bitcast %Type_Info* %5444 to %Type_Info*
	%5446 = getelementptr inbounds %Type_Info*, %Type_Info** %5426, i64 2
	%5447 = getelementptr inbounds i64, i64* %5428, i64 2
	%5448 = getelementptr inbounds i1, i1* %5429, i64 2
	%5449 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5449, %Type_Info** %5446
	%5450 = getelementptr inbounds %..string, %..string* %5427, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$728, i64 0, i32 0), i64 5}, %..string* %5450
	store i64 16, i64* %5447
	store i1 false, i1* %5448
	%5451 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 0
	%5452 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5451, i64 0, i32 0
	store %Type_Info** %5426, %Type_Info*** %5452
	%5453 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5451, i64 0, i32 1
	store i64 3, i64* %5453
	%5454 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5451, i64 0, i32 2
	store i64 3, i64* %5454
	%5455 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 1
	%5456 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5455, i64 0, i32 0
	store %..string* %5427, %..string** %5456
	%5457 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5455, i64 0, i32 1
	store i64 3, i64* %5457
	%5458 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5455, i64 0, i32 2
	store i64 3, i64* %5458
	%5459 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 2
	%5460 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5459, i64 0, i32 0
	store i64* %5428, i64** %5460
	%5461 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5459, i64 0, i32 1
	store i64 3, i64* %5461
	%5462 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5459, i64 0, i32 2
	store i64 3, i64* %5462
	%5463 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5422, i64 0, i32 3
	%5464 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5463, i64 0, i32 0
	store i1* %5429, i1** %5464
	%5465 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5463, i64 0, i32 1
	store i64 3, i64* %5465
	%5466 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5463, i64 0, i32 2
	store i64 3, i64* %5466
	%5467 = getelementptr inbounds %Type_Info, %Type_Info* %5418, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5467
	%5468 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%5469 = getelementptr inbounds %Type_Info, %Type_Info* %5468, i64 0, i32 1
	store i64 8, i64* %5469
	%5470 = getelementptr inbounds %Type_Info, %Type_Info* %5468, i64 0, i32 2
	store i64 8, i64* %5470
	; Type_Info_Pointer
	%5471 = bitcast %Type_Info* %5468 to %Type_Info.Pointer*
	%5472 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%5473 = bitcast %Type_Info* %5472 to %Type_Info*
	%5474 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %5471, i64 0, i32 2
	store %Type_Info* %5473, %Type_Info** %5474
	%5475 = getelementptr inbounds %Type_Info, %Type_Info* %5468, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %5475
	%5476 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%5477 = getelementptr inbounds %Type_Info, %Type_Info* %5476, i64 0, i32 1
	store i64 16, i64* %5477
	%5478 = getelementptr inbounds %Type_Info, %Type_Info* %5476, i64 0, i32 2
	store i64 8, i64* %5478
	; Type_Info_Named
	%5479 = bitcast %Type_Info* %5476 to %Type_Info.Named*
	%5480 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 194
	%5481 = bitcast %Type_Info* %5480 to %Type_Info*
	%5482 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5479, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$729, i64 0, i32 0), i64 8}, %..string* %5482
	%5483 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5479, i64 0, i32 3
	store %Type_Info* %5481, %Type_Info** %5483
	%5484 = getelementptr inbounds %Type_Info, %Type_Info* %5476, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5484
	%5485 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 194
	%5486 = getelementptr inbounds %Type_Info, %Type_Info* %5485, i64 0, i32 1
	store i64 16, i64* %5486
	%5487 = getelementptr inbounds %Type_Info, %Type_Info* %5485, i64 0, i32 2
	store i64 8, i64* %5487
	; Type_Info_Struct
	%5488 = bitcast %Type_Info* %5485 to %Type_Info.Struct*
	%5489 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5488, i64 0, i32 2
	%5490 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 4
	store i1 false, i1* %5490
	%5491 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 5
	store i1 false, i1* %5491
	%5492 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 6
	store i1 false, i1* %5492
	%5493 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 292
	%5494 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 292
	%5495 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 127
	%5496 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 123
	%5497 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 195
	%5498 = bitcast %Type_Info* %5497 to %Type_Info*
	%5499 = getelementptr inbounds %Type_Info*, %Type_Info** %5493, i64 0
	%5500 = getelementptr inbounds i64, i64* %5495, i64 0
	%5501 = getelementptr inbounds i1, i1* %5496, i64 0
	%5502 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 195
	store %Type_Info* %5502, %Type_Info** %5499
	%5503 = getelementptr inbounds %..string, %..string* %5494, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$72a, i64 0, i32 0), i64 6}, %..string* %5503
	store i64 0, i64* %5500
	store i1 false, i1* %5501
	%5504 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%5505 = bitcast %Type_Info* %5504 to %Type_Info*
	%5506 = getelementptr inbounds %Type_Info*, %Type_Info** %5493, i64 1
	%5507 = getelementptr inbounds i64, i64* %5495, i64 1
	%5508 = getelementptr inbounds i1, i1* %5496, i64 1
	%5509 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	store %Type_Info* %5509, %Type_Info** %5506
	%5510 = getelementptr inbounds %..string, %..string* %5494, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$72b, i64 0, i32 0), i64 4}, %..string* %5510
	store i64 8, i64* %5507
	store i1 false, i1* %5508
	%5511 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 0
	%5512 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5511, i64 0, i32 0
	store %Type_Info** %5493, %Type_Info*** %5512
	%5513 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5511, i64 0, i32 1
	store i64 2, i64* %5513
	%5514 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5511, i64 0, i32 2
	store i64 2, i64* %5514
	%5515 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 1
	%5516 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5515, i64 0, i32 0
	store %..string* %5494, %..string** %5516
	%5517 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5515, i64 0, i32 1
	store i64 2, i64* %5517
	%5518 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5515, i64 0, i32 2
	store i64 2, i64* %5518
	%5519 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 2
	%5520 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5519, i64 0, i32 0
	store i64* %5495, i64** %5520
	%5521 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5519, i64 0, i32 1
	store i64 2, i64* %5521
	%5522 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5519, i64 0, i32 2
	store i64 2, i64* %5522
	%5523 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5489, i64 0, i32 3
	%5524 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5523, i64 0, i32 0
	store i1* %5496, i1** %5524
	%5525 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5523, i64 0, i32 1
	store i64 2, i64* %5525
	%5526 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5523, i64 0, i32 2
	store i64 2, i64* %5526
	%5527 = getelementptr inbounds %Type_Info, %Type_Info* %5485, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5527
	%5528 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 195
	%5529 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 1
	store i64 8, i64* %5529
	%5530 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 2
	store i64 8, i64* %5530
	; Type_Info_Pointer
	%5531 = bitcast %Type_Info* %5528 to %Type_Info.Pointer*
	%5532 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 196
	%5533 = bitcast %Type_Info* %5532 to %Type_Info*
	%5534 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %5531, i64 0, i32 2
	store %Type_Info* %5533, %Type_Info** %5534
	%5535 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %5535
	%5536 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 196
	%5537 = getelementptr inbounds %Type_Info, %Type_Info* %5536, i64 0, i32 1
	store i64 128, i64* %5537
	%5538 = getelementptr inbounds %Type_Info, %Type_Info* %5536, i64 0, i32 2
	store i64 8, i64* %5538
	; Type_Info_Named
	%5539 = bitcast %Type_Info* %5536 to %Type_Info.Named*
	%5540 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 197
	%5541 = bitcast %Type_Info* %5540 to %Type_Info*
	%5542 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5539, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$72c, i64 0, i32 0), i64 6}, %..string* %5542
	%5543 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5539, i64 0, i32 3
	store %Type_Info* %5541, %Type_Info** %5543
	%5544 = getelementptr inbounds %Type_Info, %Type_Info* %5536, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5544
	%5545 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 197
	%5546 = getelementptr inbounds %Type_Info, %Type_Info* %5545, i64 0, i32 1
	store i64 128, i64* %5546
	%5547 = getelementptr inbounds %Type_Info, %Type_Info* %5545, i64 0, i32 2
	store i64 8, i64* %5547
	; Type_Info_Union
	%5548 = bitcast %Type_Info* %5545 to %Type_Info.Union*
	%5549 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5548, i64 0, i32 2
	%5550 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 294
	%5551 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 294
	%5552 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 129
	%5553 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%5554 = bitcast %Type_Info* %5553 to %Type_Info*
	%5555 = getelementptr inbounds %Type_Info*, %Type_Info** %5550, i64 0
	%5556 = getelementptr inbounds i64, i64* %5552, i64 0
	%5557 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5557, %Type_Info** %5555
	%5558 = getelementptr inbounds %..string, %..string* %5551, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$72d, i64 0, i32 0), i64 4}, %..string* %5558
	store i64 0, i64* %5556
	%5559 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5560 = bitcast %Type_Info* %5559 to %Type_Info*
	%5561 = getelementptr inbounds %Type_Info*, %Type_Info** %5550, i64 1
	%5562 = getelementptr inbounds i64, i64* %5552, i64 1
	%5563 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %5563, %Type_Info** %5561
	%5564 = getelementptr inbounds %..string, %..string* %5551, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$72e, i64 0, i32 0), i64 4}, %..string* %5564
	store i64 8, i64* %5562
	%5565 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5549, i64 0, i32 0
	%5566 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5565, i64 0, i32 0
	store %Type_Info** %5550, %Type_Info*** %5566
	%5567 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5565, i64 0, i32 1
	store i64 2, i64* %5567
	%5568 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5565, i64 0, i32 2
	store i64 2, i64* %5568
	%5569 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5549, i64 0, i32 1
	%5570 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5569, i64 0, i32 0
	store %..string* %5551, %..string** %5570
	%5571 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5569, i64 0, i32 1
	store i64 2, i64* %5571
	%5572 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5569, i64 0, i32 2
	store i64 2, i64* %5572
	%5573 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5549, i64 0, i32 2
	%5574 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5573, i64 0, i32 0
	store i64* %5552, i64** %5574
	%5575 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5573, i64 0, i32 1
	store i64 2, i64* %5575
	%5576 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5573, i64 0, i32 2
	store i64 2, i64* %5576
	%5577 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5548, i64 0, i32 3
	%5578 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5548, i64 0, i32 4
	%5579 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 296
	%5580 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 296
	%5581 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	%5582 = bitcast %Type_Info* %5581 to %Type_Info*
	%5583 = getelementptr inbounds %Type_Info*, %Type_Info** %5580, i64 0
	%5584 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	store %Type_Info* %5584, %Type_Info** %5583
	%5585 = getelementptr inbounds %..string, %..string* %5579, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$72f, i64 0, i32 0), i64 5}, %..string* %5585
	%5586 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 216
	%5587 = bitcast %Type_Info* %5586 to %Type_Info*
	%5588 = getelementptr inbounds %Type_Info*, %Type_Info** %5580, i64 1
	%5589 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 216
	store %Type_Info* %5589, %Type_Info** %5588
	%5590 = getelementptr inbounds %..string, %..string* %5579, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$730, i64 0, i32 0), i64 5}, %..string* %5590
	%5591 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5577, i64 0, i32 0
	store %..string* %5579, %..string** %5591
	%5592 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5577, i64 0, i32 1
	store i64 2, i64* %5592
	%5593 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5577, i64 0, i32 2
	store i64 2, i64* %5593
	%5594 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5578, i64 0, i32 0
	store %Type_Info** %5580, %Type_Info*** %5594
	%5595 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5578, i64 0, i32 1
	store i64 2, i64* %5595
	%5596 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5578, i64 0, i32 2
	store i64 2, i64* %5596
	%5597 = getelementptr inbounds %Type_Info, %Type_Info* %5545, i64 0, i32 4 ; UnionTagPtr
	store i64 19, i64* %5597
	%5598 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	%5599 = getelementptr inbounds %Type_Info, %Type_Info* %5598, i64 0, i32 1
	store i64 120, i64* %5599
	%5600 = getelementptr inbounds %Type_Info, %Type_Info* %5598, i64 0, i32 2
	store i64 8, i64* %5600
	; Type_Info_Named
	%5601 = bitcast %Type_Info* %5598 to %Type_Info.Named*
	%5602 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 199
	%5603 = bitcast %Type_Info* %5602 to %Type_Info*
	%5604 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5601, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$731, i64 0, i32 0), i64 5}, %..string* %5604
	%5605 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5601, i64 0, i32 3
	store %Type_Info* %5603, %Type_Info** %5605
	%5606 = getelementptr inbounds %Type_Info, %Type_Info* %5598, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5606
	%5607 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 199
	%5608 = getelementptr inbounds %Type_Info, %Type_Info* %5607, i64 0, i32 1
	store i64 120, i64* %5608
	%5609 = getelementptr inbounds %Type_Info, %Type_Info* %5607, i64 0, i32 2
	store i64 8, i64* %5609
	; Type_Info_Struct
	%5610 = bitcast %Type_Info* %5607 to %Type_Info.Struct*
	%5611 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5610, i64 0, i32 2
	%5612 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 4
	store i1 false, i1* %5612
	%5613 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 5
	store i1 true, i1* %5613
	%5614 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 6
	store i1 false, i1* %5614
	%5615 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 298
	%5616 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 298
	%5617 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 131
	%5618 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 125
	%5619 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%5620 = bitcast %Type_Info* %5619 to %Type_Info*
	%5621 = getelementptr inbounds %Type_Info*, %Type_Info** %5615, i64 0
	%5622 = getelementptr inbounds i64, i64* %5617, i64 0
	%5623 = getelementptr inbounds i1, i1* %5618, i64 0
	%5624 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5624, %Type_Info** %5621
	%5625 = getelementptr inbounds %..string, %..string* %5616, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$732, i64 0, i32 0), i64 4}, %..string* %5625
	store i64 0, i64* %5622
	store i1 false, i1* %5623
	%5626 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5627 = bitcast %Type_Info* %5626 to %Type_Info*
	%5628 = getelementptr inbounds %Type_Info*, %Type_Info** %5615, i64 1
	%5629 = getelementptr inbounds i64, i64* %5617, i64 1
	%5630 = getelementptr inbounds i1, i1* %5618, i64 1
	%5631 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %5631, %Type_Info** %5628
	%5632 = getelementptr inbounds %..string, %..string* %5616, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$733, i64 0, i32 0), i64 4}, %..string* %5632
	store i64 8, i64* %5629
	store i1 false, i1* %5630
	%5633 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 200
	%5634 = bitcast %Type_Info* %5633 to %Type_Info*
	%5635 = getelementptr inbounds %Type_Info*, %Type_Info** %5615, i64 2
	%5636 = getelementptr inbounds i64, i64* %5617, i64 2
	%5637 = getelementptr inbounds i1, i1* %5618, i64 2
	%5638 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 200
	store %Type_Info* %5638, %Type_Info** %5635
	%5639 = getelementptr inbounds %..string, %..string* %5616, i64 2
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$734, i64 0, i32 0), i64 1}, %..string* %5639
	store i64 24, i64* %5636
	store i1 false, i1* %5637
	%5640 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 0
	%5641 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5640, i64 0, i32 0
	store %Type_Info** %5615, %Type_Info*** %5641
	%5642 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5640, i64 0, i32 1
	store i64 3, i64* %5642
	%5643 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5640, i64 0, i32 2
	store i64 3, i64* %5643
	%5644 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 1
	%5645 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5644, i64 0, i32 0
	store %..string* %5616, %..string** %5645
	%5646 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5644, i64 0, i32 1
	store i64 3, i64* %5646
	%5647 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5644, i64 0, i32 2
	store i64 3, i64* %5647
	%5648 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 2
	%5649 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5648, i64 0, i32 0
	store i64* %5617, i64** %5649
	%5650 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5648, i64 0, i32 1
	store i64 3, i64* %5650
	%5651 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5648, i64 0, i32 2
	store i64 3, i64* %5651
	%5652 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5611, i64 0, i32 3
	%5653 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5652, i64 0, i32 0
	store i1* %5618, i1** %5653
	%5654 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5652, i64 0, i32 1
	store i64 3, i64* %5654
	%5655 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5652, i64 0, i32 2
	store i64 3, i64* %5655
	%5656 = getelementptr inbounds %Type_Info, %Type_Info* %5607, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5656
	%5657 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 200
	%5658 = getelementptr inbounds %Type_Info, %Type_Info* %5657, i64 0, i32 1
	store i64 96, i64* %5658
	%5659 = getelementptr inbounds %Type_Info, %Type_Info* %5657, i64 0, i32 2
	store i64 8, i64* %5659
	; Type_Info_Named
	%5660 = bitcast %Type_Info* %5657 to %Type_Info.Named*
	%5661 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 201
	%5662 = bitcast %Type_Info* %5661 to %Type_Info*
	%5663 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5660, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$735, i64 0, i32 0), i64 5}, %..string* %5663
	%5664 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5660, i64 0, i32 3
	store %Type_Info* %5662, %Type_Info** %5664
	%5665 = getelementptr inbounds %Type_Info, %Type_Info* %5657, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5665
	%5666 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 201
	%5667 = getelementptr inbounds %Type_Info, %Type_Info* %5666, i64 0, i32 1
	store i64 96, i64* %5667
	%5668 = getelementptr inbounds %Type_Info, %Type_Info* %5666, i64 0, i32 2
	store i64 8, i64* %5668
	; Type_Info_Union
	%5669 = bitcast %Type_Info* %5666 to %Type_Info.Union*
	%5670 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5669, i64 0, i32 2
	%5671 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 301
	%5672 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 301
	%5673 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 134
	%5674 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%5675 = bitcast %Type_Info* %5674 to %Type_Info*
	%5676 = getelementptr inbounds %Type_Info*, %Type_Info** %5671, i64 0
	%5677 = getelementptr inbounds i64, i64* %5673, i64 0
	%5678 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	store %Type_Info* %5678, %Type_Info** %5676
	%5679 = getelementptr inbounds %..string, %..string* %5672, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$736, i64 0, i32 0), i64 9}, %..string* %5679
	store i64 0, i64* %5677
	%5680 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%5681 = bitcast %Type_Info* %5680 to %Type_Info*
	%5682 = getelementptr inbounds %Type_Info*, %Type_Info** %5671, i64 1
	%5683 = getelementptr inbounds i64, i64* %5673, i64 1
	%5684 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5684, %Type_Info** %5682
	%5685 = getelementptr inbounds %..string, %..string* %5672, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$737, i64 0, i32 0), i64 6}, %..string* %5685
	store i64 56, i64* %5683
	%5686 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%5687 = bitcast %Type_Info* %5686 to %Type_Info*
	%5688 = getelementptr inbounds %Type_Info*, %Type_Info** %5671, i64 2
	%5689 = getelementptr inbounds i64, i64* %5673, i64 2
	%5690 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %5690, %Type_Info** %5688
	%5691 = getelementptr inbounds %..string, %..string* %5672, i64 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$738, i64 0, i32 0), i64 11}, %..string* %5691
	store i64 64, i64* %5689
	%5692 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%5693 = bitcast %Type_Info* %5692 to %Type_Info*
	%5694 = getelementptr inbounds %Type_Info*, %Type_Info** %5671, i64 3
	%5695 = getelementptr inbounds i64, i64* %5673, i64 3
	%5696 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %5696, %Type_Info** %5694
	%5697 = getelementptr inbounds %..string, %..string* %5672, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$739, i64 0, i32 0), i64 7}, %..string* %5697
	store i64 72, i64* %5695
	%5698 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5670, i64 0, i32 0
	%5699 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5698, i64 0, i32 0
	store %Type_Info** %5671, %Type_Info*** %5699
	%5700 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5698, i64 0, i32 1
	store i64 4, i64* %5700
	%5701 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5698, i64 0, i32 2
	store i64 4, i64* %5701
	%5702 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5670, i64 0, i32 1
	%5703 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5702, i64 0, i32 0
	store %..string* %5672, %..string** %5703
	%5704 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5702, i64 0, i32 1
	store i64 4, i64* %5704
	%5705 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5702, i64 0, i32 2
	store i64 4, i64* %5705
	%5706 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %5670, i64 0, i32 2
	%5707 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5706, i64 0, i32 0
	store i64* %5673, i64** %5707
	%5708 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5706, i64 0, i32 1
	store i64 4, i64* %5708
	%5709 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5706, i64 0, i32 2
	store i64 4, i64* %5709
	%5710 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5669, i64 0, i32 3
	%5711 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %5669, i64 0, i32 4
	%5712 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 305
	%5713 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 305
	%5714 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%5715 = bitcast %Type_Info* %5714 to %Type_Info*
	%5716 = getelementptr inbounds %Type_Info*, %Type_Info** %5713, i64 0
	%5717 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	store %Type_Info* %5717, %Type_Info** %5716
	%5718 = getelementptr inbounds %..string, %..string* %5712, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$73a, i64 0, i32 0), i64 5}, %..string* %5718
	%5719 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 214
	%5720 = bitcast %Type_Info* %5719 to %Type_Info*
	%5721 = getelementptr inbounds %Type_Info*, %Type_Info** %5713, i64 1
	%5722 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 214
	store %Type_Info* %5722, %Type_Info** %5721
	%5723 = getelementptr inbounds %..string, %..string* %5712, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$73b, i64 0, i32 0), i64 4}, %..string* %5723
	%5724 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5710, i64 0, i32 0
	store %..string* %5712, %..string** %5724
	%5725 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5710, i64 0, i32 1
	store i64 2, i64* %5725
	%5726 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5710, i64 0, i32 2
	store i64 2, i64* %5726
	%5727 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5711, i64 0, i32 0
	store %Type_Info** %5713, %Type_Info*** %5727
	%5728 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5711, i64 0, i32 1
	store i64 2, i64* %5728
	%5729 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5711, i64 0, i32 2
	store i64 2, i64* %5729
	%5730 = getelementptr inbounds %Type_Info, %Type_Info* %5666, i64 0, i32 4 ; UnionTagPtr
	store i64 19, i64* %5730
	%5731 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%5732 = getelementptr inbounds %Type_Info, %Type_Info* %5731, i64 0, i32 1
	store i64 80, i64* %5732
	%5733 = getelementptr inbounds %Type_Info, %Type_Info* %5731, i64 0, i32 2
	store i64 8, i64* %5733
	; Type_Info_Named
	%5734 = bitcast %Type_Info* %5731 to %Type_Info.Named*
	%5735 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 203
	%5736 = bitcast %Type_Info* %5735 to %Type_Info*
	%5737 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5734, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$73c, i64 0, i32 0), i64 5}, %..string* %5737
	%5738 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5734, i64 0, i32 3
	store %Type_Info* %5736, %Type_Info** %5738
	%5739 = getelementptr inbounds %Type_Info, %Type_Info* %5731, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5739
	%5740 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 203
	%5741 = getelementptr inbounds %Type_Info, %Type_Info* %5740, i64 0, i32 1
	store i64 80, i64* %5741
	%5742 = getelementptr inbounds %Type_Info, %Type_Info* %5740, i64 0, i32 2
	store i64 8, i64* %5742
	; Type_Info_Struct
	%5743 = bitcast %Type_Info* %5740 to %Type_Info.Struct*
	%5744 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5743, i64 0, i32 2
	%5745 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 4
	store i1 false, i1* %5745
	%5746 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 5
	store i1 true, i1* %5746
	%5747 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 6
	store i1 false, i1* %5747
	%5748 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 307
	%5749 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 307
	%5750 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 138
	%5751 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 128
	%5752 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%5753 = bitcast %Type_Info* %5752 to %Type_Info*
	%5754 = getelementptr inbounds %Type_Info*, %Type_Info** %5748, i64 0
	%5755 = getelementptr inbounds i64, i64* %5750, i64 0
	%5756 = getelementptr inbounds i1, i1* %5751, i64 0
	%5757 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	store %Type_Info* %5757, %Type_Info** %5754
	%5758 = getelementptr inbounds %..string, %..string* %5749, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$73d, i64 0, i32 0), i64 9}, %..string* %5758
	store i64 0, i64* %5755
	store i1 true, i1* %5756
	%5759 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%5760 = bitcast %Type_Info* %5759 to %Type_Info*
	%5761 = getelementptr inbounds %Type_Info*, %Type_Info** %5748, i64 1
	%5762 = getelementptr inbounds i64, i64* %5750, i64 1
	%5763 = getelementptr inbounds i1, i1* %5751, i64 1
	%5764 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %5764, %Type_Info** %5761
	%5765 = getelementptr inbounds %..string, %..string* %5749, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$73e, i64 0, i32 0), i64 6}, %..string* %5765
	store i64 56, i64* %5762
	store i1 false, i1* %5763
	%5766 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%5767 = bitcast %Type_Info* %5766 to %Type_Info*
	%5768 = getelementptr inbounds %Type_Info*, %Type_Info** %5748, i64 2
	%5769 = getelementptr inbounds i64, i64* %5750, i64 2
	%5770 = getelementptr inbounds i1, i1* %5751, i64 2
	%5771 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %5771, %Type_Info** %5768
	%5772 = getelementptr inbounds %..string, %..string* %5749, i64 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$73f, i64 0, i32 0), i64 11}, %..string* %5772
	store i64 64, i64* %5769
	store i1 false, i1* %5770
	%5773 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%5774 = bitcast %Type_Info* %5773 to %Type_Info*
	%5775 = getelementptr inbounds %Type_Info*, %Type_Info** %5748, i64 3
	%5776 = getelementptr inbounds i64, i64* %5750, i64 3
	%5777 = getelementptr inbounds i1, i1* %5751, i64 3
	%5778 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %5778, %Type_Info** %5775
	%5779 = getelementptr inbounds %..string, %..string* %5749, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$740, i64 0, i32 0), i64 7}, %..string* %5779
	store i64 72, i64* %5776
	store i1 false, i1* %5777
	%5780 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 0
	%5781 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5780, i64 0, i32 0
	store %Type_Info** %5748, %Type_Info*** %5781
	%5782 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5780, i64 0, i32 1
	store i64 4, i64* %5782
	%5783 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5780, i64 0, i32 2
	store i64 4, i64* %5783
	%5784 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 1
	%5785 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5784, i64 0, i32 0
	store %..string* %5749, %..string** %5785
	%5786 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5784, i64 0, i32 1
	store i64 4, i64* %5786
	%5787 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5784, i64 0, i32 2
	store i64 4, i64* %5787
	%5788 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 2
	%5789 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5788, i64 0, i32 0
	store i64* %5750, i64** %5789
	%5790 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5788, i64 0, i32 1
	store i64 4, i64* %5790
	%5791 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5788, i64 0, i32 2
	store i64 4, i64* %5791
	%5792 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5744, i64 0, i32 3
	%5793 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5792, i64 0, i32 0
	store i1* %5751, i1** %5793
	%5794 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5792, i64 0, i32 1
	store i64 4, i64* %5794
	%5795 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5792, i64 0, i32 2
	store i64 4, i64* %5795
	%5796 = getelementptr inbounds %Type_Info, %Type_Info* %5740, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5796
	%5797 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%5798 = getelementptr inbounds %Type_Info, %Type_Info* %5797, i64 0, i32 1
	store i64 56, i64* %5798
	%5799 = getelementptr inbounds %Type_Info, %Type_Info* %5797, i64 0, i32 2
	store i64 8, i64* %5799
	; Type_Info_Named
	%5800 = bitcast %Type_Info* %5797 to %Type_Info.Named*
	%5801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 205
	%5802 = bitcast %Type_Info* %5801 to %Type_Info*
	%5803 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5800, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$741, i64 0, i32 0), i64 11}, %..string* %5803
	%5804 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5800, i64 0, i32 3
	store %Type_Info* %5802, %Type_Info** %5804
	%5805 = getelementptr inbounds %Type_Info, %Type_Info* %5797, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5805
	%5806 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 205
	%5807 = getelementptr inbounds %Type_Info, %Type_Info* %5806, i64 0, i32 1
	store i64 56, i64* %5807
	%5808 = getelementptr inbounds %Type_Info, %Type_Info* %5806, i64 0, i32 2
	store i64 8, i64* %5808
	; Type_Info_Struct
	%5809 = bitcast %Type_Info* %5806 to %Type_Info.Struct*
	%5810 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5809, i64 0, i32 2
	%5811 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 4
	store i1 false, i1* %5811
	%5812 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 5
	store i1 false, i1* %5812
	%5813 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 6
	store i1 false, i1* %5813
	%5814 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 311
	%5815 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 311
	%5816 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 142
	%5817 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 132
	%5818 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5819 = bitcast %Type_Info* %5818 to %Type_Info*
	%5820 = getelementptr inbounds %Type_Info*, %Type_Info** %5814, i64 0
	%5821 = getelementptr inbounds i64, i64* %5816, i64 0
	%5822 = getelementptr inbounds i1, i1* %5817, i64 0
	%5823 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %5823, %Type_Info** %5820
	%5824 = getelementptr inbounds %..string, %..string* %5815, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$742, i64 0, i32 0), i64 8}, %..string* %5824
	store i64 0, i64* %5821
	store i1 false, i1* %5822
	%5825 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5826 = bitcast %Type_Info* %5825 to %Type_Info*
	%5827 = getelementptr inbounds %Type_Info*, %Type_Info** %5814, i64 1
	%5828 = getelementptr inbounds i64, i64* %5816, i64 1
	%5829 = getelementptr inbounds i1, i1* %5817, i64 1
	%5830 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %5830, %Type_Info** %5827
	%5831 = getelementptr inbounds %..string, %..string* %5815, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$743, i64 0, i32 0), i64 5}, %..string* %5831
	store i64 16, i64* %5828
	store i1 false, i1* %5829
	%5832 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%5833 = bitcast %Type_Info* %5832 to %Type_Info*
	%5834 = getelementptr inbounds %Type_Info*, %Type_Info** %5814, i64 2
	%5835 = getelementptr inbounds i64, i64* %5816, i64 2
	%5836 = getelementptr inbounds i1, i1* %5817, i64 2
	%5837 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %5837, %Type_Info** %5834
	%5838 = getelementptr inbounds %..string, %..string* %5815, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$744, i64 0, i32 0), i64 8}, %..string* %5838
	store i64 48, i64* %5835
	store i1 false, i1* %5836
	%5839 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5840 = bitcast %Type_Info* %5839 to %Type_Info*
	%5841 = getelementptr inbounds %Type_Info*, %Type_Info** %5814, i64 3
	%5842 = getelementptr inbounds i64, i64* %5816, i64 3
	%5843 = getelementptr inbounds i1, i1* %5817, i64 3
	%5844 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %5844, %Type_Info** %5841
	%5845 = getelementptr inbounds %..string, %..string* %5815, i64 3
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$745, i64 0, i32 0), i64 12}, %..string* %5845
	store i64 32, i64* %5842
	store i1 false, i1* %5843
	%5846 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 0
	%5847 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5846, i64 0, i32 0
	store %Type_Info** %5814, %Type_Info*** %5847
	%5848 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5846, i64 0, i32 1
	store i64 4, i64* %5848
	%5849 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5846, i64 0, i32 2
	store i64 4, i64* %5849
	%5850 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 1
	%5851 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5850, i64 0, i32 0
	store %..string* %5815, %..string** %5851
	%5852 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5850, i64 0, i32 1
	store i64 4, i64* %5852
	%5853 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5850, i64 0, i32 2
	store i64 4, i64* %5853
	%5854 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 2
	%5855 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5854, i64 0, i32 0
	store i64* %5816, i64** %5855
	%5856 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5854, i64 0, i32 1
	store i64 4, i64* %5856
	%5857 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5854, i64 0, i32 2
	store i64 4, i64* %5857
	%5858 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5810, i64 0, i32 3
	%5859 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5858, i64 0, i32 0
	store i1* %5817, i1** %5859
	%5860 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5858, i64 0, i32 1
	store i64 4, i64* %5860
	%5861 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5858, i64 0, i32 2
	store i64 4, i64* %5861
	%5862 = getelementptr inbounds %Type_Info, %Type_Info* %5806, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5862
	%5863 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5864 = getelementptr inbounds %Type_Info, %Type_Info* %5863, i64 0, i32 1
	store i64 16, i64* %5864
	%5865 = getelementptr inbounds %Type_Info, %Type_Info* %5863, i64 0, i32 2
	store i64 8, i64* %5865
	; Type_Info_Named
	%5866 = bitcast %Type_Info* %5863 to %Type_Info.Named*
	%5867 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5868 = bitcast %Type_Info* %5867 to %Type_Info*
	%5869 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5866, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$746, i64 0, i32 0), i64 4}, %..string* %5869
	%5870 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5866, i64 0, i32 3
	store %Type_Info* %5868, %Type_Info** %5870
	%5871 = getelementptr inbounds %Type_Info, %Type_Info* %5863, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5871
	%5872 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5873 = getelementptr inbounds %Type_Info, %Type_Info* %5872, i64 0, i32 1
	store i64 16, i64* %5873
	%5874 = getelementptr inbounds %Type_Info, %Type_Info* %5872, i64 0, i32 2
	store i64 8, i64* %5874
	; Type_Info_Vector
	%5875 = bitcast %Type_Info* %5872 to %Type_Info.Vector*
	%5876 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%5877 = bitcast %Type_Info* %5876 to %Type_Info*
	%5878 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %5875, i64 0, i32 2
	store %Type_Info* %5877, %Type_Info** %5878
	%5879 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %5875, i64 0, i32 3
	store i64 4, i64* %5879
	%5880 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %5875, i64 0, i32 4
	store i64 3, i64* %5880
	%5881 = getelementptr inbounds %Type_Info, %Type_Info* %5872, i64 0, i32 4 ; UnionTagPtr
	store i64 15, i64* %5881
	%5882 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%5883 = getelementptr inbounds %Type_Info, %Type_Info* %5882, i64 0, i32 1
	store i64 8, i64* %5883
	%5884 = getelementptr inbounds %Type_Info, %Type_Info* %5882, i64 0, i32 2
	store i64 8, i64* %5884
	; Type_Info_Pointer
	%5885 = bitcast %Type_Info* %5882 to %Type_Info.Pointer*
	%5886 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5887 = bitcast %Type_Info* %5886 to %Type_Info*
	%5888 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %5885, i64 0, i32 2
	store %Type_Info* %5887, %Type_Info** %5888
	%5889 = getelementptr inbounds %Type_Info, %Type_Info* %5882, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %5889
	%5890 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5891 = getelementptr inbounds %Type_Info, %Type_Info* %5890, i64 0, i32 1
	store i64 88, i64* %5891
	%5892 = getelementptr inbounds %Type_Info, %Type_Info* %5890, i64 0, i32 2
	store i64 8, i64* %5892
	; Type_Info_Named
	%5893 = bitcast %Type_Info* %5890 to %Type_Info.Named*
	%5894 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 210
	%5895 = bitcast %Type_Info* %5894 to %Type_Info*
	%5896 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5893, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$747, i64 0, i32 0), i64 7}, %..string* %5896
	%5897 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5893, i64 0, i32 3
	store %Type_Info* %5895, %Type_Info** %5897
	%5898 = getelementptr inbounds %Type_Info, %Type_Info* %5890, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5898
	%5899 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 210
	%5900 = getelementptr inbounds %Type_Info, %Type_Info* %5899, i64 0, i32 1
	store i64 88, i64* %5900
	%5901 = getelementptr inbounds %Type_Info, %Type_Info* %5899, i64 0, i32 2
	store i64 8, i64* %5901
	; Type_Info_Struct
	%5902 = bitcast %Type_Info* %5899 to %Type_Info.Struct*
	%5903 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5902, i64 0, i32 2
	%5904 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 4
	store i1 false, i1* %5904
	%5905 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 5
	store i1 true, i1* %5905
	%5906 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 6
	store i1 false, i1* %5906
	%5907 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 315
	%5908 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 315
	%5909 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 146
	%5910 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 136
	%5911 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5912 = bitcast %Type_Info* %5911 to %Type_Info*
	%5913 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 0
	%5914 = getelementptr inbounds i64, i64* %5909, i64 0
	%5915 = getelementptr inbounds i1, i1* %5910, i64 0
	%5916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	store %Type_Info* %5916, %Type_Info** %5913
	%5917 = getelementptr inbounds %..string, %..string* %5908, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$748, i64 0, i32 0), i64 8}, %..string* %5917
	store i64 0, i64* %5914
	store i1 false, i1* %5915
	%5918 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%5919 = bitcast %Type_Info* %5918 to %Type_Info*
	%5920 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 1
	%5921 = getelementptr inbounds i64, i64* %5909, i64 1
	%5922 = getelementptr inbounds i1, i1* %5910, i64 1
	%5923 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %5923, %Type_Info** %5920
	%5924 = getelementptr inbounds %..string, %..string* %5908, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$749, i64 0, i32 0), i64 14}, %..string* %5924
	store i64 56, i64* %5921
	store i1 false, i1* %5922
	%5925 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%5926 = bitcast %Type_Info* %5925 to %Type_Info*
	%5927 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 2
	%5928 = getelementptr inbounds i64, i64* %5909, i64 2
	%5929 = getelementptr inbounds i1, i1* %5910, i64 2
	%5930 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	store %Type_Info* %5930, %Type_Info** %5927
	%5931 = getelementptr inbounds %..string, %..string* %5908, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$74a, i64 0, i32 0), i64 4}, %..string* %5931
	store i64 60, i64* %5928
	store i1 false, i1* %5929
	%5932 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5933 = bitcast %Type_Info* %5932 to %Type_Info*
	%5934 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 3
	%5935 = getelementptr inbounds i64, i64* %5909, i64 3
	%5936 = getelementptr inbounds i1, i1* %5910, i64 3
	%5937 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5937, %Type_Info** %5934
	%5938 = getelementptr inbounds %..string, %..string* %5908, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$74b, i64 0, i32 0), i64 5}, %..string* %5938
	store i64 64, i64* %5935
	store i1 false, i1* %5936
	%5939 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5940 = bitcast %Type_Info* %5939 to %Type_Info*
	%5941 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 4
	%5942 = getelementptr inbounds i64, i64* %5909, i64 4
	%5943 = getelementptr inbounds i1, i1* %5910, i64 4
	%5944 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5944, %Type_Info** %5941
	%5945 = getelementptr inbounds %..string, %..string* %5908, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$74c, i64 0, i32 0), i64 6}, %..string* %5945
	store i64 68, i64* %5942
	store i1 false, i1* %5943
	%5946 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5947 = bitcast %Type_Info* %5946 to %Type_Info*
	%5948 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 5
	%5949 = getelementptr inbounds i64, i64* %5909, i64 5
	%5950 = getelementptr inbounds i1, i1* %5910, i64 5
	%5951 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5951, %Type_Info** %5948
	%5952 = getelementptr inbounds %..string, %..string* %5908, i64 5
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$74d, i64 0, i32 0), i64 4}, %..string* %5952
	store i64 72, i64* %5949
	store i1 false, i1* %5950
	%5953 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%5954 = bitcast %Type_Info* %5953 to %Type_Info*
	%5955 = getelementptr inbounds %Type_Info*, %Type_Info** %5907, i64 6
	%5956 = getelementptr inbounds i64, i64* %5909, i64 6
	%5957 = getelementptr inbounds i1, i1* %5910, i64 6
	%5958 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %5958, %Type_Info** %5955
	%5959 = getelementptr inbounds %..string, %..string* %5908, i64 6
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$74e, i64 0, i32 0), i64 4}, %..string* %5959
	store i64 80, i64* %5956
	store i1 false, i1* %5957
	%5960 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 0
	%5961 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5960, i64 0, i32 0
	store %Type_Info** %5907, %Type_Info*** %5961
	%5962 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5960, i64 0, i32 1
	store i64 7, i64* %5962
	%5963 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %5960, i64 0, i32 2
	store i64 7, i64* %5963
	%5964 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 1
	%5965 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5964, i64 0, i32 0
	store %..string* %5908, %..string** %5965
	%5966 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5964, i64 0, i32 1
	store i64 7, i64* %5966
	%5967 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %5964, i64 0, i32 2
	store i64 7, i64* %5967
	%5968 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 2
	%5969 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5968, i64 0, i32 0
	store i64* %5909, i64** %5969
	%5970 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5968, i64 0, i32 1
	store i64 7, i64* %5970
	%5971 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %5968, i64 0, i32 2
	store i64 7, i64* %5971
	%5972 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5903, i64 0, i32 3
	%5973 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5972, i64 0, i32 0
	store i1* %5910, i1** %5973
	%5974 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5972, i64 0, i32 1
	store i64 7, i64* %5974
	%5975 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %5972, i64 0, i32 2
	store i64 7, i64* %5975
	%5976 = getelementptr inbounds %Type_Info, %Type_Info* %5899, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %5976
	%5977 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5978 = getelementptr inbounds %Type_Info, %Type_Info* %5977, i64 0, i32 1
	store i64 56, i64* %5978
	%5979 = getelementptr inbounds %Type_Info, %Type_Info* %5977, i64 0, i32 2
	store i64 8, i64* %5979
	; Type_Info_Named
	%5980 = bitcast %Type_Info* %5977 to %Type_Info.Named*
	%5981 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 212
	%5982 = bitcast %Type_Info* %5981 to %Type_Info*
	%5983 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5980, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$74f, i64 0, i32 0), i64 10}, %..string* %5983
	%5984 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %5980, i64 0, i32 3
	store %Type_Info* %5982, %Type_Info** %5984
	%5985 = getelementptr inbounds %Type_Info, %Type_Info* %5977, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %5985
	%5986 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 212
	%5987 = getelementptr inbounds %Type_Info, %Type_Info* %5986, i64 0, i32 1
	store i64 56, i64* %5987
	%5988 = getelementptr inbounds %Type_Info, %Type_Info* %5986, i64 0, i32 2
	store i64 8, i64* %5988
	; Type_Info_Struct
	%5989 = bitcast %Type_Info* %5986 to %Type_Info.Struct*
	%5990 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %5989, i64 0, i32 2
	%5991 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 4
	store i1 false, i1* %5991
	%5992 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 5
	store i1 false, i1* %5992
	%5993 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 6
	store i1 false, i1* %5993
	%5994 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 322
	%5995 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 322
	%5996 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 153
	%5997 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 143
	%5998 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5999 = bitcast %Type_Info* %5998 to %Type_Info*
	%6000 = getelementptr inbounds %Type_Info*, %Type_Info** %5994, i64 0
	%6001 = getelementptr inbounds i64, i64* %5996, i64 0
	%6002 = getelementptr inbounds i1, i1* %5997, i64 0
	%6003 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6003, %Type_Info** %6000
	%6004 = getelementptr inbounds %..string, %..string* %5995, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$750, i64 0, i32 0), i64 4}, %..string* %6004
	store i64 0, i64* %6001
	store i1 false, i1* %6002
	%6005 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6006 = bitcast %Type_Info* %6005 to %Type_Info*
	%6007 = getelementptr inbounds %Type_Info*, %Type_Info** %5994, i64 1
	%6008 = getelementptr inbounds i64, i64* %5996, i64 1
	%6009 = getelementptr inbounds i1, i1* %5997, i64 1
	%6010 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6010, %Type_Info** %6007
	%6011 = getelementptr inbounds %..string, %..string* %5995, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$751, i64 0, i32 0), i64 3}, %..string* %6011
	store i64 16, i64* %6008
	store i1 false, i1* %6009
	%6012 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6013 = bitcast %Type_Info* %6012 to %Type_Info*
	%6014 = getelementptr inbounds %Type_Info*, %Type_Info** %5994, i64 2
	%6015 = getelementptr inbounds i64, i64* %5996, i64 2
	%6016 = getelementptr inbounds i1, i1* %5997, i64 2
	%6017 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6017, %Type_Info** %6014
	%6018 = getelementptr inbounds %..string, %..string* %5995, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$752, i64 0, i32 0), i64 4}, %..string* %6018
	store i64 32, i64* %6015
	store i1 false, i1* %6016
	%6019 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%6020 = bitcast %Type_Info* %6019 to %Type_Info*
	%6021 = getelementptr inbounds %Type_Info*, %Type_Info** %5994, i64 3
	%6022 = getelementptr inbounds i64, i64* %5996, i64 3
	%6023 = getelementptr inbounds i1, i1* %5997, i64 3
	%6024 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	store %Type_Info* %6024, %Type_Info** %6021
	%6025 = getelementptr inbounds %..string, %..string* %5995, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$753, i64 0, i32 0), i64 4}, %..string* %6025
	store i64 48, i64* %6022
	store i1 false, i1* %6023
	%6026 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 0
	%6027 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6026, i64 0, i32 0
	store %Type_Info** %5994, %Type_Info*** %6027
	%6028 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6026, i64 0, i32 1
	store i64 4, i64* %6028
	%6029 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6026, i64 0, i32 2
	store i64 4, i64* %6029
	%6030 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 1
	%6031 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6030, i64 0, i32 0
	store %..string* %5995, %..string** %6031
	%6032 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6030, i64 0, i32 1
	store i64 4, i64* %6032
	%6033 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6030, i64 0, i32 2
	store i64 4, i64* %6033
	%6034 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 2
	%6035 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6034, i64 0, i32 0
	store i64* %5996, i64** %6035
	%6036 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6034, i64 0, i32 1
	store i64 4, i64* %6036
	%6037 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6034, i64 0, i32 2
	store i64 4, i64* %6037
	%6038 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %5990, i64 0, i32 3
	%6039 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6038, i64 0, i32 0
	store i1* %5997, i1** %6039
	%6040 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6038, i64 0, i32 1
	store i64 4, i64* %6040
	%6041 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6038, i64 0, i32 2
	store i64 4, i64* %6041
	%6042 = getelementptr inbounds %Type_Info, %Type_Info* %5986, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6042
	%6043 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%6044 = getelementptr inbounds %Type_Info, %Type_Info* %6043, i64 0, i32 1
	store i64 4, i64* %6044
	%6045 = getelementptr inbounds %Type_Info, %Type_Info* %6043, i64 0, i32 2
	store i64 4, i64* %6045
	; Type_Info_Named
	%6046 = bitcast %Type_Info* %6043 to %Type_Info.Named*
	%6047 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%6048 = bitcast %Type_Info* %6047 to %Type_Info*
	%6049 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6046, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$754, i64 0, i32 0), i64 7}, %..string* %6049
	%6050 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6046, i64 0, i32 3
	store %Type_Info* %6048, %Type_Info** %6050
	%6051 = getelementptr inbounds %Type_Info, %Type_Info* %6043, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6051
	%6052 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%6053 = getelementptr inbounds %Type_Info, %Type_Info* %6052, i64 0, i32 1
	store i64 8, i64* %6053
	%6054 = getelementptr inbounds %Type_Info, %Type_Info* %6052, i64 0, i32 2
	store i64 8, i64* %6054
	; Type_Info_Pointer
	%6055 = bitcast %Type_Info* %6052 to %Type_Info.Pointer*
	%6056 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%6057 = bitcast %Type_Info* %6056 to %Type_Info*
	%6058 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6055, i64 0, i32 2
	store %Type_Info* %6057, %Type_Info** %6058
	%6059 = getelementptr inbounds %Type_Info, %Type_Info* %6052, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6059
	%6060 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 214
	%6061 = getelementptr inbounds %Type_Info, %Type_Info* %6060, i64 0, i32 1
	store i64 88, i64* %6061
	%6062 = getelementptr inbounds %Type_Info, %Type_Info* %6060, i64 0, i32 2
	store i64 8, i64* %6062
	; Type_Info_Named
	%6063 = bitcast %Type_Info* %6060 to %Type_Info.Named*
	%6064 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 215
	%6065 = bitcast %Type_Info* %6064 to %Type_Info*
	%6066 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6063, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$755, i64 0, i32 0), i64 4}, %..string* %6066
	%6067 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6063, i64 0, i32 3
	store %Type_Info* %6065, %Type_Info** %6067
	%6068 = getelementptr inbounds %Type_Info, %Type_Info* %6060, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6068
	%6069 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 215
	%6070 = getelementptr inbounds %Type_Info, %Type_Info* %6069, i64 0, i32 1
	store i64 88, i64* %6070
	%6071 = getelementptr inbounds %Type_Info, %Type_Info* %6069, i64 0, i32 2
	store i64 8, i64* %6071
	; Type_Info_Struct
	%6072 = bitcast %Type_Info* %6069 to %Type_Info.Struct*
	%6073 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6072, i64 0, i32 2
	%6074 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 4
	store i1 false, i1* %6074
	%6075 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 5
	store i1 true, i1* %6075
	%6076 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 6
	store i1 false, i1* %6076
	%6077 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 326
	%6078 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 326
	%6079 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 157
	%6080 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 147
	%6081 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%6082 = bitcast %Type_Info* %6081 to %Type_Info*
	%6083 = getelementptr inbounds %Type_Info*, %Type_Info** %6077, i64 0
	%6084 = getelementptr inbounds i64, i64* %6079, i64 0
	%6085 = getelementptr inbounds i1, i1* %6080, i64 0
	%6086 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	store %Type_Info* %6086, %Type_Info** %6083
	%6087 = getelementptr inbounds %..string, %..string* %6078, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$756, i64 0, i32 0), i64 9}, %..string* %6087
	store i64 0, i64* %6084
	store i1 true, i1* %6085
	%6088 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6089 = bitcast %Type_Info* %6088 to %Type_Info*
	%6090 = getelementptr inbounds %Type_Info*, %Type_Info** %6077, i64 1
	%6091 = getelementptr inbounds i64, i64* %6079, i64 1
	%6092 = getelementptr inbounds i1, i1* %6080, i64 1
	%6093 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %6093, %Type_Info** %6090
	%6094 = getelementptr inbounds %..string, %..string* %6078, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$757, i64 0, i32 0), i64 6}, %..string* %6094
	store i64 56, i64* %6091
	store i1 false, i1* %6092
	%6095 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6096 = bitcast %Type_Info* %6095 to %Type_Info*
	%6097 = getelementptr inbounds %Type_Info*, %Type_Info** %6077, i64 2
	%6098 = getelementptr inbounds i64, i64* %6079, i64 2
	%6099 = getelementptr inbounds i1, i1* %6080, i64 2
	%6100 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6100, %Type_Info** %6097
	%6101 = getelementptr inbounds %..string, %..string* %6078, i64 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$758, i64 0, i32 0), i64 11}, %..string* %6101
	store i64 64, i64* %6098
	store i1 false, i1* %6099
	%6102 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6103 = bitcast %Type_Info* %6102 to %Type_Info*
	%6104 = getelementptr inbounds %Type_Info*, %Type_Info** %6077, i64 3
	%6105 = getelementptr inbounds i64, i64* %6079, i64 3
	%6106 = getelementptr inbounds i1, i1* %6080, i64 3
	%6107 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %6107, %Type_Info** %6104
	%6108 = getelementptr inbounds %..string, %..string* %6078, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$759, i64 0, i32 0), i64 7}, %..string* %6108
	store i64 72, i64* %6105
	store i1 false, i1* %6106
	%6109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6110 = bitcast %Type_Info* %6109 to %Type_Info*
	%6111 = getelementptr inbounds %Type_Info*, %Type_Info** %6077, i64 4
	%6112 = getelementptr inbounds i64, i64* %6079, i64 4
	%6113 = getelementptr inbounds i1, i1* %6080, i64 4
	%6114 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6114, %Type_Info** %6111
	%6115 = getelementptr inbounds %..string, %..string* %6078, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$75a, i64 0, i32 0), i64 10}, %..string* %6115
	store i64 80, i64* %6112
	store i1 false, i1* %6113
	%6116 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 0
	%6117 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6116, i64 0, i32 0
	store %Type_Info** %6077, %Type_Info*** %6117
	%6118 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6116, i64 0, i32 1
	store i64 5, i64* %6118
	%6119 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6116, i64 0, i32 2
	store i64 5, i64* %6119
	%6120 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 1
	%6121 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6120, i64 0, i32 0
	store %..string* %6078, %..string** %6121
	%6122 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6120, i64 0, i32 1
	store i64 5, i64* %6122
	%6123 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6120, i64 0, i32 2
	store i64 5, i64* %6123
	%6124 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 2
	%6125 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6124, i64 0, i32 0
	store i64* %6079, i64** %6125
	%6126 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6124, i64 0, i32 1
	store i64 5, i64* %6126
	%6127 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6124, i64 0, i32 2
	store i64 5, i64* %6127
	%6128 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6073, i64 0, i32 3
	%6129 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6128, i64 0, i32 0
	store i1* %6080, i1** %6129
	%6130 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6128, i64 0, i32 1
	store i64 5, i64* %6130
	%6131 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6128, i64 0, i32 2
	store i64 5, i64* %6131
	%6132 = getelementptr inbounds %Type_Info, %Type_Info* %6069, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6132
	%6133 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6134 = getelementptr inbounds %Type_Info, %Type_Info* %6133, i64 0, i32 1
	store i64 8, i64* %6134
	%6135 = getelementptr inbounds %Type_Info, %Type_Info* %6133, i64 0, i32 2
	store i64 8, i64* %6135
	; Type_Info_Pointer
	%6136 = bitcast %Type_Info* %6133 to %Type_Info.Pointer*
	%6137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%6138 = bitcast %Type_Info* %6137 to %Type_Info*
	%6139 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6136, i64 0, i32 2
	store %Type_Info* %6138, %Type_Info** %6139
	%6140 = getelementptr inbounds %Type_Info, %Type_Info* %6133, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6140
	%6141 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6142 = getelementptr inbounds %Type_Info, %Type_Info* %6141, i64 0, i32 1
	store i64 8, i64* %6142
	%6143 = getelementptr inbounds %Type_Info, %Type_Info* %6141, i64 0, i32 2
	store i64 8, i64* %6143
	; Type_Info_Pointer
	%6144 = bitcast %Type_Info* %6141 to %Type_Info.Pointer*
	%6145 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%6146 = bitcast %Type_Info* %6145 to %Type_Info*
	%6147 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6144, i64 0, i32 2
	store %Type_Info* %6146, %Type_Info** %6147
	%6148 = getelementptr inbounds %Type_Info, %Type_Info* %6141, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6148
	%6149 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 216
	%6150 = getelementptr inbounds %Type_Info, %Type_Info* %6149, i64 0, i32 1
	store i64 80, i64* %6150
	%6151 = getelementptr inbounds %Type_Info, %Type_Info* %6149, i64 0, i32 2
	store i64 8, i64* %6151
	; Type_Info_Named
	%6152 = bitcast %Type_Info* %6149 to %Type_Info.Named*
	%6153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 217
	%6154 = bitcast %Type_Info* %6153 to %Type_Info*
	%6155 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6152, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$75b, i64 0, i32 0), i64 5}, %..string* %6155
	%6156 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6152, i64 0, i32 3
	store %Type_Info* %6154, %Type_Info** %6156
	%6157 = getelementptr inbounds %Type_Info, %Type_Info* %6149, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6157
	%6158 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 217
	%6159 = getelementptr inbounds %Type_Info, %Type_Info* %6158, i64 0, i32 1
	store i64 80, i64* %6159
	%6160 = getelementptr inbounds %Type_Info, %Type_Info* %6158, i64 0, i32 2
	store i64 8, i64* %6160
	; Type_Info_Struct
	%6161 = bitcast %Type_Info* %6158 to %Type_Info.Struct*
	%6162 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6161, i64 0, i32 2
	%6163 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 4
	store i1 false, i1* %6163
	%6164 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 5
	store i1 true, i1* %6164
	%6165 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 6
	store i1 false, i1* %6165
	%6166 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 331
	%6167 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 331
	%6168 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 162
	%6169 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 152
	%6170 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6171 = bitcast %Type_Info* %6170 to %Type_Info*
	%6172 = getelementptr inbounds %Type_Info*, %Type_Info** %6166, i64 0
	%6173 = getelementptr inbounds i64, i64* %6168, i64 0
	%6174 = getelementptr inbounds i1, i1* %6169, i64 0
	%6175 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %6175, %Type_Info** %6172
	%6176 = getelementptr inbounds %..string, %..string* %6167, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75c, i64 0, i32 0), i64 4}, %..string* %6176
	store i64 0, i64* %6173
	store i1 false, i1* %6174
	%6177 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6178 = bitcast %Type_Info* %6177 to %Type_Info*
	%6179 = getelementptr inbounds %Type_Info*, %Type_Info** %6166, i64 1
	%6180 = getelementptr inbounds i64, i64* %6168, i64 1
	%6181 = getelementptr inbounds i1, i1* %6169, i64 1
	%6182 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6182, %Type_Info** %6179
	%6183 = getelementptr inbounds %..string, %..string* %6167, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75d, i64 0, i32 0), i64 4}, %..string* %6183
	store i64 8, i64* %6180
	store i1 false, i1* %6181
	%6184 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%6185 = bitcast %Type_Info* %6184 to %Type_Info*
	%6186 = getelementptr inbounds %Type_Info*, %Type_Info** %6166, i64 2
	%6187 = getelementptr inbounds i64, i64* %6168, i64 2
	%6188 = getelementptr inbounds i1, i1* %6169, i64 2
	%6189 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	store %Type_Info* %6189, %Type_Info** %6186
	%6190 = getelementptr inbounds %..string, %..string* %6167, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$75e, i64 0, i32 0), i64 9}, %..string* %6190
	store i64 24, i64* %6187
	store i1 true, i1* %6188
	%6191 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 0
	%6192 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6191, i64 0, i32 0
	store %Type_Info** %6166, %Type_Info*** %6192
	%6193 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6191, i64 0, i32 1
	store i64 3, i64* %6193
	%6194 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6191, i64 0, i32 2
	store i64 3, i64* %6194
	%6195 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 1
	%6196 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6195, i64 0, i32 0
	store %..string* %6167, %..string** %6196
	%6197 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6195, i64 0, i32 1
	store i64 3, i64* %6197
	%6198 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6195, i64 0, i32 2
	store i64 3, i64* %6198
	%6199 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 2
	%6200 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6199, i64 0, i32 0
	store i64* %6168, i64** %6200
	%6201 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6199, i64 0, i32 1
	store i64 3, i64* %6201
	%6202 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6199, i64 0, i32 2
	store i64 3, i64* %6202
	%6203 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6162, i64 0, i32 3
	%6204 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6203, i64 0, i32 0
	store i1* %6169, i1** %6204
	%6205 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6203, i64 0, i32 1
	store i64 3, i64* %6205
	%6206 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6203, i64 0, i32 2
	store i64 3, i64* %6206
	%6207 = getelementptr inbounds %Type_Info, %Type_Info* %6158, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6207
	%6208 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%6209 = getelementptr inbounds %Type_Info, %Type_Info* %6208, i64 0, i32 1
	store i64 8, i64* %6209
	%6210 = getelementptr inbounds %Type_Info, %Type_Info* %6208, i64 0, i32 2
	store i64 8, i64* %6210
	; Type_Info_Pointer
	%6211 = bitcast %Type_Info* %6208 to %Type_Info.Pointer*
	%6212 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%6213 = bitcast %Type_Info* %6212 to %Type_Info*
	%6214 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6211, i64 0, i32 2
	store %Type_Info* %6213, %Type_Info** %6214
	%6215 = getelementptr inbounds %Type_Info, %Type_Info* %6208, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6215
	%6216 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%6217 = getelementptr inbounds %Type_Info, %Type_Info* %6216, i64 0, i32 1
	store i64 8, i64* %6217
	%6218 = getelementptr inbounds %Type_Info, %Type_Info* %6216, i64 0, i32 2
	store i64 8, i64* %6218
	; Type_Info_Pointer
	%6219 = bitcast %Type_Info* %6216 to %Type_Info.Pointer*
	%6220 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%6221 = bitcast %Type_Info* %6220 to %Type_Info*
	%6222 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6219, i64 0, i32 2
	store %Type_Info* %6221, %Type_Info** %6222
	%6223 = getelementptr inbounds %Type_Info, %Type_Info* %6216, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6223
	%6224 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 218
	%6225 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 1
	store i64 8, i64* %6225
	%6226 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 2
	store i64 8, i64* %6226
	; Type_Info_Pointer
	%6227 = bitcast %Type_Info* %6224 to %Type_Info.Pointer*
	%6228 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 219
	%6229 = bitcast %Type_Info* %6228 to %Type_Info*
	%6230 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6227, i64 0, i32 2
	store %Type_Info* %6229, %Type_Info** %6230
	%6231 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6231
	%6232 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 219
	%6233 = getelementptr inbounds %Type_Info, %Type_Info* %6232, i64 0, i32 1
	store i64 56, i64* %6233
	%6234 = getelementptr inbounds %Type_Info, %Type_Info* %6232, i64 0, i32 2
	store i64 8, i64* %6234
	; Type_Info_Named
	%6235 = bitcast %Type_Info* %6232 to %Type_Info.Named*
	%6236 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 220
	%6237 = bitcast %Type_Info* %6236 to %Type_Info*
	%6238 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6235, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$75f, i64 0, i32 0), i64 6}, %..string* %6238
	%6239 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6235, i64 0, i32 3
	store %Type_Info* %6237, %Type_Info** %6239
	%6240 = getelementptr inbounds %Type_Info, %Type_Info* %6232, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6240
	%6241 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 220
	%6242 = getelementptr inbounds %Type_Info, %Type_Info* %6241, i64 0, i32 1
	store i64 56, i64* %6242
	%6243 = getelementptr inbounds %Type_Info, %Type_Info* %6241, i64 0, i32 2
	store i64 8, i64* %6243
	; Type_Info_Struct
	%6244 = bitcast %Type_Info* %6241 to %Type_Info.Struct*
	%6245 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6244, i64 0, i32 2
	%6246 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 4
	store i1 false, i1* %6246
	%6247 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 5
	store i1 false, i1* %6247
	%6248 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 6
	store i1 false, i1* %6248
	%6249 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 334
	%6250 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 334
	%6251 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 165
	%6252 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 155
	%6253 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6254 = bitcast %Type_Info* %6253 to %Type_Info*
	%6255 = getelementptr inbounds %Type_Info*, %Type_Info** %6249, i64 0
	%6256 = getelementptr inbounds i64, i64* %6251, i64 0
	%6257 = getelementptr inbounds i1, i1* %6252, i64 0
	%6258 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %6258, %Type_Info** %6255
	%6259 = getelementptr inbounds %..string, %..string* %6250, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$760, i64 0, i32 0), i64 5}, %..string* %6259
	store i64 24, i64* %6256
	store i1 false, i1* %6257
	%6260 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6261 = bitcast %Type_Info* %6260 to %Type_Info*
	%6262 = getelementptr inbounds %Type_Info*, %Type_Info** %6249, i64 1
	%6263 = getelementptr inbounds i64, i64* %6251, i64 1
	%6264 = getelementptr inbounds i1, i1* %6252, i64 1
	%6265 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %6265, %Type_Info** %6262
	%6266 = getelementptr inbounds %..string, %..string* %6250, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$761, i64 0, i32 0), i64 6}, %..string* %6266
	store i64 32, i64* %6263
	store i1 false, i1* %6264
	%6267 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 221
	%6268 = bitcast %Type_Info* %6267 to %Type_Info*
	%6269 = getelementptr inbounds %Type_Info*, %Type_Info** %6249, i64 2
	%6270 = getelementptr inbounds i64, i64* %6251, i64 2
	%6271 = getelementptr inbounds i1, i1* %6252, i64 2
	%6272 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 221
	store %Type_Info* %6272, %Type_Info** %6269
	%6273 = getelementptr inbounds %..string, %..string* %6250, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$762, i64 0, i32 0), i64 5}, %..string* %6273
	store i64 0, i64* %6270
	store i1 false, i1* %6271
	%6274 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6275 = bitcast %Type_Info* %6274 to %Type_Info*
	%6276 = getelementptr inbounds %Type_Info*, %Type_Info** %6249, i64 3
	%6277 = getelementptr inbounds i64, i64* %6251, i64 3
	%6278 = getelementptr inbounds i1, i1* %6252, i64 3
	%6279 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %6279, %Type_Info** %6276
	%6280 = getelementptr inbounds %..string, %..string* %6250, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$763, i64 0, i32 0), i64 11}, %..string* %6280
	store i64 40, i64* %6277
	store i1 false, i1* %6278
	%6281 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6282 = bitcast %Type_Info* %6281 to %Type_Info*
	%6283 = getelementptr inbounds %Type_Info*, %Type_Info** %6249, i64 4
	%6284 = getelementptr inbounds i64, i64* %6251, i64 4
	%6285 = getelementptr inbounds i1, i1* %6252, i64 4
	%6286 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %6286, %Type_Info** %6283
	%6287 = getelementptr inbounds %..string, %..string* %6250, i64 4
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$764, i64 0, i32 0), i64 12}, %..string* %6287
	store i64 48, i64* %6284
	store i1 false, i1* %6285
	%6288 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 0
	%6289 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6288, i64 0, i32 0
	store %Type_Info** %6249, %Type_Info*** %6289
	%6290 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6288, i64 0, i32 1
	store i64 5, i64* %6290
	%6291 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6288, i64 0, i32 2
	store i64 5, i64* %6291
	%6292 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 1
	%6293 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6292, i64 0, i32 0
	store %..string* %6250, %..string** %6293
	%6294 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6292, i64 0, i32 1
	store i64 5, i64* %6294
	%6295 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6292, i64 0, i32 2
	store i64 5, i64* %6295
	%6296 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 2
	%6297 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6296, i64 0, i32 0
	store i64* %6251, i64** %6297
	%6298 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6296, i64 0, i32 1
	store i64 5, i64* %6298
	%6299 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6296, i64 0, i32 2
	store i64 5, i64* %6299
	%6300 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6245, i64 0, i32 3
	%6301 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6300, i64 0, i32 0
	store i1* %6252, i1** %6301
	%6302 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6300, i64 0, i32 1
	store i64 5, i64* %6302
	%6303 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6300, i64 0, i32 2
	store i64 5, i64* %6303
	%6304 = getelementptr inbounds %Type_Info, %Type_Info* %6241, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6304
	%6305 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 221
	%6306 = getelementptr inbounds %Type_Info, %Type_Info* %6305, i64 0, i32 1
	store i64 24, i64* %6306
	%6307 = getelementptr inbounds %Type_Info, %Type_Info* %6305, i64 0, i32 2
	store i64 8, i64* %6307
	; Type_Info_Slice
	%6308 = bitcast %Type_Info* %6305 to %Type_Info.Slice*
	%6309 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 222
	%6310 = bitcast %Type_Info* %6309 to %Type_Info*
	%6311 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %6308, i64 0, i32 2
	store %Type_Info* %6310, %Type_Info** %6311
	%6312 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %6308, i64 0, i32 3
	store i64 24, i64* %6312
	%6313 = getelementptr inbounds %Type_Info, %Type_Info* %6305, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %6313
	%6314 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 222
	%6315 = getelementptr inbounds %Type_Info, %Type_Info* %6314, i64 0, i32 1
	store i64 24, i64* %6315
	%6316 = getelementptr inbounds %Type_Info, %Type_Info* %6314, i64 0, i32 2
	store i64 8, i64* %6316
	; Type_Info_Slice
	%6317 = bitcast %Type_Info* %6314 to %Type_Info.Slice*
	%6318 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 223
	%6319 = bitcast %Type_Info* %6318 to %Type_Info*
	%6320 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %6317, i64 0, i32 2
	store %Type_Info* %6319, %Type_Info** %6320
	%6321 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %6317, i64 0, i32 3
	store i64 24, i64* %6321
	%6322 = getelementptr inbounds %Type_Info, %Type_Info* %6314, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %6322
	%6323 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 223
	%6324 = getelementptr inbounds %Type_Info, %Type_Info* %6323, i64 0, i32 1
	store i64 24, i64* %6324
	%6325 = getelementptr inbounds %Type_Info, %Type_Info* %6323, i64 0, i32 2
	store i64 8, i64* %6325
	; Type_Info_Named
	%6326 = bitcast %Type_Info* %6323 to %Type_Info.Named*
	%6327 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 224
	%6328 = bitcast %Type_Info* %6327 to %Type_Info*
	%6329 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6326, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$765, i64 0, i32 0), i64 4}, %..string* %6329
	%6330 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6326, i64 0, i32 3
	store %Type_Info* %6328, %Type_Info** %6330
	%6331 = getelementptr inbounds %Type_Info, %Type_Info* %6323, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6331
	%6332 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 224
	%6333 = getelementptr inbounds %Type_Info, %Type_Info* %6332, i64 0, i32 1
	store i64 24, i64* %6333
	%6334 = getelementptr inbounds %Type_Info, %Type_Info* %6332, i64 0, i32 2
	store i64 8, i64* %6334
	; Type_Info_Union
	%6335 = bitcast %Type_Info* %6332 to %Type_Info.Union*
	%6336 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %6335, i64 0, i32 2
	%6337 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 339
	%6338 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 339
	%6339 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 170
	%6340 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%6341 = bitcast %Type_Info* %6340 to %Type_Info*
	%6342 = getelementptr inbounds %Type_Info*, %Type_Info** %6337, i64 0
	%6343 = getelementptr inbounds i64, i64* %6339, i64 0
	%6344 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %6344, %Type_Info** %6342
	%6345 = getelementptr inbounds %..string, %..string* %6338, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$766, i64 0, i32 0), i64 3}, %..string* %6345
	store i64 0, i64* %6343
	%6346 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %6336, i64 0, i32 0
	%6347 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6346, i64 0, i32 0
	store %Type_Info** %6337, %Type_Info*** %6347
	%6348 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6346, i64 0, i32 1
	store i64 1, i64* %6348
	%6349 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6346, i64 0, i32 2
	store i64 1, i64* %6349
	%6350 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %6336, i64 0, i32 1
	%6351 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6350, i64 0, i32 0
	store %..string* %6338, %..string** %6351
	%6352 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6350, i64 0, i32 1
	store i64 1, i64* %6352
	%6353 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6350, i64 0, i32 2
	store i64 1, i64* %6353
	%6354 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %6336, i64 0, i32 2
	%6355 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6354, i64 0, i32 0
	store i64* %6339, i64** %6355
	%6356 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6354, i64 0, i32 1
	store i64 1, i64* %6356
	%6357 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6354, i64 0, i32 2
	store i64 1, i64* %6357
	%6358 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %6335, i64 0, i32 3
	%6359 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %6335, i64 0, i32 4
	%6360 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 340
	%6361 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 340
	%6362 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 225
	%6363 = bitcast %Type_Info* %6362 to %Type_Info*
	%6364 = getelementptr inbounds %Type_Info*, %Type_Info** %6361, i64 0
	%6365 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 225
	store %Type_Info* %6365, %Type_Info** %6364
	%6366 = getelementptr inbounds %..string, %..string* %6360, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$767, i64 0, i32 0), i64 5}, %..string* %6366
	%6367 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 227
	%6368 = bitcast %Type_Info* %6367 to %Type_Info*
	%6369 = getelementptr inbounds %Type_Info*, %Type_Info** %6361, i64 1
	%6370 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 227
	store %Type_Info* %6370, %Type_Info** %6369
	%6371 = getelementptr inbounds %..string, %..string* %6360, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$768, i64 0, i32 0), i64 4}, %..string* %6371
	%6372 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6358, i64 0, i32 0
	store %..string* %6360, %..string** %6372
	%6373 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6358, i64 0, i32 1
	store i64 2, i64* %6373
	%6374 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6358, i64 0, i32 2
	store i64 2, i64* %6374
	%6375 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6359, i64 0, i32 0
	store %Type_Info** %6361, %Type_Info*** %6375
	%6376 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6359, i64 0, i32 1
	store i64 2, i64* %6376
	%6377 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6359, i64 0, i32 2
	store i64 2, i64* %6377
	%6378 = getelementptr inbounds %Type_Info, %Type_Info* %6332, i64 0, i32 4 ; UnionTagPtr
	store i64 19, i64* %6378
	%6379 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 225
	%6380 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 1
	store i64 16, i64* %6380
	%6381 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 2
	store i64 8, i64* %6381
	; Type_Info_Named
	%6382 = bitcast %Type_Info* %6379 to %Type_Info.Named*
	%6383 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%6384 = bitcast %Type_Info* %6383 to %Type_Info*
	%6385 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6382, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$769, i64 0, i32 0), i64 5}, %..string* %6385
	%6386 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6382, i64 0, i32 3
	store %Type_Info* %6384, %Type_Info** %6386
	%6387 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6387
	%6388 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%6389 = getelementptr inbounds %Type_Info, %Type_Info* %6388, i64 0, i32 1
	store i64 16, i64* %6389
	%6390 = getelementptr inbounds %Type_Info, %Type_Info* %6388, i64 0, i32 2
	store i64 8, i64* %6390
	; Type_Info_Struct
	%6391 = bitcast %Type_Info* %6388 to %Type_Info.Struct*
	%6392 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6391, i64 0, i32 2
	%6393 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 4
	store i1 false, i1* %6393
	%6394 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 5
	store i1 true, i1* %6394
	%6395 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 6
	store i1 false, i1* %6395
	%6396 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 342
	%6397 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 342
	%6398 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 171
	%6399 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 160
	%6400 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%6401 = bitcast %Type_Info* %6400 to %Type_Info*
	%6402 = getelementptr inbounds %Type_Info*, %Type_Info** %6396, i64 0
	%6403 = getelementptr inbounds i64, i64* %6398, i64 0
	%6404 = getelementptr inbounds i1, i1* %6399, i64 0
	%6405 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %6405, %Type_Info** %6402
	%6406 = getelementptr inbounds %..string, %..string* %6397, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$76a, i64 0, i32 0), i64 3}, %..string* %6406
	store i64 0, i64* %6403
	store i1 false, i1* %6404
	%6407 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 0
	%6408 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6407, i64 0, i32 0
	store %Type_Info** %6396, %Type_Info*** %6408
	%6409 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6407, i64 0, i32 1
	store i64 1, i64* %6409
	%6410 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6407, i64 0, i32 2
	store i64 1, i64* %6410
	%6411 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 1
	%6412 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6411, i64 0, i32 0
	store %..string* %6397, %..string** %6412
	%6413 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6411, i64 0, i32 1
	store i64 1, i64* %6413
	%6414 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6411, i64 0, i32 2
	store i64 1, i64* %6414
	%6415 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 2
	%6416 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6415, i64 0, i32 0
	store i64* %6398, i64** %6416
	%6417 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6415, i64 0, i32 1
	store i64 1, i64* %6417
	%6418 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6415, i64 0, i32 2
	store i64 1, i64* %6418
	%6419 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6392, i64 0, i32 3
	%6420 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6419, i64 0, i32 0
	store i1* %6399, i1** %6420
	%6421 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6419, i64 0, i32 1
	store i64 1, i64* %6421
	%6422 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6419, i64 0, i32 2
	store i64 1, i64* %6422
	%6423 = getelementptr inbounds %Type_Info, %Type_Info* %6388, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6423
	%6424 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 227
	%6425 = getelementptr inbounds %Type_Info, %Type_Info* %6424, i64 0, i32 1
	store i64 16, i64* %6425
	%6426 = getelementptr inbounds %Type_Info, %Type_Info* %6424, i64 0, i32 2
	store i64 8, i64* %6426
	; Type_Info_Named
	%6427 = bitcast %Type_Info* %6424 to %Type_Info.Named*
	%6428 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%6429 = bitcast %Type_Info* %6428 to %Type_Info*
	%6430 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6427, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$76b, i64 0, i32 0), i64 4}, %..string* %6430
	%6431 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6427, i64 0, i32 3
	store %Type_Info* %6429, %Type_Info** %6431
	%6432 = getelementptr inbounds %Type_Info, %Type_Info* %6424, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6432
	%6433 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%6434 = getelementptr inbounds %Type_Info, %Type_Info* %6433, i64 0, i32 1
	store i64 16, i64* %6434
	%6435 = getelementptr inbounds %Type_Info, %Type_Info* %6433, i64 0, i32 2
	store i64 8, i64* %6435
	; Type_Info_Struct
	%6436 = bitcast %Type_Info* %6433 to %Type_Info.Struct*
	%6437 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6436, i64 0, i32 2
	%6438 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 4
	store i1 false, i1* %6438
	%6439 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 5
	store i1 true, i1* %6439
	%6440 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 6
	store i1 false, i1* %6440
	%6441 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 343
	%6442 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 343
	%6443 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 172
	%6444 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 161
	%6445 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%6446 = bitcast %Type_Info* %6445 to %Type_Info*
	%6447 = getelementptr inbounds %Type_Info*, %Type_Info** %6441, i64 0
	%6448 = getelementptr inbounds i64, i64* %6443, i64 0
	%6449 = getelementptr inbounds i1, i1* %6444, i64 0
	%6450 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %6450, %Type_Info** %6447
	%6451 = getelementptr inbounds %..string, %..string* %6442, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$76c, i64 0, i32 0), i64 3}, %..string* %6451
	store i64 0, i64* %6448
	store i1 false, i1* %6449
	%6452 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 0
	%6453 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6452, i64 0, i32 0
	store %Type_Info** %6441, %Type_Info*** %6453
	%6454 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6452, i64 0, i32 1
	store i64 1, i64* %6454
	%6455 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6452, i64 0, i32 2
	store i64 1, i64* %6455
	%6456 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 1
	%6457 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6456, i64 0, i32 0
	store %..string* %6442, %..string** %6457
	%6458 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6456, i64 0, i32 1
	store i64 1, i64* %6458
	%6459 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6456, i64 0, i32 2
	store i64 1, i64* %6459
	%6460 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 2
	%6461 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6460, i64 0, i32 0
	store i64* %6443, i64** %6461
	%6462 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6460, i64 0, i32 1
	store i64 1, i64* %6462
	%6463 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6460, i64 0, i32 2
	store i64 1, i64* %6463
	%6464 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6437, i64 0, i32 3
	%6465 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6464, i64 0, i32 0
	store i1* %6444, i1** %6465
	%6466 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6464, i64 0, i32 1
	store i64 1, i64* %6466
	%6467 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6464, i64 0, i32 2
	store i64 1, i64* %6467
	%6468 = getelementptr inbounds %Type_Info, %Type_Info* %6433, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6468
	%6469 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 228
	%6470 = getelementptr inbounds %Type_Info, %Type_Info* %6469, i64 0, i32 1
	store i64 8, i64* %6470
	%6471 = getelementptr inbounds %Type_Info, %Type_Info* %6469, i64 0, i32 2
	store i64 8, i64* %6471
	; Type_Info_Pointer
	%6472 = bitcast %Type_Info* %6469 to %Type_Info.Pointer*
	%6473 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 223
	%6474 = bitcast %Type_Info* %6473 to %Type_Info*
	%6475 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6472, i64 0, i32 2
	store %Type_Info* %6474, %Type_Info** %6475
	%6476 = getelementptr inbounds %Type_Info, %Type_Info* %6469, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6476
	%6477 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 229
	%6478 = getelementptr inbounds %Type_Info, %Type_Info* %6477, i64 0, i32 1
	store i64 8, i64* %6478
	%6479 = getelementptr inbounds %Type_Info, %Type_Info* %6477, i64 0, i32 2
	store i64 8, i64* %6479
	; Type_Info_Pointer
	%6480 = bitcast %Type_Info* %6477 to %Type_Info.Pointer*
	%6481 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 222
	%6482 = bitcast %Type_Info* %6481 to %Type_Info*
	%6483 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6480, i64 0, i32 2
	store %Type_Info* %6482, %Type_Info** %6483
	%6484 = getelementptr inbounds %Type_Info, %Type_Info* %6477, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6484
	%6485 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6486 = getelementptr inbounds %Type_Info, %Type_Info* %6485, i64 0, i32 1
	store i64 8, i64* %6486
	%6487 = getelementptr inbounds %Type_Info, %Type_Info* %6485, i64 0, i32 2
	store i64 8, i64* %6487
	; Type_Info_Pointer
	%6488 = bitcast %Type_Info* %6485 to %Type_Info.Pointer*
	%6489 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%6490 = bitcast %Type_Info* %6489 to %Type_Info*
	%6491 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6488, i64 0, i32 2
	store %Type_Info* %6490, %Type_Info** %6491
	%6492 = getelementptr inbounds %Type_Info, %Type_Info* %6485, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6492
	%6493 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%6494 = getelementptr inbounds %Type_Info, %Type_Info* %6493, i64 0, i32 1
	store i64 8, i64* %6494
	%6495 = getelementptr inbounds %Type_Info, %Type_Info* %6493, i64 0, i32 2
	store i64 8, i64* %6495
	; Type_Info_Pointer
	%6496 = bitcast %Type_Info* %6493 to %Type_Info.Pointer*
	%6497 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%6498 = bitcast %Type_Info* %6497 to %Type_Info*
	%6499 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6496, i64 0, i32 2
	store %Type_Info* %6498, %Type_Info** %6499
	%6500 = getelementptr inbounds %Type_Info, %Type_Info* %6493, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6500
	%6501 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 230
	%6502 = getelementptr inbounds %Type_Info, %Type_Info* %6501, i64 0, i32 1
	store i64 8, i64* %6502
	%6503 = getelementptr inbounds %Type_Info, %Type_Info* %6501, i64 0, i32 2
	store i64 8, i64* %6503
	; Type_Info_Pointer
	%6504 = bitcast %Type_Info* %6501 to %Type_Info.Pointer*
	%6505 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 231
	%6506 = bitcast %Type_Info* %6505 to %Type_Info*
	%6507 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6504, i64 0, i32 2
	store %Type_Info* %6506, %Type_Info** %6507
	%6508 = getelementptr inbounds %Type_Info, %Type_Info* %6501, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6508
	%6509 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 231
	%6510 = getelementptr inbounds %Type_Info, %Type_Info* %6509, i64 0, i32 1
	store i64 32, i64* %6510
	%6511 = getelementptr inbounds %Type_Info, %Type_Info* %6509, i64 0, i32 2
	store i64 8, i64* %6511
	; Type_Info_Named
	%6512 = bitcast %Type_Info* %6509 to %Type_Info.Named*
	%6513 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 232
	%6514 = bitcast %Type_Info* %6513 to %Type_Info*
	%6515 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6512, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$76d, i64 0, i32 0), i64 8}, %..string* %6515
	%6516 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6512, i64 0, i32 3
	store %Type_Info* %6514, %Type_Info** %6516
	%6517 = getelementptr inbounds %Type_Info, %Type_Info* %6509, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6517
	%6518 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 232
	%6519 = getelementptr inbounds %Type_Info, %Type_Info* %6518, i64 0, i32 1
	store i64 32, i64* %6519
	%6520 = getelementptr inbounds %Type_Info, %Type_Info* %6518, i64 0, i32 2
	store i64 8, i64* %6520
	; Type_Info_Struct
	%6521 = bitcast %Type_Info* %6518 to %Type_Info.Struct*
	%6522 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6521, i64 0, i32 2
	%6523 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 4
	store i1 false, i1* %6523
	%6524 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 5
	store i1 false, i1* %6524
	%6525 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 6
	store i1 false, i1* %6525
	%6526 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 344
	%6527 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 344
	%6528 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 173
	%6529 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 162
	%6530 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%6531 = bitcast %Type_Info* %6530 to %Type_Info*
	%6532 = getelementptr inbounds %Type_Info*, %Type_Info** %6526, i64 0
	%6533 = getelementptr inbounds i64, i64* %6528, i64 0
	%6534 = getelementptr inbounds i1, i1* %6529, i64 0
	%6535 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %6535, %Type_Info** %6532
	%6536 = getelementptr inbounds %..string, %..string* %6527, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$76e, i64 0, i32 0), i64 3}, %..string* %6536
	store i64 0, i64* %6533
	store i1 false, i1* %6534
	%6537 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6538 = bitcast %Type_Info* %6537 to %Type_Info*
	%6539 = getelementptr inbounds %Type_Info*, %Type_Info** %6526, i64 1
	%6540 = getelementptr inbounds i64, i64* %6528, i64 1
	%6541 = getelementptr inbounds i1, i1* %6529, i64 1
	%6542 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6542, %Type_Info** %6539
	%6543 = getelementptr inbounds %..string, %..string* %6527, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$76f, i64 0, i32 0), i64 3}, %..string* %6543
	store i64 16, i64* %6540
	store i1 false, i1* %6541
	%6544 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6545 = bitcast %Type_Info* %6544 to %Type_Info*
	%6546 = getelementptr inbounds %Type_Info*, %Type_Info** %6526, i64 2
	%6547 = getelementptr inbounds i64, i64* %6528, i64 2
	%6548 = getelementptr inbounds i1, i1* %6529, i64 2
	%6549 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6549, %Type_Info** %6546
	%6550 = getelementptr inbounds %..string, %..string* %6527, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$770, i64 0, i32 0), i64 4}, %..string* %6550
	store i64 20, i64* %6547
	store i1 false, i1* %6548
	%6551 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6552 = bitcast %Type_Info* %6551 to %Type_Info*
	%6553 = getelementptr inbounds %Type_Info*, %Type_Info** %6526, i64 3
	%6554 = getelementptr inbounds i64, i64* %6528, i64 3
	%6555 = getelementptr inbounds i1, i1* %6529, i64 3
	%6556 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6556, %Type_Info** %6553
	%6557 = getelementptr inbounds %..string, %..string* %6527, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$771, i64 0, i32 0), i64 4}, %..string* %6557
	store i64 24, i64* %6554
	store i1 false, i1* %6555
	%6558 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%6559 = bitcast %Type_Info* %6558 to %Type_Info*
	%6560 = getelementptr inbounds %Type_Info*, %Type_Info** %6526, i64 4
	%6561 = getelementptr inbounds i64, i64* %6528, i64 4
	%6562 = getelementptr inbounds i1, i1* %6529, i64 4
	%6563 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %6563, %Type_Info** %6560
	%6564 = getelementptr inbounds %..string, %..string* %6527, i64 4
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$772, i64 0, i32 0), i64 3}, %..string* %6564
	store i64 28, i64* %6561
	store i1 false, i1* %6562
	%6565 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 0
	%6566 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6565, i64 0, i32 0
	store %Type_Info** %6526, %Type_Info*** %6566
	%6567 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6565, i64 0, i32 1
	store i64 5, i64* %6567
	%6568 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6565, i64 0, i32 2
	store i64 5, i64* %6568
	%6569 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 1
	%6570 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6569, i64 0, i32 0
	store %..string* %6527, %..string** %6570
	%6571 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6569, i64 0, i32 1
	store i64 5, i64* %6571
	%6572 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6569, i64 0, i32 2
	store i64 5, i64* %6572
	%6573 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 2
	%6574 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6573, i64 0, i32 0
	store i64* %6528, i64** %6574
	%6575 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6573, i64 0, i32 1
	store i64 5, i64* %6575
	%6576 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6573, i64 0, i32 2
	store i64 5, i64* %6576
	%6577 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6522, i64 0, i32 3
	%6578 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6577, i64 0, i32 0
	store i1* %6529, i1** %6578
	%6579 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6577, i64 0, i32 1
	store i64 5, i64* %6579
	%6580 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6577, i64 0, i32 2
	store i64 5, i64* %6580
	%6581 = getelementptr inbounds %Type_Info, %Type_Info* %6518, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6581
	%6582 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 233
	%6583 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 1
	store i64 56, i64* %6583
	%6584 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 2
	store i64 8, i64* %6584
	; Type_Info_Named
	%6585 = bitcast %Type_Info* %6582 to %Type_Info.Named*
	%6586 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6587 = bitcast %Type_Info* %6586 to %Type_Info*
	%6588 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6585, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$773, i64 0, i32 0), i64 6}, %..string* %6588
	%6589 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6585, i64 0, i32 3
	store %Type_Info* %6587, %Type_Info** %6589
	%6590 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6590
	%6591 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6592 = getelementptr inbounds %Type_Info, %Type_Info* %6591, i64 0, i32 1
	store i64 56, i64* %6592
	%6593 = getelementptr inbounds %Type_Info, %Type_Info* %6591, i64 0, i32 2
	store i64 8, i64* %6593
	; Type_Info_Struct
	%6594 = bitcast %Type_Info* %6591 to %Type_Info.Struct*
	%6595 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6594, i64 0, i32 2
	%6596 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 4
	store i1 false, i1* %6596
	%6597 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 5
	store i1 false, i1* %6597
	%6598 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 6
	store i1 false, i1* %6598
	%6599 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 349
	%6600 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 349
	%6601 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 178
	%6602 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 167
	%6603 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%6604 = bitcast %Type_Info* %6603 to %Type_Info*
	%6605 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 0
	%6606 = getelementptr inbounds i64, i64* %6601, i64 0
	%6607 = getelementptr inbounds i1, i1* %6602, i64 0
	%6608 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %6608, %Type_Info** %6605
	%6609 = getelementptr inbounds %..string, %..string* %6600, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$774, i64 0, i32 0), i64 9}, %..string* %6609
	store i64 0, i64* %6606
	store i1 false, i1* %6607
	%6610 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%6611 = bitcast %Type_Info* %6610 to %Type_Info*
	%6612 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 1
	%6613 = getelementptr inbounds i64, i64* %6601, i64 1
	%6614 = getelementptr inbounds i1, i1* %6602, i64 1
	%6615 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %6615, %Type_Info** %6612
	%6616 = getelementptr inbounds %..string, %..string* %6600, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$775, i64 0, i32 0), i64 9}, %..string* %6616
	store i64 8, i64* %6613
	store i1 false, i1* %6614
	%6617 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%6618 = bitcast %Type_Info* %6617 to %Type_Info*
	%6619 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 2
	%6620 = getelementptr inbounds i64, i64* %6601, i64 2
	%6621 = getelementptr inbounds i1, i1* %6602, i64 2
	%6622 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %6622, %Type_Info** %6619
	%6623 = getelementptr inbounds %..string, %..string* %6600, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$776, i64 0, i32 0), i64 17}, %..string* %6623
	store i64 16, i64* %6620
	store i1 false, i1* %6621
	%6624 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%6625 = bitcast %Type_Info* %6624 to %Type_Info*
	%6626 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 3
	%6627 = getelementptr inbounds i64, i64* %6601, i64 3
	%6628 = getelementptr inbounds i1, i1* %6602, i64 3
	%6629 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %6629, %Type_Info** %6626
	%6630 = getelementptr inbounds %..string, %..string* %6600, i64 3
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$777, i64 0, i32 0), i64 14}, %..string* %6630
	store i64 24, i64* %6627
	store i1 false, i1* %6628
	%6631 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6632 = bitcast %Type_Info* %6631 to %Type_Info*
	%6633 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 4
	%6634 = getelementptr inbounds i64, i64* %6601, i64 4
	%6635 = getelementptr inbounds i1, i1* %6602, i64 4
	%6636 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6636, %Type_Info** %6633
	%6637 = getelementptr inbounds %..string, %..string* %6600, i64 4
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$778, i64 0, i32 0), i64 20}, %..string* %6637
	store i64 32, i64* %6634
	store i1 false, i1* %6635
	%6638 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6639 = bitcast %Type_Info* %6638 to %Type_Info*
	%6640 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 5
	%6641 = getelementptr inbounds i64, i64* %6601, i64 5
	%6642 = getelementptr inbounds i1, i1* %6602, i64 5
	%6643 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6643, %Type_Info** %6640
	%6644 = getelementptr inbounds %..string, %..string* %6600, i64 5
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$779, i64 0, i32 0), i64 6}, %..string* %6644
	store i64 40, i64* %6641
	store i1 false, i1* %6642
	%6645 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6646 = bitcast %Type_Info* %6645 to %Type_Info*
	%6647 = getelementptr inbounds %Type_Info*, %Type_Info** %6599, i64 6
	%6648 = getelementptr inbounds i64, i64* %6601, i64 6
	%6649 = getelementptr inbounds i1, i1* %6602, i64 6
	%6650 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6650, %Type_Info** %6647
	%6651 = getelementptr inbounds %..string, %..string* %6600, i64 6
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77a, i64 0, i32 0), i64 5}, %..string* %6651
	store i64 48, i64* %6648
	store i1 false, i1* %6649
	%6652 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 0
	%6653 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6652, i64 0, i32 0
	store %Type_Info** %6599, %Type_Info*** %6653
	%6654 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6652, i64 0, i32 1
	store i64 7, i64* %6654
	%6655 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6652, i64 0, i32 2
	store i64 7, i64* %6655
	%6656 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 1
	%6657 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6656, i64 0, i32 0
	store %..string* %6600, %..string** %6657
	%6658 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6656, i64 0, i32 1
	store i64 7, i64* %6658
	%6659 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6656, i64 0, i32 2
	store i64 7, i64* %6659
	%6660 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 2
	%6661 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6660, i64 0, i32 0
	store i64* %6601, i64** %6661
	%6662 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6660, i64 0, i32 1
	store i64 7, i64* %6662
	%6663 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6660, i64 0, i32 2
	store i64 7, i64* %6663
	%6664 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6595, i64 0, i32 3
	%6665 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6664, i64 0, i32 0
	store i1* %6602, i1** %6665
	%6666 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6664, i64 0, i32 1
	store i64 7, i64* %6666
	%6667 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6664, i64 0, i32 2
	store i64 7, i64* %6667
	%6668 = getelementptr inbounds %Type_Info, %Type_Info* %6591, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6668
	%6669 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 235
	%6670 = getelementptr inbounds %Type_Info, %Type_Info* %6669, i64 0, i32 1
	store i64 96, i64* %6670
	%6671 = getelementptr inbounds %Type_Info, %Type_Info* %6669, i64 0, i32 2
	store i64 8, i64* %6671
	; Type_Info_Named
	%6672 = bitcast %Type_Info* %6669 to %Type_Info.Named*
	%6673 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 236
	%6674 = bitcast %Type_Info* %6673 to %Type_Info*
	%6675 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6672, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$77b, i64 0, i32 0), i64 9}, %..string* %6675
	%6676 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6672, i64 0, i32 3
	store %Type_Info* %6674, %Type_Info** %6676
	%6677 = getelementptr inbounds %Type_Info, %Type_Info* %6669, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6677
	%6678 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 236
	%6679 = getelementptr inbounds %Type_Info, %Type_Info* %6678, i64 0, i32 1
	store i64 96, i64* %6679
	%6680 = getelementptr inbounds %Type_Info, %Type_Info* %6678, i64 0, i32 2
	store i64 8, i64* %6680
	; Type_Info_Struct
	%6681 = bitcast %Type_Info* %6678 to %Type_Info.Struct*
	%6682 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6681, i64 0, i32 2
	%6683 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 4
	store i1 false, i1* %6683
	%6684 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 5
	store i1 false, i1* %6684
	%6685 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 6
	store i1 false, i1* %6685
	%6686 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 356
	%6687 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 356
	%6688 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 185
	%6689 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 174
	%6690 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	%6691 = bitcast %Type_Info* %6690 to %Type_Info*
	%6692 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 0
	%6693 = getelementptr inbounds i64, i64* %6688, i64 0
	%6694 = getelementptr inbounds i1, i1* %6689, i64 0
	%6695 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	store %Type_Info* %6695, %Type_Info** %6692
	%6696 = getelementptr inbounds %..string, %..string* %6687, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$77c, i64 0, i32 0), i64 8}, %..string* %6696
	store i64 0, i64* %6693
	store i1 false, i1* %6694
	%6697 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 240
	%6698 = bitcast %Type_Info* %6697 to %Type_Info*
	%6699 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 1
	%6700 = getelementptr inbounds i64, i64* %6688, i64 1
	%6701 = getelementptr inbounds i1, i1* %6689, i64 1
	%6702 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 240
	store %Type_Info* %6702, %Type_Info** %6699
	%6703 = getelementptr inbounds %..string, %..string* %6687, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77d, i64 0, i32 0), i64 5}, %..string* %6703
	store i64 8, i64* %6700
	store i1 false, i1* %6701
	%6704 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 267
	%6705 = bitcast %Type_Info* %6704 to %Type_Info*
	%6706 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 2
	%6707 = getelementptr inbounds i64, i64* %6688, i64 2
	%6708 = getelementptr inbounds i1, i1* %6689, i64 2
	%6709 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 267
	store %Type_Info* %6709, %Type_Info** %6706
	%6710 = getelementptr inbounds %..string, %..string* %6687, i64 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$77e, i64 0, i32 0), i64 13}, %..string* %6710
	store i64 16, i64* %6707
	store i1 false, i1* %6708
	%6711 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%6712 = bitcast %Type_Info* %6711 to %Type_Info*
	%6713 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 3
	%6714 = getelementptr inbounds i64, i64* %6688, i64 3
	%6715 = getelementptr inbounds i1, i1* %6689, i64 3
	%6716 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %6716, %Type_Info** %6713
	%6717 = getelementptr inbounds %..string, %..string* %6687, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77f, i64 0, i32 0), i64 5}, %..string* %6717
	store i64 24, i64* %6714
	store i1 false, i1* %6715
	%6718 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 271
	%6719 = bitcast %Type_Info* %6718 to %Type_Info*
	%6720 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 4
	%6721 = getelementptr inbounds i64, i64* %6688, i64 4
	%6722 = getelementptr inbounds i1, i1* %6689, i64 4
	%6723 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 271
	store %Type_Info* %6723, %Type_Info** %6720
	%6724 = getelementptr inbounds %..string, %..string* %6687, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$780, i64 0, i32 0), i64 10}, %..string* %6724
	store i64 32, i64* %6721
	store i1 false, i1* %6722
	%6725 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 285
	%6726 = bitcast %Type_Info* %6725 to %Type_Info*
	%6727 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 5
	%6728 = getelementptr inbounds i64, i64* %6688, i64 5
	%6729 = getelementptr inbounds i1, i1* %6689, i64 5
	%6730 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 285
	store %Type_Info* %6730, %Type_Info** %6727
	%6731 = getelementptr inbounds %..string, %..string* %6687, i64 5
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$781, i64 0, i32 0), i64 4}, %..string* %6731
	store i64 40, i64* %6728
	store i1 false, i1* %6729
	%6732 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 286
	%6733 = bitcast %Type_Info* %6732 to %Type_Info*
	%6734 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 6
	%6735 = getelementptr inbounds i64, i64* %6688, i64 6
	%6736 = getelementptr inbounds i1, i1* %6689, i64 6
	%6737 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 286
	store %Type_Info* %6737, %Type_Info** %6734
	%6738 = getelementptr inbounds %..string, %..string* %6687, i64 6
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$782, i64 0, i32 0), i64 11}, %..string* %6738
	store i64 48, i64* %6735
	store i1 false, i1* %6736
	%6739 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%6740 = bitcast %Type_Info* %6739 to %Type_Info*
	%6741 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 7
	%6742 = getelementptr inbounds i64, i64* %6688, i64 7
	%6743 = getelementptr inbounds i1, i1* %6689, i64 7
	%6744 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %6744, %Type_Info** %6741
	%6745 = getelementptr inbounds %..string, %..string* %6687, i64 7
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$783, i64 0, i32 0), i64 13}, %..string* %6745
	store i64 88, i64* %6742
	store i1 false, i1* %6743
	%6746 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%6747 = bitcast %Type_Info* %6746 to %Type_Info*
	%6748 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 8
	%6749 = getelementptr inbounds i64, i64* %6688, i64 8
	%6750 = getelementptr inbounds i1, i1* %6689, i64 8
	%6751 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	store %Type_Info* %6751, %Type_Info** %6748
	%6752 = getelementptr inbounds %..string, %..string* %6687, i64 8
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$784, i64 0, i32 0), i64 11}, %..string* %6752
	store i64 56, i64* %6749
	store i1 false, i1* %6750
	%6753 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 289
	%6754 = bitcast %Type_Info* %6753 to %Type_Info*
	%6755 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 9
	%6756 = getelementptr inbounds i64, i64* %6688, i64 9
	%6757 = getelementptr inbounds i1, i1* %6689, i64 9
	%6758 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 289
	store %Type_Info* %6758, %Type_Info** %6755
	%6759 = getelementptr inbounds %..string, %..string* %6687, i64 9
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$785, i64 0, i32 0), i64 14}, %..string* %6759
	store i64 72, i64* %6756
	store i1 false, i1* %6757
	%6760 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%6761 = bitcast %Type_Info* %6760 to %Type_Info*
	%6762 = getelementptr inbounds %Type_Info*, %Type_Info** %6686, i64 10
	%6763 = getelementptr inbounds i64, i64* %6688, i64 10
	%6764 = getelementptr inbounds i1, i1* %6689, i64 10
	%6765 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	store %Type_Info* %6765, %Type_Info** %6762
	%6766 = getelementptr inbounds %..string, %..string* %6687, i64 10
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$786, i64 0, i32 0), i64 10}, %..string* %6766
	store i64 64, i64* %6763
	store i1 false, i1* %6764
	%6767 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 0
	%6768 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6767, i64 0, i32 0
	store %Type_Info** %6686, %Type_Info*** %6768
	%6769 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6767, i64 0, i32 1
	store i64 11, i64* %6769
	%6770 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6767, i64 0, i32 2
	store i64 11, i64* %6770
	%6771 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 1
	%6772 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6771, i64 0, i32 0
	store %..string* %6687, %..string** %6772
	%6773 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6771, i64 0, i32 1
	store i64 11, i64* %6773
	%6774 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6771, i64 0, i32 2
	store i64 11, i64* %6774
	%6775 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 2
	%6776 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6775, i64 0, i32 0
	store i64* %6688, i64** %6776
	%6777 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6775, i64 0, i32 1
	store i64 11, i64* %6777
	%6778 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6775, i64 0, i32 2
	store i64 11, i64* %6778
	%6779 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6682, i64 0, i32 3
	%6780 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6779, i64 0, i32 0
	store i1* %6689, i1** %6780
	%6781 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6779, i64 0, i32 1
	store i64 11, i64* %6781
	%6782 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6779, i64 0, i32 2
	store i64 11, i64* %6782
	%6783 = getelementptr inbounds %Type_Info, %Type_Info* %6678, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6783
	%6784 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	%6785 = getelementptr inbounds %Type_Info, %Type_Info* %6784, i64 0, i32 1
	store i64 8, i64* %6785
	%6786 = getelementptr inbounds %Type_Info, %Type_Info* %6784, i64 0, i32 2
	store i64 8, i64* %6786
	; Type_Info_Pointer
	%6787 = bitcast %Type_Info* %6784 to %Type_Info.Pointer*
	%6788 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%6789 = bitcast %Type_Info* %6788 to %Type_Info*
	%6790 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6787, i64 0, i32 2
	store %Type_Info* %6789, %Type_Info** %6790
	%6791 = getelementptr inbounds %Type_Info, %Type_Info* %6784, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6791
	%6792 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%6793 = getelementptr inbounds %Type_Info, %Type_Info* %6792, i64 0, i32 1
	store i64 3, i64* %6793
	%6794 = getelementptr inbounds %Type_Info, %Type_Info* %6792, i64 0, i32 2
	store i64 1, i64* %6794
	; Type_Info_Named
	%6795 = bitcast %Type_Info* %6792 to %Type_Info.Named*
	%6796 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	%6797 = bitcast %Type_Info* %6796 to %Type_Info*
	%6798 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6795, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$787, i64 0, i32 0), i64 9}, %..string* %6798
	%6799 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6795, i64 0, i32 3
	store %Type_Info* %6797, %Type_Info** %6799
	%6800 = getelementptr inbounds %Type_Info, %Type_Info* %6792, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6800
	%6801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	%6802 = getelementptr inbounds %Type_Info, %Type_Info* %6801, i64 0, i32 1
	store i64 3, i64* %6802
	%6803 = getelementptr inbounds %Type_Info, %Type_Info* %6801, i64 0, i32 2
	store i64 1, i64* %6803
	; Type_Info_Struct
	%6804 = bitcast %Type_Info* %6801 to %Type_Info.Struct*
	%6805 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6804, i64 0, i32 2
	%6806 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 4
	store i1 false, i1* %6806
	%6807 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 5
	store i1 false, i1* %6807
	%6808 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 6
	store i1 false, i1* %6808
	%6809 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 367
	%6810 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 367
	%6811 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 196
	%6812 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 185
	%6813 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%6814 = bitcast %Type_Info* %6813 to %Type_Info*
	%6815 = getelementptr inbounds %Type_Info*, %Type_Info** %6809, i64 0
	%6816 = getelementptr inbounds i64, i64* %6811, i64 0
	%6817 = getelementptr inbounds i1, i1* %6812, i64 0
	%6818 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %6818, %Type_Info** %6815
	%6819 = getelementptr inbounds %..string, %..string* %6810, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$788, i64 0, i32 0), i64 10}, %..string* %6819
	store i64 0, i64* %6816
	store i1 false, i1* %6817
	%6820 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%6821 = bitcast %Type_Info* %6820 to %Type_Info*
	%6822 = getelementptr inbounds %Type_Info*, %Type_Info** %6809, i64 1
	%6823 = getelementptr inbounds i64, i64* %6811, i64 1
	%6824 = getelementptr inbounds i1, i1* %6812, i64 1
	%6825 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %6825, %Type_Info** %6822
	%6826 = getelementptr inbounds %..string, %..string* %6810, i64 1
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$789, i64 0, i32 0), i64 13}, %..string* %6826
	store i64 1, i64* %6823
	store i1 false, i1* %6824
	%6827 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%6828 = bitcast %Type_Info* %6827 to %Type_Info*
	%6829 = getelementptr inbounds %Type_Info*, %Type_Info** %6809, i64 2
	%6830 = getelementptr inbounds i64, i64* %6811, i64 2
	%6831 = getelementptr inbounds i1, i1* %6812, i64 2
	%6832 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %6832, %Type_Info** %6829
	%6833 = getelementptr inbounds %..string, %..string* %6810, i64 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$78a, i64 0, i32 0), i64 14}, %..string* %6833
	store i64 2, i64* %6830
	store i1 false, i1* %6831
	%6834 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 0
	%6835 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6834, i64 0, i32 0
	store %Type_Info** %6809, %Type_Info*** %6835
	%6836 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6834, i64 0, i32 1
	store i64 3, i64* %6836
	%6837 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6834, i64 0, i32 2
	store i64 3, i64* %6837
	%6838 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 1
	%6839 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6838, i64 0, i32 0
	store %..string* %6810, %..string** %6839
	%6840 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6838, i64 0, i32 1
	store i64 3, i64* %6840
	%6841 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6838, i64 0, i32 2
	store i64 3, i64* %6841
	%6842 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 2
	%6843 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6842, i64 0, i32 0
	store i64* %6811, i64** %6843
	%6844 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6842, i64 0, i32 1
	store i64 3, i64* %6844
	%6845 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6842, i64 0, i32 2
	store i64 3, i64* %6845
	%6846 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6805, i64 0, i32 3
	%6847 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6846, i64 0, i32 0
	store i1* %6812, i1** %6847
	%6848 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6846, i64 0, i32 1
	store i64 3, i64* %6848
	%6849 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6846, i64 0, i32 2
	store i64 3, i64* %6849
	%6850 = getelementptr inbounds %Type_Info, %Type_Info* %6801, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6850
	%6851 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 240
	%6852 = getelementptr inbounds %Type_Info, %Type_Info* %6851, i64 0, i32 1
	store i64 8, i64* %6852
	%6853 = getelementptr inbounds %Type_Info, %Type_Info* %6851, i64 0, i32 2
	store i64 8, i64* %6853
	; Type_Info_Pointer
	%6854 = bitcast %Type_Info* %6851 to %Type_Info.Pointer*
	%6855 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	%6856 = bitcast %Type_Info* %6855 to %Type_Info*
	%6857 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6854, i64 0, i32 2
	store %Type_Info* %6856, %Type_Info** %6857
	%6858 = getelementptr inbounds %Type_Info, %Type_Info* %6851, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6858
	%6859 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	%6860 = getelementptr inbounds %Type_Info, %Type_Info* %6859, i64 0, i32 1
	store i64 4288, i64* %6860
	%6861 = getelementptr inbounds %Type_Info, %Type_Info* %6859, i64 0, i32 2
	store i64 8, i64* %6861
	; Type_Info_Named
	%6862 = bitcast %Type_Info* %6859 to %Type_Info.Named*
	%6863 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6864 = bitcast %Type_Info* %6863 to %Type_Info*
	%6865 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6862, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$78b, i64 0, i32 0), i64 7}, %..string* %6865
	%6866 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6862, i64 0, i32 3
	store %Type_Info* %6864, %Type_Info** %6866
	%6867 = getelementptr inbounds %Type_Info, %Type_Info* %6859, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6867
	%6868 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6869 = getelementptr inbounds %Type_Info, %Type_Info* %6868, i64 0, i32 1
	store i64 4288, i64* %6869
	%6870 = getelementptr inbounds %Type_Info, %Type_Info* %6868, i64 0, i32 2
	store i64 8, i64* %6870
	; Type_Info_Struct
	%6871 = bitcast %Type_Info* %6868 to %Type_Info.Struct*
	%6872 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %6871, i64 0, i32 2
	%6873 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 4
	store i1 false, i1* %6873
	%6874 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 5
	store i1 false, i1* %6874
	%6875 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 6
	store i1 false, i1* %6875
	%6876 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 370
	%6877 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 370
	%6878 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 199
	%6879 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 188
	%6880 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%6881 = bitcast %Type_Info* %6880 to %Type_Info*
	%6882 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 0
	%6883 = getelementptr inbounds i64, i64* %6878, i64 0
	%6884 = getelementptr inbounds i1, i1* %6879, i64 0
	%6885 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %6885, %Type_Info** %6882
	%6886 = getelementptr inbounds %..string, %..string* %6877, i64 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$78c, i64 0, i32 0), i64 13}, %..string* %6886
	store i64 4280, i64* %6883
	store i1 false, i1* %6884
	%6887 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%6888 = bitcast %Type_Info* %6887 to %Type_Info*
	%6889 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 1
	%6890 = getelementptr inbounds i64, i64* %6878, i64 1
	%6891 = getelementptr inbounds i1, i1* %6879, i64 1
	%6892 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	store %Type_Info* %6892, %Type_Info** %6889
	%6893 = getelementptr inbounds %..string, %..string* %6877, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$78d, i64 0, i32 0), i64 8}, %..string* %6893
	store i64 4176, i64* %6890
	store i1 false, i1* %6891
	%6894 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 247
	%6895 = bitcast %Type_Info* %6894 to %Type_Info*
	%6896 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 2
	%6897 = getelementptr inbounds i64, i64* %6878, i64 2
	%6898 = getelementptr inbounds i1, i1* %6879, i64 2
	%6899 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 247
	store %Type_Info* %6899, %Type_Info** %6896
	%6900 = getelementptr inbounds %..string, %..string* %6877, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$78e, i64 0, i32 0), i64 8}, %..string* %6900
	store i64 4096, i64* %6897
	store i1 false, i1* %6898
	%6901 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6902 = bitcast %Type_Info* %6901 to %Type_Info*
	%6903 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 3
	%6904 = getelementptr inbounds i64, i64* %6878, i64 3
	%6905 = getelementptr inbounds i1, i1* %6879, i64 3
	%6906 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	store %Type_Info* %6906, %Type_Info** %6903
	%6907 = getelementptr inbounds %..string, %..string* %6877, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$78f, i64 0, i32 0), i64 9}, %..string* %6907
	store i64 0, i64* %6904
	store i1 false, i1* %6905
	%6908 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6909 = bitcast %Type_Info* %6908 to %Type_Info*
	%6910 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 4
	%6911 = getelementptr inbounds i64, i64* %6878, i64 4
	%6912 = getelementptr inbounds i1, i1* %6879, i64 4
	%6913 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	store %Type_Info* %6913, %Type_Info** %6910
	%6914 = getelementptr inbounds %..string, %..string* %6877, i64 4
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$790, i64 0, i32 0), i64 13}, %..string* %6914
	store i64 2048, i64* %6911
	store i1 false, i1* %6912
	%6915 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%6916 = bitcast %Type_Info* %6915 to %Type_Info*
	%6917 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 5
	%6918 = getelementptr inbounds i64, i64* %6878, i64 5
	%6919 = getelementptr inbounds i1, i1* %6879, i64 5
	%6920 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	store %Type_Info* %6920, %Type_Info** %6917
	%6921 = getelementptr inbounds %..string, %..string* %6877, i64 5
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$791, i64 0, i32 0), i64 6}, %..string* %6921
	store i64 4184, i64* %6918
	store i1 false, i1* %6919
	%6922 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%6923 = bitcast %Type_Info* %6922 to %Type_Info*
	%6924 = getelementptr inbounds %Type_Info*, %Type_Info** %6876, i64 6
	%6925 = getelementptr inbounds i64, i64* %6878, i64 6
	%6926 = getelementptr inbounds i1, i1* %6879, i64 6
	%6927 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	store %Type_Info* %6927, %Type_Info** %6924
	%6928 = getelementptr inbounds %..string, %..string* %6877, i64 6
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$792, i64 0, i32 0), i64 10}, %..string* %6928
	store i64 4232, i64* %6925
	store i1 false, i1* %6926
	%6929 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 0
	%6930 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6929, i64 0, i32 0
	store %Type_Info** %6876, %Type_Info*** %6930
	%6931 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6929, i64 0, i32 1
	store i64 7, i64* %6931
	%6932 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %6929, i64 0, i32 2
	store i64 7, i64* %6932
	%6933 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 1
	%6934 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6933, i64 0, i32 0
	store %..string* %6877, %..string** %6934
	%6935 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6933, i64 0, i32 1
	store i64 7, i64* %6935
	%6936 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6933, i64 0, i32 2
	store i64 7, i64* %6936
	%6937 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 2
	%6938 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6937, i64 0, i32 0
	store i64* %6878, i64** %6938
	%6939 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6937, i64 0, i32 1
	store i64 7, i64* %6939
	%6940 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %6937, i64 0, i32 2
	store i64 7, i64* %6940
	%6941 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %6872, i64 0, i32 3
	%6942 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6941, i64 0, i32 0
	store i1* %6879, i1** %6942
	%6943 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6941, i64 0, i32 1
	store i64 7, i64* %6943
	%6944 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %6941, i64 0, i32 2
	store i64 7, i64* %6944
	%6945 = getelementptr inbounds %Type_Info, %Type_Info* %6868, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %6945
	%6946 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6947 = getelementptr inbounds %Type_Info, %Type_Info* %6946, i64 0, i32 1
	store i64 2048, i64* %6947
	%6948 = getelementptr inbounds %Type_Info, %Type_Info* %6946, i64 0, i32 2
	store i64 8, i64* %6948
	; Type_Info_Array
	%6949 = bitcast %Type_Info* %6946 to %Type_Info.Array*
	%6950 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%6951 = bitcast %Type_Info* %6950 to %Type_Info*
	%6952 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %6949, i64 0, i32 2
	store %Type_Info* %6951, %Type_Info** %6952
	%6953 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %6949, i64 0, i32 3
	store i64 8, i64* %6953
	%6954 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %6949, i64 0, i32 4
	store i64 256, i64* %6954
	%6955 = getelementptr inbounds %Type_Info, %Type_Info* %6946, i64 0, i32 4 ; UnionTagPtr
	store i64 12, i64* %6955
	%6956 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%6957 = getelementptr inbounds %Type_Info, %Type_Info* %6956, i64 0, i32 1
	store i64 8, i64* %6957
	%6958 = getelementptr inbounds %Type_Info, %Type_Info* %6956, i64 0, i32 2
	store i64 8, i64* %6958
	; Type_Info_Named
	%6959 = bitcast %Type_Info* %6956 to %Type_Info.Named*
	%6960 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	%6961 = bitcast %Type_Info* %6960 to %Type_Info*
	%6962 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6959, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$793, i64 0, i32 0), i64 12}, %..string* %6962
	%6963 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %6959, i64 0, i32 3
	store %Type_Info* %6961, %Type_Info** %6963
	%6964 = getelementptr inbounds %Type_Info, %Type_Info* %6956, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %6964
	%6965 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	%6966 = getelementptr inbounds %Type_Info, %Type_Info* %6965, i64 0, i32 1
	store i64 8, i64* %6966
	%6967 = getelementptr inbounds %Type_Info, %Type_Info* %6965, i64 0, i32 2
	store i64 8, i64* %6967
	; Type_Info_Enum
	%6968 = bitcast %Type_Info* %6965 to %Type_Info.Enum*
	%6969 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6970 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %6968, i64 0, i32 2
	store %Type_Info* %6969, %Type_Info** %6970
	%6971 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-f5, i64 0, i32 0
	%6972 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-f5, i64 0, i32 0
	%6973 = bitcast {[0 x <8 x i8>], [8 x i8]}* %6972 to i64*
	store i64 0, i64* %6973
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$794, i64 0, i32 0), i64 2}, %..string* %6971
	%6974 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-f5, i64 0, i32 1
	%6975 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-f5, i64 0, i32 1
	%6976 = bitcast {[0 x <8 x i8>], [8 x i8]}* %6975 to i64*
	store i64 1, i64* %6976
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$795, i64 0, i32 0), i64 4}, %..string* %6974
	%6977 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-f5, i64 0, i32 2
	%6978 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-f5, i64 0, i32 2
	%6979 = bitcast {[0 x <8 x i8>], [8 x i8]}* %6978 to i64*
	store i64 2, i64* %6979
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$796, i64 0, i32 0), i64 4}, %..string* %6977
	%6980 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-f5, i64 0, i32 3
	%6981 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-f5, i64 0, i32 3
	%6982 = bitcast {[0 x <8 x i8>], [8 x i8]}* %6981 to i64*
	store i64 3, i64* %6982
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$797, i64 0, i32 0), i64 7}, %..string* %6980
	%6983 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %6968, i64 0, i32 3
	%6984 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-f5, i64 0, i32 0
	%6985 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6983, i64 0, i32 0
	store %..string* %6984, %..string** %6985
	%6986 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %6983, i64 0, i32 1
	store i64 4, i64* %6986
	%6987 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %6968, i64 0, i32 4
	%6988 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-f5, i64 0, i32 0
	%6989 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %6987, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %6988, {[0 x <8 x i8>], [8 x i8]}** %6989
	%6990 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %6987, i64 0, i32 1
	store i64 4, i64* %6990
	%6991 = getelementptr inbounds %Type_Info, %Type_Info* %6965, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %6991
	%6992 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 246
	%6993 = getelementptr inbounds %Type_Info, %Type_Info* %6992, i64 0, i32 1
	store i64 8, i64* %6993
	%6994 = getelementptr inbounds %Type_Info, %Type_Info* %6992, i64 0, i32 2
	store i64 8, i64* %6994
	; Type_Info_Pointer
	%6995 = bitcast %Type_Info* %6992 to %Type_Info.Pointer*
	%6996 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%6997 = bitcast %Type_Info* %6996 to %Type_Info*
	%6998 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %6995, i64 0, i32 2
	store %Type_Info* %6997, %Type_Info** %6998
	%6999 = getelementptr inbounds %Type_Info, %Type_Info* %6992, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %6999
	%7000 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%7001 = getelementptr inbounds %Type_Info, %Type_Info* %7000, i64 0, i32 1
	store i64 2048, i64* %7001
	%7002 = getelementptr inbounds %Type_Info, %Type_Info* %7000, i64 0, i32 2
	store i64 8, i64* %7002
	; Type_Info_Array
	%7003 = bitcast %Type_Info* %7000 to %Type_Info.Array*
	%7004 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%7005 = bitcast %Type_Info* %7004 to %Type_Info*
	%7006 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7003, i64 0, i32 2
	store %Type_Info* %7005, %Type_Info** %7006
	%7007 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7003, i64 0, i32 3
	store i64 8, i64* %7007
	%7008 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7003, i64 0, i32 4
	store i64 256, i64* %7008
	%7009 = getelementptr inbounds %Type_Info, %Type_Info* %7000, i64 0, i32 4 ; UnionTagPtr
	store i64 12, i64* %7009
	%7010 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 246
	%7011 = getelementptr inbounds %Type_Info, %Type_Info* %7010, i64 0, i32 1
	store i64 8, i64* %7011
	%7012 = getelementptr inbounds %Type_Info, %Type_Info* %7010, i64 0, i32 2
	store i64 8, i64* %7012
	; Type_Info_Pointer
	%7013 = bitcast %Type_Info* %7010 to %Type_Info.Pointer*
	%7014 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%7015 = bitcast %Type_Info* %7014 to %Type_Info*
	%7016 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7013, i64 0, i32 2
	store %Type_Info* %7015, %Type_Info** %7016
	%7017 = getelementptr inbounds %Type_Info, %Type_Info* %7010, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7017
	%7018 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 247
	%7019 = getelementptr inbounds %Type_Info, %Type_Info* %7018, i64 0, i32 1
	store i64 80, i64* %7019
	%7020 = getelementptr inbounds %Type_Info, %Type_Info* %7018, i64 0, i32 2
	store i64 8, i64* %7020
	; Type_Info_Map
	%7021 = bitcast %Type_Info* %7018 to %Type_Info.Map*
	%7022 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %7021, i64 0, i32 2
	%7023 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %7021, i64 0, i32 3
	%7024 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %7021, i64 0, i32 4
	%7025 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %7021, i64 0, i32 5
	%7026 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%7027 = bitcast %Type_Info* %7026 to %Type_Info*
	store %Type_Info* %7027, %Type_Info** %7022
	%7028 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 248
	%7029 = bitcast %Type_Info* %7028 to %Type_Info*
	store %Type_Info* %7029, %Type_Info** %7023
	%7030 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	%7031 = bitcast %Type_Info* %7030 to %Type_Info*
	store %Type_Info* %7031, %Type_Info** %7024
	store i64 0, i64* %7025
	%7032 = getelementptr inbounds %Type_Info, %Type_Info* %7018, i64 0, i32 4 ; UnionTagPtr
	store i64 21, i64* %7032
	%7033 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 248
	%7034 = getelementptr inbounds %Type_Info, %Type_Info* %7033, i64 0, i32 1
	store i64 24, i64* %7034
	%7035 = getelementptr inbounds %Type_Info, %Type_Info* %7033, i64 0, i32 2
	store i64 8, i64* %7035
	; Type_Info_Named
	%7036 = bitcast %Type_Info* %7033 to %Type_Info.Named*
	%7037 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 249
	%7038 = bitcast %Type_Info* %7037 to %Type_Info*
	%7039 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7036, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$798, i64 0, i32 0), i64 7}, %..string* %7039
	%7040 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7036, i64 0, i32 3
	store %Type_Info* %7038, %Type_Info** %7040
	%7041 = getelementptr inbounds %Type_Info, %Type_Info* %7033, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7041
	%7042 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 249
	%7043 = getelementptr inbounds %Type_Info, %Type_Info* %7042, i64 0, i32 1
	store i64 24, i64* %7043
	%7044 = getelementptr inbounds %Type_Info, %Type_Info* %7042, i64 0, i32 2
	store i64 8, i64* %7044
	; Type_Info_Struct
	%7045 = bitcast %Type_Info* %7042 to %Type_Info.Struct*
	%7046 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7045, i64 0, i32 2
	%7047 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 4
	store i1 false, i1* %7047
	%7048 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 5
	store i1 false, i1* %7048
	%7049 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 6
	store i1 false, i1* %7049
	%7050 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 377
	%7051 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 377
	%7052 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 206
	%7053 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 195
	%7054 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%7055 = bitcast %Type_Info* %7054 to %Type_Info*
	%7056 = getelementptr inbounds %Type_Info*, %Type_Info** %7050, i64 0
	%7057 = getelementptr inbounds i64, i64* %7052, i64 0
	%7058 = getelementptr inbounds i1, i1* %7053, i64 0
	%7059 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %7059, %Type_Info** %7056
	%7060 = getelementptr inbounds %..string, %..string* %7051, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$799, i64 0, i32 0), i64 2}, %..string* %7060
	store i64 0, i64* %7057
	store i1 false, i1* %7058
	%7061 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%7062 = bitcast %Type_Info* %7061 to %Type_Info*
	%7063 = getelementptr inbounds %Type_Info*, %Type_Info** %7050, i64 1
	%7064 = getelementptr inbounds i64, i64* %7052, i64 1
	%7065 = getelementptr inbounds i1, i1* %7053, i64 1
	%7066 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	store %Type_Info* %7066, %Type_Info** %7063
	%7067 = getelementptr inbounds %..string, %..string* %7051, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$79a, i64 0, i32 0), i64 3}, %..string* %7067
	store i64 16, i64* %7064
	store i1 false, i1* %7065
	%7068 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	%7069 = bitcast %Type_Info* %7068 to %Type_Info*
	%7070 = getelementptr inbounds %Type_Info*, %Type_Info** %7050, i64 2
	%7071 = getelementptr inbounds i64, i64* %7052, i64 2
	%7072 = getelementptr inbounds i1, i1* %7053, i64 2
	%7073 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	store %Type_Info* %7073, %Type_Info** %7070
	%7074 = getelementptr inbounds %..string, %..string* %7051, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$79b, i64 0, i32 0), i64 4}, %..string* %7074
	store i64 20, i64* %7071
	store i1 false, i1* %7072
	%7075 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 0
	%7076 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7075, i64 0, i32 0
	store %Type_Info** %7050, %Type_Info*** %7076
	%7077 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7075, i64 0, i32 1
	store i64 3, i64* %7077
	%7078 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7075, i64 0, i32 2
	store i64 3, i64* %7078
	%7079 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 1
	%7080 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7079, i64 0, i32 0
	store %..string* %7051, %..string** %7080
	%7081 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7079, i64 0, i32 1
	store i64 3, i64* %7081
	%7082 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7079, i64 0, i32 2
	store i64 3, i64* %7082
	%7083 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 2
	%7084 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7083, i64 0, i32 0
	store i64* %7052, i64** %7084
	%7085 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7083, i64 0, i32 1
	store i64 3, i64* %7085
	%7086 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7083, i64 0, i32 2
	store i64 3, i64* %7086
	%7087 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7046, i64 0, i32 3
	%7088 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7087, i64 0, i32 0
	store i1* %7053, i1** %7088
	%7089 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7087, i64 0, i32 1
	store i64 3, i64* %7089
	%7090 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7087, i64 0, i32 2
	store i64 3, i64* %7090
	%7091 = getelementptr inbounds %Type_Info, %Type_Info* %7042, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7091
	%7092 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%7093 = getelementptr inbounds %Type_Info, %Type_Info* %7092, i64 0, i32 1
	store i64 4, i64* %7093
	%7094 = getelementptr inbounds %Type_Info, %Type_Info* %7092, i64 0, i32 2
	store i64 4, i64* %7094
	; Type_Info_Named
	%7095 = bitcast %Type_Info* %7092 to %Type_Info.Named*
	%7096 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	%7097 = bitcast %Type_Info* %7096 to %Type_Info*
	%7098 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7095, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$79c, i64 0, i32 0), i64 8}, %..string* %7098
	%7099 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7095, i64 0, i32 3
	store %Type_Info* %7097, %Type_Info** %7099
	%7100 = getelementptr inbounds %Type_Info, %Type_Info* %7092, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7100
	%7101 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	%7102 = getelementptr inbounds %Type_Info, %Type_Info* %7101, i64 0, i32 1
	store i64 4, i64* %7102
	%7103 = getelementptr inbounds %Type_Info, %Type_Info* %7101, i64 0, i32 2
	store i64 4, i64* %7103
	; Type_Info_Enum
	%7104 = bitcast %Type_Info* %7101 to %Type_Info.Enum*
	%7105 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%7106 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7104, i64 0, i32 2
	store %Type_Info* %7105, %Type_Info** %7106
	%7107 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 0
	%7108 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 0
	%7109 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7108 to i64*
	store i64 1, i64* %7109
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$79d, i64 0, i32 0), i64 7}, %..string* %7107
	%7110 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 1
	%7111 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 1
	%7112 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7111 to i64*
	store i64 2, i64* %7112
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$79e, i64 0, i32 0), i64 7}, %..string* %7110
	%7113 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 2
	%7114 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 2
	%7115 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7114 to i64*
	store i64 3, i64* %7115
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$79f, i64 0, i32 0), i64 6}, %..string* %7113
	%7116 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 3
	%7117 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 3
	%7118 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7117 to i64*
	store i64 4, i64* %7118
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7a0, i64 0, i32 0), i64 7}, %..string* %7116
	%7119 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 4
	%7120 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 4
	%7121 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7120 to i64*
	store i64 8, i64* %7121
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7a1, i64 0, i32 0), i64 4}, %..string* %7119
	%7122 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 5
	%7123 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 5
	%7124 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7123 to i64*
	store i64 9, i64* %7124
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$7a2, i64 0, i32 0), i64 3}, %..string* %7122
	%7125 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 6
	%7126 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 6
	%7127 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7126 to i64*
	store i64 12, i64* %7127
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7a3, i64 0, i32 0), i64 5}, %..string* %7125
	%7128 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 7
	%7129 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 7
	%7130 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7129 to i64*
	store i64 13, i64* %7130
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7a4, i64 0, i32 0), i64 6}, %..string* %7128
	%7131 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 8
	%7132 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 8
	%7133 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7132 to i64*
	store i64 16, i64* %7133
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7a5, i64 0, i32 0), i64 5}, %..string* %7131
	%7134 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 9
	%7135 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 9
	%7136 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7135 to i64*
	store i64 17, i64* %7136
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7a6, i64 0, i32 0), i64 7}, %..string* %7134
	%7137 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 10
	%7138 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 10
	%7139 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7138 to i64*
	store i64 18, i64* %7139
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7a7, i64 0, i32 0), i64 4}, %..string* %7137
	%7140 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 11
	%7141 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 11
	%7142 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7141 to i64*
	store i64 19, i64* %7142
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7a8, i64 0, i32 0), i64 5}, %..string* %7140
	%7143 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 12
	%7144 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 12
	%7145 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7144 to i64*
	store i64 20, i64* %7145
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7a9, i64 0, i32 0), i64 7}, %..string* %7143
	%7146 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 13
	%7147 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 13
	%7148 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7147 to i64*
	store i64 21, i64* %7148
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7aa, i64 0, i32 0), i64 4}, %..string* %7146
	%7149 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 14
	%7150 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 14
	%7151 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7150 to i64*
	store i64 21, i64* %7151
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7ab, i64 0, i32 0), i64 7}, %..string* %7149
	%7152 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 15
	%7153 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 15
	%7154 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7153 to i64*
	store i64 21, i64* %7154
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7ac, i64 0, i32 0), i64 6}, %..string* %7152
	%7155 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 16
	%7156 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 16
	%7157 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7156 to i64*
	store i64 23, i64* %7157
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7ad, i64 0, i32 0), i64 5}, %..string* %7155
	%7158 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 17
	%7159 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 17
	%7160 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7159 to i64*
	store i64 24, i64* %7160
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7ae, i64 0, i32 0), i64 5}, %..string* %7158
	%7161 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 18
	%7162 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 18
	%7163 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7162 to i64*
	store i64 25, i64* %7163
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7af, i64 0, i32 0), i64 5}, %..string* %7161
	%7164 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 19
	%7165 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 19
	%7166 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7165 to i64*
	store i64 25, i64* %7166
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7b0, i64 0, i32 0), i64 5}, %..string* %7164
	%7167 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 20
	%7168 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 20
	%7169 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7168 to i64*
	store i64 27, i64* %7169
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7b1, i64 0, i32 0), i64 6}, %..string* %7167
	%7170 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 21
	%7171 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 21
	%7172 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7171 to i64*
	store i64 28, i64* %7172
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7b2, i64 0, i32 0), i64 7}, %..string* %7170
	%7173 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 22
	%7174 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 22
	%7175 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7174 to i64*
	store i64 29, i64* %7175
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$7b3, i64 0, i32 0), i64 10}, %..string* %7173
	%7176 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 23
	%7177 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 23
	%7178 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7177 to i64*
	store i64 30, i64* %7178
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7b4, i64 0, i32 0), i64 6}, %..string* %7176
	%7179 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 24
	%7180 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 24
	%7181 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7180 to i64*
	store i64 31, i64* %7181
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$7b5, i64 0, i32 0), i64 10}, %..string* %7179
	%7182 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 25
	%7183 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 25
	%7184 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7183 to i64*
	store i64 32, i64* %7184
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7b6, i64 0, i32 0), i64 5}, %..string* %7182
	%7185 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 26
	%7186 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 26
	%7187 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7186 to i64*
	store i64 33, i64* %7187
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7b7, i64 0, i32 0), i64 5}, %..string* %7185
	%7188 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 27
	%7189 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 27
	%7190 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7189 to i64*
	store i64 34, i64* %7190
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7b8, i64 0, i32 0), i64 4}, %..string* %7188
	%7191 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 28
	%7192 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 28
	%7193 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7192 to i64*
	store i64 35, i64* %7193
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$7b9, i64 0, i32 0), i64 3}, %..string* %7191
	%7194 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 29
	%7195 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 29
	%7196 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7195 to i64*
	store i64 36, i64* %7196
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7ba, i64 0, i32 0), i64 4}, %..string* %7194
	%7197 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 30
	%7198 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 30
	%7199 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7198 to i64*
	store i64 37, i64* %7199
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7bb, i64 0, i32 0), i64 4}, %..string* %7197
	%7200 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 31
	%7201 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 31
	%7202 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7201 to i64*
	store i64 38, i64* %7202
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$7bc, i64 0, i32 0), i64 2}, %..string* %7200
	%7203 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 32
	%7204 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 32
	%7205 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7204 to i64*
	store i64 39, i64* %7205
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7bd, i64 0, i32 0), i64 5}, %..string* %7203
	%7206 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 33
	%7207 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 33
	%7208 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7207 to i64*
	store i64 40, i64* %7208
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7be, i64 0, i32 0), i64 4}, %..string* %7206
	%7209 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 34
	%7210 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 34
	%7211 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7210 to i64*
	store i64 41, i64* %7211
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7bf, i64 0, i32 0), i64 6}, %..string* %7209
	%7212 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 35
	%7213 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 35
	%7214 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7213 to i64*
	store i64 42, i64* %7214
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$7c0, i64 0, i32 0), i64 5}, %..string* %7212
	%7215 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 36
	%7216 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 36
	%7217 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7216 to i64*
	store i64 43, i64* %7217
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7c1, i64 0, i32 0), i64 7}, %..string* %7215
	%7218 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 37
	%7219 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 37
	%7220 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7219 to i64*
	store i64 44, i64* %7220
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$7c2, i64 0, i32 0), i64 8}, %..string* %7218
	%7221 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 38
	%7222 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 38
	%7223 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7222 to i64*
	store i64 45, i64* %7223
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7c3, i64 0, i32 0), i64 6}, %..string* %7221
	%7224 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 39
	%7225 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 39
	%7226 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7225 to i64*
	store i64 46, i64* %7226
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7c4, i64 0, i32 0), i64 6}, %..string* %7224
	%7227 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 40
	%7228 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 40
	%7229 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7228 to i64*
	store i64 47, i64* %7229
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7c5, i64 0, i32 0), i64 4}, %..string* %7227
	%7230 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 41
	%7231 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 41
	%7232 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7231 to i64*
	store i64 48, i64* %7232
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7c6, i64 0, i32 0), i64 4}, %..string* %7230
	%7233 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 42
	%7234 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 42
	%7235 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7234 to i64*
	store i64 49, i64* %7235
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7c7, i64 0, i32 0), i64 4}, %..string* %7233
	%7236 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 43
	%7237 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 43
	%7238 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7237 to i64*
	store i64 50, i64* %7238
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7c8, i64 0, i32 0), i64 4}, %..string* %7236
	%7239 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 44
	%7240 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 44
	%7241 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7240 to i64*
	store i64 51, i64* %7241
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7c9, i64 0, i32 0), i64 4}, %..string* %7239
	%7242 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 45
	%7243 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 45
	%7244 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7243 to i64*
	store i64 52, i64* %7244
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7ca, i64 0, i32 0), i64 4}, %..string* %7242
	%7245 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 46
	%7246 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 46
	%7247 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7246 to i64*
	store i64 53, i64* %7247
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7cb, i64 0, i32 0), i64 4}, %..string* %7245
	%7248 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 47
	%7249 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 47
	%7250 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7249 to i64*
	store i64 54, i64* %7250
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7cc, i64 0, i32 0), i64 4}, %..string* %7248
	%7251 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 48
	%7252 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 48
	%7253 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7252 to i64*
	store i64 55, i64* %7253
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7cd, i64 0, i32 0), i64 4}, %..string* %7251
	%7254 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 49
	%7255 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 49
	%7256 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7255 to i64*
	store i64 56, i64* %7256
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7ce, i64 0, i32 0), i64 4}, %..string* %7254
	%7257 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 50
	%7258 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 50
	%7259 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7258 to i64*
	store i64 57, i64* %7259
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7cf, i64 0, i32 0), i64 4}, %..string* %7257
	%7260 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 51
	%7261 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 51
	%7262 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7261 to i64*
	store i64 65, i64* %7262
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d0, i64 0, i32 0), i64 1}, %..string* %7260
	%7263 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 52
	%7264 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 52
	%7265 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7264 to i64*
	store i64 66, i64* %7265
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d1, i64 0, i32 0), i64 1}, %..string* %7263
	%7266 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 53
	%7267 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 53
	%7268 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7267 to i64*
	store i64 67, i64* %7268
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d2, i64 0, i32 0), i64 1}, %..string* %7266
	%7269 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 54
	%7270 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 54
	%7271 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7270 to i64*
	store i64 68, i64* %7271
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d3, i64 0, i32 0), i64 1}, %..string* %7269
	%7272 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 55
	%7273 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 55
	%7274 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7273 to i64*
	store i64 69, i64* %7274
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d4, i64 0, i32 0), i64 1}, %..string* %7272
	%7275 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 56
	%7276 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 56
	%7277 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7276 to i64*
	store i64 70, i64* %7277
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d5, i64 0, i32 0), i64 1}, %..string* %7275
	%7278 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 57
	%7279 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 57
	%7280 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7279 to i64*
	store i64 71, i64* %7280
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d6, i64 0, i32 0), i64 1}, %..string* %7278
	%7281 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 58
	%7282 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 58
	%7283 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7282 to i64*
	store i64 72, i64* %7283
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d7, i64 0, i32 0), i64 1}, %..string* %7281
	%7284 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 59
	%7285 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 59
	%7286 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7285 to i64*
	store i64 73, i64* %7286
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d8, i64 0, i32 0), i64 1}, %..string* %7284
	%7287 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 60
	%7288 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 60
	%7289 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7288 to i64*
	store i64 74, i64* %7289
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7d9, i64 0, i32 0), i64 1}, %..string* %7287
	%7290 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 61
	%7291 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 61
	%7292 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7291 to i64*
	store i64 75, i64* %7292
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7da, i64 0, i32 0), i64 1}, %..string* %7290
	%7293 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 62
	%7294 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 62
	%7295 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7294 to i64*
	store i64 76, i64* %7295
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7db, i64 0, i32 0), i64 1}, %..string* %7293
	%7296 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 63
	%7297 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 63
	%7298 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7297 to i64*
	store i64 77, i64* %7298
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7dc, i64 0, i32 0), i64 1}, %..string* %7296
	%7299 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 64
	%7300 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 64
	%7301 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7300 to i64*
	store i64 78, i64* %7301
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7dd, i64 0, i32 0), i64 1}, %..string* %7299
	%7302 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 65
	%7303 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 65
	%7304 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7303 to i64*
	store i64 79, i64* %7304
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7de, i64 0, i32 0), i64 1}, %..string* %7302
	%7305 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 66
	%7306 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 66
	%7307 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7306 to i64*
	store i64 80, i64* %7307
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7df, i64 0, i32 0), i64 1}, %..string* %7305
	%7308 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 67
	%7309 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 67
	%7310 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7309 to i64*
	store i64 81, i64* %7310
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e0, i64 0, i32 0), i64 1}, %..string* %7308
	%7311 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 68
	%7312 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 68
	%7313 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7312 to i64*
	store i64 82, i64* %7313
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e1, i64 0, i32 0), i64 1}, %..string* %7311
	%7314 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 69
	%7315 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 69
	%7316 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7315 to i64*
	store i64 83, i64* %7316
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e2, i64 0, i32 0), i64 1}, %..string* %7314
	%7317 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 70
	%7318 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 70
	%7319 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7318 to i64*
	store i64 84, i64* %7319
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e3, i64 0, i32 0), i64 1}, %..string* %7317
	%7320 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 71
	%7321 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 71
	%7322 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7321 to i64*
	store i64 85, i64* %7322
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e4, i64 0, i32 0), i64 1}, %..string* %7320
	%7323 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 72
	%7324 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 72
	%7325 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7324 to i64*
	store i64 86, i64* %7325
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e5, i64 0, i32 0), i64 1}, %..string* %7323
	%7326 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 73
	%7327 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 73
	%7328 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7327 to i64*
	store i64 87, i64* %7328
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e6, i64 0, i32 0), i64 1}, %..string* %7326
	%7329 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 74
	%7330 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 74
	%7331 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7330 to i64*
	store i64 88, i64* %7331
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e7, i64 0, i32 0), i64 1}, %..string* %7329
	%7332 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 75
	%7333 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 75
	%7334 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7333 to i64*
	store i64 89, i64* %7334
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e8, i64 0, i32 0), i64 1}, %..string* %7332
	%7335 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 76
	%7336 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 76
	%7337 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7336 to i64*
	store i64 90, i64* %7337
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$7e9, i64 0, i32 0), i64 1}, %..string* %7335
	%7338 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 77
	%7339 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 77
	%7340 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7339 to i64*
	store i64 91, i64* %7340
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7ea, i64 0, i32 0), i64 4}, %..string* %7338
	%7341 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 78
	%7342 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 78
	%7343 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7342 to i64*
	store i64 92, i64* %7343
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7eb, i64 0, i32 0), i64 4}, %..string* %7341
	%7344 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 79
	%7345 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 79
	%7346 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7345 to i64*
	store i64 93, i64* %7346
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$7ec, i64 0, i32 0), i64 4}, %..string* %7344
	%7347 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 80
	%7348 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 80
	%7349 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7348 to i64*
	store i64 96, i64* %7349
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7ed, i64 0, i32 0), i64 7}, %..string* %7347
	%7350 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 81
	%7351 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 81
	%7352 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7351 to i64*
	store i64 97, i64* %7352
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7ee, i64 0, i32 0), i64 7}, %..string* %7350
	%7353 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 82
	%7354 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 82
	%7355 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7354 to i64*
	store i64 98, i64* %7355
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7ef, i64 0, i32 0), i64 7}, %..string* %7353
	%7356 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 83
	%7357 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 83
	%7358 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7357 to i64*
	store i64 99, i64* %7358
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f0, i64 0, i32 0), i64 7}, %..string* %7356
	%7359 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 84
	%7360 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 84
	%7361 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7360 to i64*
	store i64 100, i64* %7361
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f1, i64 0, i32 0), i64 7}, %..string* %7359
	%7362 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 85
	%7363 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 85
	%7364 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7363 to i64*
	store i64 101, i64* %7364
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f2, i64 0, i32 0), i64 7}, %..string* %7362
	%7365 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 86
	%7366 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 86
	%7367 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7366 to i64*
	store i64 102, i64* %7367
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f3, i64 0, i32 0), i64 7}, %..string* %7365
	%7368 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 87
	%7369 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 87
	%7370 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7369 to i64*
	store i64 103, i64* %7370
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f4, i64 0, i32 0), i64 7}, %..string* %7368
	%7371 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 88
	%7372 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 88
	%7373 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7372 to i64*
	store i64 104, i64* %7373
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f5, i64 0, i32 0), i64 7}, %..string* %7371
	%7374 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 89
	%7375 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 89
	%7376 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7375 to i64*
	store i64 105, i64* %7376
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7f6, i64 0, i32 0), i64 7}, %..string* %7374
	%7377 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 90
	%7378 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 90
	%7379 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7378 to i64*
	store i64 106, i64* %7379
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$7f7, i64 0, i32 0), i64 8}, %..string* %7377
	%7380 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 91
	%7381 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 91
	%7382 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7381 to i64*
	store i64 107, i64* %7382
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$7f8, i64 0, i32 0), i64 3}, %..string* %7380
	%7383 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 92
	%7384 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 92
	%7385 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7384 to i64*
	store i64 108, i64* %7385
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$7f9, i64 0, i32 0), i64 9}, %..string* %7383
	%7386 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 93
	%7387 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 93
	%7388 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7387 to i64*
	store i64 109, i64* %7388
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$7fa, i64 0, i32 0), i64 8}, %..string* %7386
	%7389 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 94
	%7390 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 94
	%7391 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7390 to i64*
	store i64 110, i64* %7391
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$7fb, i64 0, i32 0), i64 7}, %..string* %7389
	%7392 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 95
	%7393 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 95
	%7394 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7393 to i64*
	store i64 111, i64* %7394
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$7fc, i64 0, i32 0), i64 6}, %..string* %7392
	%7395 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 96
	%7396 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 96
	%7397 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7396 to i64*
	store i64 112, i64* %7397
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$7fd, i64 0, i32 0), i64 2}, %..string* %7395
	%7398 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 97
	%7399 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 97
	%7400 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7399 to i64*
	store i64 113, i64* %7400
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$7fe, i64 0, i32 0), i64 2}, %..string* %7398
	%7401 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 98
	%7402 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 98
	%7403 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7402 to i64*
	store i64 114, i64* %7403
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$7ff, i64 0, i32 0), i64 2}, %..string* %7401
	%7404 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 99
	%7405 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 99
	%7406 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7405 to i64*
	store i64 115, i64* %7406
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$800, i64 0, i32 0), i64 2}, %..string* %7404
	%7407 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 100
	%7408 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 100
	%7409 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7408 to i64*
	store i64 116, i64* %7409
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$801, i64 0, i32 0), i64 2}, %..string* %7407
	%7410 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 101
	%7411 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 101
	%7412 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7411 to i64*
	store i64 117, i64* %7412
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$802, i64 0, i32 0), i64 2}, %..string* %7410
	%7413 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 102
	%7414 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 102
	%7415 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7414 to i64*
	store i64 118, i64* %7415
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$803, i64 0, i32 0), i64 2}, %..string* %7413
	%7416 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 103
	%7417 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 103
	%7418 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7417 to i64*
	store i64 119, i64* %7418
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$804, i64 0, i32 0), i64 2}, %..string* %7416
	%7419 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 104
	%7420 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 104
	%7421 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7420 to i64*
	store i64 120, i64* %7421
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$805, i64 0, i32 0), i64 2}, %..string* %7419
	%7422 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 105
	%7423 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 105
	%7424 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7423 to i64*
	store i64 121, i64* %7424
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$806, i64 0, i32 0), i64 3}, %..string* %7422
	%7425 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 106
	%7426 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 106
	%7427 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7426 to i64*
	store i64 122, i64* %7427
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$807, i64 0, i32 0), i64 3}, %..string* %7425
	%7428 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 107
	%7429 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 107
	%7430 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7429 to i64*
	store i64 123, i64* %7430
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$808, i64 0, i32 0), i64 3}, %..string* %7428
	%7431 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 108
	%7432 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 108
	%7433 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7432 to i64*
	store i64 124, i64* %7433
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$809, i64 0, i32 0), i64 3}, %..string* %7431
	%7434 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 109
	%7435 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 109
	%7436 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7435 to i64*
	store i64 125, i64* %7436
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80a, i64 0, i32 0), i64 3}, %..string* %7434
	%7437 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 110
	%7438 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 110
	%7439 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7438 to i64*
	store i64 126, i64* %7439
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80b, i64 0, i32 0), i64 3}, %..string* %7437
	%7440 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 111
	%7441 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 111
	%7442 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7441 to i64*
	store i64 127, i64* %7442
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80c, i64 0, i32 0), i64 3}, %..string* %7440
	%7443 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 112
	%7444 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 112
	%7445 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7444 to i64*
	store i64 128, i64* %7445
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80d, i64 0, i32 0), i64 3}, %..string* %7443
	%7446 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 113
	%7447 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 113
	%7448 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7447 to i64*
	store i64 129, i64* %7448
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80e, i64 0, i32 0), i64 3}, %..string* %7446
	%7449 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 114
	%7450 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 114
	%7451 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7450 to i64*
	store i64 130, i64* %7451
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$80f, i64 0, i32 0), i64 3}, %..string* %7449
	%7452 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 115
	%7453 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 115
	%7454 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7453 to i64*
	store i64 131, i64* %7454
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$810, i64 0, i32 0), i64 3}, %..string* %7452
	%7455 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 116
	%7456 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 116
	%7457 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7456 to i64*
	store i64 132, i64* %7457
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$811, i64 0, i32 0), i64 3}, %..string* %7455
	%7458 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 117
	%7459 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 117
	%7460 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7459 to i64*
	store i64 133, i64* %7460
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$812, i64 0, i32 0), i64 3}, %..string* %7458
	%7461 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 118
	%7462 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 118
	%7463 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7462 to i64*
	store i64 134, i64* %7463
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$813, i64 0, i32 0), i64 3}, %..string* %7461
	%7464 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 119
	%7465 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 119
	%7466 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7465 to i64*
	store i64 135, i64* %7466
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$814, i64 0, i32 0), i64 3}, %..string* %7464
	%7467 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 120
	%7468 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 120
	%7469 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7468 to i64*
	store i64 144, i64* %7469
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$815, i64 0, i32 0), i64 7}, %..string* %7467
	%7470 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 121
	%7471 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 121
	%7472 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7471 to i64*
	store i64 145, i64* %7472
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$816, i64 0, i32 0), i64 6}, %..string* %7470
	%7473 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 122
	%7474 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 122
	%7475 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7474 to i64*
	store i64 160, i64* %7475
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$817, i64 0, i32 0), i64 6}, %..string* %7473
	%7476 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 123
	%7477 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 123
	%7478 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7477 to i64*
	store i64 161, i64* %7478
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$818, i64 0, i32 0), i64 6}, %..string* %7476
	%7479 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 124
	%7480 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 124
	%7481 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7480 to i64*
	store i64 162, i64* %7481
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$819, i64 0, i32 0), i64 8}, %..string* %7479
	%7482 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 125
	%7483 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 125
	%7484 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7483 to i64*
	store i64 163, i64* %7484
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$81a, i64 0, i32 0), i64 8}, %..string* %7482
	%7485 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 126
	%7486 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 126
	%7487 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7486 to i64*
	store i64 164, i64* %7487
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$81b, i64 0, i32 0), i64 5}, %..string* %7485
	%7488 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 127
	%7489 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 127
	%7490 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7489 to i64*
	store i64 165, i64* %7490
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$81c, i64 0, i32 0), i64 5}, %..string* %7488
	%7491 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 128
	%7492 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 128
	%7493 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7492 to i64*
	store i64 229, i64* %7493
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$81d, i64 0, i32 0), i64 10}, %..string* %7491
	%7494 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 129
	%7495 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 129
	%7496 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7495 to i64*
	store i64 246, i64* %7496
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$81e, i64 0, i32 0), i64 4}, %..string* %7494
	%7497 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 130
	%7498 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 130
	%7499 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7498 to i64*
	store i64 247, i64* %7499
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$81f, i64 0, i32 0), i64 5}, %..string* %7497
	%7500 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 131
	%7501 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 131
	%7502 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7501 to i64*
	store i64 248, i64* %7502
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$820, i64 0, i32 0), i64 5}, %..string* %7500
	%7503 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 132
	%7504 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 132
	%7505 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7504 to i64*
	store i64 249, i64* %7505
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$821, i64 0, i32 0), i64 5}, %..string* %7503
	%7506 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 133
	%7507 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 133
	%7508 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7507 to i64*
	store i64 250, i64* %7508
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$822, i64 0, i32 0), i64 4}, %..string* %7506
	%7509 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 134
	%7510 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 134
	%7511 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7510 to i64*
	store i64 251, i64* %7511
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$823, i64 0, i32 0), i64 4}, %..string* %7509
	%7512 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 135
	%7513 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 135
	%7514 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7513 to i64*
	store i64 252, i64* %7514
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$824, i64 0, i32 0), i64 6}, %..string* %7512
	%7515 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 136
	%7516 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 136
	%7517 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7516 to i64*
	store i64 253, i64* %7517
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$825, i64 0, i32 0), i64 3}, %..string* %7515
	%7518 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 137
	%7519 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 137
	%7520 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7519 to i64*
	store i64 254, i64* %7520
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$826, i64 0, i32 0), i64 9}, %..string* %7518
	%7521 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7104, i64 0, i32 3
	%7522 = getelementptr inbounds [138 x %..string], [138 x %..string]* @__$enum_names-fb, i64 0, i32 0
	%7523 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7521, i64 0, i32 0
	store %..string* %7522, %..string** %7523
	%7524 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7521, i64 0, i32 1
	store i64 138, i64* %7524
	%7525 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7104, i64 0, i32 4
	%7526 = getelementptr inbounds [138 x {[0 x <8 x i8>], [8 x i8]}], [138 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fb, i64 0, i32 0
	%7527 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %7525, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %7526, {[0 x <8 x i8>], [8 x i8]}** %7527
	%7528 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %7525, i64 0, i32 1
	store i64 138, i64* %7528
	%7529 = getelementptr inbounds %Type_Info, %Type_Info* %7101, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %7529
	%7530 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	%7531 = getelementptr inbounds %Type_Info, %Type_Info* %7530, i64 0, i32 1
	store i64 2, i64* %7531
	%7532 = getelementptr inbounds %Type_Info, %Type_Info* %7530, i64 0, i32 2
	store i64 2, i64* %7532
	; Type_Info_Named
	%7533 = bitcast %Type_Info* %7530 to %Type_Info.Named*
	%7534 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 253
	%7535 = bitcast %Type_Info* %7534 to %Type_Info*
	%7536 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7533, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$827, i64 0, i32 0), i64 7}, %..string* %7536
	%7537 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7533, i64 0, i32 3
	store %Type_Info* %7535, %Type_Info** %7537
	%7538 = getelementptr inbounds %Type_Info, %Type_Info* %7530, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7538
	%7539 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 253
	%7540 = getelementptr inbounds %Type_Info, %Type_Info* %7539, i64 0, i32 1
	store i64 2, i64* %7540
	%7541 = getelementptr inbounds %Type_Info, %Type_Info* %7539, i64 0, i32 2
	store i64 2, i64* %7541
	; Type_Info_Enum
	%7542 = bitcast %Type_Info* %7539 to %Type_Info.Enum*
	%7543 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%7544 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7542, i64 0, i32 2
	store %Type_Info* %7543, %Type_Info** %7544
	%7545 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 0
	%7546 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 0
	%7547 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7546 to i64*
	store i64 1, i64* %7547
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$828, i64 0, i32 0), i64 6}, %..string* %7545
	%7548 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 1
	%7549 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 1
	%7550 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7549 to i64*
	store i64 2, i64* %7550
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$829, i64 0, i32 0), i64 8}, %..string* %7548
	%7551 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 2
	%7552 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 2
	%7553 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7552 to i64*
	store i64 4, i64* %7553
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$82a, i64 0, i32 0), i64 8}, %..string* %7551
	%7554 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 3
	%7555 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 3
	%7556 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7555 to i64*
	store i64 8, i64* %7556
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$82b, i64 0, i32 0), i64 9}, %..string* %7554
	%7557 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 4
	%7558 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 4
	%7559 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7558 to i64*
	store i64 16, i64* %7559
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$82c, i64 0, i32 0), i64 5}, %..string* %7557
	%7560 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 5
	%7561 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 5
	%7562 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7561 to i64*
	store i64 32, i64* %7562
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$82d, i64 0, i32 0), i64 4}, %..string* %7560
	%7563 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 6
	%7564 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 6
	%7565 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7564 to i64*
	store i64 64, i64* %7565
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$82e, i64 0, i32 0), i64 9}, %..string* %7563
	%7566 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 7
	%7567 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 7
	%7568 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7567 to i64*
	store i64 128, i64* %7568
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$82f, i64 0, i32 0), i64 10}, %..string* %7566
	%7569 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 8
	%7570 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 8
	%7571 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7570 to i64*
	store i64 256, i64* %7571
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$830, i64 0, i32 0), i64 12}, %..string* %7569
	%7572 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 9
	%7573 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 9
	%7574 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7573 to i64*
	store i64 512, i64* %7574
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$831, i64 0, i32 0), i64 13}, %..string* %7572
	%7575 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 10
	%7576 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 10
	%7577 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7576 to i64*
	store i64 4096, i64* %7577
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$832, i64 0, i32 0), i64 1}, %..string* %7575
	%7578 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 11
	%7579 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 11
	%7580 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7579 to i64*
	store i64 8192, i64* %7580
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$833, i64 0, i32 0), i64 1}, %..string* %7578
	%7581 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 12
	%7582 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 12
	%7583 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7582 to i64*
	store i64 16384, i64* %7583
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$834, i64 0, i32 0), i64 1}, %..string* %7581
	%7584 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 13
	%7585 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 13
	%7586 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7585 to i64*
	store i64 32768, i64* %7586
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$835, i64 0, i32 0), i64 1}, %..string* %7584
	%7587 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 14
	%7588 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 14
	%7589 = bitcast {[0 x <8 x i8>], [8 x i8]}* %7588 to i64*
	store i64 0, i64* %7589
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$836, i64 0, i32 0), i64 7}, %..string* %7587
	%7590 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7542, i64 0, i32 3
	%7591 = getelementptr inbounds [15 x %..string], [15 x %..string]* @__$enum_names-fd, i64 0, i32 0
	%7592 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7590, i64 0, i32 0
	store %..string* %7591, %..string** %7592
	%7593 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7590, i64 0, i32 1
	store i64 15, i64* %7593
	%7594 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %7542, i64 0, i32 4
	%7595 = getelementptr inbounds [15 x {[0 x <8 x i8>], [8 x i8]}], [15 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-fd, i64 0, i32 0
	%7596 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %7594, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %7595, {[0 x <8 x i8>], [8 x i8]}** %7596
	%7597 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %7594, i64 0, i32 1
	store i64 15, i64* %7597
	%7598 = getelementptr inbounds %Type_Info, %Type_Info* %7539, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %7598
	%7599 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	%7600 = getelementptr inbounds %Type_Info, %Type_Info* %7599, i64 0, i32 1
	store i64 80, i64* %7600
	%7601 = getelementptr inbounds %Type_Info, %Type_Info* %7599, i64 0, i32 2
	store i64 8, i64* %7601
	; Type_Info_Struct
	%7602 = bitcast %Type_Info* %7599 to %Type_Info.Struct*
	%7603 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7602, i64 0, i32 2
	%7604 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 4
	store i1 false, i1* %7604
	%7605 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 5
	store i1 false, i1* %7605
	%7606 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 6
	store i1 false, i1* %7606
	%7607 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 380
	%7608 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 380
	%7609 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 209
	%7610 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 198
	%7611 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%7612 = bitcast %Type_Info* %7611 to %Type_Info*
	%7613 = getelementptr inbounds %Type_Info*, %Type_Info** %7607, i64 0
	%7614 = getelementptr inbounds i64, i64* %7609, i64 0
	%7615 = getelementptr inbounds i1, i1* %7610, i64 0
	%7616 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	store %Type_Info* %7616, %Type_Info** %7613
	%7617 = getelementptr inbounds %..string, %..string* %7608, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$837, i64 0, i32 0), i64 6}, %..string* %7617
	store i64 0, i64* %7614
	store i1 false, i1* %7615
	%7618 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 256
	%7619 = bitcast %Type_Info* %7618 to %Type_Info*
	%7620 = getelementptr inbounds %Type_Info*, %Type_Info** %7607, i64 1
	%7621 = getelementptr inbounds i64, i64* %7609, i64 1
	%7622 = getelementptr inbounds i1, i1* %7610, i64 1
	%7623 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 256
	store %Type_Info* %7623, %Type_Info** %7620
	%7624 = getelementptr inbounds %..string, %..string* %7608, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$838, i64 0, i32 0), i64 7}, %..string* %7624
	store i64 40, i64* %7621
	store i1 false, i1* %7622
	%7625 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 0
	%7626 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7625, i64 0, i32 0
	store %Type_Info** %7607, %Type_Info*** %7626
	%7627 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7625, i64 0, i32 1
	store i64 2, i64* %7627
	%7628 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7625, i64 0, i32 2
	store i64 2, i64* %7628
	%7629 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 1
	%7630 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7629, i64 0, i32 0
	store %..string* %7608, %..string** %7630
	%7631 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7629, i64 0, i32 1
	store i64 2, i64* %7631
	%7632 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7629, i64 0, i32 2
	store i64 2, i64* %7632
	%7633 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 2
	%7634 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7633, i64 0, i32 0
	store i64* %7609, i64** %7634
	%7635 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7633, i64 0, i32 1
	store i64 2, i64* %7635
	%7636 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7633, i64 0, i32 2
	store i64 2, i64* %7636
	%7637 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7603, i64 0, i32 3
	%7638 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7637, i64 0, i32 0
	store i1* %7610, i1** %7638
	%7639 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7637, i64 0, i32 1
	store i64 2, i64* %7639
	%7640 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7637, i64 0, i32 2
	store i64 2, i64* %7640
	%7641 = getelementptr inbounds %Type_Info, %Type_Info* %7599, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7641
	%7642 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%7643 = getelementptr inbounds %Type_Info, %Type_Info* %7642, i64 0, i32 1
	store i64 40, i64* %7643
	%7644 = getelementptr inbounds %Type_Info, %Type_Info* %7642, i64 0, i32 2
	store i64 8, i64* %7644
	; Type_Info_DynamicArray
	%7645 = bitcast %Type_Info* %7642 to %Type_Info.Dynamic_Array*
	%7646 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%7647 = bitcast %Type_Info* %7646 to %Type_Info*
	%7648 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %7645, i64 0, i32 2
	store %Type_Info* %7647, %Type_Info** %7648
	%7649 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %7645, i64 0, i32 3
	store i64 8, i64* %7649
	%7650 = getelementptr inbounds %Type_Info, %Type_Info* %7642, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %7650
	%7651 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%7652 = getelementptr inbounds %Type_Info, %Type_Info* %7651, i64 0, i32 1
	store i64 8, i64* %7652
	%7653 = getelementptr inbounds %Type_Info, %Type_Info* %7651, i64 0, i32 2
	store i64 8, i64* %7653
	; Type_Info_Pointer
	%7654 = bitcast %Type_Info* %7651 to %Type_Info.Pointer*
	%7655 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%7656 = bitcast %Type_Info* %7655 to %Type_Info*
	%7657 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7654, i64 0, i32 2
	store %Type_Info* %7656, %Type_Info** %7657
	%7658 = getelementptr inbounds %Type_Info, %Type_Info* %7651, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7658
	%7659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 256
	%7660 = getelementptr inbounds %Type_Info, %Type_Info* %7659, i64 0, i32 1
	store i64 40, i64* %7660
	%7661 = getelementptr inbounds %Type_Info, %Type_Info* %7659, i64 0, i32 2
	store i64 8, i64* %7661
	; Type_Info_DynamicArray
	%7662 = bitcast %Type_Info* %7659 to %Type_Info.Dynamic_Array*
	%7663 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 257
	%7664 = bitcast %Type_Info* %7663 to %Type_Info*
	%7665 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %7662, i64 0, i32 2
	store %Type_Info* %7664, %Type_Info** %7665
	%7666 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %7662, i64 0, i32 3
	store i64 56, i64* %7666
	%7667 = getelementptr inbounds %Type_Info, %Type_Info* %7659, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %7667
	%7668 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 257
	%7669 = getelementptr inbounds %Type_Info, %Type_Info* %7668, i64 0, i32 1
	store i64 56, i64* %7669
	%7670 = getelementptr inbounds %Type_Info, %Type_Info* %7668, i64 0, i32 2
	store i64 8, i64* %7670
	; Type_Info_Struct
	%7671 = bitcast %Type_Info* %7668 to %Type_Info.Struct*
	%7672 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7671, i64 0, i32 2
	%7673 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 4
	store i1 false, i1* %7673
	%7674 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 5
	store i1 false, i1* %7674
	%7675 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 6
	store i1 false, i1* %7675
	%7676 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 382
	%7677 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 382
	%7678 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 211
	%7679 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 200
	%7680 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%7681 = bitcast %Type_Info* %7680 to %Type_Info*
	%7682 = getelementptr inbounds %Type_Info*, %Type_Info** %7676, i64 0
	%7683 = getelementptr inbounds i64, i64* %7678, i64 0
	%7684 = getelementptr inbounds i1, i1* %7679, i64 0
	%7685 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	store %Type_Info* %7685, %Type_Info** %7682
	%7686 = getelementptr inbounds %..string, %..string* %7677, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$839, i64 0, i32 0), i64 3}, %..string* %7686
	store i64 0, i64* %7683
	store i1 false, i1* %7684
	%7687 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%7688 = bitcast %Type_Info* %7687 to %Type_Info*
	%7689 = getelementptr inbounds %Type_Info*, %Type_Info** %7676, i64 1
	%7690 = getelementptr inbounds i64, i64* %7678, i64 1
	%7691 = getelementptr inbounds i1, i1* %7679, i64 1
	%7692 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %7692, %Type_Info** %7689
	%7693 = getelementptr inbounds %..string, %..string* %7677, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$83a, i64 0, i32 0), i64 4}, %..string* %7693
	store i64 24, i64* %7690
	store i1 false, i1* %7691
	%7694 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 248
	%7695 = bitcast %Type_Info* %7694 to %Type_Info*
	%7696 = getelementptr inbounds %Type_Info*, %Type_Info** %7676, i64 2
	%7697 = getelementptr inbounds i64, i64* %7678, i64 2
	%7698 = getelementptr inbounds i1, i1* %7679, i64 2
	%7699 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 248
	store %Type_Info* %7699, %Type_Info** %7696
	%7700 = getelementptr inbounds %..string, %..string* %7677, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$83b, i64 0, i32 0), i64 5}, %..string* %7700
	store i64 32, i64* %7697
	store i1 false, i1* %7698
	%7701 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 0
	%7702 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7701, i64 0, i32 0
	store %Type_Info** %7676, %Type_Info*** %7702
	%7703 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7701, i64 0, i32 1
	store i64 3, i64* %7703
	%7704 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7701, i64 0, i32 2
	store i64 3, i64* %7704
	%7705 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 1
	%7706 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7705, i64 0, i32 0
	store %..string* %7677, %..string** %7706
	%7707 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7705, i64 0, i32 1
	store i64 3, i64* %7707
	%7708 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7705, i64 0, i32 2
	store i64 3, i64* %7708
	%7709 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 2
	%7710 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7709, i64 0, i32 0
	store i64* %7678, i64** %7710
	%7711 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7709, i64 0, i32 1
	store i64 3, i64* %7711
	%7712 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7709, i64 0, i32 2
	store i64 3, i64* %7712
	%7713 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7672, i64 0, i32 3
	%7714 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7713, i64 0, i32 0
	store i1* %7679, i1** %7714
	%7715 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7713, i64 0, i32 1
	store i64 3, i64* %7715
	%7716 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7713, i64 0, i32 2
	store i64 3, i64* %7716
	%7717 = getelementptr inbounds %Type_Info, %Type_Info* %7668, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7717
	%7718 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%7719 = getelementptr inbounds %Type_Info, %Type_Info* %7718, i64 0, i32 1
	store i64 24, i64* %7719
	%7720 = getelementptr inbounds %Type_Info, %Type_Info* %7718, i64 0, i32 2
	store i64 8, i64* %7720
	; Type_Info_Named
	%7721 = bitcast %Type_Info* %7718 to %Type_Info.Named*
	%7722 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 259
	%7723 = bitcast %Type_Info* %7722 to %Type_Info*
	%7724 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7721, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$83c, i64 0, i32 0), i64 9}, %..string* %7724
	%7725 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7721, i64 0, i32 3
	store %Type_Info* %7723, %Type_Info** %7725
	%7726 = getelementptr inbounds %Type_Info, %Type_Info* %7718, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7726
	%7727 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 259
	%7728 = getelementptr inbounds %Type_Info, %Type_Info* %7727, i64 0, i32 1
	store i64 24, i64* %7728
	%7729 = getelementptr inbounds %Type_Info, %Type_Info* %7727, i64 0, i32 2
	store i64 8, i64* %7729
	; Type_Info_Struct
	%7730 = bitcast %Type_Info* %7727 to %Type_Info.Struct*
	%7731 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7730, i64 0, i32 2
	%7732 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 4
	store i1 false, i1* %7732
	%7733 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 5
	store i1 true, i1* %7733
	%7734 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 6
	store i1 false, i1* %7734
	%7735 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 385
	%7736 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 385
	%7737 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 214
	%7738 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 203
	%7739 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%7740 = bitcast %Type_Info* %7739 to %Type_Info*
	%7741 = getelementptr inbounds %Type_Info*, %Type_Info** %7735, i64 0
	%7742 = getelementptr inbounds i64, i64* %7737, i64 0
	%7743 = getelementptr inbounds i1, i1* %7738, i64 0
	%7744 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	store %Type_Info* %7744, %Type_Info** %7741
	%7745 = getelementptr inbounds %..string, %..string* %7736, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$83d, i64 0, i32 0), i64 4}, %..string* %7745
	store i64 0, i64* %7742
	store i1 false, i1* %7743
	%7746 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%7747 = bitcast %Type_Info* %7746 to %Type_Info*
	%7748 = getelementptr inbounds %Type_Info*, %Type_Info** %7735, i64 1
	%7749 = getelementptr inbounds i64, i64* %7737, i64 1
	%7750 = getelementptr inbounds i1, i1* %7738, i64 1
	%7751 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %7751, %Type_Info** %7748
	%7752 = getelementptr inbounds %..string, %..string* %7736, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$83e, i64 0, i32 0), i64 3}, %..string* %7752
	store i64 8, i64* %7749
	store i1 false, i1* %7750
	%7753 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 0
	%7754 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7753, i64 0, i32 0
	store %Type_Info** %7735, %Type_Info*** %7754
	%7755 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7753, i64 0, i32 1
	store i64 2, i64* %7755
	%7756 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7753, i64 0, i32 2
	store i64 2, i64* %7756
	%7757 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 1
	%7758 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7757, i64 0, i32 0
	store %..string* %7736, %..string** %7758
	%7759 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7757, i64 0, i32 1
	store i64 2, i64* %7759
	%7760 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7757, i64 0, i32 2
	store i64 2, i64* %7760
	%7761 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 2
	%7762 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7761, i64 0, i32 0
	store i64* %7737, i64** %7762
	%7763 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7761, i64 0, i32 1
	store i64 2, i64* %7763
	%7764 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7761, i64 0, i32 2
	store i64 2, i64* %7764
	%7765 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7731, i64 0, i32 3
	%7766 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7765, i64 0, i32 0
	store i1* %7738, i1** %7766
	%7767 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7765, i64 0, i32 1
	store i64 2, i64* %7767
	%7768 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7765, i64 0, i32 2
	store i64 2, i64* %7768
	%7769 = getelementptr inbounds %Type_Info, %Type_Info* %7727, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7769
	%7770 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	%7771 = getelementptr inbounds %Type_Info, %Type_Info* %7770, i64 0, i32 1
	store i64 8, i64* %7771
	%7772 = getelementptr inbounds %Type_Info, %Type_Info* %7770, i64 0, i32 2
	store i64 8, i64* %7772
	; Type_Info_Pointer
	%7773 = bitcast %Type_Info* %7770 to %Type_Info.Pointer*
	%7774 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 257
	%7775 = bitcast %Type_Info* %7774 to %Type_Info*
	%7776 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7773, i64 0, i32 2
	store %Type_Info* %7775, %Type_Info** %7776
	%7777 = getelementptr inbounds %Type_Info, %Type_Info* %7770, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7777
	%7778 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%7779 = getelementptr inbounds %Type_Info, %Type_Info* %7778, i64 0, i32 1
	store i64 8, i64* %7779
	%7780 = getelementptr inbounds %Type_Info, %Type_Info* %7778, i64 0, i32 2
	store i64 8, i64* %7780
	; Type_Info_Named
	%7781 = bitcast %Type_Info* %7778 to %Type_Info.Named*
	%7782 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 262
	%7783 = bitcast %Type_Info* %7782 to %Type_Info*
	%7784 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7781, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$83f, i64 0, i32 0), i64 4}, %..string* %7784
	%7785 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7781, i64 0, i32 3
	store %Type_Info* %7783, %Type_Info** %7785
	%7786 = getelementptr inbounds %Type_Info, %Type_Info* %7778, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7786
	%7787 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 262
	%7788 = getelementptr inbounds %Type_Info, %Type_Info* %7787, i64 0, i32 1
	store i64 8, i64* %7788
	%7789 = getelementptr inbounds %Type_Info, %Type_Info* %7787, i64 0, i32 2
	store i64 8, i64* %7789
	; Type_Info_Vector
	%7790 = bitcast %Type_Info* %7787 to %Type_Info.Vector*
	%7791 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%7792 = bitcast %Type_Info* %7791 to %Type_Info*
	%7793 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %7790, i64 0, i32 2
	store %Type_Info* %7792, %Type_Info** %7793
	%7794 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %7790, i64 0, i32 3
	store i64 4, i64* %7794
	%7795 = getelementptr inbounds %Type_Info.Vector, %Type_Info.Vector* %7790, i64 0, i32 4
	store i64 2, i64* %7795
	%7796 = getelementptr inbounds %Type_Info, %Type_Info* %7787, i64 0, i32 4 ; UnionTagPtr
	store i64 15, i64* %7796
	%7797 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%7798 = getelementptr inbounds %Type_Info, %Type_Info* %7797, i64 0, i32 1
	store i64 48, i64* %7798
	%7799 = getelementptr inbounds %Type_Info, %Type_Info* %7797, i64 0, i32 2
	store i64 2, i64* %7799
	; Type_Info_Array
	%7800 = bitcast %Type_Info* %7797 to %Type_Info.Array*
	%7801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%7802 = bitcast %Type_Info* %7801 to %Type_Info*
	%7803 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7800, i64 0, i32 2
	store %Type_Info* %7802, %Type_Info** %7803
	%7804 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7800, i64 0, i32 3
	store i64 12, i64* %7804
	%7805 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7800, i64 0, i32 4
	store i64 4, i64* %7805
	%7806 = getelementptr inbounds %Type_Info, %Type_Info* %7797, i64 0, i32 4 ; UnionTagPtr
	store i64 12, i64* %7806
	%7807 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%7808 = getelementptr inbounds %Type_Info, %Type_Info* %7807, i64 0, i32 1
	store i64 12, i64* %7808
	%7809 = getelementptr inbounds %Type_Info, %Type_Info* %7807, i64 0, i32 2
	store i64 2, i64* %7809
	; Type_Info_Named
	%7810 = bitcast %Type_Info* %7807 to %Type_Info.Named*
	%7811 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 265
	%7812 = bitcast %Type_Info* %7811 to %Type_Info*
	%7813 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7810, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$840, i64 0, i32 0), i64 12}, %..string* %7813
	%7814 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7810, i64 0, i32 3
	store %Type_Info* %7812, %Type_Info** %7814
	%7815 = getelementptr inbounds %Type_Info, %Type_Info* %7807, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7815
	%7816 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 265
	%7817 = getelementptr inbounds %Type_Info, %Type_Info* %7816, i64 0, i32 1
	store i64 12, i64* %7817
	%7818 = getelementptr inbounds %Type_Info, %Type_Info* %7816, i64 0, i32 2
	store i64 2, i64* %7818
	; Type_Info_Struct
	%7819 = bitcast %Type_Info* %7816 to %Type_Info.Struct*
	%7820 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7819, i64 0, i32 2
	%7821 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 4
	store i1 false, i1* %7821
	%7822 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 5
	store i1 true, i1* %7822
	%7823 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 6
	store i1 false, i1* %7823
	%7824 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 387
	%7825 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 387
	%7826 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 216
	%7827 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 205
	%7828 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%7829 = bitcast %Type_Info* %7828 to %Type_Info*
	%7830 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 0
	%7831 = getelementptr inbounds i64, i64* %7826, i64 0
	%7832 = getelementptr inbounds i1, i1* %7827, i64 0
	%7833 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	store %Type_Info* %7833, %Type_Info** %7830
	%7834 = getelementptr inbounds %..string, %..string* %7825, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$841, i64 0, i32 0), i64 7}, %..string* %7834
	store i64 0, i64* %7831
	store i1 false, i1* %7832
	%7835 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%7836 = bitcast %Type_Info* %7835 to %Type_Info*
	%7837 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 1
	%7838 = getelementptr inbounds i64, i64* %7826, i64 1
	%7839 = getelementptr inbounds i1, i1* %7827, i64 1
	%7840 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %7840, %Type_Info** %7837
	%7841 = getelementptr inbounds %..string, %..string* %7825, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$842, i64 0, i32 0), i64 11}, %..string* %7841
	store i64 2, i64* %7838
	store i1 false, i1* %7839
	%7842 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%7843 = bitcast %Type_Info* %7842 to %Type_Info*
	%7844 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 2
	%7845 = getelementptr inbounds i64, i64* %7826, i64 2
	%7846 = getelementptr inbounds i1, i1* %7827, i64 2
	%7847 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %7847, %Type_Info** %7844
	%7848 = getelementptr inbounds %..string, %..string* %7825, i64 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$843, i64 0, i32 0), i64 12}, %..string* %7848
	store i64 3, i64* %7845
	store i1 false, i1* %7846
	%7849 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%7850 = bitcast %Type_Info* %7849 to %Type_Info*
	%7851 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 3
	%7852 = getelementptr inbounds i64, i64* %7826, i64 3
	%7853 = getelementptr inbounds i1, i1* %7827, i64 3
	%7854 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	store %Type_Info* %7854, %Type_Info** %7851
	%7855 = getelementptr inbounds %..string, %..string* %7825, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$844, i64 0, i32 0), i64 2}, %..string* %7855
	store i64 4, i64* %7852
	store i1 false, i1* %7853
	%7856 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%7857 = bitcast %Type_Info* %7856 to %Type_Info*
	%7858 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 4
	%7859 = getelementptr inbounds i64, i64* %7826, i64 4
	%7860 = getelementptr inbounds i1, i1* %7827, i64 4
	%7861 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	store %Type_Info* %7861, %Type_Info** %7858
	%7862 = getelementptr inbounds %..string, %..string* %7825, i64 4
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$845, i64 0, i32 0), i64 2}, %..string* %7862
	store i64 6, i64* %7859
	store i1 false, i1* %7860
	%7863 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%7864 = bitcast %Type_Info* %7863 to %Type_Info*
	%7865 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 5
	%7866 = getelementptr inbounds i64, i64* %7826, i64 5
	%7867 = getelementptr inbounds i1, i1* %7827, i64 5
	%7868 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	store %Type_Info* %7868, %Type_Info** %7865
	%7869 = getelementptr inbounds %..string, %..string* %7825, i64 5
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$846, i64 0, i32 0), i64 2}, %..string* %7869
	store i64 8, i64* %7866
	store i1 false, i1* %7867
	%7870 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%7871 = bitcast %Type_Info* %7870 to %Type_Info*
	%7872 = getelementptr inbounds %Type_Info*, %Type_Info** %7824, i64 6
	%7873 = getelementptr inbounds i64, i64* %7826, i64 6
	%7874 = getelementptr inbounds i1, i1* %7827, i64 6
	%7875 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	store %Type_Info* %7875, %Type_Info** %7872
	%7876 = getelementptr inbounds %..string, %..string* %7825, i64 6
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$847, i64 0, i32 0), i64 2}, %..string* %7876
	store i64 10, i64* %7873
	store i1 false, i1* %7874
	%7877 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 0
	%7878 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7877, i64 0, i32 0
	store %Type_Info** %7824, %Type_Info*** %7878
	%7879 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7877, i64 0, i32 1
	store i64 7, i64* %7879
	%7880 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7877, i64 0, i32 2
	store i64 7, i64* %7880
	%7881 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 1
	%7882 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7881, i64 0, i32 0
	store %..string* %7825, %..string** %7882
	%7883 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7881, i64 0, i32 1
	store i64 7, i64* %7883
	%7884 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7881, i64 0, i32 2
	store i64 7, i64* %7884
	%7885 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 2
	%7886 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7885, i64 0, i32 0
	store i64* %7826, i64** %7886
	%7887 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7885, i64 0, i32 1
	store i64 7, i64* %7887
	%7888 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7885, i64 0, i32 2
	store i64 7, i64* %7888
	%7889 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7820, i64 0, i32 3
	%7890 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7889, i64 0, i32 0
	store i1* %7827, i1** %7890
	%7891 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7889, i64 0, i32 1
	store i64 7, i64* %7891
	%7892 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7889, i64 0, i32 2
	store i64 7, i64* %7892
	%7893 = getelementptr inbounds %Type_Info, %Type_Info* %7816, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7893
	%7894 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 266
	%7895 = getelementptr inbounds %Type_Info, %Type_Info* %7894, i64 0, i32 1
	store i64 8, i64* %7895
	%7896 = getelementptr inbounds %Type_Info, %Type_Info* %7894, i64 0, i32 2
	store i64 8, i64* %7896
	; Type_Info_Pointer
	%7897 = bitcast %Type_Info* %7894 to %Type_Info.Pointer*
	%7898 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%7899 = bitcast %Type_Info* %7898 to %Type_Info*
	%7900 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7897, i64 0, i32 2
	store %Type_Info* %7899, %Type_Info** %7900
	%7901 = getelementptr inbounds %Type_Info, %Type_Info* %7894, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7901
	%7902 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%7903 = getelementptr inbounds %Type_Info, %Type_Info* %7902, i64 0, i32 1
	store i64 48, i64* %7903
	%7904 = getelementptr inbounds %Type_Info, %Type_Info* %7902, i64 0, i32 2
	store i64 2, i64* %7904
	; Type_Info_Array
	%7905 = bitcast %Type_Info* %7902 to %Type_Info.Array*
	%7906 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%7907 = bitcast %Type_Info* %7906 to %Type_Info*
	%7908 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7905, i64 0, i32 2
	store %Type_Info* %7907, %Type_Info** %7908
	%7909 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7905, i64 0, i32 3
	store i64 12, i64* %7909
	%7910 = getelementptr inbounds %Type_Info.Array, %Type_Info.Array* %7905, i64 0, i32 4
	store i64 4, i64* %7910
	%7911 = getelementptr inbounds %Type_Info, %Type_Info* %7902, i64 0, i32 4 ; UnionTagPtr
	store i64 12, i64* %7911
	%7912 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 266
	%7913 = getelementptr inbounds %Type_Info, %Type_Info* %7912, i64 0, i32 1
	store i64 8, i64* %7913
	%7914 = getelementptr inbounds %Type_Info, %Type_Info* %7912, i64 0, i32 2
	store i64 8, i64* %7914
	; Type_Info_Pointer
	%7915 = bitcast %Type_Info* %7912 to %Type_Info.Pointer*
	%7916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%7917 = bitcast %Type_Info* %7916 to %Type_Info*
	%7918 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7915, i64 0, i32 2
	store %Type_Info* %7917, %Type_Info** %7918
	%7919 = getelementptr inbounds %Type_Info, %Type_Info* %7912, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7919
	%7920 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 267
	%7921 = getelementptr inbounds %Type_Info, %Type_Info* %7920, i64 0, i32 1
	store i64 8, i64* %7921
	%7922 = getelementptr inbounds %Type_Info, %Type_Info* %7920, i64 0, i32 2
	store i64 8, i64* %7922
	; Type_Info_Pointer
	%7923 = bitcast %Type_Info* %7920 to %Type_Info.Pointer*
	%7924 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%7925 = bitcast %Type_Info* %7924 to %Type_Info*
	%7926 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7923, i64 0, i32 2
	store %Type_Info* %7925, %Type_Info** %7926
	%7927 = getelementptr inbounds %Type_Info, %Type_Info* %7920, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7927
	%7928 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%7929 = getelementptr inbounds %Type_Info, %Type_Info* %7928, i64 0, i32 1
	store i64 16, i64* %7929
	%7930 = getelementptr inbounds %Type_Info, %Type_Info* %7928, i64 0, i32 2
	store i64 8, i64* %7930
	; Type_Info_Named
	%7931 = bitcast %Type_Info* %7928 to %Type_Info.Named*
	%7932 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 269
	%7933 = bitcast %Type_Info* %7932 to %Type_Info*
	%7934 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7931, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$848, i64 0, i32 0), i64 15}, %..string* %7934
	%7935 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7931, i64 0, i32 3
	store %Type_Info* %7933, %Type_Info** %7935
	%7936 = getelementptr inbounds %Type_Info, %Type_Info* %7928, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %7936
	%7937 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 269
	%7938 = getelementptr inbounds %Type_Info, %Type_Info* %7937, i64 0, i32 1
	store i64 16, i64* %7938
	%7939 = getelementptr inbounds %Type_Info, %Type_Info* %7937, i64 0, i32 2
	store i64 8, i64* %7939
	; Type_Info_Struct
	%7940 = bitcast %Type_Info* %7937 to %Type_Info.Struct*
	%7941 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %7940, i64 0, i32 2
	%7942 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 4
	store i1 false, i1* %7942
	%7943 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 5
	store i1 false, i1* %7943
	%7944 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 6
	store i1 false, i1* %7944
	%7945 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 394
	%7946 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 394
	%7947 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 223
	%7948 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 212
	%7949 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%7950 = bitcast %Type_Info* %7949 to %Type_Info*
	%7951 = getelementptr inbounds %Type_Info*, %Type_Info** %7945, i64 0
	%7952 = getelementptr inbounds i64, i64* %7947, i64 0
	%7953 = getelementptr inbounds i1, i1* %7948, i64 0
	%7954 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	store %Type_Info* %7954, %Type_Info** %7951
	%7955 = getelementptr inbounds %..string, %..string* %7946, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$849, i64 0, i32 0), i64 9}, %..string* %7955
	store i64 0, i64* %7952
	store i1 false, i1* %7953
	%7956 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%7957 = bitcast %Type_Info* %7956 to %Type_Info*
	%7958 = getelementptr inbounds %Type_Info*, %Type_Info** %7945, i64 1
	%7959 = getelementptr inbounds i64, i64* %7947, i64 1
	%7960 = getelementptr inbounds i1, i1* %7948, i64 1
	%7961 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %7961, %Type_Info** %7958
	%7962 = getelementptr inbounds %..string, %..string* %7946, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$84a, i64 0, i32 0), i64 11}, %..string* %7962
	store i64 8, i64* %7959
	store i1 false, i1* %7960
	%7963 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 0
	%7964 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7963, i64 0, i32 0
	store %Type_Info** %7945, %Type_Info*** %7964
	%7965 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7963, i64 0, i32 1
	store i64 2, i64* %7965
	%7966 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %7963, i64 0, i32 2
	store i64 2, i64* %7966
	%7967 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 1
	%7968 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7967, i64 0, i32 0
	store %..string* %7946, %..string** %7968
	%7969 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7967, i64 0, i32 1
	store i64 2, i64* %7969
	%7970 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %7967, i64 0, i32 2
	store i64 2, i64* %7970
	%7971 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 2
	%7972 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7971, i64 0, i32 0
	store i64* %7947, i64** %7972
	%7973 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7971, i64 0, i32 1
	store i64 2, i64* %7973
	%7974 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %7971, i64 0, i32 2
	store i64 2, i64* %7974
	%7975 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %7941, i64 0, i32 3
	%7976 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7975, i64 0, i32 0
	store i1* %7948, i1** %7976
	%7977 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7975, i64 0, i32 1
	store i64 2, i64* %7977
	%7978 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %7975, i64 0, i32 2
	store i64 2, i64* %7978
	%7979 = getelementptr inbounds %Type_Info, %Type_Info* %7937, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %7979
	%7980 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7981 = getelementptr inbounds %Type_Info, %Type_Info* %7980, i64 0, i32 1
	store i64 8, i64* %7981
	%7982 = getelementptr inbounds %Type_Info, %Type_Info* %7980, i64 0, i32 2
	store i64 8, i64* %7982
	; Type_Info_Pointer
	%7983 = bitcast %Type_Info* %7980 to %Type_Info.Pointer*
	%7984 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 164
	%7985 = bitcast %Type_Info* %7984 to %Type_Info*
	%7986 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7983, i64 0, i32 2
	store %Type_Info* %7985, %Type_Info** %7986
	%7987 = getelementptr inbounds %Type_Info, %Type_Info* %7980, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7987
	%7988 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 271
	%7989 = getelementptr inbounds %Type_Info, %Type_Info* %7988, i64 0, i32 1
	store i64 8, i64* %7989
	%7990 = getelementptr inbounds %Type_Info, %Type_Info* %7988, i64 0, i32 2
	store i64 8, i64* %7990
	; Type_Info_Pointer
	%7991 = bitcast %Type_Info* %7988 to %Type_Info.Pointer*
	%7992 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 272
	%7993 = bitcast %Type_Info* %7992 to %Type_Info*
	%7994 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %7991, i64 0, i32 2
	store %Type_Info* %7993, %Type_Info** %7994
	%7995 = getelementptr inbounds %Type_Info, %Type_Info* %7988, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %7995
	%7996 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 272
	%7997 = getelementptr inbounds %Type_Info, %Type_Info* %7996, i64 0, i32 1
	store i64 200, i64* %7997
	%7998 = getelementptr inbounds %Type_Info, %Type_Info* %7996, i64 0, i32 2
	store i64 8, i64* %7998
	; Type_Info_Named
	%7999 = bitcast %Type_Info* %7996 to %Type_Info.Named*
	%8000 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 273
	%8001 = bitcast %Type_Info* %8000 to %Type_Info*
	%8002 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7999, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$84b, i64 0, i32 0), i64 7}, %..string* %8002
	%8003 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %7999, i64 0, i32 3
	store %Type_Info* %8001, %Type_Info** %8003
	%8004 = getelementptr inbounds %Type_Info, %Type_Info* %7996, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8004
	%8005 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 273
	%8006 = getelementptr inbounds %Type_Info, %Type_Info* %8005, i64 0, i32 1
	store i64 200, i64* %8006
	%8007 = getelementptr inbounds %Type_Info, %Type_Info* %8005, i64 0, i32 2
	store i64 8, i64* %8007
	; Type_Info_Struct
	%8008 = bitcast %Type_Info* %8005 to %Type_Info.Struct*
	%8009 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8008, i64 0, i32 2
	%8010 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 4
	store i1 false, i1* %8010
	%8011 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 5
	store i1 false, i1* %8011
	%8012 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 6
	store i1 false, i1* %8012
	%8013 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 396
	%8014 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 396
	%8015 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 225
	%8016 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 214
	%8017 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8018 = bitcast %Type_Info* %8017 to %Type_Info*
	%8019 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 0
	%8020 = getelementptr inbounds i64, i64* %8015, i64 0
	%8021 = getelementptr inbounds i1, i1* %8016, i64 0
	%8022 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8022, %Type_Info** %8019
	%8023 = getelementptr inbounds %..string, %..string* %8014, i64 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$84c, i64 0, i32 0), i64 15}, %..string* %8023
	store i64 176, i64* %8020
	store i1 false, i1* %8021
	%8024 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%8025 = bitcast %Type_Info* %8024 to %Type_Info*
	%8026 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 1
	%8027 = getelementptr inbounds i64, i64* %8015, i64 1
	%8028 = getelementptr inbounds i1, i1* %8016, i64 1
	%8029 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	store %Type_Info* %8029, %Type_Info** %8026
	%8030 = getelementptr inbounds %..string, %..string* %8014, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$84d, i64 0, i32 0), i64 11}, %..string* %8030
	store i64 0, i64* %8027
	store i1 false, i1* %8028
	%8031 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	%8032 = bitcast %Type_Info* %8031 to %Type_Info*
	%8033 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 2
	%8034 = getelementptr inbounds i64, i64* %8015, i64 2
	%8035 = getelementptr inbounds i1, i1* %8016, i64 2
	%8036 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	store %Type_Info* %8036, %Type_Info** %8033
	%8037 = getelementptr inbounds %..string, %..string* %8014, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$84e, i64 0, i32 0), i64 9}, %..string* %8037
	store i64 180, i64* %8034
	store i1 false, i1* %8035
	%8038 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	%8039 = bitcast %Type_Info* %8038 to %Type_Info*
	%8040 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 3
	%8041 = getelementptr inbounds i64, i64* %8015, i64 3
	%8042 = getelementptr inbounds i1, i1* %8016, i64 3
	%8043 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	store %Type_Info* %8043, %Type_Info** %8040
	%8044 = getelementptr inbounds %..string, %..string* %8014, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$84f, i64 0, i32 0), i64 9}, %..string* %8044
	store i64 184, i64* %8041
	store i1 false, i1* %8042
	%8045 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	%8046 = bitcast %Type_Info* %8045 to %Type_Info*
	%8047 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 4
	%8048 = getelementptr inbounds i64, i64* %8015, i64 4
	%8049 = getelementptr inbounds i1, i1* %8016, i64 4
	%8050 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	store %Type_Info* %8050, %Type_Info** %8047
	%8051 = getelementptr inbounds %..string, %..string* %8014, i64 4
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$850, i64 0, i32 0), i64 9}, %..string* %8051
	store i64 188, i64* %8048
	store i1 false, i1* %8049
	%8052 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%8053 = bitcast %Type_Info* %8052 to %Type_Info*
	%8054 = getelementptr inbounds %Type_Info*, %Type_Info** %8013, i64 5
	%8055 = getelementptr inbounds i64, i64* %8015, i64 5
	%8056 = getelementptr inbounds i1, i1* %8016, i64 5
	%8057 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	store %Type_Info* %8057, %Type_Info** %8054
	%8058 = getelementptr inbounds %..string, %..string* %8014, i64 5
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$851, i64 0, i32 0), i64 11}, %..string* %8058
	store i64 192, i64* %8055
	store i1 false, i1* %8056
	%8059 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 0
	%8060 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8059, i64 0, i32 0
	store %Type_Info** %8013, %Type_Info*** %8060
	%8061 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8059, i64 0, i32 1
	store i64 6, i64* %8061
	%8062 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8059, i64 0, i32 2
	store i64 6, i64* %8062
	%8063 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 1
	%8064 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8063, i64 0, i32 0
	store %..string* %8014, %..string** %8064
	%8065 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8063, i64 0, i32 1
	store i64 6, i64* %8065
	%8066 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8063, i64 0, i32 2
	store i64 6, i64* %8066
	%8067 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 2
	%8068 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8067, i64 0, i32 0
	store i64* %8015, i64** %8068
	%8069 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8067, i64 0, i32 1
	store i64 6, i64* %8069
	%8070 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8067, i64 0, i32 2
	store i64 6, i64* %8070
	%8071 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8009, i64 0, i32 3
	%8072 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8071, i64 0, i32 0
	store i1* %8016, i1** %8072
	%8073 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8071, i64 0, i32 1
	store i64 6, i64* %8073
	%8074 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8071, i64 0, i32 2
	store i64 6, i64* %8074
	%8075 = getelementptr inbounds %Type_Info, %Type_Info* %8005, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8075
	%8076 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%8077 = getelementptr inbounds %Type_Info, %Type_Info* %8076, i64 0, i32 1
	store i64 176, i64* %8077
	%8078 = getelementptr inbounds %Type_Info, %Type_Info* %8076, i64 0, i32 2
	store i64 8, i64* %8078
	; Type_Info_Named
	%8079 = bitcast %Type_Info* %8076 to %Type_Info.Named*
	%8080 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 275
	%8081 = bitcast %Type_Info* %8080 to %Type_Info*
	%8082 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8079, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$852, i64 0, i32 0), i64 7}, %..string* %8082
	%8083 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8079, i64 0, i32 3
	store %Type_Info* %8081, %Type_Info** %8083
	%8084 = getelementptr inbounds %Type_Info, %Type_Info* %8076, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8084
	%8085 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 275
	%8086 = getelementptr inbounds %Type_Info, %Type_Info* %8085, i64 0, i32 1
	store i64 176, i64* %8086
	%8087 = getelementptr inbounds %Type_Info, %Type_Info* %8085, i64 0, i32 2
	store i64 8, i64* %8087
	; Type_Info_Struct
	%8088 = bitcast %Type_Info* %8085 to %Type_Info.Struct*
	%8089 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8088, i64 0, i32 2
	%8090 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 4
	store i1 false, i1* %8090
	%8091 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 5
	store i1 false, i1* %8091
	%8092 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 6
	store i1 false, i1* %8092
	%8093 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 402
	%8094 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 402
	%8095 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 231
	%8096 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 220
	%8097 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%8098 = bitcast %Type_Info* %8097 to %Type_Info*
	%8099 = getelementptr inbounds %Type_Info*, %Type_Info** %8093, i64 0
	%8100 = getelementptr inbounds i64, i64* %8095, i64 0
	%8101 = getelementptr inbounds i1, i1* %8096, i64 0
	%8102 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	store %Type_Info* %8102, %Type_Info** %8099
	%8103 = getelementptr inbounds %..string, %..string* %8094, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$853, i64 0, i32 0), i64 2}, %..string* %8103
	store i64 160, i64* %8100
	store i1 false, i1* %8101
	%8104 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%8105 = bitcast %Type_Info* %8104 to %Type_Info*
	%8106 = getelementptr inbounds %Type_Info*, %Type_Info** %8093, i64 1
	%8107 = getelementptr inbounds i64, i64* %8095, i64 1
	%8108 = getelementptr inbounds i1, i1* %8096, i64 1
	%8109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	store %Type_Info* %8109, %Type_Info** %8106
	%8110 = getelementptr inbounds %..string, %..string* %8094, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$854, i64 0, i32 0), i64 6}, %..string* %8110
	store i64 164, i64* %8107
	store i1 false, i1* %8108
	%8111 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%8112 = bitcast %Type_Info* %8111 to %Type_Info*
	%8113 = getelementptr inbounds %Type_Info*, %Type_Info** %8093, i64 2
	%8114 = getelementptr inbounds i64, i64* %8095, i64 2
	%8115 = getelementptr inbounds i1, i1* %8096, i64 2
	%8116 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	store %Type_Info* %8116, %Type_Info** %8113
	%8117 = getelementptr inbounds %..string, %..string* %8094, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$855, i64 0, i32 0), i64 8}, %..string* %8117
	store i64 168, i64* %8114
	store i1 false, i1* %8115
	%8118 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8119 = bitcast %Type_Info* %8118 to %Type_Info*
	%8120 = getelementptr inbounds %Type_Info*, %Type_Info** %8093, i64 3
	%8121 = getelementptr inbounds i64, i64* %8095, i64 3
	%8122 = getelementptr inbounds i1, i1* %8096, i64 3
	%8123 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	store %Type_Info* %8123, %Type_Info** %8120
	%8124 = getelementptr inbounds %..string, %..string* %8094, i64 3
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$856, i64 0, i32 0), i64 8}, %..string* %8124
	store i64 0, i64* %8121
	store i1 false, i1* %8122
	%8125 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8126 = bitcast %Type_Info* %8125 to %Type_Info*
	%8127 = getelementptr inbounds %Type_Info*, %Type_Info** %8093, i64 4
	%8128 = getelementptr inbounds i64, i64* %8095, i64 4
	%8129 = getelementptr inbounds i1, i1* %8096, i64 4
	%8130 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	store %Type_Info* %8130, %Type_Info** %8127
	%8131 = getelementptr inbounds %..string, %..string* %8094, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$857, i64 0, i32 0), i64 10}, %..string* %8131
	store i64 80, i64* %8128
	store i1 false, i1* %8129
	%8132 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 0
	%8133 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8132, i64 0, i32 0
	store %Type_Info** %8093, %Type_Info*** %8133
	%8134 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8132, i64 0, i32 1
	store i64 5, i64* %8134
	%8135 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8132, i64 0, i32 2
	store i64 5, i64* %8135
	%8136 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 1
	%8137 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8136, i64 0, i32 0
	store %..string* %8094, %..string** %8137
	%8138 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8136, i64 0, i32 1
	store i64 5, i64* %8138
	%8139 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8136, i64 0, i32 2
	store i64 5, i64* %8139
	%8140 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 2
	%8141 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8140, i64 0, i32 0
	store i64* %8095, i64** %8141
	%8142 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8140, i64 0, i32 1
	store i64 5, i64* %8142
	%8143 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8140, i64 0, i32 2
	store i64 5, i64* %8143
	%8144 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8089, i64 0, i32 3
	%8145 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8144, i64 0, i32 0
	store i1* %8096, i1** %8145
	%8146 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8144, i64 0, i32 1
	store i64 5, i64* %8146
	%8147 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8144, i64 0, i32 2
	store i64 5, i64* %8147
	%8148 = getelementptr inbounds %Type_Info, %Type_Info* %8085, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8148
	%8149 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8150 = getelementptr inbounds %Type_Info, %Type_Info* %8149, i64 0, i32 1
	store i64 80, i64* %8150
	%8151 = getelementptr inbounds %Type_Info, %Type_Info* %8149, i64 0, i32 2
	store i64 8, i64* %8151
	; Type_Info_Map
	%8152 = bitcast %Type_Info* %8149 to %Type_Info.Map*
	%8153 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8152, i64 0, i32 2
	%8154 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8152, i64 0, i32 3
	%8155 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8152, i64 0, i32 4
	%8156 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8152, i64 0, i32 5
	%8157 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%8158 = bitcast %Type_Info* %8157 to %Type_Info*
	store %Type_Info* %8158, %Type_Info** %8153
	%8159 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8160 = bitcast %Type_Info* %8159 to %Type_Info*
	store %Type_Info* %8160, %Type_Info** %8154
	%8161 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%8162 = bitcast %Type_Info* %8161 to %Type_Info*
	store %Type_Info* %8162, %Type_Info** %8155
	store i64 0, i64* %8156
	%8163 = getelementptr inbounds %Type_Info, %Type_Info* %8149, i64 0, i32 4 ; UnionTagPtr
	store i64 21, i64* %8163
	%8164 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%8165 = getelementptr inbounds %Type_Info, %Type_Info* %8164, i64 0, i32 1
	store i64 80, i64* %8165
	%8166 = getelementptr inbounds %Type_Info, %Type_Info* %8164, i64 0, i32 2
	store i64 8, i64* %8166
	; Type_Info_Struct
	%8167 = bitcast %Type_Info* %8164 to %Type_Info.Struct*
	%8168 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8167, i64 0, i32 2
	%8169 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 4
	store i1 false, i1* %8169
	%8170 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 5
	store i1 false, i1* %8170
	%8171 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 6
	store i1 false, i1* %8171
	%8172 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 407
	%8173 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 407
	%8174 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 236
	%8175 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 225
	%8176 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%8177 = bitcast %Type_Info* %8176 to %Type_Info*
	%8178 = getelementptr inbounds %Type_Info*, %Type_Info** %8172, i64 0
	%8179 = getelementptr inbounds i64, i64* %8174, i64 0
	%8180 = getelementptr inbounds i1, i1* %8175, i64 0
	%8181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	store %Type_Info* %8181, %Type_Info** %8178
	%8182 = getelementptr inbounds %..string, %..string* %8173, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$858, i64 0, i32 0), i64 6}, %..string* %8182
	store i64 0, i64* %8179
	store i1 false, i1* %8180
	%8183 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%8184 = bitcast %Type_Info* %8183 to %Type_Info*
	%8185 = getelementptr inbounds %Type_Info*, %Type_Info** %8172, i64 1
	%8186 = getelementptr inbounds i64, i64* %8174, i64 1
	%8187 = getelementptr inbounds i1, i1* %8175, i64 1
	%8188 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	store %Type_Info* %8188, %Type_Info** %8185
	%8189 = getelementptr inbounds %..string, %..string* %8173, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$859, i64 0, i32 0), i64 7}, %..string* %8189
	store i64 40, i64* %8186
	store i1 false, i1* %8187
	%8190 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 0
	%8191 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8190, i64 0, i32 0
	store %Type_Info** %8172, %Type_Info*** %8191
	%8192 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8190, i64 0, i32 1
	store i64 2, i64* %8192
	%8193 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8190, i64 0, i32 2
	store i64 2, i64* %8193
	%8194 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 1
	%8195 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8194, i64 0, i32 0
	store %..string* %8173, %..string** %8195
	%8196 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8194, i64 0, i32 1
	store i64 2, i64* %8196
	%8197 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8194, i64 0, i32 2
	store i64 2, i64* %8197
	%8198 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 2
	%8199 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8198, i64 0, i32 0
	store i64* %8174, i64** %8199
	%8200 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8198, i64 0, i32 1
	store i64 2, i64* %8200
	%8201 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8198, i64 0, i32 2
	store i64 2, i64* %8201
	%8202 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8168, i64 0, i32 3
	%8203 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8202, i64 0, i32 0
	store i1* %8175, i1** %8203
	%8204 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8202, i64 0, i32 1
	store i64 2, i64* %8204
	%8205 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8202, i64 0, i32 2
	store i64 2, i64* %8205
	%8206 = getelementptr inbounds %Type_Info, %Type_Info* %8164, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8206
	%8207 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%8208 = getelementptr inbounds %Type_Info, %Type_Info* %8207, i64 0, i32 1
	store i64 40, i64* %8208
	%8209 = getelementptr inbounds %Type_Info, %Type_Info* %8207, i64 0, i32 2
	store i64 8, i64* %8209
	; Type_Info_DynamicArray
	%8210 = bitcast %Type_Info* %8207 to %Type_Info.Dynamic_Array*
	%8211 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8212 = bitcast %Type_Info* %8211 to %Type_Info*
	%8213 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8210, i64 0, i32 2
	store %Type_Info* %8212, %Type_Info** %8213
	%8214 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8210, i64 0, i32 3
	store i64 8, i64* %8214
	%8215 = getelementptr inbounds %Type_Info, %Type_Info* %8207, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %8215
	%8216 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%8217 = getelementptr inbounds %Type_Info, %Type_Info* %8216, i64 0, i32 1
	store i64 8, i64* %8217
	%8218 = getelementptr inbounds %Type_Info, %Type_Info* %8216, i64 0, i32 2
	store i64 8, i64* %8218
	; Type_Info_Pointer
	%8219 = bitcast %Type_Info* %8216 to %Type_Info.Pointer*
	%8220 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8221 = bitcast %Type_Info* %8220 to %Type_Info*
	%8222 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8219, i64 0, i32 2
	store %Type_Info* %8221, %Type_Info** %8222
	%8223 = getelementptr inbounds %Type_Info, %Type_Info* %8216, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8223
	%8224 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%8225 = getelementptr inbounds %Type_Info, %Type_Info* %8224, i64 0, i32 1
	store i64 40, i64* %8225
	%8226 = getelementptr inbounds %Type_Info, %Type_Info* %8224, i64 0, i32 2
	store i64 8, i64* %8226
	; Type_Info_DynamicArray
	%8227 = bitcast %Type_Info* %8224 to %Type_Info.Dynamic_Array*
	%8228 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8229 = bitcast %Type_Info* %8228 to %Type_Info*
	%8230 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8227, i64 0, i32 2
	store %Type_Info* %8229, %Type_Info** %8230
	%8231 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8227, i64 0, i32 3
	store i64 40, i64* %8231
	%8232 = getelementptr inbounds %Type_Info, %Type_Info* %8224, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %8232
	%8233 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8234 = getelementptr inbounds %Type_Info, %Type_Info* %8233, i64 0, i32 1
	store i64 40, i64* %8234
	%8235 = getelementptr inbounds %Type_Info, %Type_Info* %8233, i64 0, i32 2
	store i64 8, i64* %8235
	; Type_Info_Struct
	%8236 = bitcast %Type_Info* %8233 to %Type_Info.Struct*
	%8237 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8236, i64 0, i32 2
	%8238 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 4
	store i1 false, i1* %8238
	%8239 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 5
	store i1 false, i1* %8239
	%8240 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 6
	store i1 false, i1* %8240
	%8241 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 409
	%8242 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 409
	%8243 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 238
	%8244 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 227
	%8245 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%8246 = bitcast %Type_Info* %8245 to %Type_Info*
	%8247 = getelementptr inbounds %Type_Info*, %Type_Info** %8241, i64 0
	%8248 = getelementptr inbounds i64, i64* %8243, i64 0
	%8249 = getelementptr inbounds i1, i1* %8244, i64 0
	%8250 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	store %Type_Info* %8250, %Type_Info** %8247
	%8251 = getelementptr inbounds %..string, %..string* %8242, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$85a, i64 0, i32 0), i64 3}, %..string* %8251
	store i64 0, i64* %8248
	store i1 false, i1* %8249
	%8252 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8253 = bitcast %Type_Info* %8252 to %Type_Info*
	%8254 = getelementptr inbounds %Type_Info*, %Type_Info** %8241, i64 1
	%8255 = getelementptr inbounds i64, i64* %8243, i64 1
	%8256 = getelementptr inbounds i1, i1* %8244, i64 1
	%8257 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %8257, %Type_Info** %8254
	%8258 = getelementptr inbounds %..string, %..string* %8242, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$85b, i64 0, i32 0), i64 4}, %..string* %8258
	store i64 24, i64* %8255
	store i1 false, i1* %8256
	%8259 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8260 = bitcast %Type_Info* %8259 to %Type_Info*
	%8261 = getelementptr inbounds %Type_Info*, %Type_Info** %8241, i64 2
	%8262 = getelementptr inbounds i64, i64* %8243, i64 2
	%8263 = getelementptr inbounds i1, i1* %8244, i64 2
	%8264 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8264, %Type_Info** %8261
	%8265 = getelementptr inbounds %..string, %..string* %8242, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$85c, i64 0, i32 0), i64 5}, %..string* %8265
	store i64 32, i64* %8262
	store i1 false, i1* %8263
	%8266 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 0
	%8267 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8266, i64 0, i32 0
	store %Type_Info** %8241, %Type_Info*** %8267
	%8268 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8266, i64 0, i32 1
	store i64 3, i64* %8268
	%8269 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8266, i64 0, i32 2
	store i64 3, i64* %8269
	%8270 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 1
	%8271 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8270, i64 0, i32 0
	store %..string* %8242, %..string** %8271
	%8272 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8270, i64 0, i32 1
	store i64 3, i64* %8272
	%8273 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8270, i64 0, i32 2
	store i64 3, i64* %8273
	%8274 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 2
	%8275 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8274, i64 0, i32 0
	store i64* %8243, i64** %8275
	%8276 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8274, i64 0, i32 1
	store i64 3, i64* %8276
	%8277 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8274, i64 0, i32 2
	store i64 3, i64* %8277
	%8278 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8237, i64 0, i32 3
	%8279 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8278, i64 0, i32 0
	store i1* %8244, i1** %8279
	%8280 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8278, i64 0, i32 1
	store i64 3, i64* %8280
	%8281 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8278, i64 0, i32 2
	store i64 3, i64* %8281
	%8282 = getelementptr inbounds %Type_Info, %Type_Info* %8233, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8282
	%8283 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%8284 = getelementptr inbounds %Type_Info, %Type_Info* %8283, i64 0, i32 1
	store i64 8, i64* %8284
	%8285 = getelementptr inbounds %Type_Info, %Type_Info* %8283, i64 0, i32 2
	store i64 8, i64* %8285
	; Type_Info_Pointer
	%8286 = bitcast %Type_Info* %8283 to %Type_Info.Pointer*
	%8287 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8288 = bitcast %Type_Info* %8287 to %Type_Info*
	%8289 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8286, i64 0, i32 2
	store %Type_Info* %8288, %Type_Info** %8289
	%8290 = getelementptr inbounds %Type_Info, %Type_Info* %8283, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8290
	%8291 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8292 = getelementptr inbounds %Type_Info, %Type_Info* %8291, i64 0, i32 1
	store i64 80, i64* %8292
	%8293 = getelementptr inbounds %Type_Info, %Type_Info* %8291, i64 0, i32 2
	store i64 8, i64* %8293
	; Type_Info_Map
	%8294 = bitcast %Type_Info* %8291 to %Type_Info.Map*
	%8295 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8294, i64 0, i32 2
	%8296 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8294, i64 0, i32 3
	%8297 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8294, i64 0, i32 4
	%8298 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %8294, i64 0, i32 5
	%8299 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%8300 = bitcast %Type_Info* %8299 to %Type_Info*
	store %Type_Info* %8300, %Type_Info** %8295
	%8301 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8302 = bitcast %Type_Info* %8301 to %Type_Info*
	store %Type_Info* %8302, %Type_Info** %8296
	%8303 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%8304 = bitcast %Type_Info* %8303 to %Type_Info*
	store %Type_Info* %8304, %Type_Info** %8297
	store i64 0, i64* %8298
	%8305 = getelementptr inbounds %Type_Info, %Type_Info* %8291, i64 0, i32 4 ; UnionTagPtr
	store i64 21, i64* %8305
	%8306 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%8307 = getelementptr inbounds %Type_Info, %Type_Info* %8306, i64 0, i32 1
	store i64 80, i64* %8307
	%8308 = getelementptr inbounds %Type_Info, %Type_Info* %8306, i64 0, i32 2
	store i64 8, i64* %8308
	; Type_Info_Struct
	%8309 = bitcast %Type_Info* %8306 to %Type_Info.Struct*
	%8310 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8309, i64 0, i32 2
	%8311 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 4
	store i1 false, i1* %8311
	%8312 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 5
	store i1 false, i1* %8312
	%8313 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 6
	store i1 false, i1* %8313
	%8314 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 412
	%8315 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 412
	%8316 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 241
	%8317 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 230
	%8318 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%8319 = bitcast %Type_Info* %8318 to %Type_Info*
	%8320 = getelementptr inbounds %Type_Info*, %Type_Info** %8314, i64 0
	%8321 = getelementptr inbounds i64, i64* %8316, i64 0
	%8322 = getelementptr inbounds i1, i1* %8317, i64 0
	%8323 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	store %Type_Info* %8323, %Type_Info** %8320
	%8324 = getelementptr inbounds %..string, %..string* %8315, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$85d, i64 0, i32 0), i64 6}, %..string* %8324
	store i64 0, i64* %8321
	store i1 false, i1* %8322
	%8325 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%8326 = bitcast %Type_Info* %8325 to %Type_Info*
	%8327 = getelementptr inbounds %Type_Info*, %Type_Info** %8314, i64 1
	%8328 = getelementptr inbounds i64, i64* %8316, i64 1
	%8329 = getelementptr inbounds i1, i1* %8317, i64 1
	%8330 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	store %Type_Info* %8330, %Type_Info** %8327
	%8331 = getelementptr inbounds %..string, %..string* %8315, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$85e, i64 0, i32 0), i64 7}, %..string* %8331
	store i64 40, i64* %8328
	store i1 false, i1* %8329
	%8332 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 0
	%8333 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8332, i64 0, i32 0
	store %Type_Info** %8314, %Type_Info*** %8333
	%8334 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8332, i64 0, i32 1
	store i64 2, i64* %8334
	%8335 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8332, i64 0, i32 2
	store i64 2, i64* %8335
	%8336 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 1
	%8337 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8336, i64 0, i32 0
	store %..string* %8315, %..string** %8337
	%8338 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8336, i64 0, i32 1
	store i64 2, i64* %8338
	%8339 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8336, i64 0, i32 2
	store i64 2, i64* %8339
	%8340 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 2
	%8341 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8340, i64 0, i32 0
	store i64* %8316, i64** %8341
	%8342 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8340, i64 0, i32 1
	store i64 2, i64* %8342
	%8343 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8340, i64 0, i32 2
	store i64 2, i64* %8343
	%8344 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8310, i64 0, i32 3
	%8345 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8344, i64 0, i32 0
	store i1* %8317, i1** %8345
	%8346 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8344, i64 0, i32 1
	store i64 2, i64* %8346
	%8347 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8344, i64 0, i32 2
	store i64 2, i64* %8347
	%8348 = getelementptr inbounds %Type_Info, %Type_Info* %8306, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8348
	%8349 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%8350 = getelementptr inbounds %Type_Info, %Type_Info* %8349, i64 0, i32 1
	store i64 40, i64* %8350
	%8351 = getelementptr inbounds %Type_Info, %Type_Info* %8349, i64 0, i32 2
	store i64 8, i64* %8351
	; Type_Info_DynamicArray
	%8352 = bitcast %Type_Info* %8349 to %Type_Info.Dynamic_Array*
	%8353 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8354 = bitcast %Type_Info* %8353 to %Type_Info*
	%8355 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8352, i64 0, i32 2
	store %Type_Info* %8354, %Type_Info** %8355
	%8356 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8352, i64 0, i32 3
	store i64 8, i64* %8356
	%8357 = getelementptr inbounds %Type_Info, %Type_Info* %8349, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %8357
	%8358 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%8359 = getelementptr inbounds %Type_Info, %Type_Info* %8358, i64 0, i32 1
	store i64 8, i64* %8359
	%8360 = getelementptr inbounds %Type_Info, %Type_Info* %8358, i64 0, i32 2
	store i64 8, i64* %8360
	; Type_Info_Pointer
	%8361 = bitcast %Type_Info* %8358 to %Type_Info.Pointer*
	%8362 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8363 = bitcast %Type_Info* %8362 to %Type_Info*
	%8364 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8361, i64 0, i32 2
	store %Type_Info* %8363, %Type_Info** %8364
	%8365 = getelementptr inbounds %Type_Info, %Type_Info* %8358, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8365
	%8366 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%8367 = getelementptr inbounds %Type_Info, %Type_Info* %8366, i64 0, i32 1
	store i64 40, i64* %8367
	%8368 = getelementptr inbounds %Type_Info, %Type_Info* %8366, i64 0, i32 2
	store i64 8, i64* %8368
	; Type_Info_DynamicArray
	%8369 = bitcast %Type_Info* %8366 to %Type_Info.Dynamic_Array*
	%8370 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8371 = bitcast %Type_Info* %8370 to %Type_Info*
	%8372 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8369, i64 0, i32 2
	store %Type_Info* %8371, %Type_Info** %8372
	%8373 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %8369, i64 0, i32 3
	store i64 40, i64* %8373
	%8374 = getelementptr inbounds %Type_Info, %Type_Info* %8366, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %8374
	%8375 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8376 = getelementptr inbounds %Type_Info, %Type_Info* %8375, i64 0, i32 1
	store i64 40, i64* %8376
	%8377 = getelementptr inbounds %Type_Info, %Type_Info* %8375, i64 0, i32 2
	store i64 8, i64* %8377
	; Type_Info_Struct
	%8378 = bitcast %Type_Info* %8375 to %Type_Info.Struct*
	%8379 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8378, i64 0, i32 2
	%8380 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 4
	store i1 false, i1* %8380
	%8381 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 5
	store i1 false, i1* %8381
	%8382 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 6
	store i1 false, i1* %8382
	%8383 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 414
	%8384 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 414
	%8385 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 243
	%8386 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 232
	%8387 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%8388 = bitcast %Type_Info* %8387 to %Type_Info*
	%8389 = getelementptr inbounds %Type_Info*, %Type_Info** %8383, i64 0
	%8390 = getelementptr inbounds i64, i64* %8385, i64 0
	%8391 = getelementptr inbounds i1, i1* %8386, i64 0
	%8392 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	store %Type_Info* %8392, %Type_Info** %8389
	%8393 = getelementptr inbounds %..string, %..string* %8384, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$85f, i64 0, i32 0), i64 3}, %..string* %8393
	store i64 0, i64* %8390
	store i1 false, i1* %8391
	%8394 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%8395 = bitcast %Type_Info* %8394 to %Type_Info*
	%8396 = getelementptr inbounds %Type_Info*, %Type_Info** %8383, i64 1
	%8397 = getelementptr inbounds i64, i64* %8385, i64 1
	%8398 = getelementptr inbounds i1, i1* %8386, i64 1
	%8399 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %8399, %Type_Info** %8396
	%8400 = getelementptr inbounds %..string, %..string* %8384, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$860, i64 0, i32 0), i64 4}, %..string* %8400
	store i64 24, i64* %8397
	store i1 false, i1* %8398
	%8401 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8402 = bitcast %Type_Info* %8401 to %Type_Info*
	%8403 = getelementptr inbounds %Type_Info*, %Type_Info** %8383, i64 2
	%8404 = getelementptr inbounds i64, i64* %8385, i64 2
	%8405 = getelementptr inbounds i1, i1* %8386, i64 2
	%8406 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8406, %Type_Info** %8403
	%8407 = getelementptr inbounds %..string, %..string* %8384, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$861, i64 0, i32 0), i64 5}, %..string* %8407
	store i64 32, i64* %8404
	store i1 false, i1* %8405
	%8408 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 0
	%8409 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8408, i64 0, i32 0
	store %Type_Info** %8383, %Type_Info*** %8409
	%8410 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8408, i64 0, i32 1
	store i64 3, i64* %8410
	%8411 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8408, i64 0, i32 2
	store i64 3, i64* %8411
	%8412 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 1
	%8413 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8412, i64 0, i32 0
	store %..string* %8384, %..string** %8413
	%8414 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8412, i64 0, i32 1
	store i64 3, i64* %8414
	%8415 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8412, i64 0, i32 2
	store i64 3, i64* %8415
	%8416 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 2
	%8417 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8416, i64 0, i32 0
	store i64* %8385, i64** %8417
	%8418 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8416, i64 0, i32 1
	store i64 3, i64* %8418
	%8419 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8416, i64 0, i32 2
	store i64 3, i64* %8419
	%8420 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8379, i64 0, i32 3
	%8421 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8420, i64 0, i32 0
	store i1* %8386, i1** %8421
	%8422 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8420, i64 0, i32 1
	store i64 3, i64* %8422
	%8423 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8420, i64 0, i32 2
	store i64 3, i64* %8423
	%8424 = getelementptr inbounds %Type_Info, %Type_Info* %8375, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8424
	%8425 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%8426 = getelementptr inbounds %Type_Info, %Type_Info* %8425, i64 0, i32 1
	store i64 8, i64* %8426
	%8427 = getelementptr inbounds %Type_Info, %Type_Info* %8425, i64 0, i32 2
	store i64 8, i64* %8427
	; Type_Info_Pointer
	%8428 = bitcast %Type_Info* %8425 to %Type_Info.Pointer*
	%8429 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%8430 = bitcast %Type_Info* %8429 to %Type_Info*
	%8431 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8428, i64 0, i32 2
	store %Type_Info* %8430, %Type_Info** %8431
	%8432 = getelementptr inbounds %Type_Info, %Type_Info* %8425, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8432
	%8433 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%8434 = getelementptr inbounds %Type_Info, %Type_Info* %8433, i64 0, i32 1
	store i64 4, i64* %8434
	%8435 = getelementptr inbounds %Type_Info, %Type_Info* %8433, i64 0, i32 2
	store i64 4, i64* %8435
	; Type_Info_Named
	%8436 = bitcast %Type_Info* %8433 to %Type_Info.Named*
	%8437 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%8438 = bitcast %Type_Info* %8437 to %Type_Info*
	%8439 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8436, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$862, i64 0, i32 0), i64 6}, %..string* %8439
	%8440 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8436, i64 0, i32 3
	store %Type_Info* %8438, %Type_Info** %8440
	%8441 = getelementptr inbounds %Type_Info, %Type_Info* %8433, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8441
	%8442 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	%8443 = getelementptr inbounds %Type_Info, %Type_Info* %8442, i64 0, i32 1
	store i64 4, i64* %8443
	%8444 = getelementptr inbounds %Type_Info, %Type_Info* %8442, i64 0, i32 2
	store i64 4, i64* %8444
	; Type_Info_Named
	%8445 = bitcast %Type_Info* %8442 to %Type_Info.Named*
	%8446 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%8447 = bitcast %Type_Info* %8446 to %Type_Info*
	%8448 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8445, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$863, i64 0, i32 0), i64 3}, %..string* %8448
	%8449 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8445, i64 0, i32 3
	store %Type_Info* %8447, %Type_Info** %8449
	%8450 = getelementptr inbounds %Type_Info, %Type_Info* %8442, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8450
	%8451 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	%8452 = getelementptr inbounds %Type_Info, %Type_Info* %8451, i64 0, i32 1
	store i64 4, i64* %8452
	%8453 = getelementptr inbounds %Type_Info, %Type_Info* %8451, i64 0, i32 2
	store i64 4, i64* %8453
	; Type_Info_Named
	%8454 = bitcast %Type_Info* %8451 to %Type_Info.Named*
	%8455 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%8456 = bitcast %Type_Info* %8455 to %Type_Info*
	%8457 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8454, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$864, i64 0, i32 0), i64 3}, %..string* %8457
	%8458 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8454, i64 0, i32 3
	store %Type_Info* %8456, %Type_Info** %8458
	%8459 = getelementptr inbounds %Type_Info, %Type_Info* %8451, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8459
	%8460 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	%8461 = getelementptr inbounds %Type_Info, %Type_Info* %8460, i64 0, i32 1
	store i64 4, i64* %8461
	%8462 = getelementptr inbounds %Type_Info, %Type_Info* %8460, i64 0, i32 2
	store i64 4, i64* %8462
	; Type_Info_Named
	%8463 = bitcast %Type_Info* %8460 to %Type_Info.Named*
	%8464 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%8465 = bitcast %Type_Info* %8464 to %Type_Info*
	%8466 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8463, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$865, i64 0, i32 0), i64 3}, %..string* %8466
	%8467 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8463, i64 0, i32 3
	store %Type_Info* %8465, %Type_Info** %8467
	%8468 = getelementptr inbounds %Type_Info, %Type_Info* %8460, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8468
	%8469 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 285
	%8470 = getelementptr inbounds %Type_Info, %Type_Info* %8469, i64 0, i32 1
	store i64 8, i64* %8470
	%8471 = getelementptr inbounds %Type_Info, %Type_Info* %8469, i64 0, i32 2
	store i64 8, i64* %8471
	; Type_Info_Pointer
	%8472 = bitcast %Type_Info* %8469 to %Type_Info.Pointer*
	%8473 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 233
	%8474 = bitcast %Type_Info* %8473 to %Type_Info*
	%8475 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8472, i64 0, i32 2
	store %Type_Info* %8474, %Type_Info** %8475
	%8476 = getelementptr inbounds %Type_Info, %Type_Info* %8469, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8476
	%8477 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 286
	%8478 = getelementptr inbounds %Type_Info, %Type_Info* %8477, i64 0, i32 1
	store i64 8, i64* %8478
	%8479 = getelementptr inbounds %Type_Info, %Type_Info* %8477, i64 0, i32 2
	store i64 8, i64* %8479
	; Type_Info_Pointer
	%8480 = bitcast %Type_Info* %8477 to %Type_Info.Pointer*
	%8481 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 287
	%8482 = bitcast %Type_Info* %8481 to %Type_Info*
	%8483 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8480, i64 0, i32 2
	store %Type_Info* %8482, %Type_Info** %8483
	%8484 = getelementptr inbounds %Type_Info, %Type_Info* %8477, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8484
	%8485 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 287
	%8486 = getelementptr inbounds %Type_Info, %Type_Info* %8485, i64 0, i32 1
	store i64 368, i64* %8486
	%8487 = getelementptr inbounds %Type_Info, %Type_Info* %8485, i64 0, i32 2
	store i64 8, i64* %8487
	; Type_Info_Named
	%8488 = bitcast %Type_Info* %8485 to %Type_Info.Named*
	%8489 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 288
	%8490 = bitcast %Type_Info* %8489 to %Type_Info*
	%8491 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8488, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$866, i64 0, i32 0), i64 7}, %..string* %8491
	%8492 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8488, i64 0, i32 3
	store %Type_Info* %8490, %Type_Info** %8492
	%8493 = getelementptr inbounds %Type_Info, %Type_Info* %8485, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8493
	%8494 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 288
	%8495 = getelementptr inbounds %Type_Info, %Type_Info* %8494, i64 0, i32 1
	store i64 368, i64* %8495
	%8496 = getelementptr inbounds %Type_Info, %Type_Info* %8494, i64 0, i32 2
	store i64 8, i64* %8496
	; Type_Info_Struct
	%8497 = bitcast %Type_Info* %8494 to %Type_Info.Struct*
	%8498 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8497, i64 0, i32 2
	%8499 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 4
	store i1 false, i1* %8499
	%8500 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 5
	store i1 false, i1* %8500
	%8501 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 6
	store i1 false, i1* %8501
	%8502 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 417
	%8503 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 417
	%8504 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 246
	%8505 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 235
	%8506 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%8507 = bitcast %Type_Info* %8506 to %Type_Info*
	%8508 = getelementptr inbounds %Type_Info*, %Type_Info** %8502, i64 0
	%8509 = getelementptr inbounds i64, i64* %8504, i64 0
	%8510 = getelementptr inbounds i1, i1* %8505, i64 0
	%8511 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	store %Type_Info* %8511, %Type_Info** %8508
	%8512 = getelementptr inbounds %..string, %..string* %8503, i64 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$867, i64 0, i32 0), i64 13}, %..string* %8512
	store i64 0, i64* %8509
	store i1 false, i1* %8510
	%8513 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%8514 = bitcast %Type_Info* %8513 to %Type_Info*
	%8515 = getelementptr inbounds %Type_Info*, %Type_Info** %8502, i64 1
	%8516 = getelementptr inbounds i64, i64* %8504, i64 1
	%8517 = getelementptr inbounds i1, i1* %8505, i64 1
	%8518 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	store %Type_Info* %8518, %Type_Info** %8515
	%8519 = getelementptr inbounds %..string, %..string* %8503, i64 1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$868, i64 0, i32 0), i64 12}, %..string* %8519
	store i64 176, i64* %8516
	store i1 false, i1* %8517
	%8520 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	%8521 = bitcast %Type_Info* %8520 to %Type_Info*
	%8522 = getelementptr inbounds %Type_Info*, %Type_Info** %8502, i64 2
	%8523 = getelementptr inbounds i64, i64* %8504, i64 2
	%8524 = getelementptr inbounds i1, i1* %8505, i64 2
	%8525 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	store %Type_Info* %8525, %Type_Info** %8522
	%8526 = getelementptr inbounds %..string, %..string* %8503, i64 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$869, i64 0, i32 0), i64 3}, %..string* %8526
	store i64 352, i64* %8523
	store i1 false, i1* %8524
	%8527 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	%8528 = bitcast %Type_Info* %8527 to %Type_Info*
	%8529 = getelementptr inbounds %Type_Info*, %Type_Info** %8502, i64 3
	%8530 = getelementptr inbounds i64, i64* %8504, i64 3
	%8531 = getelementptr inbounds i1, i1* %8505, i64 3
	%8532 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	store %Type_Info* %8532, %Type_Info** %8529
	%8533 = getelementptr inbounds %..string, %..string* %8503, i64 3
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$86a, i64 0, i32 0), i64 3}, %..string* %8533
	store i64 356, i64* %8530
	store i1 false, i1* %8531
	%8534 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	%8535 = bitcast %Type_Info* %8534 to %Type_Info*
	%8536 = getelementptr inbounds %Type_Info*, %Type_Info** %8502, i64 4
	%8537 = getelementptr inbounds i64, i64* %8504, i64 4
	%8538 = getelementptr inbounds i1, i1* %8505, i64 4
	%8539 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	store %Type_Info* %8539, %Type_Info** %8536
	%8540 = getelementptr inbounds %..string, %..string* %8503, i64 4
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$86b, i64 0, i32 0), i64 3}, %..string* %8540
	store i64 360, i64* %8537
	store i1 false, i1* %8538
	%8541 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 0
	%8542 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8541, i64 0, i32 0
	store %Type_Info** %8502, %Type_Info*** %8542
	%8543 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8541, i64 0, i32 1
	store i64 5, i64* %8543
	%8544 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8541, i64 0, i32 2
	store i64 5, i64* %8544
	%8545 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 1
	%8546 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8545, i64 0, i32 0
	store %..string* %8503, %..string** %8546
	%8547 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8545, i64 0, i32 1
	store i64 5, i64* %8547
	%8548 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8545, i64 0, i32 2
	store i64 5, i64* %8548
	%8549 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 2
	%8550 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8549, i64 0, i32 0
	store i64* %8504, i64** %8550
	%8551 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8549, i64 0, i32 1
	store i64 5, i64* %8551
	%8552 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8549, i64 0, i32 2
	store i64 5, i64* %8552
	%8553 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8498, i64 0, i32 3
	%8554 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8553, i64 0, i32 0
	store i1* %8505, i1** %8554
	%8555 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8553, i64 0, i32 1
	store i64 5, i64* %8555
	%8556 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8553, i64 0, i32 2
	store i64 5, i64* %8556
	%8557 = getelementptr inbounds %Type_Info, %Type_Info* %8494, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8557
	%8558 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 289
	%8559 = getelementptr inbounds %Type_Info, %Type_Info* %8558, i64 0, i32 1
	store i64 16, i64* %8559
	%8560 = getelementptr inbounds %Type_Info, %Type_Info* %8558, i64 0, i32 2
	store i64 4, i64* %8560
	; Type_Info_Named
	%8561 = bitcast %Type_Info* %8558 to %Type_Info.Named*
	%8562 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 290
	%8563 = bitcast %Type_Info* %8562 to %Type_Info*
	%8564 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8561, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$86c, i64 0, i32 0), i64 10}, %..string* %8564
	%8565 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8561, i64 0, i32 3
	store %Type_Info* %8563, %Type_Info** %8565
	%8566 = getelementptr inbounds %Type_Info, %Type_Info* %8558, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8566
	%8567 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 290
	%8568 = getelementptr inbounds %Type_Info, %Type_Info* %8567, i64 0, i32 1
	store i64 16, i64* %8568
	%8569 = getelementptr inbounds %Type_Info, %Type_Info* %8567, i64 0, i32 2
	store i64 4, i64* %8569
	; Type_Info_Struct
	%8570 = bitcast %Type_Info* %8567 to %Type_Info.Struct*
	%8571 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8570, i64 0, i32 2
	%8572 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 4
	store i1 false, i1* %8572
	%8573 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 5
	store i1 false, i1* %8573
	%8574 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 6
	store i1 false, i1* %8574
	%8575 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 422
	%8576 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 422
	%8577 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 251
	%8578 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 240
	%8579 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8580 = bitcast %Type_Info* %8579 to %Type_Info*
	%8581 = getelementptr inbounds %Type_Info*, %Type_Info** %8575, i64 0
	%8582 = getelementptr inbounds i64, i64* %8577, i64 0
	%8583 = getelementptr inbounds i1, i1* %8578, i64 0
	%8584 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8584, %Type_Info** %8581
	%8585 = getelementptr inbounds %..string, %..string* %8576, i64 0
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$86d, i64 0, i32 0), i64 1}, %..string* %8585
	store i64 0, i64* %8582
	store i1 false, i1* %8583
	%8586 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8587 = bitcast %Type_Info* %8586 to %Type_Info*
	%8588 = getelementptr inbounds %Type_Info*, %Type_Info** %8575, i64 1
	%8589 = getelementptr inbounds i64, i64* %8577, i64 1
	%8590 = getelementptr inbounds i1, i1* %8578, i64 1
	%8591 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8591, %Type_Info** %8588
	%8592 = getelementptr inbounds %..string, %..string* %8576, i64 1
	store %..string {i8* getelementptr inbounds ([1 x i8], [1 x i8]* @__str$86e, i64 0, i32 0), i64 1}, %..string* %8592
	store i64 4, i64* %8589
	store i1 false, i1* %8590
	%8593 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8594 = bitcast %Type_Info* %8593 to %Type_Info*
	%8595 = getelementptr inbounds %Type_Info*, %Type_Info** %8575, i64 2
	%8596 = getelementptr inbounds i64, i64* %8577, i64 2
	%8597 = getelementptr inbounds i1, i1* %8578, i64 2
	%8598 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8598, %Type_Info** %8595
	%8599 = getelementptr inbounds %..string, %..string* %8576, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$86f, i64 0, i32 0), i64 5}, %..string* %8599
	store i64 8, i64* %8596
	store i1 false, i1* %8597
	%8600 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8601 = bitcast %Type_Info* %8600 to %Type_Info*
	%8602 = getelementptr inbounds %Type_Info*, %Type_Info** %8575, i64 3
	%8603 = getelementptr inbounds i64, i64* %8577, i64 3
	%8604 = getelementptr inbounds i1, i1* %8578, i64 3
	%8605 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %8605, %Type_Info** %8602
	%8606 = getelementptr inbounds %..string, %..string* %8576, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$870, i64 0, i32 0), i64 6}, %..string* %8606
	store i64 12, i64* %8603
	store i1 false, i1* %8604
	%8607 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 0
	%8608 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8607, i64 0, i32 0
	store %Type_Info** %8575, %Type_Info*** %8608
	%8609 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8607, i64 0, i32 1
	store i64 4, i64* %8609
	%8610 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8607, i64 0, i32 2
	store i64 4, i64* %8610
	%8611 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 1
	%8612 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8611, i64 0, i32 0
	store %..string* %8576, %..string** %8612
	%8613 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8611, i64 0, i32 1
	store i64 4, i64* %8613
	%8614 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8611, i64 0, i32 2
	store i64 4, i64* %8614
	%8615 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 2
	%8616 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8615, i64 0, i32 0
	store i64* %8577, i64** %8616
	%8617 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8615, i64 0, i32 1
	store i64 4, i64* %8617
	%8618 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8615, i64 0, i32 2
	store i64 4, i64* %8618
	%8619 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8571, i64 0, i32 3
	%8620 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8619, i64 0, i32 0
	store i1* %8578, i1** %8620
	%8621 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8619, i64 0, i32 1
	store i64 4, i64* %8621
	%8622 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8619, i64 0, i32 2
	store i64 4, i64* %8622
	%8623 = getelementptr inbounds %Type_Info, %Type_Info* %8567, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8623
	%8624 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%8625 = getelementptr inbounds %Type_Info, %Type_Info* %8624, i64 0, i32 1
	store i64 8, i64* %8625
	%8626 = getelementptr inbounds %Type_Info, %Type_Info* %8624, i64 0, i32 2
	store i64 8, i64* %8626
	; Type_Info_Pointer
	%8627 = bitcast %Type_Info* %8624 to %Type_Info.Pointer*
	%8628 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8629 = bitcast %Type_Info* %8628 to %Type_Info*
	%8630 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8627, i64 0, i32 2
	store %Type_Info* %8629, %Type_Info** %8630
	%8631 = getelementptr inbounds %Type_Info, %Type_Info* %8624, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8631
	%8632 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8633 = getelementptr inbounds %Type_Info, %Type_Info* %8632, i64 0, i32 1
	store i64 424, i64* %8633
	%8634 = getelementptr inbounds %Type_Info, %Type_Info* %8632, i64 0, i32 2
	store i64 8, i64* %8634
	; Type_Info_Named
	%8635 = bitcast %Type_Info* %8632 to %Type_Info.Named*
	%8636 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 293
	%8637 = bitcast %Type_Info* %8636 to %Type_Info*
	%8638 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8635, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$871, i64 0, i32 0), i64 5}, %..string* %8638
	%8639 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8635, i64 0, i32 3
	store %Type_Info* %8637, %Type_Info** %8639
	%8640 = getelementptr inbounds %Type_Info, %Type_Info* %8632, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8640
	%8641 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 293
	%8642 = getelementptr inbounds %Type_Info, %Type_Info* %8641, i64 0, i32 1
	store i64 424, i64* %8642
	%8643 = getelementptr inbounds %Type_Info, %Type_Info* %8641, i64 0, i32 2
	store i64 8, i64* %8643
	; Type_Info_Union
	%8644 = bitcast %Type_Info* %8641 to %Type_Info.Union*
	%8645 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %8644, i64 0, i32 2
	%8646 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 426
	%8647 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 426
	%8648 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 255
	%8649 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%8650 = bitcast %Type_Info* %8649 to %Type_Info*
	%8651 = getelementptr inbounds %Type_Info*, %Type_Info** %8646, i64 0
	%8652 = getelementptr inbounds i64, i64* %8648, i64 0
	%8653 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	store %Type_Info* %8653, %Type_Info** %8651
	%8654 = getelementptr inbounds %..string, %..string* %8647, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$872, i64 0, i32 0), i64 8}, %..string* %8654
	store i64 0, i64* %8652
	%8655 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%8656 = bitcast %Type_Info* %8655 to %Type_Info*
	%8657 = getelementptr inbounds %Type_Info*, %Type_Info** %8646, i64 1
	%8658 = getelementptr inbounds i64, i64* %8648, i64 1
	%8659 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %8659, %Type_Info** %8657
	%8660 = getelementptr inbounds %..string, %..string* %8647, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$873, i64 0, i32 0), i64 14}, %..string* %8660
	store i64 56, i64* %8658
	%8661 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %8645, i64 0, i32 0
	%8662 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8661, i64 0, i32 0
	store %Type_Info** %8646, %Type_Info*** %8662
	%8663 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8661, i64 0, i32 1
	store i64 2, i64* %8663
	%8664 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8661, i64 0, i32 2
	store i64 2, i64* %8664
	%8665 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %8645, i64 0, i32 1
	%8666 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8665, i64 0, i32 0
	store %..string* %8647, %..string** %8666
	%8667 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8665, i64 0, i32 1
	store i64 2, i64* %8667
	%8668 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8665, i64 0, i32 2
	store i64 2, i64* %8668
	%8669 = getelementptr inbounds {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}, {{%Type_Info**, i64, i64}, {%..string*, i64, i64}, {i64*, i64, i64}}* %8645, i64 0, i32 2
	%8670 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8669, i64 0, i32 0
	store i64* %8648, i64** %8670
	%8671 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8669, i64 0, i32 1
	store i64 2, i64* %8671
	%8672 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8669, i64 0, i32 2
	store i64 2, i64* %8672
	%8673 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %8644, i64 0, i32 3
	%8674 = getelementptr inbounds %Type_Info.Union, %Type_Info.Union* %8644, i64 0, i32 4
	%8675 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 428
	%8676 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 428
	%8677 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%8678 = bitcast %Type_Info* %8677 to %Type_Info*
	%8679 = getelementptr inbounds %Type_Info*, %Type_Info** %8676, i64 0
	%8680 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	store %Type_Info* %8680, %Type_Info** %8679
	%8681 = getelementptr inbounds %..string, %..string* %8675, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$874, i64 0, i32 0), i64 7}, %..string* %8681
	%8682 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8683 = bitcast %Type_Info* %8682 to %Type_Info*
	%8684 = getelementptr inbounds %Type_Info*, %Type_Info** %8676, i64 1
	%8685 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	store %Type_Info* %8685, %Type_Info** %8684
	%8686 = getelementptr inbounds %..string, %..string* %8675, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$875, i64 0, i32 0), i64 6}, %..string* %8686
	%8687 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	%8688 = bitcast %Type_Info* %8687 to %Type_Info*
	%8689 = getelementptr inbounds %Type_Info*, %Type_Info** %8676, i64 2
	%8690 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	store %Type_Info* %8690, %Type_Info** %8689
	%8691 = getelementptr inbounds %..string, %..string* %8675, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$876, i64 0, i32 0), i64 5}, %..string* %8691
	%8692 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	%8693 = bitcast %Type_Info* %8692 to %Type_Info*
	%8694 = getelementptr inbounds %Type_Info*, %Type_Info** %8676, i64 3
	%8695 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	store %Type_Info* %8695, %Type_Info** %8694
	%8696 = getelementptr inbounds %..string, %..string* %8675, i64 3
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$877, i64 0, i32 0), i64 13}, %..string* %8696
	%8697 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8673, i64 0, i32 0
	store %..string* %8675, %..string** %8697
	%8698 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8673, i64 0, i32 1
	store i64 4, i64* %8698
	%8699 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8673, i64 0, i32 2
	store i64 4, i64* %8699
	%8700 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8674, i64 0, i32 0
	store %Type_Info** %8676, %Type_Info*** %8700
	%8701 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8674, i64 0, i32 1
	store i64 4, i64* %8701
	%8702 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8674, i64 0, i32 2
	store i64 4, i64* %8702
	%8703 = getelementptr inbounds %Type_Info, %Type_Info* %8641, i64 0, i32 4 ; UnionTagPtr
	store i64 19, i64* %8703
	%8704 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8705 = getelementptr inbounds %Type_Info, %Type_Info* %8704, i64 0, i32 1
	store i64 112, i64* %8705
	%8706 = getelementptr inbounds %Type_Info, %Type_Info* %8704, i64 0, i32 2
	store i64 8, i64* %8706
	; Type_Info_Named
	%8707 = bitcast %Type_Info* %8704 to %Type_Info.Named*
	%8708 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 295
	%8709 = bitcast %Type_Info* %8708 to %Type_Info*
	%8710 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8707, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$878, i64 0, i32 0), i64 6}, %..string* %8710
	%8711 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8707, i64 0, i32 3
	store %Type_Info* %8709, %Type_Info** %8711
	%8712 = getelementptr inbounds %Type_Info, %Type_Info* %8704, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8712
	%8713 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 295
	%8714 = getelementptr inbounds %Type_Info, %Type_Info* %8713, i64 0, i32 1
	store i64 112, i64* %8714
	%8715 = getelementptr inbounds %Type_Info, %Type_Info* %8713, i64 0, i32 2
	store i64 8, i64* %8715
	; Type_Info_Struct
	%8716 = bitcast %Type_Info* %8713 to %Type_Info.Struct*
	%8717 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8716, i64 0, i32 2
	%8718 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 4
	store i1 false, i1* %8718
	%8719 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 5
	store i1 true, i1* %8719
	%8720 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 6
	store i1 false, i1* %8720
	%8721 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 432
	%8722 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 432
	%8723 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 257
	%8724 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 244
	%8725 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%8726 = bitcast %Type_Info* %8725 to %Type_Info*
	%8727 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 0
	%8728 = getelementptr inbounds i64, i64* %8723, i64 0
	%8729 = getelementptr inbounds i1, i1* %8724, i64 0
	%8730 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	store %Type_Info* %8730, %Type_Info** %8727
	%8731 = getelementptr inbounds %..string, %..string* %8722, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$879, i64 0, i32 0), i64 8}, %..string* %8731
	store i64 0, i64* %8728
	store i1 false, i1* %8729
	%8732 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%8733 = bitcast %Type_Info* %8732 to %Type_Info*
	%8734 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 1
	%8735 = getelementptr inbounds i64, i64* %8723, i64 1
	%8736 = getelementptr inbounds i1, i1* %8724, i64 1
	%8737 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %8737, %Type_Info** %8734
	%8738 = getelementptr inbounds %..string, %..string* %8722, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$87a, i64 0, i32 0), i64 14}, %..string* %8738
	store i64 56, i64* %8735
	store i1 false, i1* %8736
	%8739 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%8740 = bitcast %Type_Info* %8739 to %Type_Info*
	%8741 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 2
	%8742 = getelementptr inbounds i64, i64* %8723, i64 2
	%8743 = getelementptr inbounds i1, i1* %8724, i64 2
	%8744 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	store %Type_Info* %8744, %Type_Info** %8741
	%8745 = getelementptr inbounds %..string, %..string* %8722, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$87b, i64 0, i32 0), i64 4}, %..string* %8745
	store i64 60, i64* %8742
	store i1 false, i1* %8743
	%8746 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	%8747 = bitcast %Type_Info* %8746 to %Type_Info*
	%8748 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 3
	%8749 = getelementptr inbounds i64, i64* %8723, i64 3
	%8750 = getelementptr inbounds i1, i1* %8724, i64 3
	%8751 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	store %Type_Info* %8751, %Type_Info** %8748
	%8752 = getelementptr inbounds %..string, %..string* %8722, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$87c, i64 0, i32 0), i64 4}, %..string* %8752
	store i64 64, i64* %8749
	store i1 false, i1* %8750
	%8753 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%8754 = bitcast %Type_Info* %8753 to %Type_Info*
	%8755 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 4
	%8756 = getelementptr inbounds i64, i64* %8723, i64 4
	%8757 = getelementptr inbounds i1, i1* %8724, i64 4
	%8758 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %8758, %Type_Info** %8755
	%8759 = getelementptr inbounds %..string, %..string* %8722, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$87d, i64 0, i32 0), i64 6}, %..string* %8759
	store i64 72, i64* %8756
	store i1 false, i1* %8757
	%8760 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	%8761 = bitcast %Type_Info* %8760 to %Type_Info*
	%8762 = getelementptr inbounds %Type_Info*, %Type_Info** %8721, i64 5
	%8763 = getelementptr inbounds i64, i64* %8723, i64 5
	%8764 = getelementptr inbounds i1, i1* %8724, i64 5
	%8765 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	store %Type_Info* %8765, %Type_Info** %8762
	%8766 = getelementptr inbounds %..string, %..string* %8722, i64 5
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$87e, i64 0, i32 0), i64 4}, %..string* %8766
	store i64 88, i64* %8763
	store i1 false, i1* %8764
	%8767 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 0
	%8768 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8767, i64 0, i32 0
	store %Type_Info** %8721, %Type_Info*** %8768
	%8769 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8767, i64 0, i32 1
	store i64 6, i64* %8769
	%8770 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8767, i64 0, i32 2
	store i64 6, i64* %8770
	%8771 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 1
	%8772 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8771, i64 0, i32 0
	store %..string* %8722, %..string** %8772
	%8773 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8771, i64 0, i32 1
	store i64 6, i64* %8773
	%8774 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8771, i64 0, i32 2
	store i64 6, i64* %8774
	%8775 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 2
	%8776 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8775, i64 0, i32 0
	store i64* %8723, i64** %8776
	%8777 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8775, i64 0, i32 1
	store i64 6, i64* %8777
	%8778 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8775, i64 0, i32 2
	store i64 6, i64* %8778
	%8779 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8717, i64 0, i32 3
	%8780 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8779, i64 0, i32 0
	store i1* %8724, i1** %8780
	%8781 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8779, i64 0, i32 1
	store i64 6, i64* %8781
	%8782 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8779, i64 0, i32 2
	store i64 6, i64* %8782
	%8783 = getelementptr inbounds %Type_Info, %Type_Info* %8713, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8783
	%8784 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	%8785 = getelementptr inbounds %Type_Info, %Type_Info* %8784, i64 0, i32 1
	store i64 4, i64* %8785
	%8786 = getelementptr inbounds %Type_Info, %Type_Info* %8784, i64 0, i32 2
	store i64 4, i64* %8786
	; Type_Info_Named
	%8787 = bitcast %Type_Info* %8784 to %Type_Info.Named*
	%8788 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 297
	%8789 = bitcast %Type_Info* %8788 to %Type_Info*
	%8790 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8787, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$87f, i64 0, i32 0), i64 11}, %..string* %8790
	%8791 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8787, i64 0, i32 3
	store %Type_Info* %8789, %Type_Info** %8791
	%8792 = getelementptr inbounds %Type_Info, %Type_Info* %8784, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8792
	%8793 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 297
	%8794 = getelementptr inbounds %Type_Info, %Type_Info* %8793, i64 0, i32 1
	store i64 4, i64* %8794
	%8795 = getelementptr inbounds %Type_Info, %Type_Info* %8793, i64 0, i32 2
	store i64 4, i64* %8795
	; Type_Info_Enum
	%8796 = bitcast %Type_Info* %8793 to %Type_Info.Enum*
	%8797 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%8798 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %8796, i64 0, i32 2
	store %Type_Info* %8797, %Type_Info** %8798
	%8799 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 0
	%8800 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 0
	%8801 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8800 to i64*
	store i64 37305, i64* %8801
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$880, i64 0, i32 0), i64 7}, %..string* %8799
	%8802 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 1
	%8803 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 1
	%8804 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8803 to i64*
	store i64 35633, i64* %8804
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$881, i64 0, i32 0), i64 6}, %..string* %8802
	%8805 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 2
	%8806 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 2
	%8807 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8806 to i64*
	store i64 36488, i64* %8807
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$882, i64 0, i32 0), i64 11}, %..string* %8805
	%8808 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 3
	%8809 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 3
	%8810 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8809 to i64*
	store i64 36487, i64* %8810
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$883, i64 0, i32 0), i64 14}, %..string* %8808
	%8811 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 4
	%8812 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 4
	%8813 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8812 to i64*
	store i64 36313, i64* %8813
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$884, i64 0, i32 0), i64 8}, %..string* %8811
	%8814 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 5
	%8815 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 5
	%8816 = bitcast {[0 x <8 x i8>], [8 x i8]}* %8815 to i64*
	store i64 35632, i64* %8816
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$885, i64 0, i32 0), i64 8}, %..string* %8814
	%8817 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %8796, i64 0, i32 3
	%8818 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-129, i64 0, i32 0
	%8819 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8817, i64 0, i32 0
	store %..string* %8818, %..string** %8819
	%8820 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8817, i64 0, i32 1
	store i64 6, i64* %8820
	%8821 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %8796, i64 0, i32 4
	%8822 = getelementptr inbounds [6 x {[0 x <8 x i8>], [8 x i8]}], [6 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-129, i64 0, i32 0
	%8823 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %8821, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %8822, {[0 x <8 x i8>], [8 x i8]}** %8823
	%8824 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %8821, i64 0, i32 1
	store i64 6, i64* %8824
	%8825 = getelementptr inbounds %Type_Info, %Type_Info* %8793, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %8825
	%8826 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	%8827 = getelementptr inbounds %Type_Info, %Type_Info* %8826, i64 0, i32 1
	store i64 24, i64* %8827
	%8828 = getelementptr inbounds %Type_Info, %Type_Info* %8826, i64 0, i32 2
	store i64 8, i64* %8828
	; Type_Info_Slice
	%8829 = bitcast %Type_Info* %8826 to %Type_Info.Slice*
	%8830 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%8831 = bitcast %Type_Info* %8830 to %Type_Info*
	%8832 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %8829, i64 0, i32 2
	store %Type_Info* %8831, %Type_Info** %8832
	%8833 = getelementptr inbounds %Type_Info.Slice, %Type_Info.Slice* %8829, i64 0, i32 3
	store i64 1, i64* %8833
	%8834 = getelementptr inbounds %Type_Info, %Type_Info* %8826, i64 0, i32 4 ; UnionTagPtr
	store i64 14, i64* %8834
	%8835 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%8836 = getelementptr inbounds %Type_Info, %Type_Info* %8835, i64 0, i32 1
	store i64 8, i64* %8836
	%8837 = getelementptr inbounds %Type_Info, %Type_Info* %8835, i64 0, i32 2
	store i64 8, i64* %8837
	; Type_Info_Pointer
	%8838 = bitcast %Type_Info* %8835 to %Type_Info.Pointer*
	%8839 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%8840 = bitcast %Type_Info* %8839 to %Type_Info*
	%8841 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8838, i64 0, i32 2
	store %Type_Info* %8840, %Type_Info** %8841
	%8842 = getelementptr inbounds %Type_Info, %Type_Info* %8835, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8842
	%8843 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	%8844 = getelementptr inbounds %Type_Info, %Type_Info* %8843, i64 0, i32 1
	store i64 64, i64* %8844
	%8845 = getelementptr inbounds %Type_Info, %Type_Info* %8843, i64 0, i32 2
	store i64 8, i64* %8845
	; Type_Info_Named
	%8846 = bitcast %Type_Info* %8843 to %Type_Info.Named*
	%8847 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 300
	%8848 = bitcast %Type_Info* %8847 to %Type_Info*
	%8849 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8846, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$886, i64 0, i32 0), i64 5}, %..string* %8849
	%8850 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8846, i64 0, i32 3
	store %Type_Info* %8848, %Type_Info** %8850
	%8851 = getelementptr inbounds %Type_Info, %Type_Info* %8843, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8851
	%8852 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 300
	%8853 = getelementptr inbounds %Type_Info, %Type_Info* %8852, i64 0, i32 1
	store i64 64, i64* %8853
	%8854 = getelementptr inbounds %Type_Info, %Type_Info* %8852, i64 0, i32 2
	store i64 8, i64* %8854
	; Type_Info_Struct
	%8855 = bitcast %Type_Info* %8852 to %Type_Info.Struct*
	%8856 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8855, i64 0, i32 2
	%8857 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 4
	store i1 false, i1* %8857
	%8858 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 5
	store i1 true, i1* %8858
	%8859 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 6
	store i1 false, i1* %8859
	%8860 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 438
	%8861 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 438
	%8862 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 263
	%8863 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 250
	%8864 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%8865 = bitcast %Type_Info* %8864 to %Type_Info*
	%8866 = getelementptr inbounds %Type_Info*, %Type_Info** %8860, i64 0
	%8867 = getelementptr inbounds i64, i64* %8862, i64 0
	%8868 = getelementptr inbounds i1, i1* %8863, i64 0
	%8869 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	store %Type_Info* %8869, %Type_Info** %8866
	%8870 = getelementptr inbounds %..string, %..string* %8861, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$887, i64 0, i32 0), i64 8}, %..string* %8870
	store i64 0, i64* %8867
	store i1 false, i1* %8868
	%8871 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%8872 = bitcast %Type_Info* %8871 to %Type_Info*
	%8873 = getelementptr inbounds %Type_Info*, %Type_Info** %8860, i64 1
	%8874 = getelementptr inbounds i64, i64* %8862, i64 1
	%8875 = getelementptr inbounds i1, i1* %8863, i64 1
	%8876 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %8876, %Type_Info** %8873
	%8877 = getelementptr inbounds %..string, %..string* %8861, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$888, i64 0, i32 0), i64 14}, %..string* %8877
	store i64 56, i64* %8874
	store i1 false, i1* %8875
	%8878 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 0
	%8879 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8878, i64 0, i32 0
	store %Type_Info** %8860, %Type_Info*** %8879
	%8880 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8878, i64 0, i32 1
	store i64 2, i64* %8880
	%8881 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8878, i64 0, i32 2
	store i64 2, i64* %8881
	%8882 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 1
	%8883 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8882, i64 0, i32 0
	store %..string* %8861, %..string** %8883
	%8884 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8882, i64 0, i32 1
	store i64 2, i64* %8884
	%8885 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8882, i64 0, i32 2
	store i64 2, i64* %8885
	%8886 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 2
	%8887 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8886, i64 0, i32 0
	store i64* %8862, i64** %8887
	%8888 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8886, i64 0, i32 1
	store i64 2, i64* %8888
	%8889 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8886, i64 0, i32 2
	store i64 2, i64* %8889
	%8890 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8856, i64 0, i32 3
	%8891 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8890, i64 0, i32 0
	store i1* %8863, i1** %8891
	%8892 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8890, i64 0, i32 1
	store i64 2, i64* %8892
	%8893 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8890, i64 0, i32 2
	store i64 2, i64* %8893
	%8894 = getelementptr inbounds %Type_Info, %Type_Info* %8852, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8894
	%8895 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	%8896 = getelementptr inbounds %Type_Info, %Type_Info* %8895, i64 0, i32 1
	store i64 416, i64* %8896
	%8897 = getelementptr inbounds %Type_Info, %Type_Info* %8895, i64 0, i32 2
	store i64 8, i64* %8897
	; Type_Info_Named
	%8898 = bitcast %Type_Info* %8895 to %Type_Info.Named*
	%8899 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 302
	%8900 = bitcast %Type_Info* %8899 to %Type_Info*
	%8901 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8898, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$889, i64 0, i32 0), i64 13}, %..string* %8901
	%8902 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %8898, i64 0, i32 3
	store %Type_Info* %8900, %Type_Info** %8902
	%8903 = getelementptr inbounds %Type_Info, %Type_Info* %8895, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %8903
	%8904 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 302
	%8905 = getelementptr inbounds %Type_Info, %Type_Info* %8904, i64 0, i32 1
	store i64 416, i64* %8905
	%8906 = getelementptr inbounds %Type_Info, %Type_Info* %8904, i64 0, i32 2
	store i64 8, i64* %8906
	; Type_Info_Struct
	%8907 = bitcast %Type_Info* %8904 to %Type_Info.Struct*
	%8908 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %8907, i64 0, i32 2
	%8909 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 4
	store i1 false, i1* %8909
	%8910 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 5
	store i1 true, i1* %8910
	%8911 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 6
	store i1 false, i1* %8911
	%8912 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 440
	%8913 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 440
	%8914 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 265
	%8915 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 252
	%8916 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%8917 = bitcast %Type_Info* %8916 to %Type_Info*
	%8918 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 0
	%8919 = getelementptr inbounds i64, i64* %8914, i64 0
	%8920 = getelementptr inbounds i1, i1* %8915, i64 0
	%8921 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	store %Type_Info* %8921, %Type_Info** %8918
	%8922 = getelementptr inbounds %..string, %..string* %8913, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$88a, i64 0, i32 0), i64 8}, %..string* %8922
	store i64 0, i64* %8919
	store i1 false, i1* %8920
	%8923 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%8924 = bitcast %Type_Info* %8923 to %Type_Info*
	%8925 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 1
	%8926 = getelementptr inbounds i64, i64* %8914, i64 1
	%8927 = getelementptr inbounds i1, i1* %8915, i64 1
	%8928 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	store %Type_Info* %8928, %Type_Info** %8925
	%8929 = getelementptr inbounds %..string, %..string* %8913, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$88b, i64 0, i32 0), i64 14}, %..string* %8929
	store i64 56, i64* %8926
	store i1 false, i1* %8927
	%8930 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%8931 = bitcast %Type_Info* %8930 to %Type_Info*
	%8932 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 2
	%8933 = getelementptr inbounds i64, i64* %8914, i64 2
	%8934 = getelementptr inbounds i1, i1* %8915, i64 2
	%8935 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	store %Type_Info* %8935, %Type_Info** %8932
	%8936 = getelementptr inbounds %..string, %..string* %8913, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$88c, i64 0, i32 0), i64 4}, %..string* %8936
	store i64 64, i64* %8933
	store i1 false, i1* %8934
	%8937 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8938 = bitcast %Type_Info* %8937 to %Type_Info*
	%8939 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 3
	%8940 = getelementptr inbounds i64, i64* %8914, i64 3
	%8941 = getelementptr inbounds i1, i1* %8915, i64 3
	%8942 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	store %Type_Info* %8942, %Type_Info** %8939
	%8943 = getelementptr inbounds %..string, %..string* %8913, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$88d, i64 0, i32 0), i64 6}, %..string* %8943
	store i64 240, i64* %8940
	store i1 false, i1* %8941
	%8944 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8945 = bitcast %Type_Info* %8944 to %Type_Info*
	%8946 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 4
	%8947 = getelementptr inbounds i64, i64* %8914, i64 4
	%8948 = getelementptr inbounds i1, i1* %8915, i64 4
	%8949 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	store %Type_Info* %8949, %Type_Info** %8946
	%8950 = getelementptr inbounds %..string, %..string* %8913, i64 4
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$88e, i64 0, i32 0), i64 8}, %..string* %8950
	store i64 248, i64* %8947
	store i1 false, i1* %8948
	%8951 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8952 = bitcast %Type_Info* %8951 to %Type_Info*
	%8953 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 5
	%8954 = getelementptr inbounds i64, i64* %8914, i64 5
	%8955 = getelementptr inbounds i1, i1* %8915, i64 5
	%8956 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	store %Type_Info* %8956, %Type_Info** %8953
	%8957 = getelementptr inbounds %..string, %..string* %8913, i64 5
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$88f, i64 0, i32 0), i64 8}, %..string* %8957
	store i64 256, i64* %8954
	store i1 false, i1* %8955
	%8958 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8959 = bitcast %Type_Info* %8958 to %Type_Info*
	%8960 = getelementptr inbounds %Type_Info*, %Type_Info** %8912, i64 6
	%8961 = getelementptr inbounds i64, i64* %8914, i64 6
	%8962 = getelementptr inbounds i1, i1* %8915, i64 6
	%8963 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	store %Type_Info* %8963, %Type_Info** %8960
	%8964 = getelementptr inbounds %..string, %..string* %8913, i64 6
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$890, i64 0, i32 0), i64 10}, %..string* %8964
	store i64 336, i64* %8961
	store i1 false, i1* %8962
	%8965 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 0
	%8966 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8965, i64 0, i32 0
	store %Type_Info** %8912, %Type_Info*** %8966
	%8967 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8965, i64 0, i32 1
	store i64 7, i64* %8967
	%8968 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %8965, i64 0, i32 2
	store i64 7, i64* %8968
	%8969 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 1
	%8970 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8969, i64 0, i32 0
	store %..string* %8913, %..string** %8970
	%8971 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8969, i64 0, i32 1
	store i64 7, i64* %8971
	%8972 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %8969, i64 0, i32 2
	store i64 7, i64* %8972
	%8973 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 2
	%8974 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8973, i64 0, i32 0
	store i64* %8914, i64** %8974
	%8975 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8973, i64 0, i32 1
	store i64 7, i64* %8975
	%8976 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %8973, i64 0, i32 2
	store i64 7, i64* %8976
	%8977 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %8908, i64 0, i32 3
	%8978 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8977, i64 0, i32 0
	store i1* %8915, i1** %8978
	%8979 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8977, i64 0, i32 1
	store i64 7, i64* %8979
	%8980 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %8977, i64 0, i32 2
	store i64 7, i64* %8980
	%8981 = getelementptr inbounds %Type_Info, %Type_Info* %8904, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %8981
	%8982 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8983 = getelementptr inbounds %Type_Info, %Type_Info* %8982, i64 0, i32 1
	store i64 8, i64* %8983
	%8984 = getelementptr inbounds %Type_Info, %Type_Info* %8982, i64 0, i32 2
	store i64 8, i64* %8984
	; Type_Info_Pointer
	%8985 = bitcast %Type_Info* %8982 to %Type_Info.Pointer*
	%8986 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8987 = bitcast %Type_Info* %8986 to %Type_Info*
	%8988 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8985, i64 0, i32 2
	store %Type_Info* %8987, %Type_Info** %8988
	%8989 = getelementptr inbounds %Type_Info, %Type_Info* %8982, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8989
	%8990 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8991 = getelementptr inbounds %Type_Info, %Type_Info* %8990, i64 0, i32 1
	store i64 8, i64* %8991
	%8992 = getelementptr inbounds %Type_Info, %Type_Info* %8990, i64 0, i32 2
	store i64 8, i64* %8992
	; Type_Info_Pointer
	%8993 = bitcast %Type_Info* %8990 to %Type_Info.Pointer*
	%8994 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8995 = bitcast %Type_Info* %8994 to %Type_Info*
	%8996 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %8993, i64 0, i32 2
	store %Type_Info* %8995, %Type_Info** %8996
	%8997 = getelementptr inbounds %Type_Info, %Type_Info* %8990, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %8997
	%8998 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%8999 = getelementptr inbounds %Type_Info, %Type_Info* %8998, i64 0, i32 1
	store i64 80, i64* %8999
	%9000 = getelementptr inbounds %Type_Info, %Type_Info* %8998, i64 0, i32 2
	store i64 8, i64* %9000
	; Type_Info_Map
	%9001 = bitcast %Type_Info* %8998 to %Type_Info.Map*
	%9002 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9001, i64 0, i32 2
	%9003 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9001, i64 0, i32 3
	%9004 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9001, i64 0, i32 4
	%9005 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9001, i64 0, i32 5
	%9006 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%9007 = bitcast %Type_Info* %9006 to %Type_Info*
	store %Type_Info* %9007, %Type_Info** %9002
	%9008 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%9009 = bitcast %Type_Info* %9008 to %Type_Info*
	store %Type_Info* %9009, %Type_Info** %9003
	%9010 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%9011 = bitcast %Type_Info* %9010 to %Type_Info*
	store %Type_Info* %9011, %Type_Info** %9004
	store i64 0, i64* %9005
	%9012 = getelementptr inbounds %Type_Info, %Type_Info* %8998, i64 0, i32 4 ; UnionTagPtr
	store i64 21, i64* %9012
	%9013 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%9014 = getelementptr inbounds %Type_Info, %Type_Info* %9013, i64 0, i32 1
	store i64 80, i64* %9014
	%9015 = getelementptr inbounds %Type_Info, %Type_Info* %9013, i64 0, i32 2
	store i64 8, i64* %9015
	; Type_Info_Struct
	%9016 = bitcast %Type_Info* %9013 to %Type_Info.Struct*
	%9017 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %9016, i64 0, i32 2
	%9018 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 4
	store i1 false, i1* %9018
	%9019 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 5
	store i1 false, i1* %9019
	%9020 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 6
	store i1 false, i1* %9020
	%9021 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 447
	%9022 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 447
	%9023 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 272
	%9024 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 259
	%9025 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%9026 = bitcast %Type_Info* %9025 to %Type_Info*
	%9027 = getelementptr inbounds %Type_Info*, %Type_Info** %9021, i64 0
	%9028 = getelementptr inbounds i64, i64* %9023, i64 0
	%9029 = getelementptr inbounds i1, i1* %9024, i64 0
	%9030 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	store %Type_Info* %9030, %Type_Info** %9027
	%9031 = getelementptr inbounds %..string, %..string* %9022, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$891, i64 0, i32 0), i64 6}, %..string* %9031
	store i64 0, i64* %9028
	store i1 false, i1* %9029
	%9032 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%9033 = bitcast %Type_Info* %9032 to %Type_Info*
	%9034 = getelementptr inbounds %Type_Info*, %Type_Info** %9021, i64 1
	%9035 = getelementptr inbounds i64, i64* %9023, i64 1
	%9036 = getelementptr inbounds i1, i1* %9024, i64 1
	%9037 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	store %Type_Info* %9037, %Type_Info** %9034
	%9038 = getelementptr inbounds %..string, %..string* %9022, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$892, i64 0, i32 0), i64 7}, %..string* %9038
	store i64 40, i64* %9035
	store i1 false, i1* %9036
	%9039 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 0
	%9040 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9039, i64 0, i32 0
	store %Type_Info** %9021, %Type_Info*** %9040
	%9041 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9039, i64 0, i32 1
	store i64 2, i64* %9041
	%9042 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9039, i64 0, i32 2
	store i64 2, i64* %9042
	%9043 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 1
	%9044 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9043, i64 0, i32 0
	store %..string* %9022, %..string** %9044
	%9045 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9043, i64 0, i32 1
	store i64 2, i64* %9045
	%9046 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9043, i64 0, i32 2
	store i64 2, i64* %9046
	%9047 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 2
	%9048 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9047, i64 0, i32 0
	store i64* %9023, i64** %9048
	%9049 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9047, i64 0, i32 1
	store i64 2, i64* %9049
	%9050 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9047, i64 0, i32 2
	store i64 2, i64* %9050
	%9051 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9017, i64 0, i32 3
	%9052 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9051, i64 0, i32 0
	store i1* %9024, i1** %9052
	%9053 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9051, i64 0, i32 1
	store i64 2, i64* %9053
	%9054 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9051, i64 0, i32 2
	store i64 2, i64* %9054
	%9055 = getelementptr inbounds %Type_Info, %Type_Info* %9013, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %9055
	%9056 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%9057 = getelementptr inbounds %Type_Info, %Type_Info* %9056, i64 0, i32 1
	store i64 40, i64* %9057
	%9058 = getelementptr inbounds %Type_Info, %Type_Info* %9056, i64 0, i32 2
	store i64 8, i64* %9058
	; Type_Info_DynamicArray
	%9059 = bitcast %Type_Info* %9056 to %Type_Info.Dynamic_Array*
	%9060 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9061 = bitcast %Type_Info* %9060 to %Type_Info*
	%9062 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9059, i64 0, i32 2
	store %Type_Info* %9061, %Type_Info** %9062
	%9063 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9059, i64 0, i32 3
	store i64 8, i64* %9063
	%9064 = getelementptr inbounds %Type_Info, %Type_Info* %9056, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %9064
	%9065 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%9066 = getelementptr inbounds %Type_Info, %Type_Info* %9065, i64 0, i32 1
	store i64 8, i64* %9066
	%9067 = getelementptr inbounds %Type_Info, %Type_Info* %9065, i64 0, i32 2
	store i64 8, i64* %9067
	; Type_Info_Pointer
	%9068 = bitcast %Type_Info* %9065 to %Type_Info.Pointer*
	%9069 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9070 = bitcast %Type_Info* %9069 to %Type_Info*
	%9071 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9068, i64 0, i32 2
	store %Type_Info* %9070, %Type_Info** %9071
	%9072 = getelementptr inbounds %Type_Info, %Type_Info* %9065, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9072
	%9073 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%9074 = getelementptr inbounds %Type_Info, %Type_Info* %9073, i64 0, i32 1
	store i64 40, i64* %9074
	%9075 = getelementptr inbounds %Type_Info, %Type_Info* %9073, i64 0, i32 2
	store i64 8, i64* %9075
	; Type_Info_DynamicArray
	%9076 = bitcast %Type_Info* %9073 to %Type_Info.Dynamic_Array*
	%9077 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9078 = bitcast %Type_Info* %9077 to %Type_Info*
	%9079 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9076, i64 0, i32 2
	store %Type_Info* %9078, %Type_Info** %9079
	%9080 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9076, i64 0, i32 3
	store i64 40, i64* %9080
	%9081 = getelementptr inbounds %Type_Info, %Type_Info* %9073, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %9081
	%9082 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9083 = getelementptr inbounds %Type_Info, %Type_Info* %9082, i64 0, i32 1
	store i64 40, i64* %9083
	%9084 = getelementptr inbounds %Type_Info, %Type_Info* %9082, i64 0, i32 2
	store i64 8, i64* %9084
	; Type_Info_Struct
	%9085 = bitcast %Type_Info* %9082 to %Type_Info.Struct*
	%9086 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %9085, i64 0, i32 2
	%9087 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 4
	store i1 false, i1* %9087
	%9088 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 5
	store i1 false, i1* %9088
	%9089 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 6
	store i1 false, i1* %9089
	%9090 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 449
	%9091 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 449
	%9092 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 274
	%9093 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 261
	%9094 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%9095 = bitcast %Type_Info* %9094 to %Type_Info*
	%9096 = getelementptr inbounds %Type_Info*, %Type_Info** %9090, i64 0
	%9097 = getelementptr inbounds i64, i64* %9092, i64 0
	%9098 = getelementptr inbounds i1, i1* %9093, i64 0
	%9099 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	store %Type_Info* %9099, %Type_Info** %9096
	%9100 = getelementptr inbounds %..string, %..string* %9091, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$893, i64 0, i32 0), i64 3}, %..string* %9100
	store i64 0, i64* %9097
	store i1 false, i1* %9098
	%9101 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9102 = bitcast %Type_Info* %9101 to %Type_Info*
	%9103 = getelementptr inbounds %Type_Info*, %Type_Info** %9090, i64 1
	%9104 = getelementptr inbounds i64, i64* %9092, i64 1
	%9105 = getelementptr inbounds i1, i1* %9093, i64 1
	%9106 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %9106, %Type_Info** %9103
	%9107 = getelementptr inbounds %..string, %..string* %9091, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$894, i64 0, i32 0), i64 4}, %..string* %9107
	store i64 24, i64* %9104
	store i1 false, i1* %9105
	%9108 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%9109 = bitcast %Type_Info* %9108 to %Type_Info*
	%9110 = getelementptr inbounds %Type_Info*, %Type_Info** %9090, i64 2
	%9111 = getelementptr inbounds i64, i64* %9092, i64 2
	%9112 = getelementptr inbounds i1, i1* %9093, i64 2
	%9113 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %9113, %Type_Info** %9110
	%9114 = getelementptr inbounds %..string, %..string* %9091, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$895, i64 0, i32 0), i64 5}, %..string* %9114
	store i64 32, i64* %9111
	store i1 false, i1* %9112
	%9115 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 0
	%9116 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9115, i64 0, i32 0
	store %Type_Info** %9090, %Type_Info*** %9116
	%9117 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9115, i64 0, i32 1
	store i64 3, i64* %9117
	%9118 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9115, i64 0, i32 2
	store i64 3, i64* %9118
	%9119 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 1
	%9120 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9119, i64 0, i32 0
	store %..string* %9091, %..string** %9120
	%9121 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9119, i64 0, i32 1
	store i64 3, i64* %9121
	%9122 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9119, i64 0, i32 2
	store i64 3, i64* %9122
	%9123 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 2
	%9124 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9123, i64 0, i32 0
	store i64* %9092, i64** %9124
	%9125 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9123, i64 0, i32 1
	store i64 3, i64* %9125
	%9126 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9123, i64 0, i32 2
	store i64 3, i64* %9126
	%9127 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9086, i64 0, i32 3
	%9128 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9127, i64 0, i32 0
	store i1* %9093, i1** %9128
	%9129 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9127, i64 0, i32 1
	store i64 3, i64* %9129
	%9130 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9127, i64 0, i32 2
	store i64 3, i64* %9130
	%9131 = getelementptr inbounds %Type_Info, %Type_Info* %9082, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %9131
	%9132 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%9133 = getelementptr inbounds %Type_Info, %Type_Info* %9132, i64 0, i32 1
	store i64 8, i64* %9133
	%9134 = getelementptr inbounds %Type_Info, %Type_Info* %9132, i64 0, i32 2
	store i64 8, i64* %9134
	; Type_Info_Pointer
	%9135 = bitcast %Type_Info* %9132 to %Type_Info.Pointer*
	%9136 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9137 = bitcast %Type_Info* %9136 to %Type_Info*
	%9138 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9135, i64 0, i32 2
	store %Type_Info* %9137, %Type_Info** %9138
	%9139 = getelementptr inbounds %Type_Info, %Type_Info* %9132, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9139
	%9140 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%9141 = getelementptr inbounds %Type_Info, %Type_Info* %9140, i64 0, i32 1
	store i64 80, i64* %9141
	%9142 = getelementptr inbounds %Type_Info, %Type_Info* %9140, i64 0, i32 2
	store i64 8, i64* %9142
	; Type_Info_Map
	%9143 = bitcast %Type_Info* %9140 to %Type_Info.Map*
	%9144 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9143, i64 0, i32 2
	%9145 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9143, i64 0, i32 3
	%9146 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9143, i64 0, i32 4
	%9147 = getelementptr inbounds %Type_Info.Map, %Type_Info.Map* %9143, i64 0, i32 5
	%9148 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%9149 = bitcast %Type_Info* %9148 to %Type_Info*
	store %Type_Info* %9149, %Type_Info** %9144
	%9150 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%9151 = bitcast %Type_Info* %9150 to %Type_Info*
	store %Type_Info* %9151, %Type_Info** %9145
	%9152 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%9153 = bitcast %Type_Info* %9152 to %Type_Info*
	store %Type_Info* %9153, %Type_Info** %9146
	store i64 0, i64* %9147
	%9154 = getelementptr inbounds %Type_Info, %Type_Info* %9140, i64 0, i32 4 ; UnionTagPtr
	store i64 21, i64* %9154
	%9155 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%9156 = getelementptr inbounds %Type_Info, %Type_Info* %9155, i64 0, i32 1
	store i64 80, i64* %9156
	%9157 = getelementptr inbounds %Type_Info, %Type_Info* %9155, i64 0, i32 2
	store i64 8, i64* %9157
	; Type_Info_Struct
	%9158 = bitcast %Type_Info* %9155 to %Type_Info.Struct*
	%9159 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %9158, i64 0, i32 2
	%9160 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 4
	store i1 false, i1* %9160
	%9161 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 5
	store i1 false, i1* %9161
	%9162 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 6
	store i1 false, i1* %9162
	%9163 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 452
	%9164 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 452
	%9165 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 277
	%9166 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 264
	%9167 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%9168 = bitcast %Type_Info* %9167 to %Type_Info*
	%9169 = getelementptr inbounds %Type_Info*, %Type_Info** %9163, i64 0
	%9170 = getelementptr inbounds i64, i64* %9165, i64 0
	%9171 = getelementptr inbounds i1, i1* %9166, i64 0
	%9172 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	store %Type_Info* %9172, %Type_Info** %9169
	%9173 = getelementptr inbounds %..string, %..string* %9164, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$896, i64 0, i32 0), i64 6}, %..string* %9173
	store i64 0, i64* %9170
	store i1 false, i1* %9171
	%9174 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%9175 = bitcast %Type_Info* %9174 to %Type_Info*
	%9176 = getelementptr inbounds %Type_Info*, %Type_Info** %9163, i64 1
	%9177 = getelementptr inbounds i64, i64* %9165, i64 1
	%9178 = getelementptr inbounds i1, i1* %9166, i64 1
	%9179 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	store %Type_Info* %9179, %Type_Info** %9176
	%9180 = getelementptr inbounds %..string, %..string* %9164, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$897, i64 0, i32 0), i64 7}, %..string* %9180
	store i64 40, i64* %9177
	store i1 false, i1* %9178
	%9181 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 0
	%9182 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9181, i64 0, i32 0
	store %Type_Info** %9163, %Type_Info*** %9182
	%9183 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9181, i64 0, i32 1
	store i64 2, i64* %9183
	%9184 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9181, i64 0, i32 2
	store i64 2, i64* %9184
	%9185 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 1
	%9186 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9185, i64 0, i32 0
	store %..string* %9164, %..string** %9186
	%9187 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9185, i64 0, i32 1
	store i64 2, i64* %9187
	%9188 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9185, i64 0, i32 2
	store i64 2, i64* %9188
	%9189 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 2
	%9190 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9189, i64 0, i32 0
	store i64* %9165, i64** %9190
	%9191 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9189, i64 0, i32 1
	store i64 2, i64* %9191
	%9192 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9189, i64 0, i32 2
	store i64 2, i64* %9192
	%9193 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9159, i64 0, i32 3
	%9194 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9193, i64 0, i32 0
	store i1* %9166, i1** %9194
	%9195 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9193, i64 0, i32 1
	store i64 2, i64* %9195
	%9196 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9193, i64 0, i32 2
	store i64 2, i64* %9196
	%9197 = getelementptr inbounds %Type_Info, %Type_Info* %9155, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %9197
	%9198 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%9199 = getelementptr inbounds %Type_Info, %Type_Info* %9198, i64 0, i32 1
	store i64 40, i64* %9199
	%9200 = getelementptr inbounds %Type_Info, %Type_Info* %9198, i64 0, i32 2
	store i64 8, i64* %9200
	; Type_Info_DynamicArray
	%9201 = bitcast %Type_Info* %9198 to %Type_Info.Dynamic_Array*
	%9202 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9203 = bitcast %Type_Info* %9202 to %Type_Info*
	%9204 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9201, i64 0, i32 2
	store %Type_Info* %9203, %Type_Info** %9204
	%9205 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9201, i64 0, i32 3
	store i64 8, i64* %9205
	%9206 = getelementptr inbounds %Type_Info, %Type_Info* %9198, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %9206
	%9207 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%9208 = getelementptr inbounds %Type_Info, %Type_Info* %9207, i64 0, i32 1
	store i64 8, i64* %9208
	%9209 = getelementptr inbounds %Type_Info, %Type_Info* %9207, i64 0, i32 2
	store i64 8, i64* %9209
	; Type_Info_Pointer
	%9210 = bitcast %Type_Info* %9207 to %Type_Info.Pointer*
	%9211 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9212 = bitcast %Type_Info* %9211 to %Type_Info*
	%9213 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9210, i64 0, i32 2
	store %Type_Info* %9212, %Type_Info** %9213
	%9214 = getelementptr inbounds %Type_Info, %Type_Info* %9207, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9214
	%9215 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%9216 = getelementptr inbounds %Type_Info, %Type_Info* %9215, i64 0, i32 1
	store i64 40, i64* %9216
	%9217 = getelementptr inbounds %Type_Info, %Type_Info* %9215, i64 0, i32 2
	store i64 8, i64* %9217
	; Type_Info_DynamicArray
	%9218 = bitcast %Type_Info* %9215 to %Type_Info.Dynamic_Array*
	%9219 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9220 = bitcast %Type_Info* %9219 to %Type_Info*
	%9221 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9218, i64 0, i32 2
	store %Type_Info* %9220, %Type_Info** %9221
	%9222 = getelementptr inbounds %Type_Info.Dynamic_Array, %Type_Info.Dynamic_Array* %9218, i64 0, i32 3
	store i64 40, i64* %9222
	%9223 = getelementptr inbounds %Type_Info, %Type_Info* %9215, i64 0, i32 4 ; UnionTagPtr
	store i64 13, i64* %9223
	%9224 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9225 = getelementptr inbounds %Type_Info, %Type_Info* %9224, i64 0, i32 1
	store i64 40, i64* %9225
	%9226 = getelementptr inbounds %Type_Info, %Type_Info* %9224, i64 0, i32 2
	store i64 8, i64* %9226
	; Type_Info_Struct
	%9227 = bitcast %Type_Info* %9224 to %Type_Info.Struct*
	%9228 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %9227, i64 0, i32 2
	%9229 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 4
	store i1 false, i1* %9229
	%9230 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 5
	store i1 false, i1* %9230
	%9231 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 6
	store i1 false, i1* %9231
	%9232 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 454
	%9233 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 454
	%9234 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 279
	%9235 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 266
	%9236 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%9237 = bitcast %Type_Info* %9236 to %Type_Info*
	%9238 = getelementptr inbounds %Type_Info*, %Type_Info** %9232, i64 0
	%9239 = getelementptr inbounds i64, i64* %9234, i64 0
	%9240 = getelementptr inbounds i1, i1* %9235, i64 0
	%9241 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	store %Type_Info* %9241, %Type_Info** %9238
	%9242 = getelementptr inbounds %..string, %..string* %9233, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$898, i64 0, i32 0), i64 3}, %..string* %9242
	store i64 0, i64* %9239
	store i1 false, i1* %9240
	%9243 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9244 = bitcast %Type_Info* %9243 to %Type_Info*
	%9245 = getelementptr inbounds %Type_Info*, %Type_Info** %9232, i64 1
	%9246 = getelementptr inbounds i64, i64* %9234, i64 1
	%9247 = getelementptr inbounds i1, i1* %9235, i64 1
	%9248 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %9248, %Type_Info** %9245
	%9249 = getelementptr inbounds %..string, %..string* %9233, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$899, i64 0, i32 0), i64 4}, %..string* %9249
	store i64 24, i64* %9246
	store i1 false, i1* %9247
	%9250 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%9251 = bitcast %Type_Info* %9250 to %Type_Info*
	%9252 = getelementptr inbounds %Type_Info*, %Type_Info** %9232, i64 2
	%9253 = getelementptr inbounds i64, i64* %9234, i64 2
	%9254 = getelementptr inbounds i1, i1* %9235, i64 2
	%9255 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %9255, %Type_Info** %9252
	%9256 = getelementptr inbounds %..string, %..string* %9233, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$89a, i64 0, i32 0), i64 5}, %..string* %9256
	store i64 32, i64* %9253
	store i1 false, i1* %9254
	%9257 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 0
	%9258 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9257, i64 0, i32 0
	store %Type_Info** %9232, %Type_Info*** %9258
	%9259 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9257, i64 0, i32 1
	store i64 3, i64* %9259
	%9260 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9257, i64 0, i32 2
	store i64 3, i64* %9260
	%9261 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 1
	%9262 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9261, i64 0, i32 0
	store %..string* %9233, %..string** %9262
	%9263 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9261, i64 0, i32 1
	store i64 3, i64* %9263
	%9264 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9261, i64 0, i32 2
	store i64 3, i64* %9264
	%9265 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 2
	%9266 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9265, i64 0, i32 0
	store i64* %9234, i64** %9266
	%9267 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9265, i64 0, i32 1
	store i64 3, i64* %9267
	%9268 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9265, i64 0, i32 2
	store i64 3, i64* %9268
	%9269 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9228, i64 0, i32 3
	%9270 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9269, i64 0, i32 0
	store i1* %9235, i1** %9270
	%9271 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9269, i64 0, i32 1
	store i64 3, i64* %9271
	%9272 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9269, i64 0, i32 2
	store i64 3, i64* %9272
	%9273 = getelementptr inbounds %Type_Info, %Type_Info* %9224, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %9273
	%9274 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%9275 = getelementptr inbounds %Type_Info, %Type_Info* %9274, i64 0, i32 1
	store i64 8, i64* %9275
	%9276 = getelementptr inbounds %Type_Info, %Type_Info* %9274, i64 0, i32 2
	store i64 8, i64* %9276
	; Type_Info_Pointer
	%9277 = bitcast %Type_Info* %9274 to %Type_Info.Pointer*
	%9278 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%9279 = bitcast %Type_Info* %9278 to %Type_Info*
	%9280 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9277, i64 0, i32 2
	store %Type_Info* %9279, %Type_Info** %9280
	%9281 = getelementptr inbounds %Type_Info, %Type_Info* %9274, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9281
	%9282 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9283 = getelementptr inbounds %Type_Info, %Type_Info* %9282, i64 0, i32 1
	store i64 8, i64* %9283
	%9284 = getelementptr inbounds %Type_Info, %Type_Info* %9282, i64 0, i32 2
	store i64 8, i64* %9284
	; Type_Info_Pointer
	%9285 = bitcast %Type_Info* %9282 to %Type_Info.Pointer*
	%9286 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9287 = bitcast %Type_Info* %9286 to %Type_Info*
	%9288 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9285, i64 0, i32 2
	store %Type_Info* %9287, %Type_Info** %9288
	%9289 = getelementptr inbounds %Type_Info, %Type_Info* %9282, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9289
	%9290 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9291 = getelementptr inbounds %Type_Info, %Type_Info* %9290, i64 0, i32 1
	store i64 8, i64* %9291
	%9292 = getelementptr inbounds %Type_Info, %Type_Info* %9290, i64 0, i32 2
	store i64 8, i64* %9292
	; Type_Info_Pointer
	%9293 = bitcast %Type_Info* %9290 to %Type_Info.Pointer*
	%9294 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9295 = bitcast %Type_Info* %9294 to %Type_Info*
	%9296 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9293, i64 0, i32 2
	store %Type_Info* %9295, %Type_Info** %9296
	%9297 = getelementptr inbounds %Type_Info, %Type_Info* %9290, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9297
	%9298 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9299 = getelementptr inbounds %Type_Info, %Type_Info* %9298, i64 0, i32 1
	store i64 8, i64* %9299
	%9300 = getelementptr inbounds %Type_Info, %Type_Info* %9298, i64 0, i32 2
	store i64 8, i64* %9300
	; Type_Info_Pointer
	%9301 = bitcast %Type_Info* %9298 to %Type_Info.Pointer*
	%9302 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9303 = bitcast %Type_Info* %9302 to %Type_Info*
	%9304 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9301, i64 0, i32 2
	store %Type_Info* %9303, %Type_Info** %9304
	%9305 = getelementptr inbounds %Type_Info, %Type_Info* %9298, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9305
	%9306 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9307 = getelementptr inbounds %Type_Info, %Type_Info* %9306, i64 0, i32 1
	store i64 8, i64* %9307
	%9308 = getelementptr inbounds %Type_Info, %Type_Info* %9306, i64 0, i32 2
	store i64 8, i64* %9308
	; Type_Info_Pointer
	%9309 = bitcast %Type_Info* %9306 to %Type_Info.Pointer*
	%9310 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9311 = bitcast %Type_Info* %9310 to %Type_Info*
	%9312 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9309, i64 0, i32 2
	store %Type_Info* %9311, %Type_Info** %9312
	%9313 = getelementptr inbounds %Type_Info, %Type_Info* %9306, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9313
	%9314 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9315 = getelementptr inbounds %Type_Info, %Type_Info* %9314, i64 0, i32 1
	store i64 8, i64* %9315
	%9316 = getelementptr inbounds %Type_Info, %Type_Info* %9314, i64 0, i32 2
	store i64 8, i64* %9316
	; Type_Info_Pointer
	%9317 = bitcast %Type_Info* %9314 to %Type_Info.Pointer*
	%9318 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9319 = bitcast %Type_Info* %9318 to %Type_Info*
	%9320 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9317, i64 0, i32 2
	store %Type_Info* %9319, %Type_Info** %9320
	%9321 = getelementptr inbounds %Type_Info, %Type_Info* %9314, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9321
	%9322 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9323 = getelementptr inbounds %Type_Info, %Type_Info* %9322, i64 0, i32 1
	store i64 8, i64* %9323
	%9324 = getelementptr inbounds %Type_Info, %Type_Info* %9322, i64 0, i32 2
	store i64 8, i64* %9324
	; Type_Info_Pointer
	%9325 = bitcast %Type_Info* %9322 to %Type_Info.Pointer*
	%9326 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9327 = bitcast %Type_Info* %9326 to %Type_Info*
	%9328 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9325, i64 0, i32 2
	store %Type_Info* %9327, %Type_Info** %9328
	%9329 = getelementptr inbounds %Type_Info, %Type_Info* %9322, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9329
	%9330 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9331 = getelementptr inbounds %Type_Info, %Type_Info* %9330, i64 0, i32 1
	store i64 8, i64* %9331
	%9332 = getelementptr inbounds %Type_Info, %Type_Info* %9330, i64 0, i32 2
	store i64 8, i64* %9332
	; Type_Info_Pointer
	%9333 = bitcast %Type_Info* %9330 to %Type_Info.Pointer*
	%9334 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9335 = bitcast %Type_Info* %9334 to %Type_Info*
	%9336 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9333, i64 0, i32 2
	store %Type_Info* %9335, %Type_Info** %9336
	%9337 = getelementptr inbounds %Type_Info, %Type_Info* %9330, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9337
	%9338 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9339 = getelementptr inbounds %Type_Info, %Type_Info* %9338, i64 0, i32 1
	store i64 8, i64* %9339
	%9340 = getelementptr inbounds %Type_Info, %Type_Info* %9338, i64 0, i32 2
	store i64 8, i64* %9340
	; Type_Info_Pointer
	%9341 = bitcast %Type_Info* %9338 to %Type_Info.Pointer*
	%9342 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9343 = bitcast %Type_Info* %9342 to %Type_Info*
	%9344 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9341, i64 0, i32 2
	store %Type_Info* %9343, %Type_Info** %9344
	%9345 = getelementptr inbounds %Type_Info, %Type_Info* %9338, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9345
	%9346 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 304
	%9347 = getelementptr inbounds %Type_Info, %Type_Info* %9346, i64 0, i32 1
	store i64 8, i64* %9347
	%9348 = getelementptr inbounds %Type_Info, %Type_Info* %9346, i64 0, i32 2
	store i64 8, i64* %9348
	; Type_Info_Named
	%9349 = bitcast %Type_Info* %9346 to %Type_Info.Named*
	%9350 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 305
	%9351 = bitcast %Type_Info* %9350 to %Type_Info*
	%9352 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9349, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$89b, i64 0, i32 0), i64 4}, %..string* %9352
	%9353 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9349, i64 0, i32 3
	store %Type_Info* %9351, %Type_Info** %9353
	%9354 = getelementptr inbounds %Type_Info, %Type_Info* %9346, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %9354
	%9355 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 305
	%9356 = getelementptr inbounds %Type_Info, %Type_Info* %9355, i64 0, i32 1
	store i64 8, i64* %9356
	%9357 = getelementptr inbounds %Type_Info, %Type_Info* %9355, i64 0, i32 2
	store i64 8, i64* %9357
	; Type_Info_Enum
	%9358 = bitcast %Type_Info* %9355 to %Type_Info.Enum*
	%9359 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9360 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9358, i64 0, i32 2
	store %Type_Info* %9359, %Type_Info** %9360
	%9361 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-131, i64 0, i32 0
	%9362 = getelementptr inbounds [3 x {[0 x <8 x i8>], [8 x i8]}], [3 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-131, i64 0, i32 0
	%9363 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9362 to i64*
	store i64 0, i64* %9363
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$89c, i64 0, i32 0), i64 7}, %..string* %9361
	%9364 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-131, i64 0, i32 1
	%9365 = getelementptr inbounds [3 x {[0 x <8 x i8>], [8 x i8]}], [3 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-131, i64 0, i32 1
	%9366 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9365 to i64*
	store i64 1, i64* %9366
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$89d, i64 0, i32 0), i64 6}, %..string* %9364
	%9367 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-131, i64 0, i32 2
	%9368 = getelementptr inbounds [3 x {[0 x <8 x i8>], [8 x i8]}], [3 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-131, i64 0, i32 2
	%9369 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9368 to i64*
	store i64 2, i64* %9369
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$89e, i64 0, i32 0), i64 5}, %..string* %9367
	%9370 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9358, i64 0, i32 3
	%9371 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-131, i64 0, i32 0
	%9372 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9370, i64 0, i32 0
	store %..string* %9371, %..string** %9372
	%9373 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9370, i64 0, i32 1
	store i64 3, i64* %9373
	%9374 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9358, i64 0, i32 4
	%9375 = getelementptr inbounds [3 x {[0 x <8 x i8>], [8 x i8]}], [3 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-131, i64 0, i32 0
	%9376 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9374, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %9375, {[0 x <8 x i8>], [8 x i8]}** %9376
	%9377 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9374, i64 0, i32 1
	store i64 3, i64* %9377
	%9378 = getelementptr inbounds %Type_Info, %Type_Info* %9355, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %9378
	%9379 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9380 = getelementptr inbounds %Type_Info, %Type_Info* %9379, i64 0, i32 1
	store i64 8, i64* %9380
	%9381 = getelementptr inbounds %Type_Info, %Type_Info* %9379, i64 0, i32 2
	store i64 8, i64* %9381
	; Type_Info_Pointer
	%9382 = bitcast %Type_Info* %9379 to %Type_Info.Pointer*
	%9383 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9384 = bitcast %Type_Info* %9383 to %Type_Info*
	%9385 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9382, i64 0, i32 2
	store %Type_Info* %9384, %Type_Info** %9385
	%9386 = getelementptr inbounds %Type_Info, %Type_Info* %9379, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9386
	%9387 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9388 = getelementptr inbounds %Type_Info, %Type_Info* %9387, i64 0, i32 1
	store i64 8, i64* %9388
	%9389 = getelementptr inbounds %Type_Info, %Type_Info* %9387, i64 0, i32 2
	store i64 8, i64* %9389
	; Type_Info_Pointer
	%9390 = bitcast %Type_Info* %9387 to %Type_Info.Pointer*
	%9391 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9392 = bitcast %Type_Info* %9391 to %Type_Info*
	%9393 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9390, i64 0, i32 2
	store %Type_Info* %9392, %Type_Info** %9393
	%9394 = getelementptr inbounds %Type_Info, %Type_Info* %9387, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9394
	%9395 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 306
	%9396 = getelementptr inbounds %Type_Info, %Type_Info* %9395, i64 0, i32 1
	store i64 8, i64* %9396
	%9397 = getelementptr inbounds %Type_Info, %Type_Info* %9395, i64 0, i32 2
	store i64 8, i64* %9397
	; Type_Info_Pointer
	%9398 = bitcast %Type_Info* %9395 to %Type_Info.Pointer*
	%9399 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	%9400 = bitcast %Type_Info* %9399 to %Type_Info*
	%9401 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9398, i64 0, i32 2
	store %Type_Info* %9400, %Type_Info** %9401
	%9402 = getelementptr inbounds %Type_Info, %Type_Info* %9395, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9402
	%9403 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 307
	%9404 = getelementptr inbounds %Type_Info, %Type_Info* %9403, i64 0, i32 1
	store i64 8, i64* %9404
	%9405 = getelementptr inbounds %Type_Info, %Type_Info* %9403, i64 0, i32 2
	store i64 8, i64* %9405
	; Type_Info_Pointer
	%9406 = bitcast %Type_Info* %9403 to %Type_Info.Pointer*
	%9407 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	%9408 = bitcast %Type_Info* %9407 to %Type_Info*
	%9409 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9406, i64 0, i32 2
	store %Type_Info* %9408, %Type_Info** %9409
	%9410 = getelementptr inbounds %Type_Info, %Type_Info* %9403, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9410
	%9411 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%9412 = getelementptr inbounds %Type_Info, %Type_Info* %9411, i64 0, i32 1
	store i64 8, i64* %9412
	%9413 = getelementptr inbounds %Type_Info, %Type_Info* %9411, i64 0, i32 2
	store i64 8, i64* %9413
	; Type_Info_Pointer
	%9414 = bitcast %Type_Info* %9411 to %Type_Info.Pointer*
	%9415 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%9416 = bitcast %Type_Info* %9415 to %Type_Info*
	%9417 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9414, i64 0, i32 2
	store %Type_Info* %9416, %Type_Info** %9417
	%9418 = getelementptr inbounds %Type_Info, %Type_Info* %9411, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9418
	%9419 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9420 = getelementptr inbounds %Type_Info, %Type_Info* %9419, i64 0, i32 1
	store i64 8, i64* %9420
	%9421 = getelementptr inbounds %Type_Info, %Type_Info* %9419, i64 0, i32 2
	store i64 8, i64* %9421
	; Type_Info_Pointer
	%9422 = bitcast %Type_Info* %9419 to %Type_Info.Pointer*
	%9423 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9424 = bitcast %Type_Info* %9423 to %Type_Info*
	%9425 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9422, i64 0, i32 2
	store %Type_Info* %9424, %Type_Info** %9425
	%9426 = getelementptr inbounds %Type_Info, %Type_Info* %9419, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9426
	%9427 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9428 = getelementptr inbounds %Type_Info, %Type_Info* %9427, i64 0, i32 1
	store i64 8, i64* %9428
	%9429 = getelementptr inbounds %Type_Info, %Type_Info* %9427, i64 0, i32 2
	store i64 8, i64* %9429
	; Type_Info_Pointer
	%9430 = bitcast %Type_Info* %9427 to %Type_Info.Pointer*
	%9431 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9432 = bitcast %Type_Info* %9431 to %Type_Info*
	%9433 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9430, i64 0, i32 2
	store %Type_Info* %9432, %Type_Info** %9433
	%9434 = getelementptr inbounds %Type_Info, %Type_Info* %9427, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9434
	%9435 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9436 = getelementptr inbounds %Type_Info, %Type_Info* %9435, i64 0, i32 1
	store i64 8, i64* %9436
	%9437 = getelementptr inbounds %Type_Info, %Type_Info* %9435, i64 0, i32 2
	store i64 8, i64* %9437
	; Type_Info_Pointer
	%9438 = bitcast %Type_Info* %9435 to %Type_Info.Pointer*
	%9439 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9440 = bitcast %Type_Info* %9439 to %Type_Info*
	%9441 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9438, i64 0, i32 2
	store %Type_Info* %9440, %Type_Info** %9441
	%9442 = getelementptr inbounds %Type_Info, %Type_Info* %9435, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9442
	%9443 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%9444 = getelementptr inbounds %Type_Info, %Type_Info* %9443, i64 0, i32 1
	store i64 8, i64* %9444
	%9445 = getelementptr inbounds %Type_Info, %Type_Info* %9443, i64 0, i32 2
	store i64 8, i64* %9445
	; Type_Info_Pointer
	%9446 = bitcast %Type_Info* %9443 to %Type_Info.Pointer*
	%9447 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%9448 = bitcast %Type_Info* %9447 to %Type_Info*
	%9449 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9446, i64 0, i32 2
	store %Type_Info* %9448, %Type_Info** %9449
	%9450 = getelementptr inbounds %Type_Info, %Type_Info* %9443, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9450
	%9451 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 308
	%9452 = getelementptr inbounds %Type_Info, %Type_Info* %9451, i64 0, i32 1
	store i64 48, i64* %9452
	%9453 = getelementptr inbounds %Type_Info, %Type_Info* %9451, i64 0, i32 2
	store i64 8, i64* %9453
	; Type_Info_Named
	%9454 = bitcast %Type_Info* %9451 to %Type_Info.Named*
	%9455 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 309
	%9456 = bitcast %Type_Info* %9455 to %Type_Info*
	%9457 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9454, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$89f, i64 0, i32 0), i64 6}, %..string* %9457
	%9458 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9454, i64 0, i32 3
	store %Type_Info* %9456, %Type_Info** %9458
	%9459 = getelementptr inbounds %Type_Info, %Type_Info* %9451, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %9459
	%9460 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 309
	%9461 = getelementptr inbounds %Type_Info, %Type_Info* %9460, i64 0, i32 1
	store i64 48, i64* %9461
	%9462 = getelementptr inbounds %Type_Info, %Type_Info* %9460, i64 0, i32 2
	store i64 8, i64* %9462
	; Type_Info_Struct
	%9463 = bitcast %Type_Info* %9460 to %Type_Info.Struct*
	%9464 = getelementptr inbounds %Type_Info.Struct, %Type_Info.Struct* %9463, i64 0, i32 2
	%9465 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 4
	store i1 false, i1* %9465
	%9466 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 5
	store i1 true, i1* %9466
	%9467 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 6
	store i1 false, i1* %9467
	%9468 = getelementptr inbounds [466 x %Type_Info*], [466 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 457
	%9469 = getelementptr inbounds [466 x %..string], [466 x %..string]* @__$type_info_names_data, i64 0, i32 457
	%9470 = getelementptr inbounds [466 x i64], [466 x i64]* @__$type_info_offsets_data, i64 0, i32 282
	%9471 = getelementptr inbounds [466 x i1], [466 x i1]* @__$type_info_usings_data, i64 0, i32 269
	%9472 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%9473 = bitcast %Type_Info* %9472 to %Type_Info*
	%9474 = getelementptr inbounds %Type_Info*, %Type_Info** %9468, i64 0
	%9475 = getelementptr inbounds i64, i64* %9470, i64 0
	%9476 = getelementptr inbounds i1, i1* %9471, i64 0
	%9477 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %9477, %Type_Info** %9474
	%9478 = getelementptr inbounds %..string, %..string* %9469, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$8a0, i64 0, i32 0), i64 9}, %..string* %9478
	store i64 0, i64* %9475
	store i1 false, i1* %9476
	%9479 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%9480 = bitcast %Type_Info* %9479 to %Type_Info*
	%9481 = getelementptr inbounds %Type_Info*, %Type_Info** %9468, i64 1
	%9482 = getelementptr inbounds i64, i64* %9470, i64 1
	%9483 = getelementptr inbounds i1, i1* %9471, i64 1
	%9484 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	store %Type_Info* %9484, %Type_Info** %9481
	%9485 = getelementptr inbounds %..string, %..string* %9469, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$8a1, i64 0, i32 0), i64 8}, %..string* %9485
	store i64 16, i64* %9482
	store i1 false, i1* %9483
	%9486 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%9487 = bitcast %Type_Info* %9486 to %Type_Info*
	%9488 = getelementptr inbounds %Type_Info*, %Type_Info** %9468, i64 2
	%9489 = getelementptr inbounds i64, i64* %9470, i64 2
	%9490 = getelementptr inbounds i1, i1* %9471, i64 2
	%9491 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	store %Type_Info* %9491, %Type_Info** %9488
	%9492 = getelementptr inbounds %..string, %..string* %9469, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$8a2, i64 0, i32 0), i64 5}, %..string* %9492
	store i64 24, i64* %9489
	store i1 false, i1* %9490
	%9493 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9494 = bitcast %Type_Info* %9493 to %Type_Info*
	%9495 = getelementptr inbounds %Type_Info*, %Type_Info** %9468, i64 3
	%9496 = getelementptr inbounds i64, i64* %9470, i64 3
	%9497 = getelementptr inbounds i1, i1* %9471, i64 3
	%9498 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	store %Type_Info* %9498, %Type_Info** %9495
	%9499 = getelementptr inbounds %..string, %..string* %9469, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8a3, i64 0, i32 0), i64 7}, %..string* %9499
	store i64 40, i64* %9496
	store i1 false, i1* %9497
	%9500 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 0
	%9501 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9500, i64 0, i32 0
	store %Type_Info** %9468, %Type_Info*** %9501
	%9502 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9500, i64 0, i32 1
	store i64 4, i64* %9502
	%9503 = getelementptr inbounds {%Type_Info**, i64, i64}, {%Type_Info**, i64, i64}* %9500, i64 0, i32 2
	store i64 4, i64* %9503
	%9504 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 1
	%9505 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9504, i64 0, i32 0
	store %..string* %9469, %..string** %9505
	%9506 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9504, i64 0, i32 1
	store i64 4, i64* %9506
	%9507 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9504, i64 0, i32 2
	store i64 4, i64* %9507
	%9508 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 2
	%9509 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9508, i64 0, i32 0
	store i64* %9470, i64** %9509
	%9510 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9508, i64 0, i32 1
	store i64 4, i64* %9510
	%9511 = getelementptr inbounds {i64*, i64, i64}, {i64*, i64, i64}* %9508, i64 0, i32 2
	store i64 4, i64* %9511
	%9512 = getelementptr inbounds %Type_Info_Record, %Type_Info_Record* %9464, i64 0, i32 3
	%9513 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9512, i64 0, i32 0
	store i1* %9471, i1** %9513
	%9514 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9512, i64 0, i32 1
	store i64 4, i64* %9514
	%9515 = getelementptr inbounds {i1*, i64, i64}, {i1*, i64, i64}* %9512, i64 0, i32 2
	store i64 4, i64* %9515
	%9516 = getelementptr inbounds %Type_Info, %Type_Info* %9460, i64 0, i32 4 ; UnionTagPtr
	store i64 17, i64* %9516
	%9517 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%9518 = getelementptr inbounds %Type_Info, %Type_Info* %9517, i64 0, i32 1
	store i64 8, i64* %9518
	%9519 = getelementptr inbounds %Type_Info, %Type_Info* %9517, i64 0, i32 2
	store i64 8, i64* %9519
	; Type_Info_Pointer
	%9520 = bitcast %Type_Info* %9517 to %Type_Info.Pointer*
	%9521 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%9522 = bitcast %Type_Info* %9521 to %Type_Info*
	%9523 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9520, i64 0, i32 2
	store %Type_Info* %9522, %Type_Info** %9523
	%9524 = getelementptr inbounds %Type_Info, %Type_Info* %9517, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9524
	%9525 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%9526 = getelementptr inbounds %Type_Info, %Type_Info* %9525, i64 0, i32 1
	store i64 8, i64* %9526
	%9527 = getelementptr inbounds %Type_Info, %Type_Info* %9525, i64 0, i32 2
	store i64 8, i64* %9527
	; Type_Info_Pointer
	%9528 = bitcast %Type_Info* %9525 to %Type_Info.Pointer*
	%9529 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%9530 = bitcast %Type_Info* %9529 to %Type_Info*
	%9531 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9528, i64 0, i32 2
	store %Type_Info* %9530, %Type_Info** %9531
	%9532 = getelementptr inbounds %Type_Info, %Type_Info* %9525, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9532
	%9533 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%9534 = getelementptr inbounds %Type_Info, %Type_Info* %9533, i64 0, i32 1
	store i64 8, i64* %9534
	%9535 = getelementptr inbounds %Type_Info, %Type_Info* %9533, i64 0, i32 2
	store i64 8, i64* %9535
	; Type_Info_Pointer
	%9536 = bitcast %Type_Info* %9533 to %Type_Info.Pointer*
	%9537 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%9538 = bitcast %Type_Info* %9537 to %Type_Info*
	%9539 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9536, i64 0, i32 2
	store %Type_Info* %9538, %Type_Info** %9539
	%9540 = getelementptr inbounds %Type_Info, %Type_Info* %9533, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9540
	%9541 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%9542 = getelementptr inbounds %Type_Info, %Type_Info* %9541, i64 0, i32 1
	store i64 8, i64* %9542
	%9543 = getelementptr inbounds %Type_Info, %Type_Info* %9541, i64 0, i32 2
	store i64 8, i64* %9543
	; Type_Info_Pointer
	%9544 = bitcast %Type_Info* %9541 to %Type_Info.Pointer*
	%9545 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%9546 = bitcast %Type_Info* %9545 to %Type_Info*
	%9547 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9544, i64 0, i32 2
	store %Type_Info* %9546, %Type_Info** %9547
	%9548 = getelementptr inbounds %Type_Info, %Type_Info* %9541, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9548
	%9549 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 310
	%9550 = getelementptr inbounds %Type_Info, %Type_Info* %9549, i64 0, i32 1
	store i64 8, i64* %9550
	%9551 = getelementptr inbounds %Type_Info, %Type_Info* %9549, i64 0, i32 2
	store i64 8, i64* %9551
	; Type_Info_Pointer
	%9552 = bitcast %Type_Info* %9549 to %Type_Info.Pointer*
	%9553 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	%9554 = bitcast %Type_Info* %9553 to %Type_Info*
	%9555 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9552, i64 0, i32 2
	store %Type_Info* %9554, %Type_Info** %9555
	%9556 = getelementptr inbounds %Type_Info, %Type_Info* %9549, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9556
	%9557 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 311
	%9558 = getelementptr inbounds %Type_Info, %Type_Info* %9557, i64 0, i32 1
	store i64 8, i64* %9558
	%9559 = getelementptr inbounds %Type_Info, %Type_Info* %9557, i64 0, i32 2
	store i64 8, i64* %9559
	; Type_Info_Named
	%9560 = bitcast %Type_Info* %9557 to %Type_Info.Named*
	%9561 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 312
	%9562 = bitcast %Type_Info* %9561 to %Type_Info*
	%9563 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9560, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$8a4, i64 0, i32 0), i64 13}, %..string* %9563
	%9564 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9560, i64 0, i32 3
	store %Type_Info* %9562, %Type_Info** %9564
	%9565 = getelementptr inbounds %Type_Info, %Type_Info* %9557, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %9565
	%9566 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 312
	%9567 = getelementptr inbounds %Type_Info, %Type_Info* %9566, i64 0, i32 1
	store i64 8, i64* %9567
	%9568 = getelementptr inbounds %Type_Info, %Type_Info* %9566, i64 0, i32 2
	store i64 8, i64* %9568
	; Type_Info_Enum
	%9569 = bitcast %Type_Info* %9566 to %Type_Info.Enum*
	%9570 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%9571 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9569, i64 0, i32 2
	store %Type_Info* %9570, %Type_Info** %9571
	%9572 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 0
	%9573 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 0
	%9574 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9573 to i64*
	store i64 0, i64* %9574
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$8a5, i64 0, i32 0), i64 9}, %..string* %9572
	%9575 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 1
	%9576 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 1
	%9577 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9576 to i64*
	store i64 1, i64* %9577
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$8a6, i64 0, i32 0), i64 10}, %..string* %9575
	%9578 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 2
	%9579 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 2
	%9580 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9579 to i64*
	store i64 2, i64* %9580
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$8a7, i64 0, i32 0), i64 10}, %..string* %9578
	%9581 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 3
	%9582 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 3
	%9583 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9582 to i64*
	store i64 3, i64* %9583
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$8a8, i64 0, i32 0), i64 12}, %..string* %9581
	%9584 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 4
	%9585 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 4
	%9586 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9585 to i64*
	store i64 4, i64* %9586
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$8a9, i64 0, i32 0), i64 5}, %..string* %9584
	%9587 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9569, i64 0, i32 3
	%9588 = getelementptr inbounds [5 x %..string], [5 x %..string]* @__$enum_names-138, i64 0, i32 0
	%9589 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9587, i64 0, i32 0
	store %..string* %9588, %..string** %9589
	%9590 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9587, i64 0, i32 1
	store i64 5, i64* %9590
	%9591 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9569, i64 0, i32 4
	%9592 = getelementptr inbounds [5 x {[0 x <8 x i8>], [8 x i8]}], [5 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-138, i64 0, i32 0
	%9593 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9591, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %9592, {[0 x <8 x i8>], [8 x i8]}** %9593
	%9594 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9591, i64 0, i32 1
	store i64 5, i64* %9594
	%9595 = getelementptr inbounds %Type_Info, %Type_Info* %9566, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %9595
	%9596 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 313
	%9597 = getelementptr inbounds %Type_Info, %Type_Info* %9596, i64 0, i32 1
	store i64 4, i64* %9597
	%9598 = getelementptr inbounds %Type_Info, %Type_Info* %9596, i64 0, i32 2
	store i64 4, i64* %9598
	; Type_Info_Named
	%9599 = bitcast %Type_Info* %9596 to %Type_Info.Named*
	%9600 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	%9601 = bitcast %Type_Info* %9600 to %Type_Info*
	%9602 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9599, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$8aa, i64 0, i32 0), i64 4}, %..string* %9602
	%9603 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9599, i64 0, i32 3
	store %Type_Info* %9601, %Type_Info** %9603
	%9604 = getelementptr inbounds %Type_Info, %Type_Info* %9596, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %9604
	%9605 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	%9606 = getelementptr inbounds %Type_Info, %Type_Info* %9605, i64 0, i32 1
	store i64 4, i64* %9606
	%9607 = getelementptr inbounds %Type_Info, %Type_Info* %9605, i64 0, i32 2
	store i64 4, i64* %9607
	; Type_Info_Enum
	%9608 = bitcast %Type_Info* %9605 to %Type_Info.Enum*
	%9609 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%9610 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9608, i64 0, i32 2
	store %Type_Info* %9609, %Type_Info** %9610
	%9611 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-13a, i64 0, i32 0
	%9612 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13a, i64 0, i32 0
	%9613 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9612 to i64*
	store i64 0, i64* %9613
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8ab, i64 0, i32 0), i64 7}, %..string* %9611
	%9614 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-13a, i64 0, i32 1
	%9615 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13a, i64 0, i32 1
	%9616 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9615 to i64*
	store i64 1, i64* %9616
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8ac, i64 0, i32 0), i64 7}, %..string* %9614
	%9617 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-13a, i64 0, i32 2
	%9618 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13a, i64 0, i32 2
	%9619 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9618 to i64*
	store i64 2, i64* %9619
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8ad, i64 0, i32 0), i64 7}, %..string* %9617
	%9620 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-13a, i64 0, i32 3
	%9621 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13a, i64 0, i32 3
	%9622 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9621 to i64*
	store i64 3, i64* %9622
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8ae, i64 0, i32 0), i64 7}, %..string* %9620
	%9623 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9608, i64 0, i32 3
	%9624 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-13a, i64 0, i32 0
	%9625 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9623, i64 0, i32 0
	store %..string* %9624, %..string** %9625
	%9626 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9623, i64 0, i32 1
	store i64 4, i64* %9626
	%9627 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9608, i64 0, i32 4
	%9628 = getelementptr inbounds [4 x {[0 x <8 x i8>], [8 x i8]}], [4 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13a, i64 0, i32 0
	%9629 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9627, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %9628, {[0 x <8 x i8>], [8 x i8]}** %9629
	%9630 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9627, i64 0, i32 1
	store i64 4, i64* %9630
	%9631 = getelementptr inbounds %Type_Info, %Type_Info* %9605, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %9631
	%9632 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 315
	%9633 = getelementptr inbounds %Type_Info, %Type_Info* %9632, i64 0, i32 1
	store i64 1, i64* %9633
	%9634 = getelementptr inbounds %Type_Info, %Type_Info* %9632, i64 0, i32 2
	store i64 1, i64* %9634
	; Type_Info_Named
	%9635 = bitcast %Type_Info* %9632 to %Type_Info.Named*
	%9636 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 316
	%9637 = bitcast %Type_Info* %9636 to %Type_Info*
	%9638 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9635, i64 0, i32 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$8af, i64 0, i32 0), i64 14}, %..string* %9638
	%9639 = getelementptr inbounds %Type_Info.Named, %Type_Info.Named* %9635, i64 0, i32 3
	store %Type_Info* %9637, %Type_Info** %9639
	%9640 = getelementptr inbounds %Type_Info, %Type_Info* %9632, i64 0, i32 4 ; UnionTagPtr
	store i64 1, i64* %9640
	%9641 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 316
	%9642 = getelementptr inbounds %Type_Info, %Type_Info* %9641, i64 0, i32 1
	store i64 1, i64* %9642
	%9643 = getelementptr inbounds %Type_Info, %Type_Info* %9641, i64 0, i32 2
	store i64 1, i64* %9643
	; Type_Info_Enum
	%9644 = bitcast %Type_Info* %9641 to %Type_Info.Enum*
	%9645 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%9646 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9644, i64 0, i32 2
	store %Type_Info* %9645, %Type_Info** %9646
	%9647 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 0
	%9648 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 0
	%9649 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9648 to i64*
	store i64 0, i64* %9649
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8b0, i64 0, i32 0), i64 7}, %..string* %9647
	%9650 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 1
	%9651 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 1
	%9652 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9651 to i64*
	store i64 1, i64* %9652
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8b1, i64 0, i32 0), i64 7}, %..string* %9650
	%9653 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 2
	%9654 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 2
	%9655 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9654 to i64*
	store i64 2, i64* %9655
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$8b2, i64 0, i32 0), i64 5}, %..string* %9653
	%9656 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 3
	%9657 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 3
	%9658 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9657 to i64*
	store i64 3, i64* %9658
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$8b3, i64 0, i32 0), i64 11}, %..string* %9656
	%9659 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 4
	%9660 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 4
	%9661 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9660 to i64*
	store i64 4, i64* %9661
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$8b4, i64 0, i32 0), i64 11}, %..string* %9659
	%9662 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 5
	%9663 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 5
	%9664 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9663 to i64*
	store i64 5, i64* %9664
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$8b5, i64 0, i32 0), i64 8}, %..string* %9662
	%9665 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 6
	%9666 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 6
	%9667 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9666 to i64*
	store i64 6, i64* %9667
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$8b6, i64 0, i32 0), i64 6}, %..string* %9665
	%9668 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 7
	%9669 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 7
	%9670 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9669 to i64*
	store i64 7, i64* %9670
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$8b7, i64 0, i32 0), i64 9}, %..string* %9668
	%9671 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 8
	%9672 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 8
	%9673 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9672 to i64*
	store i64 11, i64* %9673
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$8b8, i64 0, i32 0), i64 4}, %..string* %9671
	%9674 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 9
	%9675 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 9
	%9676 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9675 to i64*
	store i64 8, i64* %9676
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$8b9, i64 0, i32 0), i64 7}, %..string* %9674
	%9677 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 10
	%9678 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 10
	%9679 = bitcast {[0 x <8 x i8>], [8 x i8]}* %9678 to i64*
	store i64 19, i64* %9679
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$8ba, i64 0, i32 0), i64 9}, %..string* %9677
	%9680 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9644, i64 0, i32 3
	%9681 = getelementptr inbounds [11 x %..string], [11 x %..string]* @__$enum_names-13c, i64 0, i32 0
	%9682 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9680, i64 0, i32 0
	store %..string* %9681, %..string** %9682
	%9683 = getelementptr inbounds {%..string*, i64, i64}, {%..string*, i64, i64}* %9680, i64 0, i32 1
	store i64 11, i64* %9683
	%9684 = getelementptr inbounds %Type_Info.Enum, %Type_Info.Enum* %9644, i64 0, i32 4
	%9685 = getelementptr inbounds [11 x {[0 x <8 x i8>], [8 x i8]}], [11 x {[0 x <8 x i8>], [8 x i8]}]* @__$enum_values-13c, i64 0, i32 0
	%9686 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9684, i64 0, i32 0
	store {[0 x <8 x i8>], [8 x i8]}* %9685, {[0 x <8 x i8>], [8 x i8]}** %9686
	%9687 = getelementptr inbounds {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}, {{[0 x <8 x i8>], [8 x i8]}*, i64, i64}* %9684, i64 0, i32 1
	store i64 11, i64* %9687
	%9688 = getelementptr inbounds %Type_Info, %Type_Info* %9641, i64 0, i32 4 ; UnionTagPtr
	store i64 20, i64* %9688
	%9689 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%9690 = getelementptr inbounds %Type_Info, %Type_Info* %9689, i64 0, i32 1
	store i64 8, i64* %9690
	%9691 = getelementptr inbounds %Type_Info, %Type_Info* %9689, i64 0, i32 2
	store i64 8, i64* %9691
	; Type_Info_Pointer
	%9692 = bitcast %Type_Info* %9689 to %Type_Info.Pointer*
	%9693 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%9694 = bitcast %Type_Info* %9693 to %Type_Info*
	%9695 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9692, i64 0, i32 2
	store %Type_Info* %9694, %Type_Info** %9695
	%9696 = getelementptr inbounds %Type_Info, %Type_Info* %9689, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9696
	%9697 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%9698 = getelementptr inbounds %Type_Info, %Type_Info* %9697, i64 0, i32 1
	store i64 8, i64* %9698
	%9699 = getelementptr inbounds %Type_Info, %Type_Info* %9697, i64 0, i32 2
	store i64 8, i64* %9699
	; Type_Info_Pointer
	%9700 = bitcast %Type_Info* %9697 to %Type_Info.Pointer*
	%9701 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%9702 = bitcast %Type_Info* %9701 to %Type_Info*
	%9703 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9700, i64 0, i32 2
	store %Type_Info* %9702, %Type_Info** %9703
	%9704 = getelementptr inbounds %Type_Info, %Type_Info* %9697, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9704
	%9705 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%9706 = getelementptr inbounds %Type_Info, %Type_Info* %9705, i64 0, i32 1
	store i64 8, i64* %9706
	%9707 = getelementptr inbounds %Type_Info, %Type_Info* %9705, i64 0, i32 2
	store i64 8, i64* %9707
	; Type_Info_Pointer
	%9708 = bitcast %Type_Info* %9705 to %Type_Info.Pointer*
	%9709 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9710 = bitcast %Type_Info* %9709 to %Type_Info*
	%9711 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9708, i64 0, i32 2
	store %Type_Info* %9710, %Type_Info** %9711
	%9712 = getelementptr inbounds %Type_Info, %Type_Info* %9705, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9712
	%9713 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%9714 = getelementptr inbounds %Type_Info, %Type_Info* %9713, i64 0, i32 1
	store i64 8, i64* %9714
	%9715 = getelementptr inbounds %Type_Info, %Type_Info* %9713, i64 0, i32 2
	store i64 8, i64* %9715
	; Type_Info_Pointer
	%9716 = bitcast %Type_Info* %9713 to %Type_Info.Pointer*
	%9717 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%9718 = bitcast %Type_Info* %9717 to %Type_Info*
	%9719 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9716, i64 0, i32 2
	store %Type_Info* %9718, %Type_Info** %9719
	%9720 = getelementptr inbounds %Type_Info, %Type_Info* %9713, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9720
	%9721 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%9722 = getelementptr inbounds %Type_Info, %Type_Info* %9721, i64 0, i32 1
	store i64 8, i64* %9722
	%9723 = getelementptr inbounds %Type_Info, %Type_Info* %9721, i64 0, i32 2
	store i64 8, i64* %9723
	; Type_Info_Pointer
	%9724 = bitcast %Type_Info* %9721 to %Type_Info.Pointer*
	%9725 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%9726 = bitcast %Type_Info* %9725 to %Type_Info*
	%9727 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9724, i64 0, i32 2
	store %Type_Info* %9726, %Type_Info** %9727
	%9728 = getelementptr inbounds %Type_Info, %Type_Info* %9721, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9728
	%9729 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%9730 = getelementptr inbounds %Type_Info, %Type_Info* %9729, i64 0, i32 1
	store i64 8, i64* %9730
	%9731 = getelementptr inbounds %Type_Info, %Type_Info* %9729, i64 0, i32 2
	store i64 8, i64* %9731
	; Type_Info_Pointer
	%9732 = bitcast %Type_Info* %9729 to %Type_Info.Pointer*
	%9733 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%9734 = bitcast %Type_Info* %9733 to %Type_Info*
	%9735 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9732, i64 0, i32 2
	store %Type_Info* %9734, %Type_Info** %9735
	%9736 = getelementptr inbounds %Type_Info, %Type_Info* %9729, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9736
	%9737 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%9738 = getelementptr inbounds %Type_Info, %Type_Info* %9737, i64 0, i32 1
	store i64 8, i64* %9738
	%9739 = getelementptr inbounds %Type_Info, %Type_Info* %9737, i64 0, i32 2
	store i64 8, i64* %9739
	; Type_Info_Pointer
	%9740 = bitcast %Type_Info* %9737 to %Type_Info.Pointer*
	%9741 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%9742 = bitcast %Type_Info* %9741 to %Type_Info*
	%9743 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9740, i64 0, i32 2
	store %Type_Info* %9742, %Type_Info** %9743
	%9744 = getelementptr inbounds %Type_Info, %Type_Info* %9737, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9744
	%9745 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%9746 = getelementptr inbounds %Type_Info, %Type_Info* %9745, i64 0, i32 1
	store i64 8, i64* %9746
	%9747 = getelementptr inbounds %Type_Info, %Type_Info* %9745, i64 0, i32 2
	store i64 8, i64* %9747
	; Type_Info_Pointer
	%9748 = bitcast %Type_Info* %9745 to %Type_Info.Pointer*
	%9749 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%9750 = bitcast %Type_Info* %9749 to %Type_Info*
	%9751 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9748, i64 0, i32 2
	store %Type_Info* %9750, %Type_Info** %9751
	%9752 = getelementptr inbounds %Type_Info, %Type_Info* %9745, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9752
	%9753 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%9754 = getelementptr inbounds %Type_Info, %Type_Info* %9753, i64 0, i32 1
	store i64 8, i64* %9754
	%9755 = getelementptr inbounds %Type_Info, %Type_Info* %9753, i64 0, i32 2
	store i64 8, i64* %9755
	; Type_Info_Pointer
	%9756 = bitcast %Type_Info* %9753 to %Type_Info.Pointer*
	%9757 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%9758 = bitcast %Type_Info* %9757 to %Type_Info*
	%9759 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9756, i64 0, i32 2
	store %Type_Info* %9758, %Type_Info** %9759
	%9760 = getelementptr inbounds %Type_Info, %Type_Info* %9753, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9760
	%9761 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%9762 = getelementptr inbounds %Type_Info, %Type_Info* %9761, i64 0, i32 1
	store i64 8, i64* %9762
	%9763 = getelementptr inbounds %Type_Info, %Type_Info* %9761, i64 0, i32 2
	store i64 8, i64* %9763
	; Type_Info_Pointer
	%9764 = bitcast %Type_Info* %9761 to %Type_Info.Pointer*
	%9765 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%9766 = bitcast %Type_Info* %9765 to %Type_Info*
	%9767 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9764, i64 0, i32 2
	store %Type_Info* %9766, %Type_Info** %9767
	%9768 = getelementptr inbounds %Type_Info, %Type_Info* %9761, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9768
	%9769 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%9770 = getelementptr inbounds %Type_Info, %Type_Info* %9769, i64 0, i32 1
	store i64 8, i64* %9770
	%9771 = getelementptr inbounds %Type_Info, %Type_Info* %9769, i64 0, i32 2
	store i64 8, i64* %9771
	; Type_Info_Pointer
	%9772 = bitcast %Type_Info* %9769 to %Type_Info.Pointer*
	%9773 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%9774 = bitcast %Type_Info* %9773 to %Type_Info*
	%9775 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9772, i64 0, i32 2
	store %Type_Info* %9774, %Type_Info** %9775
	%9776 = getelementptr inbounds %Type_Info, %Type_Info* %9769, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9776
	%9777 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%9778 = getelementptr inbounds %Type_Info, %Type_Info* %9777, i64 0, i32 1
	store i64 8, i64* %9778
	%9779 = getelementptr inbounds %Type_Info, %Type_Info* %9777, i64 0, i32 2
	store i64 8, i64* %9779
	; Type_Info_Pointer
	%9780 = bitcast %Type_Info* %9777 to %Type_Info.Pointer*
	%9781 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%9782 = bitcast %Type_Info* %9781 to %Type_Info*
	%9783 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9780, i64 0, i32 2
	store %Type_Info* %9782, %Type_Info** %9783
	%9784 = getelementptr inbounds %Type_Info, %Type_Info* %9777, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9784
	%9785 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%9786 = getelementptr inbounds %Type_Info, %Type_Info* %9785, i64 0, i32 1
	store i64 8, i64* %9786
	%9787 = getelementptr inbounds %Type_Info, %Type_Info* %9785, i64 0, i32 2
	store i64 8, i64* %9787
	; Type_Info_Pointer
	%9788 = bitcast %Type_Info* %9785 to %Type_Info.Pointer*
	%9789 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%9790 = bitcast %Type_Info* %9789 to %Type_Info*
	%9791 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9788, i64 0, i32 2
	store %Type_Info* %9790, %Type_Info** %9791
	%9792 = getelementptr inbounds %Type_Info, %Type_Info* %9785, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9792
	%9793 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%9794 = getelementptr inbounds %Type_Info, %Type_Info* %9793, i64 0, i32 1
	store i64 8, i64* %9794
	%9795 = getelementptr inbounds %Type_Info, %Type_Info* %9793, i64 0, i32 2
	store i64 8, i64* %9795
	; Type_Info_Pointer
	%9796 = bitcast %Type_Info* %9793 to %Type_Info.Pointer*
	%9797 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%9798 = bitcast %Type_Info* %9797 to %Type_Info*
	%9799 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9796, i64 0, i32 2
	store %Type_Info* %9798, %Type_Info** %9799
	%9800 = getelementptr inbounds %Type_Info, %Type_Info* %9793, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9800
	%9801 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%9802 = getelementptr inbounds %Type_Info, %Type_Info* %9801, i64 0, i32 1
	store i64 8, i64* %9802
	%9803 = getelementptr inbounds %Type_Info, %Type_Info* %9801, i64 0, i32 2
	store i64 8, i64* %9803
	; Type_Info_Pointer
	%9804 = bitcast %Type_Info* %9801 to %Type_Info.Pointer*
	%9805 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%9806 = bitcast %Type_Info* %9805 to %Type_Info*
	%9807 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9804, i64 0, i32 2
	store %Type_Info* %9806, %Type_Info** %9807
	%9808 = getelementptr inbounds %Type_Info, %Type_Info* %9801, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9808
	%9809 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%9810 = getelementptr inbounds %Type_Info, %Type_Info* %9809, i64 0, i32 1
	store i64 8, i64* %9810
	%9811 = getelementptr inbounds %Type_Info, %Type_Info* %9809, i64 0, i32 2
	store i64 8, i64* %9811
	; Type_Info_Pointer
	%9812 = bitcast %Type_Info* %9809 to %Type_Info.Pointer*
	%9813 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%9814 = bitcast %Type_Info* %9813 to %Type_Info*
	%9815 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9812, i64 0, i32 2
	store %Type_Info* %9814, %Type_Info** %9815
	%9816 = getelementptr inbounds %Type_Info, %Type_Info* %9809, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9816
	%9817 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%9818 = getelementptr inbounds %Type_Info, %Type_Info* %9817, i64 0, i32 1
	store i64 8, i64* %9818
	%9819 = getelementptr inbounds %Type_Info, %Type_Info* %9817, i64 0, i32 2
	store i64 8, i64* %9819
	; Type_Info_Pointer
	%9820 = bitcast %Type_Info* %9817 to %Type_Info.Pointer*
	%9821 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%9822 = bitcast %Type_Info* %9821 to %Type_Info*
	%9823 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9820, i64 0, i32 2
	store %Type_Info* %9822, %Type_Info** %9823
	%9824 = getelementptr inbounds %Type_Info, %Type_Info* %9817, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9824
	%9825 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%9826 = getelementptr inbounds %Type_Info, %Type_Info* %9825, i64 0, i32 1
	store i64 8, i64* %9826
	%9827 = getelementptr inbounds %Type_Info, %Type_Info* %9825, i64 0, i32 2
	store i64 8, i64* %9827
	; Type_Info_Pointer
	%9828 = bitcast %Type_Info* %9825 to %Type_Info.Pointer*
	%9829 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%9830 = bitcast %Type_Info* %9829 to %Type_Info*
	%9831 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9828, i64 0, i32 2
	store %Type_Info* %9830, %Type_Info** %9831
	%9832 = getelementptr inbounds %Type_Info, %Type_Info* %9825, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9832
	%9833 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%9834 = getelementptr inbounds %Type_Info, %Type_Info* %9833, i64 0, i32 1
	store i64 8, i64* %9834
	%9835 = getelementptr inbounds %Type_Info, %Type_Info* %9833, i64 0, i32 2
	store i64 8, i64* %9835
	; Type_Info_Pointer
	%9836 = bitcast %Type_Info* %9833 to %Type_Info.Pointer*
	%9837 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%9838 = bitcast %Type_Info* %9837 to %Type_Info*
	%9839 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9836, i64 0, i32 2
	store %Type_Info* %9838, %Type_Info** %9839
	%9840 = getelementptr inbounds %Type_Info, %Type_Info* %9833, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9840
	%9841 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%9842 = getelementptr inbounds %Type_Info, %Type_Info* %9841, i64 0, i32 1
	store i64 8, i64* %9842
	%9843 = getelementptr inbounds %Type_Info, %Type_Info* %9841, i64 0, i32 2
	store i64 8, i64* %9843
	; Type_Info_Pointer
	%9844 = bitcast %Type_Info* %9841 to %Type_Info.Pointer*
	%9845 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%9846 = bitcast %Type_Info* %9845 to %Type_Info*
	%9847 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9844, i64 0, i32 2
	store %Type_Info* %9846, %Type_Info** %9847
	%9848 = getelementptr inbounds %Type_Info, %Type_Info* %9841, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9848
	%9849 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%9850 = getelementptr inbounds %Type_Info, %Type_Info* %9849, i64 0, i32 1
	store i64 8, i64* %9850
	%9851 = getelementptr inbounds %Type_Info, %Type_Info* %9849, i64 0, i32 2
	store i64 8, i64* %9851
	; Type_Info_Pointer
	%9852 = bitcast %Type_Info* %9849 to %Type_Info.Pointer*
	%9853 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9854 = bitcast %Type_Info* %9853 to %Type_Info*
	%9855 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9852, i64 0, i32 2
	store %Type_Info* %9854, %Type_Info** %9855
	%9856 = getelementptr inbounds %Type_Info, %Type_Info* %9849, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9856
	%9857 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%9858 = getelementptr inbounds %Type_Info, %Type_Info* %9857, i64 0, i32 1
	store i64 8, i64* %9858
	%9859 = getelementptr inbounds %Type_Info, %Type_Info* %9857, i64 0, i32 2
	store i64 8, i64* %9859
	; Type_Info_Pointer
	%9860 = bitcast %Type_Info* %9857 to %Type_Info.Pointer*
	%9861 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%9862 = bitcast %Type_Info* %9861 to %Type_Info*
	%9863 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9860, i64 0, i32 2
	store %Type_Info* %9862, %Type_Info** %9863
	%9864 = getelementptr inbounds %Type_Info, %Type_Info* %9857, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9864
	%9865 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%9866 = getelementptr inbounds %Type_Info, %Type_Info* %9865, i64 0, i32 1
	store i64 8, i64* %9866
	%9867 = getelementptr inbounds %Type_Info, %Type_Info* %9865, i64 0, i32 2
	store i64 8, i64* %9867
	; Type_Info_Pointer
	%9868 = bitcast %Type_Info* %9865 to %Type_Info.Pointer*
	%9869 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%9870 = bitcast %Type_Info* %9869 to %Type_Info*
	%9871 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9868, i64 0, i32 2
	store %Type_Info* %9870, %Type_Info** %9871
	%9872 = getelementptr inbounds %Type_Info, %Type_Info* %9865, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9872
	%9873 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%9874 = getelementptr inbounds %Type_Info, %Type_Info* %9873, i64 0, i32 1
	store i64 8, i64* %9874
	%9875 = getelementptr inbounds %Type_Info, %Type_Info* %9873, i64 0, i32 2
	store i64 8, i64* %9875
	; Type_Info_Pointer
	%9876 = bitcast %Type_Info* %9873 to %Type_Info.Pointer*
	%9877 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%9878 = bitcast %Type_Info* %9877 to %Type_Info*
	%9879 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9876, i64 0, i32 2
	store %Type_Info* %9878, %Type_Info** %9879
	%9880 = getelementptr inbounds %Type_Info, %Type_Info* %9873, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9880
	%9881 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%9882 = getelementptr inbounds %Type_Info, %Type_Info* %9881, i64 0, i32 1
	store i64 8, i64* %9882
	%9883 = getelementptr inbounds %Type_Info, %Type_Info* %9881, i64 0, i32 2
	store i64 8, i64* %9883
	; Type_Info_Pointer
	%9884 = bitcast %Type_Info* %9881 to %Type_Info.Pointer*
	%9885 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%9886 = bitcast %Type_Info* %9885 to %Type_Info*
	%9887 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9884, i64 0, i32 2
	store %Type_Info* %9886, %Type_Info** %9887
	%9888 = getelementptr inbounds %Type_Info, %Type_Info* %9881, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9888
	%9889 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%9890 = getelementptr inbounds %Type_Info, %Type_Info* %9889, i64 0, i32 1
	store i64 8, i64* %9890
	%9891 = getelementptr inbounds %Type_Info, %Type_Info* %9889, i64 0, i32 2
	store i64 8, i64* %9891
	; Type_Info_Pointer
	%9892 = bitcast %Type_Info* %9889 to %Type_Info.Pointer*
	%9893 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%9894 = bitcast %Type_Info* %9893 to %Type_Info*
	%9895 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9892, i64 0, i32 2
	store %Type_Info* %9894, %Type_Info** %9895
	%9896 = getelementptr inbounds %Type_Info, %Type_Info* %9889, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9896
	%9897 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%9898 = getelementptr inbounds %Type_Info, %Type_Info* %9897, i64 0, i32 1
	store i64 8, i64* %9898
	%9899 = getelementptr inbounds %Type_Info, %Type_Info* %9897, i64 0, i32 2
	store i64 8, i64* %9899
	; Type_Info_Pointer
	%9900 = bitcast %Type_Info* %9897 to %Type_Info.Pointer*
	%9901 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%9902 = bitcast %Type_Info* %9901 to %Type_Info*
	%9903 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9900, i64 0, i32 2
	store %Type_Info* %9902, %Type_Info** %9903
	%9904 = getelementptr inbounds %Type_Info, %Type_Info* %9897, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9904
	%9905 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%9906 = getelementptr inbounds %Type_Info, %Type_Info* %9905, i64 0, i32 1
	store i64 8, i64* %9906
	%9907 = getelementptr inbounds %Type_Info, %Type_Info* %9905, i64 0, i32 2
	store i64 8, i64* %9907
	; Type_Info_Pointer
	%9908 = bitcast %Type_Info* %9905 to %Type_Info.Pointer*
	%9909 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%9910 = bitcast %Type_Info* %9909 to %Type_Info*
	%9911 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9908, i64 0, i32 2
	store %Type_Info* %9910, %Type_Info** %9911
	%9912 = getelementptr inbounds %Type_Info, %Type_Info* %9905, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9912
	%9913 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%9914 = getelementptr inbounds %Type_Info, %Type_Info* %9913, i64 0, i32 1
	store i64 8, i64* %9914
	%9915 = getelementptr inbounds %Type_Info, %Type_Info* %9913, i64 0, i32 2
	store i64 8, i64* %9915
	; Type_Info_Pointer
	%9916 = bitcast %Type_Info* %9913 to %Type_Info.Pointer*
	%9917 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%9918 = bitcast %Type_Info* %9917 to %Type_Info*
	%9919 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9916, i64 0, i32 2
	store %Type_Info* %9918, %Type_Info** %9919
	%9920 = getelementptr inbounds %Type_Info, %Type_Info* %9913, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9920
	%9921 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%9922 = getelementptr inbounds %Type_Info, %Type_Info* %9921, i64 0, i32 1
	store i64 8, i64* %9922
	%9923 = getelementptr inbounds %Type_Info, %Type_Info* %9921, i64 0, i32 2
	store i64 8, i64* %9923
	; Type_Info_Pointer
	%9924 = bitcast %Type_Info* %9921 to %Type_Info.Pointer*
	%9925 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%9926 = bitcast %Type_Info* %9925 to %Type_Info*
	%9927 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9924, i64 0, i32 2
	store %Type_Info* %9926, %Type_Info** %9927
	%9928 = getelementptr inbounds %Type_Info, %Type_Info* %9921, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9928
	%9929 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%9930 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 1
	store i64 8, i64* %9930
	%9931 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 2
	store i64 8, i64* %9931
	; Type_Info_Pointer
	%9932 = bitcast %Type_Info* %9929 to %Type_Info.Pointer*
	%9933 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%9934 = bitcast %Type_Info* %9933 to %Type_Info*
	%9935 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9932, i64 0, i32 2
	store %Type_Info* %9934, %Type_Info** %9935
	%9936 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9936
	%9937 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%9938 = getelementptr inbounds %Type_Info, %Type_Info* %9937, i64 0, i32 1
	store i64 8, i64* %9938
	%9939 = getelementptr inbounds %Type_Info, %Type_Info* %9937, i64 0, i32 2
	store i64 8, i64* %9939
	; Type_Info_Pointer
	%9940 = bitcast %Type_Info* %9937 to %Type_Info.Pointer*
	%9941 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%9942 = bitcast %Type_Info* %9941 to %Type_Info*
	%9943 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9940, i64 0, i32 2
	store %Type_Info* %9942, %Type_Info** %9943
	%9944 = getelementptr inbounds %Type_Info, %Type_Info* %9937, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9944
	%9945 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%9946 = getelementptr inbounds %Type_Info, %Type_Info* %9945, i64 0, i32 1
	store i64 8, i64* %9946
	%9947 = getelementptr inbounds %Type_Info, %Type_Info* %9945, i64 0, i32 2
	store i64 8, i64* %9947
	; Type_Info_Pointer
	%9948 = bitcast %Type_Info* %9945 to %Type_Info.Pointer*
	%9949 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%9950 = bitcast %Type_Info* %9949 to %Type_Info*
	%9951 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9948, i64 0, i32 2
	store %Type_Info* %9950, %Type_Info** %9951
	%9952 = getelementptr inbounds %Type_Info, %Type_Info* %9945, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9952
	%9953 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%9954 = getelementptr inbounds %Type_Info, %Type_Info* %9953, i64 0, i32 1
	store i64 8, i64* %9954
	%9955 = getelementptr inbounds %Type_Info, %Type_Info* %9953, i64 0, i32 2
	store i64 8, i64* %9955
	; Type_Info_Pointer
	%9956 = bitcast %Type_Info* %9953 to %Type_Info.Pointer*
	%9957 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%9958 = bitcast %Type_Info* %9957 to %Type_Info*
	%9959 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9956, i64 0, i32 2
	store %Type_Info* %9958, %Type_Info** %9959
	%9960 = getelementptr inbounds %Type_Info, %Type_Info* %9953, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9960
	%9961 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%9962 = getelementptr inbounds %Type_Info, %Type_Info* %9961, i64 0, i32 1
	store i64 8, i64* %9962
	%9963 = getelementptr inbounds %Type_Info, %Type_Info* %9961, i64 0, i32 2
	store i64 8, i64* %9963
	; Type_Info_Pointer
	%9964 = bitcast %Type_Info* %9961 to %Type_Info.Pointer*
	%9965 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%9966 = bitcast %Type_Info* %9965 to %Type_Info*
	%9967 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9964, i64 0, i32 2
	store %Type_Info* %9966, %Type_Info** %9967
	%9968 = getelementptr inbounds %Type_Info, %Type_Info* %9961, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9968
	%9969 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%9970 = getelementptr inbounds %Type_Info, %Type_Info* %9969, i64 0, i32 1
	store i64 8, i64* %9970
	%9971 = getelementptr inbounds %Type_Info, %Type_Info* %9969, i64 0, i32 2
	store i64 8, i64* %9971
	; Type_Info_Pointer
	%9972 = bitcast %Type_Info* %9969 to %Type_Info.Pointer*
	%9973 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%9974 = bitcast %Type_Info* %9973 to %Type_Info*
	%9975 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9972, i64 0, i32 2
	store %Type_Info* %9974, %Type_Info** %9975
	%9976 = getelementptr inbounds %Type_Info, %Type_Info* %9969, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9976
	%9977 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%9978 = getelementptr inbounds %Type_Info, %Type_Info* %9977, i64 0, i32 1
	store i64 8, i64* %9978
	%9979 = getelementptr inbounds %Type_Info, %Type_Info* %9977, i64 0, i32 2
	store i64 8, i64* %9979
	; Type_Info_Pointer
	%9980 = bitcast %Type_Info* %9977 to %Type_Info.Pointer*
	%9981 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9982 = bitcast %Type_Info* %9981 to %Type_Info*
	%9983 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9980, i64 0, i32 2
	store %Type_Info* %9982, %Type_Info** %9983
	%9984 = getelementptr inbounds %Type_Info, %Type_Info* %9977, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9984
	%9985 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%9986 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 1
	store i64 8, i64* %9986
	%9987 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 2
	store i64 8, i64* %9987
	; Type_Info_Pointer
	%9988 = bitcast %Type_Info* %9985 to %Type_Info.Pointer*
	%9989 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%9990 = bitcast %Type_Info* %9989 to %Type_Info*
	%9991 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9988, i64 0, i32 2
	store %Type_Info* %9990, %Type_Info** %9991
	%9992 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %9992
	%9993 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%9994 = getelementptr inbounds %Type_Info, %Type_Info* %9993, i64 0, i32 1
	store i64 8, i64* %9994
	%9995 = getelementptr inbounds %Type_Info, %Type_Info* %9993, i64 0, i32 2
	store i64 8, i64* %9995
	; Type_Info_Pointer
	%9996 = bitcast %Type_Info* %9993 to %Type_Info.Pointer*
	%9997 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9998 = bitcast %Type_Info* %9997 to %Type_Info*
	%9999 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %9996, i64 0, i32 2
	store %Type_Info* %9998, %Type_Info** %9999
	%10000 = getelementptr inbounds %Type_Info, %Type_Info* %9993, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10000
	%10001 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 72
	%10002 = getelementptr inbounds %Type_Info, %Type_Info* %10001, i64 0, i32 1
	store i64 8, i64* %10002
	%10003 = getelementptr inbounds %Type_Info, %Type_Info* %10001, i64 0, i32 2
	store i64 8, i64* %10003
	; Type_Info_Pointer
	%10004 = bitcast %Type_Info* %10001 to %Type_Info.Pointer*
	%10005 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%10006 = bitcast %Type_Info* %10005 to %Type_Info*
	%10007 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10004, i64 0, i32 2
	store %Type_Info* %10006, %Type_Info** %10007
	%10008 = getelementptr inbounds %Type_Info, %Type_Info* %10001, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10008
	%10009 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%10010 = getelementptr inbounds %Type_Info, %Type_Info* %10009, i64 0, i32 1
	store i64 8, i64* %10010
	%10011 = getelementptr inbounds %Type_Info, %Type_Info* %10009, i64 0, i32 2
	store i64 8, i64* %10011
	; Type_Info_Pointer
	%10012 = bitcast %Type_Info* %10009 to %Type_Info.Pointer*
	%10013 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%10014 = bitcast %Type_Info* %10013 to %Type_Info*
	%10015 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10012, i64 0, i32 2
	store %Type_Info* %10014, %Type_Info** %10015
	%10016 = getelementptr inbounds %Type_Info, %Type_Info* %10009, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10016
	%10017 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%10018 = getelementptr inbounds %Type_Info, %Type_Info* %10017, i64 0, i32 1
	store i64 8, i64* %10018
	%10019 = getelementptr inbounds %Type_Info, %Type_Info* %10017, i64 0, i32 2
	store i64 8, i64* %10019
	; Type_Info_Pointer
	%10020 = bitcast %Type_Info* %10017 to %Type_Info.Pointer*
	%10021 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%10022 = bitcast %Type_Info* %10021 to %Type_Info*
	%10023 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10020, i64 0, i32 2
	store %Type_Info* %10022, %Type_Info** %10023
	%10024 = getelementptr inbounds %Type_Info, %Type_Info* %10017, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10024
	%10025 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%10026 = getelementptr inbounds %Type_Info, %Type_Info* %10025, i64 0, i32 1
	store i64 8, i64* %10026
	%10027 = getelementptr inbounds %Type_Info, %Type_Info* %10025, i64 0, i32 2
	store i64 8, i64* %10027
	; Type_Info_Pointer
	%10028 = bitcast %Type_Info* %10025 to %Type_Info.Pointer*
	%10029 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%10030 = bitcast %Type_Info* %10029 to %Type_Info*
	%10031 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10028, i64 0, i32 2
	store %Type_Info* %10030, %Type_Info** %10031
	%10032 = getelementptr inbounds %Type_Info, %Type_Info* %10025, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10032
	%10033 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%10034 = getelementptr inbounds %Type_Info, %Type_Info* %10033, i64 0, i32 1
	store i64 8, i64* %10034
	%10035 = getelementptr inbounds %Type_Info, %Type_Info* %10033, i64 0, i32 2
	store i64 8, i64* %10035
	; Type_Info_Pointer
	%10036 = bitcast %Type_Info* %10033 to %Type_Info.Pointer*
	%10037 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%10038 = bitcast %Type_Info* %10037 to %Type_Info*
	%10039 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10036, i64 0, i32 2
	store %Type_Info* %10038, %Type_Info** %10039
	%10040 = getelementptr inbounds %Type_Info, %Type_Info* %10033, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10040
	%10041 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%10042 = getelementptr inbounds %Type_Info, %Type_Info* %10041, i64 0, i32 1
	store i64 8, i64* %10042
	%10043 = getelementptr inbounds %Type_Info, %Type_Info* %10041, i64 0, i32 2
	store i64 8, i64* %10043
	; Type_Info_Pointer
	%10044 = bitcast %Type_Info* %10041 to %Type_Info.Pointer*
	%10045 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%10046 = bitcast %Type_Info* %10045 to %Type_Info*
	%10047 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10044, i64 0, i32 2
	store %Type_Info* %10046, %Type_Info** %10047
	%10048 = getelementptr inbounds %Type_Info, %Type_Info* %10041, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10048
	%10049 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%10050 = getelementptr inbounds %Type_Info, %Type_Info* %10049, i64 0, i32 1
	store i64 8, i64* %10050
	%10051 = getelementptr inbounds %Type_Info, %Type_Info* %10049, i64 0, i32 2
	store i64 8, i64* %10051
	; Type_Info_Pointer
	%10052 = bitcast %Type_Info* %10049 to %Type_Info.Pointer*
	%10053 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%10054 = bitcast %Type_Info* %10053 to %Type_Info*
	%10055 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10052, i64 0, i32 2
	store %Type_Info* %10054, %Type_Info** %10055
	%10056 = getelementptr inbounds %Type_Info, %Type_Info* %10049, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10056
	%10057 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%10058 = getelementptr inbounds %Type_Info, %Type_Info* %10057, i64 0, i32 1
	store i64 8, i64* %10058
	%10059 = getelementptr inbounds %Type_Info, %Type_Info* %10057, i64 0, i32 2
	store i64 8, i64* %10059
	; Type_Info_Pointer
	%10060 = bitcast %Type_Info* %10057 to %Type_Info.Pointer*
	%10061 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%10062 = bitcast %Type_Info* %10061 to %Type_Info*
	%10063 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10060, i64 0, i32 2
	store %Type_Info* %10062, %Type_Info** %10063
	%10064 = getelementptr inbounds %Type_Info, %Type_Info* %10057, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10064
	%10065 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%10066 = getelementptr inbounds %Type_Info, %Type_Info* %10065, i64 0, i32 1
	store i64 8, i64* %10066
	%10067 = getelementptr inbounds %Type_Info, %Type_Info* %10065, i64 0, i32 2
	store i64 8, i64* %10067
	; Type_Info_Pointer
	%10068 = bitcast %Type_Info* %10065 to %Type_Info.Pointer*
	%10069 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%10070 = bitcast %Type_Info* %10069 to %Type_Info*
	%10071 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10068, i64 0, i32 2
	store %Type_Info* %10070, %Type_Info** %10071
	%10072 = getelementptr inbounds %Type_Info, %Type_Info* %10065, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10072
	%10073 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%10074 = getelementptr inbounds %Type_Info, %Type_Info* %10073, i64 0, i32 1
	store i64 8, i64* %10074
	%10075 = getelementptr inbounds %Type_Info, %Type_Info* %10073, i64 0, i32 2
	store i64 8, i64* %10075
	; Type_Info_Pointer
	%10076 = bitcast %Type_Info* %10073 to %Type_Info.Pointer*
	%10077 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%10078 = bitcast %Type_Info* %10077 to %Type_Info*
	%10079 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10076, i64 0, i32 2
	store %Type_Info* %10078, %Type_Info** %10079
	%10080 = getelementptr inbounds %Type_Info, %Type_Info* %10073, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10080
	%10081 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%10082 = getelementptr inbounds %Type_Info, %Type_Info* %10081, i64 0, i32 1
	store i64 8, i64* %10082
	%10083 = getelementptr inbounds %Type_Info, %Type_Info* %10081, i64 0, i32 2
	store i64 8, i64* %10083
	; Type_Info_Pointer
	%10084 = bitcast %Type_Info* %10081 to %Type_Info.Pointer*
	%10085 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%10086 = bitcast %Type_Info* %10085 to %Type_Info*
	%10087 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10084, i64 0, i32 2
	store %Type_Info* %10086, %Type_Info** %10087
	%10088 = getelementptr inbounds %Type_Info, %Type_Info* %10081, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10088
	%10089 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%10090 = getelementptr inbounds %Type_Info, %Type_Info* %10089, i64 0, i32 1
	store i64 8, i64* %10090
	%10091 = getelementptr inbounds %Type_Info, %Type_Info* %10089, i64 0, i32 2
	store i64 8, i64* %10091
	; Type_Info_Pointer
	%10092 = bitcast %Type_Info* %10089 to %Type_Info.Pointer*
	%10093 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%10094 = bitcast %Type_Info* %10093 to %Type_Info*
	%10095 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10092, i64 0, i32 2
	store %Type_Info* %10094, %Type_Info** %10095
	%10096 = getelementptr inbounds %Type_Info, %Type_Info* %10089, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10096
	%10097 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%10098 = getelementptr inbounds %Type_Info, %Type_Info* %10097, i64 0, i32 1
	store i64 8, i64* %10098
	%10099 = getelementptr inbounds %Type_Info, %Type_Info* %10097, i64 0, i32 2
	store i64 8, i64* %10099
	; Type_Info_Pointer
	%10100 = bitcast %Type_Info* %10097 to %Type_Info.Pointer*
	%10101 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%10102 = bitcast %Type_Info* %10101 to %Type_Info*
	%10103 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10100, i64 0, i32 2
	store %Type_Info* %10102, %Type_Info** %10103
	%10104 = getelementptr inbounds %Type_Info, %Type_Info* %10097, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10104
	%10105 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%10106 = getelementptr inbounds %Type_Info, %Type_Info* %10105, i64 0, i32 1
	store i64 8, i64* %10106
	%10107 = getelementptr inbounds %Type_Info, %Type_Info* %10105, i64 0, i32 2
	store i64 8, i64* %10107
	; Type_Info_Pointer
	%10108 = bitcast %Type_Info* %10105 to %Type_Info.Pointer*
	%10109 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%10110 = bitcast %Type_Info* %10109 to %Type_Info*
	%10111 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10108, i64 0, i32 2
	store %Type_Info* %10110, %Type_Info** %10111
	%10112 = getelementptr inbounds %Type_Info, %Type_Info* %10105, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10112
	%10113 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%10114 = getelementptr inbounds %Type_Info, %Type_Info* %10113, i64 0, i32 1
	store i64 8, i64* %10114
	%10115 = getelementptr inbounds %Type_Info, %Type_Info* %10113, i64 0, i32 2
	store i64 8, i64* %10115
	; Type_Info_Pointer
	%10116 = bitcast %Type_Info* %10113 to %Type_Info.Pointer*
	%10117 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%10118 = bitcast %Type_Info* %10117 to %Type_Info*
	%10119 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10116, i64 0, i32 2
	store %Type_Info* %10118, %Type_Info** %10119
	%10120 = getelementptr inbounds %Type_Info, %Type_Info* %10113, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10120
	%10121 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%10122 = getelementptr inbounds %Type_Info, %Type_Info* %10121, i64 0, i32 1
	store i64 8, i64* %10122
	%10123 = getelementptr inbounds %Type_Info, %Type_Info* %10121, i64 0, i32 2
	store i64 8, i64* %10123
	; Type_Info_Pointer
	%10124 = bitcast %Type_Info* %10121 to %Type_Info.Pointer*
	%10125 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%10126 = bitcast %Type_Info* %10125 to %Type_Info*
	%10127 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10124, i64 0, i32 2
	store %Type_Info* %10126, %Type_Info** %10127
	%10128 = getelementptr inbounds %Type_Info, %Type_Info* %10121, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10128
	%10129 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10130 = getelementptr inbounds %Type_Info, %Type_Info* %10129, i64 0, i32 1
	store i64 8, i64* %10130
	%10131 = getelementptr inbounds %Type_Info, %Type_Info* %10129, i64 0, i32 2
	store i64 8, i64* %10131
	; Type_Info_Pointer
	%10132 = bitcast %Type_Info* %10129 to %Type_Info.Pointer*
	%10133 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10134 = bitcast %Type_Info* %10133 to %Type_Info*
	%10135 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10132, i64 0, i32 2
	store %Type_Info* %10134, %Type_Info** %10135
	%10136 = getelementptr inbounds %Type_Info, %Type_Info* %10129, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10136
	%10137 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%10138 = getelementptr inbounds %Type_Info, %Type_Info* %10137, i64 0, i32 1
	store i64 8, i64* %10138
	%10139 = getelementptr inbounds %Type_Info, %Type_Info* %10137, i64 0, i32 2
	store i64 8, i64* %10139
	; Type_Info_Pointer
	%10140 = bitcast %Type_Info* %10137 to %Type_Info.Pointer*
	%10141 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%10142 = bitcast %Type_Info* %10141 to %Type_Info*
	%10143 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10140, i64 0, i32 2
	store %Type_Info* %10142, %Type_Info** %10143
	%10144 = getelementptr inbounds %Type_Info, %Type_Info* %10137, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10144
	%10145 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%10146 = getelementptr inbounds %Type_Info, %Type_Info* %10145, i64 0, i32 1
	store i64 8, i64* %10146
	%10147 = getelementptr inbounds %Type_Info, %Type_Info* %10145, i64 0, i32 2
	store i64 8, i64* %10147
	; Type_Info_Pointer
	%10148 = bitcast %Type_Info* %10145 to %Type_Info.Pointer*
	%10149 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%10150 = bitcast %Type_Info* %10149 to %Type_Info*
	%10151 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10148, i64 0, i32 2
	store %Type_Info* %10150, %Type_Info** %10151
	%10152 = getelementptr inbounds %Type_Info, %Type_Info* %10145, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10152
	%10153 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10154 = getelementptr inbounds %Type_Info, %Type_Info* %10153, i64 0, i32 1
	store i64 8, i64* %10154
	%10155 = getelementptr inbounds %Type_Info, %Type_Info* %10153, i64 0, i32 2
	store i64 8, i64* %10155
	; Type_Info_Pointer
	%10156 = bitcast %Type_Info* %10153 to %Type_Info.Pointer*
	%10157 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10158 = bitcast %Type_Info* %10157 to %Type_Info*
	%10159 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10156, i64 0, i32 2
	store %Type_Info* %10158, %Type_Info** %10159
	%10160 = getelementptr inbounds %Type_Info, %Type_Info* %10153, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10160
	%10161 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%10162 = getelementptr inbounds %Type_Info, %Type_Info* %10161, i64 0, i32 1
	store i64 8, i64* %10162
	%10163 = getelementptr inbounds %Type_Info, %Type_Info* %10161, i64 0, i32 2
	store i64 8, i64* %10163
	; Type_Info_Pointer
	%10164 = bitcast %Type_Info* %10161 to %Type_Info.Pointer*
	%10165 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%10166 = bitcast %Type_Info* %10165 to %Type_Info*
	%10167 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10164, i64 0, i32 2
	store %Type_Info* %10166, %Type_Info** %10167
	%10168 = getelementptr inbounds %Type_Info, %Type_Info* %10161, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10168
	%10169 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%10170 = getelementptr inbounds %Type_Info, %Type_Info* %10169, i64 0, i32 1
	store i64 8, i64* %10170
	%10171 = getelementptr inbounds %Type_Info, %Type_Info* %10169, i64 0, i32 2
	store i64 8, i64* %10171
	; Type_Info_Pointer
	%10172 = bitcast %Type_Info* %10169 to %Type_Info.Pointer*
	%10173 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%10174 = bitcast %Type_Info* %10173 to %Type_Info*
	%10175 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10172, i64 0, i32 2
	store %Type_Info* %10174, %Type_Info** %10175
	%10176 = getelementptr inbounds %Type_Info, %Type_Info* %10169, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10176
	%10177 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%10178 = getelementptr inbounds %Type_Info, %Type_Info* %10177, i64 0, i32 1
	store i64 8, i64* %10178
	%10179 = getelementptr inbounds %Type_Info, %Type_Info* %10177, i64 0, i32 2
	store i64 8, i64* %10179
	; Type_Info_Pointer
	%10180 = bitcast %Type_Info* %10177 to %Type_Info.Pointer*
	%10181 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%10182 = bitcast %Type_Info* %10181 to %Type_Info*
	%10183 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10180, i64 0, i32 2
	store %Type_Info* %10182, %Type_Info** %10183
	%10184 = getelementptr inbounds %Type_Info, %Type_Info* %10177, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10184
	%10185 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%10186 = getelementptr inbounds %Type_Info, %Type_Info* %10185, i64 0, i32 1
	store i64 8, i64* %10186
	%10187 = getelementptr inbounds %Type_Info, %Type_Info* %10185, i64 0, i32 2
	store i64 8, i64* %10187
	; Type_Info_Pointer
	%10188 = bitcast %Type_Info* %10185 to %Type_Info.Pointer*
	%10189 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%10190 = bitcast %Type_Info* %10189 to %Type_Info*
	%10191 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10188, i64 0, i32 2
	store %Type_Info* %10190, %Type_Info** %10191
	%10192 = getelementptr inbounds %Type_Info, %Type_Info* %10185, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10192
	%10193 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%10194 = getelementptr inbounds %Type_Info, %Type_Info* %10193, i64 0, i32 1
	store i64 8, i64* %10194
	%10195 = getelementptr inbounds %Type_Info, %Type_Info* %10193, i64 0, i32 2
	store i64 8, i64* %10195
	; Type_Info_Pointer
	%10196 = bitcast %Type_Info* %10193 to %Type_Info.Pointer*
	%10197 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%10198 = bitcast %Type_Info* %10197 to %Type_Info*
	%10199 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10196, i64 0, i32 2
	store %Type_Info* %10198, %Type_Info** %10199
	%10200 = getelementptr inbounds %Type_Info, %Type_Info* %10193, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10200
	%10201 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%10202 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 1
	store i64 8, i64* %10202
	%10203 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 2
	store i64 8, i64* %10203
	; Type_Info_Pointer
	%10204 = bitcast %Type_Info* %10201 to %Type_Info.Pointer*
	%10205 = getelementptr inbounds [317 x %Type_Info], [317 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%10206 = bitcast %Type_Info* %10205 to %Type_Info*
	%10207 = getelementptr inbounds %Type_Info.Pointer, %Type_Info.Pointer* %10204, i64 0, i32 2
	store %Type_Info* %10206, %Type_Info** %10207
	%10208 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 4 ; UnionTagPtr
	store i64 9, i64* %10208
	ret void
}
@__$type_info_data = private global [317 x %Type_Info] zeroinitializer
@__$type_info_types_data = global [466 x %Type_Info*] zeroinitializer
@__$type_info_names_data = global [466 x %..string] zeroinitializer
@__$type_info_offsets_data = global [466 x i64] zeroinitializer
@__$type_info_usings_data = global [466 x i1] zeroinitializer
@__type_table = global {%Type_Info*, i64, i64} zeroinitializer
@__argv__ = global i8** zeroinitializer
@__argc__ = global i32 zeroinitializer
@__context = thread_local global %Context zeroinitializer
@fmt-4.__DIGITS_LOWER = global %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$8bb, i64 0, i32 0), i64 17}
@fmt-4.__DIGITS_UPPER = global %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$8bc, i64 0, i32 0), i64 17}
@utf8-5.accept_ranges = global [5 x %utf8-5.Accept_Range] [%utf8-5.Accept_Range {i8 128, i8 191}, %utf8-5.Accept_Range {i8 160, i8 191}, %utf8-5.Accept_Range {i8 128, i8 159}, %utf8-5.Accept_Range {i8 144, i8 191}, %utf8-5.Accept_Range {i8 128, i8 143}]
@utf8-5.accept_sizes = global [256 x i8] [i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 19, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 35, i8 3, i8 3, i8 52, i8 4, i8 4, i8 4, i8 68, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241]
@gl-10.DebugInfo = global %gl-10.DebugInfo_t zeroinitializer
@gl-10._BufferData = global void (i32, i32, %..rawptr, i32)* zeroinitializer
@gl-10._BindBuffer = global void (i32, i32)* zeroinitializer
@gl-10._GenBuffers = global void (i32, i32*)* zeroinitializer
@gl-10._GenVertexArrays = global void (i32, i32*)* zeroinitializer
@gl-10._EnableVertexAttribArray = global void (i32)* zeroinitializer
@gl-10._VertexAttribPointer = global void (i32, i32, i32, i1, i32, %..rawptr)* zeroinitializer
@gl-10._BindVertexArray = global void (i32)* zeroinitializer
@gl-10._Uniform1i = global void (i32, i32)* zeroinitializer
@gl-10._Uniform2i = global void (i32, i32, i32)* zeroinitializer
@gl-10._Uniform3i = global void (i32, i32, i32, i32)* zeroinitializer
@gl-10._Uniform4i = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-10._Uniform1f = global void (i32, float)* zeroinitializer
@gl-10._Uniform2f = global void (i32, float, float)* zeroinitializer
@gl-10._Uniform3f = global void (i32, float, float, float)* zeroinitializer
@gl-10._Uniform4f = global void (i32, float, float, float, float)* zeroinitializer
@gl-10._UniformMatrix4fv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-10._GetUniformLocation = global i32 (i32, i8*)* zeroinitializer
@gl-10._GetAttribLocation = global i32 (i32, i8*)* zeroinitializer
@gl-10._DrawElements = global void (i32, i32, i32, %..rawptr)* zeroinitializer
@gl-10._DrawArrays = global void (i32, i32, i32)* zeroinitializer
@gl-10._UseProgram = global void (i32)* zeroinitializer
@gl-10._LinkProgram = global void (i32)* zeroinitializer
@gl-10._ActiveTexture = global void (i32)* zeroinitializer
@gl-10._BlendEquationSeparate = global void (i32, i32)* zeroinitializer
@gl-10._BlendEquation = global void (i32)* zeroinitializer
@gl-10._AttachShader = global void (i32, i32)* zeroinitializer
@gl-10._CreateProgram = global i32 ()* zeroinitializer
@gl-10._ShaderSource = global void (i32, i32, i8**, i32*)* zeroinitializer
@gl-10._CreateShader = global i32 (i32)* zeroinitializer
@gl-10._CompileShader = global void (i32)* zeroinitializer
@gl-10._DebugMessageControl = global void (i32, i32, i32, i32, i32*, i1)* zeroinitializer
@gl-10._DebugMessageCallback = global void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)* zeroinitializer
@gl-10._GetShaderiv = global void (i32, i32, i32*)* zeroinitializer
@gl-10._GetShaderInfoLog = global void (i32, i32, i32*, i8*)* zeroinitializer
@gl-10._GetStringi = global i8* (i32, i32)* zeroinitializer
@gl-10._BindFragDataLocation = global void (i32, i32, i8*)* zeroinitializer
@gl-10._PolygonMode = global void (i32, i32)* zeroinitializer
@gl-10._GenerateMipmap = global void (i32)* zeroinitializer
@gl-10._Enable = global void (i32)* zeroinitializer
@gl-10._DepthFunc = global void (i32)* zeroinitializer
@gl-10._GetString = global i8* (i32)* zeroinitializer
@gl-10._TexImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-10._TexParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-10._BindTexture = global void (i32, i32)* zeroinitializer
@gl-10._GenTextures = global void (i32, i32*)* zeroinitializer
@gl-10._BlendFunc = global void (i32, i32)* zeroinitializer
@gl-10._GetIntegerv = global void (i32, i32*)* zeroinitializer
@gl-10._Disable = global void (i32)* zeroinitializer
@gl-10._Clear = global void (i32)* zeroinitializer
@xinput-13._Enable = global void (i32)* zeroinitializer
@xinput-13._GetBatteryInformation = global i32 (i32, i8, %xinput-13.BatteryInformation*)* zeroinitializer
@xinput-13._GetCapabilities = global i32 (i32, i32, %xinput-13.Capabilities*)* zeroinitializer
@xinput-13._GetKeystroke = global i32 (i32, i32, %xinput-13.KeyStroke*)* zeroinitializer
@xinput-13._GetState = global i32 (i32, %xinput-13.State*)* zeroinitializer
@xinput-13._SetState = global i32 (i32, i32)* zeroinitializer
@xinput-13.DebugInfo = global %xinput-13.DebugInfo_t zeroinitializer
@xinput-13.Version = global i64 0
@render-14.mainProgram = global %gl-10.Program zeroinitializer
@render-14.mainvao = global i32 zeroinitializer
@render-14.textures = global {i32*, i64, i64,%Allocator} zeroinitializer
@render-14.back = global i32 zeroinitializer
@render-14.cursorT = global i32 zeroinitializer
@render-14.Camera = global %render-14.Camera_t zeroinitializer
@render-14.basicProgram = global %gl-10.Program zeroinitializer
@render-14.basicvao = global i32 zeroinitializer
@catalog-16.DebugInfo = global %catalog-16.DebugInfo_t zeroinitializer
@console-17._InternalData = global %console-17.LogData zeroinitializer
@entity-18.GUID = global i64 0
@jwgl-26.CreateContextAttribsARB = global %..rawptr (%..rawptr, %..rawptr, i32*)* zeroinitializer
@jwgl-26.ChoosePixelFormatARB = global i32 (%..rawptr, i32*, float*, i32, i32*, i32*)* zeroinitializer
@jwgl-26.SwapIntervalEXT = global i1 (i32)* zeroinitializer
@jwgl-26.GetExtensionsStringARB = global i8* (%..rawptr)* zeroinitializer
@debug_windows-27._GlobalDebugWndBools = global {{i64*, i64, i64,%Allocator}, {{%__Map_Key, i64, i1}*, i64, i64,%Allocator}} zeroinitializer
@debug_windows-27._ChosenCatalog = global i32 zeroinitializer
@debug_windows-27._PreviewSize = global %imgui-9.Vec2 {float 0x4034000000000000, float 0x4034000000000000}
@debug_windows-27._ShowID = global i32 1
@debug_windows-27._ChosenEntity = global %entity-18.Entity* zeroinitializer
@os_windows-29.stdout = global i64 zeroinitializer
@os_windows-29.stderr = global i64 zeroinitializer
@strconv-34.f32_info = global %strconv-34.Float_Info {i64 23, i64 8, i64 -127}
@strconv-34.f64_info = global %strconv-34.Float_Info {i64 52, i64 11, i64 -1023}
@__$enum_names-1a = private global [4 x %..string] zeroinitializer
@__$enum_values-1a = private global [4 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-3e = private global [7 x %..string] zeroinitializer
@__$enum_values-3e = private global [7 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-41 = private global [10 x %..string] zeroinitializer
@__$enum_values-41 = private global [10 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-43 = private global [5 x %..string] zeroinitializer
@__$enum_values-43 = private global [5 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-af = private global [4 x %..string] zeroinitializer
@__$enum_values-af = private global [4 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-f5 = private global [4 x %..string] zeroinitializer
@__$enum_values-f5 = private global [4 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-fb = private global [138 x %..string] zeroinitializer
@__$enum_values-fb = private global [138 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-fd = private global [15 x %..string] zeroinitializer
@__$enum_values-fd = private global [15 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-129 = private global [6 x %..string] zeroinitializer
@__$enum_values-129 = private global [6 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-131 = private global [3 x %..string] zeroinitializer
@__$enum_values-131 = private global [3 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-138 = private global [5 x %..string] zeroinitializer
@__$enum_values-138 = private global [5 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-13a = private global [4 x %..string] zeroinitializer
@__$enum_values-13a = private global [4 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__$enum_names-13c = private global [11 x %..string] zeroinitializer
@__$enum_values-13c = private global [11 x {[0 x <8 x i8>], [8 x i8]}] zeroinitializer
@__str$0 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$1 = private global [10 x i8] c"ptr\20\21\3D\20nil"
@__str$2 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$3 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$4 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$5 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$6 = private global [32 x i8] c"\25s\28\25d\3A\25d\29\20Runtime\20assertion\3A\20\25s\0A"
@__str$7 = private global [20 x i8] c"\25s\28\25d\3A\25d\29\20Panic\3A\20\25s\0A"
@__str$8 = private global [49 x i8] c"\25s\28\25d\3A\25d\29\20Index\20\25d\20is\20out\20of\20bounds\20range\200..\3C\25d\0A"
@__str$9 = private global [48 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20slice\20indices\3A\20\5B\25d..\3C\25d..\3C\25d\5D\0A"
@__str$a = private global [47 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20substring\20indices\3A\20\5B\25d..\3C\25d\5D\0A"
@__str$b = private global [47 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20type_assertion\20from\20\25T\20to\20\25T\0A"
@__str$c = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$d = private global [32 x i8] c"array.allocator.procedure\20\21\3D\20nil"
@__str$e = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$f = private global [32 x i8] c"array.allocator.procedure\20\21\3D\20nil"
@__str$10 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$11 = private global [11 x i8] c"data\20\21\3D\20nil"
@__str$12 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$13 = private global [11 x i8] c"data\20\21\3D\20nil"
@__str$14 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$15 = private global [11 x i8] c"data\20\21\3D\20nil"
@__str$16 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$17 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$18 = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$19 = private global [12 x i8] c"value\20\21\3D\20nil"
@__str$1a = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$1b = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$1c = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$1d = private global [26 x i8] c"E\3A\5COdin\5Ccore\5C_preload.odin"
@__str$1e = private global [19 x i8] c"\5B\25v\20\7C\20\25v\20\7C\20\25v\5D\20\25s\20\0A"
@__str$1f = private global [13 x i8] c"data\2Fshaders\2F"
@__str$20 = private global [11 x i8] c".frag\2C.vert"
@__str$21 = private global [14 x i8] c"data\2Ftextures\2F"
@__str$22 = private global [15 x i8] c".png\2C.jpg\2C.jpeg"
@__str$23 = private global [10 x i8] c"data\2Fmaps\2F"
@__str$24 = private global [4 x i8] c".png"
@__str$25 = private global [4 x i8] c"Help"
@__str$26 = private global [5 x i8] c"Clear"
@__str$27 = private global [52 x i8] c"Jaze\20-\20DEV\20VERSION\20\7C\20\3C\25.0f\2C\20\25.0f\3E\20\7C\20\3C\25d\2C\20\25d\2C\20\25d\2C\20\25d\3E"
@__str$28 = private global [20 x i8] c"E\3A\5COdin\5Ccore\5Cos.odin"
@__str$29 = private global [20 x i8] c"E\3A\5COdin\5Ccore\5Cos.odin"
@__str$2a = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$2b = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$2c = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$2d = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$2e = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$2f = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$30 = private global [3 x i8] c"int"
@__str$31 = private global [4 x i8] c"uint"
@__str$32 = private global [1 x i8] c"i"
@__str$33 = private global [1 x i8] c"u"
@__str$34 = private global [3 x i8] c"f32"
@__str$35 = private global [3 x i8] c"f64"
@__str$36 = private global [9 x i8] c"complex64"
@__str$37 = private global [10 x i8] c"complex128"
@__str$38 = private global [13 x i8] c"quaternion128"
@__str$39 = private global [10 x i8] c"quaternion"
@__str$3a = private global [6 x i8] c"string"
@__str$3b = private global [4 x i8] c"bool"
@__str$3c = private global [3 x i8] c"any"
@__str$3d = private global [7 x i8] c"atomic\20"
@__str$3e = private global [6 x i8] c"rawptr"
@__str$3f = private global [1 x i8] c"\5E"
@__str$40 = private global [4 x i8] c"proc"
@__str$41 = private global [2 x i8] c"\28\29"
@__str$42 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$43 = private global [1 x i8] c"\28"
@__str$44 = private global [2 x i8] c"\2C\20"
@__str$45 = private global [1 x i8] c"\29"
@__str$46 = private global [4 x i8] c"\20-\3E\20"
@__str$47 = private global [1 x i8] c"\28"
@__str$48 = private global [2 x i8] c"\2C\20"
@__str$49 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$4a = private global [2 x i8] c"\3A\20"
@__str$4b = private global [1 x i8] c"\29"
@__str$4c = private global [1 x i8] c"\5B"
@__str$4d = private global [1 x i8] c"\5D"
@__str$4e = private global [9 x i8] c"\5Bdynamic\5D"
@__str$4f = private global [2 x i8] c"\5B\5D"
@__str$50 = private global [8 x i8] c"\5Bvector\20"
@__str$51 = private global [1 x i8] c"\5D"
@__str$52 = private global [4 x i8] c"map\5B"
@__str$53 = private global [7 x i8] c"struct\20"
@__str$54 = private global [8 x i8] c"\23packed\20"
@__str$55 = private global [9 x i8] c"\23ordered\20"
@__str$56 = private global [7 x i8] c"\23align\20"
@__str$57 = private global [2 x i8] c"\2C\20"
@__str$58 = private global [2 x i8] c"\3A\20"
@__str$59 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$5a = private global [7 x i8] c"union\20\7B"
@__str$5b = private global [2 x i8] c"\2C\20"
@__str$5c = private global [2 x i8] c"\3A\20"
@__str$5d = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$5e = private global [2 x i8] c"\2C\20"
@__str$5f = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$60 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$61 = private global [2 x i8] c"\2C\20"
@__str$62 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$63 = private global [2 x i8] c"\3A\20"
@__str$64 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$65 = private global [1 x i8] c"\7D"
@__str$66 = private global [11 x i8] c"raw_union\20\7B"
@__str$67 = private global [2 x i8] c"\2C\20"
@__str$68 = private global [2 x i8] c"\3A\20"
@__str$69 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$6a = private global [1 x i8] c"\7D"
@__str$6b = private global [5 x i8] c"enum\20"
@__str$6c = private global [2 x i8] c"\20\7B"
@__str$6d = private global [2 x i8] c"\2C\20"
@__str$6e = private global [1 x i8] c"\7D"
@__str$6f = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$70 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$71 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$72 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$73 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$74 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$75 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$76 = private global [9 x i8] c"verb\20\21\3D\20v"
@__str$77 = private global [2 x i8] c"\25\21"
@__str$78 = private global [5 x i8] c"\3Cnil\3E"
@__str$79 = private global [4 x i8] c"true"
@__str$7a = private global [5 x i8] c"false"
@__str$7b = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$7c = private global [41 x i8] c"is_integer_negative\3A\20Unknown\20integer\20size"
@__str$7d = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$7e = private global [55 x i8] c"_write_int\3A\20buffer\20overrun.\20Width\20and\20precision\20too\20big"
@__str$7f = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$80 = private global [32 x i8] c"_write_int\3A\20unknown\20base\2C\20whoops"
@__str$81 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$82 = private global [2 x i8] c"U\2B"
@__str$83 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$84 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$85 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$86 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$87 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$88 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$89 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8a = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8b = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8c = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8d = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8e = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$8f = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$90 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$91 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$92 = private global [2 x i8] c"0x"
@__str$93 = private global [5 x i8] c"\3Cnil\3E"
@__str$94 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$95 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$96 = private global [18 x i8] c"\21\25\28BAD\20ENUM\20VALUE\29"
@__str$97 = private global [5 x i8] c"\3Cnil\3E"
@__str$98 = private global [2 x i8] c"\2C\20"
@__str$99 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$9a = private global [3 x i8] c"\20\3D\20"
@__str$9b = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$9c = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$9d = private global [2 x i8] c"\2C\20"
@__str$9e = private global [2 x i8] c"\2C\20"
@__str$9f = private global [2 x i8] c"\2C\20"
@__str$a0 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$a1 = private global [2 x i8] c"\2C\20"
@__str$a2 = private global [4 x i8] c"map\5B"
@__str$a3 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$a4 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$a5 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$a6 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$a7 = private global [2 x i8] c"\2C\20"
@__str$a8 = private global [1 x i8] c"\3D"
@__str$a9 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$aa = private global [2 x i8] c"\2C\20"
@__str$ab = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$ac = private global [3 x i8] c"\20\3D\20"
@__str$ad = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$ae = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$af = private global [2 x i8] c"\2C\20"
@__str$b0 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$b1 = private global [3 x i8] c"\20\3D\20"
@__str$b2 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$b3 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$b4 = private global [11 x i8] c"\28raw_union\29"
@__str$b5 = private global [3 x i8] c"\20\40\20"
@__str$b6 = private global [5 x i8] c"\3Cnil\3E"
@__str$b7 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$b8 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$b9 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$ba = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$bb = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$bc = private global [13 x i8] c"\25\21\28BAD\20WIDTH\29"
@__str$bd = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$be = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$bf = private global [17 x i8] c"\25\21\28BAD\20PRECISION\29"
@__str$c0 = private global [11 x i8] c"\25\21\28NO\20VERB\29"
@__str$c1 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$c2 = private global [23 x i8] c"\25\21\28BAD\20ARGUMENT\20NUMBER\29"
@__str$c3 = private global [20 x i8] c"\25\21\28MISSING\20ARGUMENT\29"
@__str$c4 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$c5 = private global [9 x i8] c"\25\21\28EXTRA\20"
@__str$c6 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$c7 = private global [2 x i8] c"\2C\20"
@__str$c8 = private global [5 x i8] c"\3Cnil\3E"
@__str$c9 = private global [21 x i8] c"E\3A\5COdin\5Ccore\5Cfmt.odin"
@__str$ca = private global [1 x i8] c"\29"
@__str$cb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$cc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$cd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$ce = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$cf = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$d9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$da = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$db = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$dc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$dd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$de = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$df = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$e0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$e1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cutf8.odin"
@__str$e2 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrings.odin"
@__str$e3 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrings.odin"
@__str$e4 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrings.odin"
@__str$e5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$e6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$e7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$e8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$e9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ea = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$eb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ec = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ed = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ee = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ef = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$f9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$fa = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$fb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$fc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$fd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$fe = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$ff = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$100 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$101 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$102 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$103 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$104 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$105 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$106 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$107 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$108 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$109 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$10f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$110 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$111 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$112 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$113 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$114 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$115 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$116 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$117 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$118 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$119 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$11f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$120 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$121 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$122 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$123 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$124 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$125 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$126 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$127 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$128 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$129 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$12f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$130 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$131 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$132 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$133 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$134 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$135 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$136 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$137 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$138 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$139 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$13f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$140 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$141 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$142 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$143 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$144 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$145 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$146 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$147 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$148 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$149 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$14f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$150 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$151 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$152 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$153 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$154 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$155 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$156 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$157 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$158 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$159 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$15f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$160 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$161 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$162 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$163 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$164 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$165 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$166 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$167 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$168 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$169 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$16f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$170 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$171 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$172 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$173 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$174 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$175 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$176 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$177 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$178 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$179 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$17f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$180 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$181 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$182 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$183 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$184 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$185 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$186 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$187 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$188 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$189 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$18f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$190 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$191 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$192 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$193 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$194 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$195 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$196 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$197 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$198 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$199 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$19f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1a9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1aa = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ab = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ac = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ad = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ae = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1af = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1b9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ba = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1bb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1bc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1bd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1be = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1bf = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1c9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ca = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1cb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1cc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1cd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ce = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1cf = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1d9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1da = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1db = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1dc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1dd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1de = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1df = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1e9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ea = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1eb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ec = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ed = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ee = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ef = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f0 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f1 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f2 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f3 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f4 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f5 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f6 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f7 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f8 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1f9 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1fa = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1fb = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1fc = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1fd = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1fe = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$1ff = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$200 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$201 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$202 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$203 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$204 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$205 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$206 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$207 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$208 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$209 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$20f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$210 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$211 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$212 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$213 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$214 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$215 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$216 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$217 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$218 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$219 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$21f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$220 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$221 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$222 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$223 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$224 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$225 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$226 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$227 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$228 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$229 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$22f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$230 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$231 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$232 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$233 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$234 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$235 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$236 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$237 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$238 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$239 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$23f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$240 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$241 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$242 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$243 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$244 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$245 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$246 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$247 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$248 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$249 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$24f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$250 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$251 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$252 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$253 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$254 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$255 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$256 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$257 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$258 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$259 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$25f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$260 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$261 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$262 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$263 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$264 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$265 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$266 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$267 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$268 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$269 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$26f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$270 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$271 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$272 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$273 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$274 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$275 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$276 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$277 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$278 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$279 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$27f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$280 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$281 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$282 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$283 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$284 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$285 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$286 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$287 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$288 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$289 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28a = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28b = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28c = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28d = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28e = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$28f = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$290 = private global [22 x i8] c"E\3A\5COdin\5Ccore\5Cmath.odin"
@__str$291 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$292 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$293 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$294 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$295 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$296 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$297 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$298 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$299 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$29a = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cimgui.odin"
@__str$29b = private global [9 x i8] c"DepthFunc"
@__str$29c = private global [16 x i8] c"\25s\20ins\27t\20loaded\21"
@__str$29d = private global [14 x i8] c"GenerateMipmap"
@__str$29e = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$29f = private global [19 x i8] c"DebugMessageControl"
@__str$2a0 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2a1 = private global [20 x i8] c"DebugMessageCallback"
@__str$2a2 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2a3 = private global [10 x i8] c"BufferData"
@__str$2a4 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2a5 = private global [9 x i8] c"GenBuffer"
@__str$2a6 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2a7 = private global [10 x i8] c"BindBuffer"
@__str$2a8 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2a9 = private global [20 x i8] c"BindFragDataLocation"
@__str$2aa = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2ab = private global [14 x i8] c"GenVertexArray"
@__str$2ac = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2ad = private global [23 x i8] c"EnableVertexAttribArray"
@__str$2ae = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2af = private global [19 x i8] c"VertexAttribPointer"
@__str$2b0 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2b1 = private global [15 x i8] c"BindVertexArray"
@__str$2b2 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2b3 = private global [7 x i8] c"Uniform"
@__str$2b4 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2b5 = private global [7 x i8] c"Uniform"
@__str$2b6 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2b7 = private global [16 x i8] c"UniformMatrix4fv"
@__str$2b8 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2b9 = private global [18 x i8] c"GetUniformLocation"
@__str$2ba = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2bb = private global [17 x i8] c"GetAttribLocation"
@__str$2bc = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2bd = private global [12 x i8] c"DrawElements"
@__str$2be = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2bf = private global [10 x i8] c"UseProgram"
@__str$2c0 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2c1 = private global [11 x i8] c"LinkProgram"
@__str$2c2 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2c3 = private global [13 x i8] c"ActiveTexture"
@__str$2c4 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2c5 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2c6 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2c7 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2c8 = private global [13 x i8] c"BlendEquation"
@__str$2c9 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2ca = private global [9 x i8] c"BlendFunc"
@__str$2cb = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2cc = private global [9 x i8] c"GetString"
@__str$2cd = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2ce = private global [3 x i8] c"nil"
@__str$2cf = private global [9 x i8] c"GetString"
@__str$2d0 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2d1 = private global [3 x i8] c"nil"
@__str$2d2 = private global [10 x i8] c"GetInteger"
@__str$2d3 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2d4 = private global [10 x i8] c"GetInteger"
@__str$2d5 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2d6 = private global [6 x i8] c"Enable"
@__str$2d7 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2d8 = private global [7 x i8] c"Disable"
@__str$2d9 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2da = private global [12 x i8] c"AttachShader"
@__str$2db = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2dc = private global [13 x i8] c"CreateProgram"
@__str$2dd = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2de = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2df = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e0 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e1 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e2 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e3 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e4 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e5 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e6 = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2e7 = private global [12 x i8] c"ShaderSource"
@__str$2e8 = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2e9 = private global [12 x i8] c"CreateShader"
@__str$2ea = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2eb = private global [13 x i8] c"CompileShader"
@__str$2ec = private global [16 x i8] c"\25s\20isn\27t\20loaded\21"
@__str$2ed = private global [13 x i8] c"opengl32.dll\00"
@__str$2ee = private global [24 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl.odin"
@__str$2ef = private global [14 x i8] c"glDrawElements"
@__str$2f0 = private global [12 x i8] c"glDrawArrays"
@__str$2f1 = private global [17 x i8] c"glBindVertexArray"
@__str$2f2 = private global [21 x i8] c"glVertexAttribPointer"
@__str$2f3 = private global [25 x i8] c"glEnableVertexAttribArray"
@__str$2f4 = private global [17 x i8] c"glGenVertexArrays"
@__str$2f5 = private global [12 x i8] c"glBufferData"
@__str$2f6 = private global [12 x i8] c"glBindBuffer"
@__str$2f7 = private global [12 x i8] c"glGenBuffers"
@__str$2f8 = private global [24 x i8] c"glDebugMessageControlARB"
@__str$2f9 = private global [25 x i8] c"glDebugMessageCallbackARB"
@__str$2fa = private global [13 x i8] c"glGetShaderiv"
@__str$2fb = private global [18 x i8] c"glGetShaderInfoLog"
@__str$2fc = private global [12 x i8] c"glGetStringi"
@__str$2fd = private global [15 x i8] c"glBlendEquation"
@__str$2fe = private global [23 x i8] c"glBlendEquationSeparate"
@__str$2ff = private global [15 x i8] c"glCompileShader"
@__str$300 = private global [14 x i8] c"glCreateShader"
@__str$301 = private global [14 x i8] c"glShaderSource"
@__str$302 = private global [14 x i8] c"glAttachShader"
@__str$303 = private global [15 x i8] c"glCreateProgram"
@__str$304 = private global [13 x i8] c"glLinkProgram"
@__str$305 = private global [12 x i8] c"glUseProgram"
@__str$306 = private global [15 x i8] c"glActiveTexture"
@__str$307 = private global [11 x i8] c"glUniform1i"
@__str$308 = private global [11 x i8] c"glUniform2i"
@__str$309 = private global [11 x i8] c"glUniform3i"
@__str$30a = private global [11 x i8] c"glUniform4i"
@__str$30b = private global [11 x i8] c"glUniform1f"
@__str$30c = private global [11 x i8] c"glUniform2f"
@__str$30d = private global [11 x i8] c"glUniform3f"
@__str$30e = private global [11 x i8] c"glUniform4f"
@__str$30f = private global [18 x i8] c"glUniformMatrix4fv"
@__str$310 = private global [20 x i8] c"glGetUniformLocation"
@__str$311 = private global [19 x i8] c"glGetAttribLocation"
@__str$312 = private global [13 x i8] c"glPolygonMode"
@__str$313 = private global [16 x i8] c"glGenerateMipmap"
@__str$314 = private global [8 x i8] c"glEnable"
@__str$315 = private global [11 x i8] c"glDepthFunc"
@__str$316 = private global [22 x i8] c"glBindFragDataLocation"
@__str$317 = private global [11 x i8] c"glGetString"
@__str$318 = private global [12 x i8] c"glTexImage2D"
@__str$319 = private global [15 x i8] c"glTexParameteri"
@__str$31a = private global [13 x i8] c"glBindTexture"
@__str$31b = private global [13 x i8] c"glGenTextures"
@__str$31c = private global [11 x i8] c"glBlendFunc"
@__str$31d = private global [13 x i8] c"glGetIntegerv"
@__str$31e = private global [9 x i8] c"glDisable"
@__str$31f = private global [7 x i8] c"glClear"
@__str$320 = private global [4 x i8] c"Game"
@__str$321 = private global [11 x i8] c"Entity\20List"
@__str$322 = private global [14 x i8] c"ShowEntityList"
@__str$323 = private global [9 x i8] c"Game\20Info"
@__str$324 = private global [12 x i8] c"ShowGameInfo"
@__str$325 = private global [4 x i8] c"Data"
@__str$326 = private global [11 x i8] c"OpenGL\20Info"
@__str$327 = private global [14 x i8] c"ShowOpenGLInfo"
@__str$328 = private global [13 x i8] c"Win32Var\20Info"
@__str$329 = private global [16 x i8] c"ShowWin32VarInfo"
@__str$32a = private global [9 x i8] c"Time\20Data"
@__str$32b = private global [12 x i8] c"ShowTimeData"
@__str$32c = private global [11 x i8] c"Engine\20Info"
@__str$32d = private global [14 x i8] c"ShowEngineInfo"
@__str$32e = private global [5 x i8] c"Input"
@__str$32f = private global [16 x i8] c"Keyboard\20\26\20Mouse"
@__str$330 = private global [15 x i8] c"ShowInputWindow"
@__str$331 = private global [6 x i8] c"XInput"
@__str$332 = private global [4 x i8] c"Info"
@__str$333 = private global [14 x i8] c"ShowXinputInfo"
@__str$334 = private global [5 x i8] c"State"
@__str$335 = private global [15 x i8] c"ShowXinputState"
@__str$336 = private global [5 x i8] c"Asset"
@__str$337 = private global [8 x i8] c"Catalogs"
@__str$338 = private global [17 x i8] c"ShowCatalogWindow"
@__str$339 = private global [6 x i8] c"Visual"
@__str$33a = private global [14 x i8] c"Adaptive\20VSync"
@__str$33b = private global [15 x i8] c"ShowStatOverlay"
@__str$33c = private global [12 x i8] c"Stat\20Overlay"
@__str$33d = private global [15 x i8] c"ShowStatOverlay"
@__str$33e = private global [15 x i8] c"Hardware\20Cursor"
@__str$33f = private global [4 x i8] c"Misc"
@__str$340 = private global [15 x i8] c"Camera\20Settings"
@__str$341 = private global [18 x i8] c"ShowCameraSettings"
@__str$342 = private global [7 x i8] c"Console"
@__str$343 = private global [5 x i8] c"Alt\2BC"
@__str$344 = private global [17 x i8] c"ShowConsoleWindow"
@__str$345 = private global [19 x i8] c"Debug\20Window\20States"
@__str$346 = private global [21 x i8] c"ShowDebugWindowStates"
@__str$347 = private global [16 x i8] c"Show\20Test\20Window"
@__str$348 = private global [14 x i8] c"ShowTestWindow"
@__str$349 = private global [17 x i8] c"Toggle\20Fullscreen"
@__str$34a = private global [9 x i8] c"Alt\2BEnter"
@__str$34b = private global [4 x i8] c"Exit"
@__str$34c = private global [6 x i8] c"Escape"
@__str$34d = private global [14 x i8] c"ShowOpenGLInfo"
@__str$34e = private global [14 x i8] c"ShowOpenGLInfo"
@__str$34f = private global [14 x i8] c"ShowOpenGLInfo"
@__str$350 = private global [15 x i8] c"ShowInputWindow"
@__str$351 = private global [15 x i8] c"ShowInputWindow"
@__str$352 = private global [15 x i8] c"ShowInputWindow"
@__str$353 = private global [16 x i8] c"ShowWin32VarInfo"
@__str$354 = private global [16 x i8] c"ShowWin32VarInfo"
@__str$355 = private global [10 x i8] c"Win32\20Info"
@__str$356 = private global [16 x i8] c"ShowWin32VarInfo"
@__str$357 = private global [14 x i8] c"ShowEntityList"
@__str$358 = private global [14 x i8] c"ShowEntityList"
@__str$359 = private global [14 x i8] c"ShowEntityList"
@__str$35a = private global [12 x i8] c"ShowGameInfo"
@__str$35b = private global [12 x i8] c"ShowGameInfo"
@__str$35c = private global [9 x i8] c"Game\20Info"
@__str$35d = private global [12 x i8] c"ShowGameInfo"
@__str$35e = private global [12 x i8] c"ShowTimeData"
@__str$35f = private global [12 x i8] c"ShowTimeData"
@__str$360 = private global [4 x i8] c"Time"
@__str$361 = private global [12 x i8] c"ShowTimeData"
@__str$362 = private global [14 x i8] c"ShowEngineInfo"
@__str$363 = private global [14 x i8] c"ShowEngineInfo"
@__str$364 = private global [11 x i8] c"Engine\20Info"
@__str$365 = private global [14 x i8] c"ShowEngineInfo"
@__str$366 = private global [14 x i8] c"ShowXinputInfo"
@__str$367 = private global [15 x i8] c"ShowXinputState"
@__str$368 = private global [17 x i8] c"ShowCatalogWindow"
@__str$369 = private global [21 x i8] c"ShowDebugWindowStates"
@__str$36a = private global [15 x i8] c"ShowStatOverlay"
@__str$36b = private global [17 x i8] c"ShowConsoleWindow"
@__str$36c = private global [13 x i8] c"ShowLogWindow"
@__str$36d = private global [14 x i8] c"ShowTestWindow"
@__str$36e = private global [14 x i8] c"ShowTestWindow"
@__str$36f = private global [14 x i8] c"ShowTestWindow"
@__str$370 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$371 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$372 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$373 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$374 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$375 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$376 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$377 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$378 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$379 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37a = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37b = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37c = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37d = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37e = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$37f = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$380 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$381 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$382 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$383 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$384 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$385 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$386 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$387 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$388 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$389 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38a = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38b = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38c = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38d = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38e = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$38f = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$390 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$391 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$392 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$393 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$394 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$395 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$396 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$397 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$398 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$399 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$39a = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$39b = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$39c = private global [320 x i8] c"\23version\20330\0A\20\20\20\20\20\20\20\20uniform\20mat4\20ProjMtx\3B\0A\20\20\20\20\20\20\20\20in\20vec2\20Position\3B\0A\20\20\20\20\20\20\20\20in\20vec2\20UV\3B\0A\20\20\20\20\20\20\20\20in\20vec4\20Color\3B\0A\20\20\20\20\20\20\20\20out\20vec2\20Frag_UV\3B\0A\20\20\20\20\20\20\20\20out\20vec4\20Frag_Color\3B\0A\20\20\20\20\20\20\20\20void\20main\28\29\0A\20\20\20\20\20\20\20\20\7B\0A\20\20\20\20\20\20\20\20\20\20\20Frag_UV\20\3D\20UV\3B\0A\20\20\20\20\20\20\20\20\20\20\20Frag_Color\20\3D\20Color\3B\0A\20\20\20\20\20\20\20\20\20\20\20gl_Position\20\3D\20ProjMtx\20\2A\20vec4\28Position.xy\2C0\2C1\29\3B\0A\20\20\20\20\20\20\20\20\7D"
@__str$39d = private global [235 x i8] c"\23version\20330\0A\20\20\20\20\20\20\20\20uniform\20sampler2D\20Texture\3B\0A\20\20\20\20\20\20\20\20in\20vec2\20Frag_UV\3B\0A\20\20\20\20\20\20\20\20in\20vec4\20Frag_Color\3B\0A\20\20\20\20\20\20\20\20out\20vec4\20Out_Color\3B\0A\20\20\20\20\20\20\20\20void\20main\28\29\0A\20\20\20\20\20\20\20\20\7B\0A\20\20\20\20\20\20\20\20\20\20\20Out_Color\20\3D\20Frag_Color\20\2A\20texture\28\20Texture\2C\20Frag_UV.st\29\3B\0A\20\20\20\20\20\20\20\20\7D"
@__str$39e = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$39f = private global [6 x i8] c"FUUUCK"
@__str$3a0 = private global [7 x i8] c"Texture"
@__str$3a1 = private global [7 x i8] c"Texture"
@__str$3a2 = private global [7 x i8] c"ProjMtx"
@__str$3a3 = private global [7 x i8] c"ProjMtx"
@__str$3a4 = private global [8 x i8] c"Position"
@__str$3a5 = private global [8 x i8] c"Position"
@__str$3a6 = private global [2 x i8] c"UV"
@__str$3a7 = private global [2 x i8] c"UV"
@__str$3a8 = private global [5 x i8] c"Color"
@__str$3a9 = private global [5 x i8] c"Color"
@__str$3aa = private global [8 x i8] c"Position"
@__str$3ab = private global [2 x i8] c"UV"
@__str$3ac = private global [5 x i8] c"Color"
@__str$3ad = private global [8 x i8] c"Position"
@__str$3ae = private global [2 x i8] c"UV"
@__str$3af = private global [5 x i8] c"Color"
@__str$3b0 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b1 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b2 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b3 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b4 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b5 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b6 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b7 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3b8 = private global [7 x i8] c"Texture"
@__str$3b9 = private global [7 x i8] c"ProjMtx"
@__str$3ba = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3bb = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3bc = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3bd = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3be = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3bf = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c0 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c1 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c2 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c3 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c4 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjimgui.odin"
@__str$3c5 = private global [14 x i8] c"xinput1_4.dll\00"
@__str$3c6 = private global [14 x i8] c"xinput1_3.dll\00"
@__str$3c7 = private global [16 x i8] c"xinput9_1_0.dll\00"
@__str$3c8 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cxinput.odin"
@__str$3c9 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cxinput.odin"
@__str$3ca = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cxinput.odin"
@__str$3cb = private global [12 x i8] c"XInputEnable"
@__str$3cc = private global [27 x i8] c"XInputGetBatteryInformation"
@__str$3cd = private global [21 x i8] c"XInputGetCapabilities"
@__str$3ce = private global [18 x i8] c"XInputGetKeystroke"
@__str$3cf = private global [14 x i8] c"XInputGetState"
@__str$3d0 = private global [14 x i8] c"XInputSetState"
@__str$3d1 = private global [4 x i8] c"View"
@__str$3d2 = private global [4 x i8] c"Proj"
@__str$3d3 = private global [4 x i8] c"View"
@__str$3d4 = private global [4 x i8] c"Proj"
@__str$3d5 = private global [5 x i8] c"Color"
@__str$3d6 = private global [4 x i8] c"View"
@__str$3d7 = private global [4 x i8] c"Proj"
@__str$3d8 = private global [5 x i8] c"Model"
@__str$3d9 = private global [10 x i8] c"basic_vert"
@__str$3da = private global [10 x i8] c"basic_frag"
@__str$3db = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3dc = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3dd = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3de = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3df = private global [5 x i8] c"Model"
@__str$3e0 = private global [5 x i8] c"Model"
@__str$3e1 = private global [4 x i8] c"View"
@__str$3e2 = private global [4 x i8] c"View"
@__str$3e3 = private global [4 x i8] c"Proj"
@__str$3e4 = private global [4 x i8] c"Proj"
@__str$3e5 = private global [5 x i8] c"Color"
@__str$3e6 = private global [5 x i8] c"Color"
@__str$3e7 = private global [7 x i8] c"VertPos"
@__str$3e8 = private global [7 x i8] c"VertPos"
@__str$3e9 = private global [7 x i8] c"VertPos"
@__str$3ea = private global [7 x i8] c"VertPos"
@__str$3eb = private global [9 x i8] c"out_color"
@__str$3ec = private global [9 x i8] c"test_vert"
@__str$3ed = private global [9 x i8] c"test_frag"
@__str$3ee = private global [20 x i8] c"towerDefense_tile162"
@__str$3ef = private global [20 x i8] c"towerDefense_tile162"
@__str$3f0 = private global [4 x i8] c"back"
@__str$3f1 = private global [6 x i8] c"cursor"
@__str$3f2 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f3 = private global [32 x i8] c"FUCK\20COULDN\27T\20FIND\20YA\20SHADERS\20M8"
@__str$3f4 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f5 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f6 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f7 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f8 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3f9 = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3fa = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3fb = private global [28 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crender.odin"
@__str$3fc = private global [5 x i8] c"Model"
@__str$3fd = private global [5 x i8] c"Model"
@__str$3fe = private global [4 x i8] c"View"
@__str$3ff = private global [4 x i8] c"View"
@__str$400 = private global [4 x i8] c"Proj"
@__str$401 = private global [4 x i8] c"Proj"
@__str$402 = private global [8 x i8] c"Position"
@__str$403 = private global [8 x i8] c"Position"
@__str$404 = private global [2 x i8] c"UV"
@__str$405 = private global [2 x i8] c"UV"
@__str$406 = private global [8 x i8] c"Position"
@__str$407 = private global [2 x i8] c"UV"
@__str$408 = private global [8 x i8] c"Position"
@__str$409 = private global [2 x i8] c"UV"
@__str$40a = private global [8 x i8] c"OutColor"
@__str$40b = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$40c = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$40d = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$40e = private global [1 x i8] c"\2F"
@__str$40f = private global [4 x i8] c"\25s\25s"
@__str$410 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$411 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$412 = private global [1 x i8] c"\2A"
@__str$413 = private global [2 x i8] c"\5C\2A"
@__str$414 = private global [4 x i8] c"\25s\25s"
@__str$415 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$416 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$417 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$418 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$419 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$41a = private global [4 x i8] c"FUCK"
@__str$41b = private global [3 x i8] c".vs"
@__str$41c = private global [6 x i8] c".glslv"
@__str$41d = private global [5 x i8] c".vert"
@__str$41e = private global [3 x i8] c".fs"
@__str$41f = private global [5 x i8] c".frag"
@__str$420 = private global [6 x i8] c".glslf"
@__str$421 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$422 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$423 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$424 = private global [36 x i8] c"Can\27t\20load\20asset\20of\20type\3A\20\25T\2C\20yet..."
@__str$425 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$426 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$427 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$428 = private global [1 x i8] c"."
@__str$429 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$42a = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$42b = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Ccatalog.odin"
@__str$42c = private global [4 x i8] c"\25s\25s"
@__str$42d = private global [9 x i8] c"\5BError\5D\3A\20"
@__str$42e = private global [4 x i8] c"\5C\5C\3A\20"
@__str$42f = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$430 = private global [4 x i8] c"\25s\25s"
@__str$431 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$432 = private global [3 x i8] c"\25s\0A"
@__str$433 = private global [20 x i8] c"Available\20Commands\3A\20"
@__str$434 = private global [3 x i8] c"\09\25s"
@__str$435 = private global [3 x i8] c"Log"
@__str$436 = private global [5 x i8] c"Items"
@__str$437 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$438 = private global [9 x i8] c"\5BError\5D\3A\20"
@__str$439 = private global [19 x i8] c"\5B\252d\3A\252d\3A\252d-\253d\5D\25s"
@__str$43a = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$43b = private global [4 x i8] c"\5C\5C\3A\20"
@__str$43c = private global [19 x i8] c"\5B\252d\3A\252d\3A\252d-\253d\5D\25s"
@__str$43d = private global [19 x i8] c"\5B\252d\3A\252d\3A\252d-\253d\5D\25s"
@__str$43e = private global [7 x i8] c"Console"
@__str$43f = private global [4 x i8] c"Misc"
@__str$440 = private global [8 x i8] c"Show\20Log"
@__str$441 = private global [13 x i8] c"ShowLogWindow"
@__str$442 = private global [5 x i8] c"Clear"
@__str$443 = private global [6 x i8] c"Buffer"
@__str$444 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$445 = private global [9 x i8] c"\5BError\5D\3A\20"
@__str$446 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$447 = private global [4 x i8] c"\5C\5C\3A\20"
@__str$448 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$449 = private global [5 x i8] c"Input"
@__str$44a = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$44b = private global [5 x i8] c"Enter"
@__str$44c = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$44d = private global [34 x i8] c"Items\3A\20\25d\20\7C\20History\3A\20\25d\20\7C\20Log\20\3A\20\25d"
@__str$44e = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$44f = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$450 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$451 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$452 = private global [19 x i8] c"\25s\20is\20not\20a\20command"
@__str$453 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$454 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$455 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$456 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$457 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$458 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$459 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$45a = private global [2 x i8] c"\25s"
@__str$45b = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$45c = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$45d = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cconsole.odin"
@__str$45e = private global [10 x i8] c"Slow\20Tower"
@__str$45f = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$460 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$461 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$462 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$463 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$464 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$465 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$466 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$467 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$468 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$469 = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$46a = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$46b = private global [27 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cinput.odin"
@__str$46c = private global [8 x i8] c"CameraUp"
@__str$46d = private global [10 x i8] c"CameraLeft"
@__str$46e = private global [11 x i8] c"CameraRight"
@__str$46f = private global [10 x i8] c"CameraDown"
@__str$470 = private global [12 x i8] c"CameraZoomIn"
@__str$471 = private global [13 x i8] c"CameraZoomOut"
@__str$472 = private global [8 x i8] c"CameraUp"
@__str$473 = private global [10 x i8] c"CameraLeft"
@__str$474 = private global [11 x i8] c"CameraRight"
@__str$475 = private global [10 x i8] c"CameraDown"
@__str$476 = private global [12 x i8] c"CameraZoomIn"
@__str$477 = private global [13 x i8] c"CameraZoomOut"
@__str$478 = private global [20 x i8] c"towerDefense_tile162"
@__str$479 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$47a = private global [20 x i8] c"towerDefense_tile158"
@__str$47b = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$47c = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$47d = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$47e = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$47f = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$480 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$481 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$482 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$483 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$484 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$485 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$486 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjmap.odin"
@__str$487 = private global [9 x i8] c"test_vert"
@__str$488 = private global [9 x i8] c"test_frag"
@__str$489 = private global [30 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crenderer.odin"
@__str$48a = private global [32 x i8] c"Couldn\27t\20find\20the\20Bitmap\20shaders"
@__str$48b = private global [30 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crenderer.odin"
@__str$48c = private global [30 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crenderer.odin"
@__str$48d = private global [30 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crenderer.odin"
@__str$48e = private global [30 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Crenderer.odin"
@__str$48f = private global [5 x i8] c"Model"
@__str$490 = private global [5 x i8] c"Model"
@__str$491 = private global [4 x i8] c"View"
@__str$492 = private global [4 x i8] c"View"
@__str$493 = private global [4 x i8] c"Proj"
@__str$494 = private global [4 x i8] c"Proj"
@__str$495 = private global [8 x i8] c"Position"
@__str$496 = private global [8 x i8] c"Position"
@__str$497 = private global [2 x i8] c"UV"
@__str$498 = private global [2 x i8] c"UV"
@__str$499 = private global [8 x i8] c"Position"
@__str$49a = private global [2 x i8] c"UV"
@__str$49b = private global [8 x i8] c"Position"
@__str$49c = private global [2 x i8] c"UV"
@__str$49d = private global [8 x i8] c"OutColor"
@__str$49e = private global [4 x i8] c"View"
@__str$49f = private global [4 x i8] c"Proj"
@__str$4a0 = private global [5 x i8] c"Model"
@__str$4a1 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjwgl.odin"
@__str$4a2 = private global [10 x i8] c"res\20\21\3D\20nil"
@__str$4a3 = private global [26 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cjwgl.odin"
@__str$4a4 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4a5 = private global [2 x i8] c"\25s"
@__str$4a6 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4a7 = private global [6 x i8] c"RAWPTR"
@__str$4a8 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4a9 = private global [10 x i8] c"Show\20Value"
@__str$4aa = private global [6 x i8] c"\25s\23\23\25s"
@__str$4ab = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4ac = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4ad = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4ae = private global [2 x i8] c"\25v"
@__str$4af = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4b0 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4b1 = private global [2 x i8] c"\25t"
@__str$4b2 = private global [11 x i8] c"Entity\20List"
@__str$4b3 = private global [8 x i8] c"Entities"
@__str$4b4 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$4b5 = private global [6 x i8] c"\25s\28\25d\29"
@__str$4b6 = private global [6 x i8] c"Entity"
@__str$4b7 = private global [8 x i8] c"GUID\3A\20\25v"
@__str$4b8 = private global [8 x i8] c"Name\3A\20\25v"
@__str$4b9 = private global [9 x i8] c"Match\3A\20\25d"
@__str$4ba = private global [9 x i8] c"Match\3A\20\25d"
@__str$4bb = private global [9 x i8] c"Match\3A\20\25d"
@__str$4bc = private global [12 x i8] c"Entities\3A\20\25d"
@__str$4bd = private global [9 x i8] c"Transform"
@__str$4be = private global [12 x i8] c"Position\3A\20\25v"
@__str$4bf = private global [9 x i8] c"Scale\3A\20\25v"
@__str$4c0 = private global [12 x i8] c"Rotation\3A\20\25v"
@__str$4c1 = private global [10 x i8] c"Damage\3A\20\25v"
@__str$4c2 = private global [16 x i8] c"Attack\20Speed\3A\20\25v"
@__str$4c3 = private global [11 x i8] c"Texture\3A\20\25v"
@__str$4c4 = private global [12 x i8] c"Texture\3A\20N\2FA"
@__str$4c5 = private global [13 x i8] c"Slow\20Rate\3A\20\25v"
@__str$4c6 = private global [19 x i8] c"Debug\20Window\20States"
@__str$4c7 = private global [24 x i8] c"Chosen\20Catalog\20Index\3A\20\25d"
@__str$4c8 = private global [33 x i8] c"Texture\20Preview\20Sixe\3A\20\3C\25.2f\2C\25.2f\3E"
@__str$4c9 = private global [24 x i8] c"Texture\20Show\20ID\3A\20\20\20\20\20\20\25d"
@__str$4ca = private global [13 x i8] c"Window\20States"
@__str$4cb = private global [2 x i8] c"\25s"
@__str$4cc = private global [2 x i8] c"\25t"
@__str$4cd = private global [12 x i8] c"Stat\20Overlay"
@__str$4ce = private global [26 x i8] c"Framerate\3A\20\25.1ffps\20\28\25fms\29\20"
@__str$4cf = private global [15 x i8] c"Loaded\20Textures"
@__str$4d0 = private global [13 x i8] c"Preview\20Size\3A"
@__str$4d1 = private global [4 x i8] c"\25.0f"
@__str$4d2 = private global [6 x i8] c"ID\3A\20\25d"
@__str$4d3 = private global [12 x i8] c"Texture\20View"
@__str$4d4 = private global [11 x i8] c"OpenGL\20Info"
@__str$4d5 = private global [9 x i8] c"Versions\3A"
@__str$4d6 = private global [14 x i8] c"Highest\3A\20\25d.\25d"
@__str$4d7 = private global [14 x i8] c"Current\3A\20\25d.\25d"
@__str$4d8 = private global [11 x i8] c"GLSL\3A\20\20\20\20\25s"
@__str$4d9 = private global [16 x i8] c"Lib\20Address\200x\25x"
@__str$4da = private global [12 x i8] c"Vendor\3A\20\20\20\25s"
@__str$4db = private global [12 x i8] c"Render\3A\20\20\20\25s"
@__str$4dc = private global [12 x i8] c"CtxFlags\3A\20\25d"
@__str$4dd = private global [30 x i8] c"Number\20of\20extensions\3A\20\20\20\20\20\20\20\25d"
@__str$4de = private global [9 x i8] c"View\23\23Ext"
@__str$4df = private global [20 x i8] c"OpenGLShowExtensions"
@__str$4e0 = private global [30 x i8] c"Number\20of\20WGL\20extensions\3A\20\20\20\25d"
@__str$4e1 = private global [9 x i8] c"View\23\23WGL"
@__str$4e2 = private global [23 x i8] c"OpenGLShowWGLExtensions"
@__str$4e3 = private global [29 x i8] c"Number\20of\20loaded\20textures\3A\20\25d"
@__str$4e4 = private global [13 x i8] c"View\23\23Texture"
@__str$4e5 = private global [21 x i8] c"ShowGLTextureOverview"
@__str$4e6 = private global [33 x i8] c"Number\20of\20functions\20loaded\3A\20\25d\2F\25d"
@__str$4e7 = private global [16 x i8] c"Loaded\20Functions"
@__str$4e8 = private global [20 x i8] c"Functions\23\23\23FuncLoad"
@__str$4e9 = private global [4 x i8] c"true"
@__str$4ea = private global [5 x i8] c"false"
@__str$4eb = private global [10 x i8] c"Loaded\3A\20\25s"
@__str$4ec = private global [20 x i8] c"OpenGLShowExtensions"
@__str$4ed = private global [20 x i8] c"OpenGLShowExtensions"
@__str$4ee = private global [15 x i8] c"Extensions\23\23Ext"
@__str$4ef = private global [20 x i8] c"OpenGLShowExtensions"
@__str$4f0 = private global [23 x i8] c"OpenGLShowWGLExtensions"
@__str$4f1 = private global [23 x i8] c"OpenGLShowWGLExtensions"
@__str$4f2 = private global [14 x i8] c"WGL\20Extensions"
@__str$4f3 = private global [23 x i8] c"OpenGLShowWGLExtensions"
@__str$4f4 = private global [21 x i8] c"ShowGLTextureOverview"
@__str$4f5 = private global [11 x i8] c"Gamepad\20\25d\28"
@__str$4f6 = private global [9 x i8] c"Connected"
@__str$4f7 = private global [13 x i8] c"Not\20Connected"
@__str$4f8 = private global [2 x i8] c"\25s"
@__str$4f9 = private global [2 x i8] c"\29\3A"
@__str$4fa = private global [11 x i8] c"XInput\20Info"
@__str$4fb = private global [11 x i8] c"Version\3A\20\25s"
@__str$4fc = private global [17 x i8] c"Lib\20Address\3A\200x\25x"
@__str$4fd = private global [33 x i8] c"Number\20of\20functions\20loaded\3A\20\25d\2F\25d"
@__str$4fe = private global [16 x i8] c"Loaded\20Functions"
@__str$4ff = private global [9 x i8] c"Functions"
@__str$500 = private global [17 x i8] c"Loaded\3A\20\25t\20\40\200x\25x"
@__str$501 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$502 = private global [12 x i8] c"Capabilites\3A"
@__str$503 = private global [10 x i8] c"Subtype\20\25s"
@__str$504 = private global [6 x i8] c"Flags\3A"
@__str$505 = private global [17 x i8] c"Voice\3A\20\20\20\20\20\20\20\20\20\25t"
@__str$506 = private global [17 x i8] c"FFB\3A\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$507 = private global [17 x i8] c"Wireless\3A\20\20\20\20\20\20\25t"
@__str$508 = private global [17 x i8] c"PMD\3A\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$509 = private global [17 x i8] c"NoNavigations\3A\20\25t"
@__str$50a = private global [20 x i8] c"Battery\20Information\3A"
@__str$50b = private global [3 x i8] c"N\2FA"
@__str$50c = private global [17 x i8] c"Battery\20Type\3A\20\20\25s"
@__str$50d = private global [3 x i8] c"N\2FA"
@__str$50e = private global [17 x i8] c"Battery\20Level\3A\20\25s"
@__str$50f = private global [12 x i8] c"XInput\20State"
@__str$510 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$511 = private global [14 x i8] c"Button\20States\3A"
@__str$512 = private global [17 x i8] c"DpadUp\3A\20\20\20\20\20\20\20\20\25t"
@__str$513 = private global [17 x i8] c"DpadDown\3A\20\20\20\20\20\20\25t"
@__str$514 = private global [17 x i8] c"DpadLeft\3A\20\20\20\20\20\20\25t"
@__str$515 = private global [17 x i8] c"DpadRight\3A\20\20\20\20\20\25t"
@__str$516 = private global [17 x i8] c"Start\3A\20\20\20\20\20\20\20\20\20\25t"
@__str$517 = private global [17 x i8] c"Back\3A\20\20\20\20\20\20\20\20\20\20\25t"
@__str$518 = private global [17 x i8] c"LeftThumb\3A\20\20\20\20\20\25t"
@__str$519 = private global [17 x i8] c"RightThumb\3A\20\20\20\20\25t"
@__str$51a = private global [17 x i8] c"LeftShoulder\3A\20\20\25t"
@__str$51b = private global [17 x i8] c"RightShoulder\3A\20\25t"
@__str$51c = private global [17 x i8] c"A\3A\20\20\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$51d = private global [17 x i8] c"B\3A\20\20\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$51e = private global [17 x i8] c"X\3A\20\20\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$51f = private global [17 x i8] c"Y\3A\20\20\20\20\20\20\20\20\20\20\20\20\20\25t"
@__str$520 = private global [15 x i8] c"Trigger\20States\3A"
@__str$521 = private global [25 x i8] c"Left\20Trigger\3A\20\20\25d\28\25.1f\25\25\29"
@__str$522 = private global [25 x i8] c"Right\20Trigger\3A\20\25d\28\25.1f\25\25\29"
@__str$523 = private global [13 x i8] c"Stick\20States\3A"
@__str$524 = private global [21 x i8] c"Left\20Stick\3A\20\20\3C\25d\2C\20\25d\3E"
@__str$525 = private global [21 x i8] c"Right\20Stick\3A\20\3C\25d\2C\20\25d\3E"
@__str$526 = private global [8 x i8] c"Catalogs"
@__str$527 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$528 = private global [7 x i8] c"Catalog"
@__str$529 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$52a = private global [19 x i8] c"Folder\20Path\3A\20\20\20\20\20\25s"
@__str$52b = private global [19 x i8] c"Kind\3A\20\20\20\20\20\20\20\20\20\20\20\20\25v"
@__str$52c = private global [21 x i8] c"Accepted\20Extensions\3A\20"
@__str$52d = private global [5 x i8] c"Files"
@__str$52e = private global [19 x i8] c"No.\20of\20files\3A\20\25d\2F\25d"
@__str$52f = private global [24 x i8] c"In\20Memory\3A\20\25.2fKB\2F\25.2fKB"
@__str$530 = private global [8 x i8] c"\5BLoaded\5D"
@__str$531 = private global [5 x i8] c"\25s\20\25s"
@__str$532 = private global [8 x i8] c"\5BLoaded\5D"
@__str$533 = private global [3 x i8] c"\20\25s"
@__str$534 = private global [10 x i8] c"\5BUploaded\5D"
@__str$535 = private global [2 x i8] c"\25s"
@__str$536 = private global [15 x i8] c"Path\3A\20\20\20\20\20\20\20\20\25s"
@__str$537 = private global [19 x i8] c"Disk\20Size\3A\20\20\20\25.2fKB"
@__str$538 = private global [15 x i8] c"ID\3A\20\20\20\20\20\20\20\20\20\20\25d"
@__str$539 = private global [18 x i8] c"Size\3A\20\20\20\20\20\20\20\20\25dx\25d"
@__str$53a = private global [15 x i8] c"Comp\3A\20\20\20\20\20\20\20\20\25d"
@__str$53b = private global [15 x i8] c"ID\3A\20\20\20\20\20\20\20\20\20\20\25d"
@__str$53c = private global [15 x i8] c"Type\3A\20\20\20\20\20\20\20\20\25v"
@__str$53d = private global [25 x i8] c"Input\23\23TESTIUYHSEIFUSEYGF"
@__str$53e = private global [2 x i8] c"ID"
@__str$53f = private global [3 x i8] c"Key"
@__str$540 = private global [13 x i8] c"Xinput\20Button"
@__str$541 = private global [5 x i8] c"State"
@__str$542 = private global [2 x i8] c"\25v"
@__str$543 = private global [2 x i8] c"\25v"
@__str$544 = private global [2 x i8] c"\25v"
@__str$545 = private global [2 x i8] c"\25v"
@__str$546 = private global [18 x i8] c"No\20bindings\20found\21"
@__str$547 = private global [3 x i8] c"N\2FA"
@__str$548 = private global [3 x i8] c"N\2FA"
@__str$549 = private global [3 x i8] c"N\2FA"
@__str$54a = private global [10 x i8] c"Key\20states"
@__str$54b = private global [9 x i8] c"Down\20Held"
@__str$54c = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$54d = private global [10 x i8] c"Up\20Neutral"
@__str$54e = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$54f = private global [3 x i8] c"Key"
@__str$550 = private global [5 x i8] c"State"
@__str$551 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$552 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$553 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$554 = private global [2 x i8] c"\25v"
@__str$555 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$556 = private global [2 x i8] c"\25v"
@__str$557 = private global [3 x i8] c"Key"
@__str$558 = private global [5 x i8] c"State"
@__str$559 = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$55a = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$55b = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$55c = private global [2 x i8] c"\25v"
@__str$55d = private global [35 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cdebug_windows.odin"
@__str$55e = private global [2 x i8] c"\25v"
@__str$55f = private global [17 x i8] c"ShowConsoleWindow"
@__str$560 = private global [10 x i8] c"jaze_class"
@__str$561 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$562 = private global [36 x i8] c"Could\20not\20register\20main\20window\20class"
@__str$563 = private global [18 x i8] c"Jaze\20-\20DEV\20VERSION"
@__str$564 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$565 = private global [28 x i8] c"Could\20not\20create\20main\20window"
@__str$566 = private global [6 x i8] c"STATIC"
@__str$567 = private global [22 x i8] c"OpenGL\20Version\20Checker"
@__str$568 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$569 = private global [46 x i8] c"Could\20not\20create\20opengl\20version\20checker\20window"
@__str$56a = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$56b = private global [50 x i8] c"Could\20not\20get\20DC\20for\20opengl\20version\20checker\20window"
@__str$56c = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$56d = private global [62 x i8] c"Could\20not\20get\20OpenGL\20Context\20for\20opengl\20version\20checker\20window"
@__str$56e = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$56f = private global [10 x i8] c"ctx\20\21\3D\20nil"
@__str$570 = private global [6 x i8] c"STATIC"
@__str$571 = private global [13 x i8] c"OpenGL\20Loader"
@__str$572 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$573 = private global [37 x i8] c"Could\20not\20create\20opengl\20loader\20window"
@__str$574 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$575 = private global [12 x i8] c"wndDc\20\21\3D\20nil"
@__str$576 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$577 = private global [13 x i8] c"oldCtx\20\21\3D\20nil"
@__str$578 = private global [23 x i8] c"wglChoosePixelFormatARB"
@__str$579 = private global [26 x i8] c"wglCreateContextAttribsARB"
@__str$57a = private global [25 x i8] c"wglGetExtensionsStringARB"
@__str$57b = private global [18 x i8] c"wglSwapIntervalEXT"
@__str$57c = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$57d = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$57e = private global [35 x i8] c"Couldn\27t\20find\20suitable\20pixel\20format"
@__str$57f = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$580 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$581 = private global [10 x i8] c"ctx\20\21\3D\20nil"
@__str$582 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$583 = private global [36 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cplatform_win32.odin"
@__str$584 = private global [28 x i8] c"E\3A\5COdin\5Ccore\5Cos_windows.odin"
@__str$585 = private global [28 x i8] c"E\3A\5COdin\5Ccore\5Cos_windows.odin"
@__str$586 = private global [28 x i8] c"E\3A\5COdin\5Ccore\5Cos_windows.odin"
@__str$587 = private global [28 x i8] c"E\3A\5COdin\5Ccore\5Cos_windows.odin"
@__str$588 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$589 = private global [25 x i8] c"strconv\3A\20invalid\20bit_size"
@__str$58a = private global [3 x i8] c"NaN"
@__str$58b = private global [4 x i8] c"-Inf"
@__str$58c = private global [4 x i8] c"\2BInf"
@__str$58d = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$58e = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$58f = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$590 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$591 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$592 = private global [48 x i8] c"strconv\3A\20e\2FE\20float\20printing\20is\20not\20yet\20supported"
@__str$593 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$594 = private global [48 x i8] c"strconv\3A\20g\2FG\20float\20printing\20is\20not\20yet\20supported"
@__str$595 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$596 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$597 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$598 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$599 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$59a = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$59b = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$59c = private global [41 x i8] c"is_integer_negative\3A\20Unknown\20integer\20size"
@__str$59d = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$59e = private global [43 x i8] c"strconv\3A\20illegal\20base\20passed\20to\20append_bits"
@__str$59f = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a0 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a1 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a2 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a3 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a4 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a5 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a6 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a7 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a8 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5a9 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5aa = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5ab = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5ac = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cstrconv.odin"
@__str$5ad = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl_util.odin"
@__str$5ae = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl_util.odin"
@__str$5af = private global [27 x i8] c"------\20Shader\20Error\28\25s\29\20---"
@__str$5b0 = private global [29 x i8] c"E\3A\5CRepo\5CJaze\5Csrc\5Cgl_util.odin"
@__str$5b1 = private global [26 x i8] c"--------------------------"
@__str$5b2 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b3 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b4 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b5 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b6 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b7 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b8 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5b9 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5ba = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5bb = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5bc = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5bd = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5be = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5bf = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5c0 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5c1 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5c2 = private global [25 x i8] c"E\3A\5COdin\5Ccore\5Cdecimal.odin"
@__str$5c3 = private global [5 x i8] c"Named"
@__str$5c4 = private global [4 x i8] c"size"
@__str$5c5 = private global [5 x i8] c"align"
@__str$5c6 = private global [4 x i8] c"name"
@__str$5c7 = private global [4 x i8] c"base"
@__str$5c8 = private global [9 x i8] c"Type_Info"
@__str$5c9 = private global [4 x i8] c"size"
@__str$5ca = private global [5 x i8] c"align"
@__str$5cb = private global [5 x i8] c"Named"
@__str$5cc = private global [7 x i8] c"Integer"
@__str$5cd = private global [5 x i8] c"Float"
@__str$5ce = private global [7 x i8] c"Complex"
@__str$5cf = private global [10 x i8] c"Quaternion"
@__str$5d0 = private global [6 x i8] c"String"
@__str$5d1 = private global [7 x i8] c"Boolean"
@__str$5d2 = private global [3 x i8] c"Any"
@__str$5d3 = private global [7 x i8] c"Pointer"
@__str$5d4 = private global [6 x i8] c"Atomic"
@__str$5d5 = private global [9 x i8] c"Procedure"
@__str$5d6 = private global [5 x i8] c"Array"
@__str$5d7 = private global [13 x i8] c"Dynamic_Array"
@__str$5d8 = private global [5 x i8] c"Slice"
@__str$5d9 = private global [6 x i8] c"Vector"
@__str$5da = private global [5 x i8] c"Tuple"
@__str$5db = private global [6 x i8] c"Struct"
@__str$5dc = private global [9 x i8] c"Raw_Union"
@__str$5dd = private global [5 x i8] c"Union"
@__str$5de = private global [4 x i8] c"Enum"
@__str$5df = private global [3 x i8] c"Map"
@__str$5e0 = private global [7 x i8] c"Integer"
@__str$5e1 = private global [4 x i8] c"size"
@__str$5e2 = private global [5 x i8] c"align"
@__str$5e3 = private global [6 x i8] c"signed"
@__str$5e4 = private global [5 x i8] c"Float"
@__str$5e5 = private global [4 x i8] c"size"
@__str$5e6 = private global [5 x i8] c"align"
@__str$5e7 = private global [7 x i8] c"Complex"
@__str$5e8 = private global [4 x i8] c"size"
@__str$5e9 = private global [5 x i8] c"align"
@__str$5ea = private global [10 x i8] c"Quaternion"
@__str$5eb = private global [4 x i8] c"size"
@__str$5ec = private global [5 x i8] c"align"
@__str$5ed = private global [6 x i8] c"String"
@__str$5ee = private global [4 x i8] c"size"
@__str$5ef = private global [5 x i8] c"align"
@__str$5f0 = private global [7 x i8] c"Boolean"
@__str$5f1 = private global [4 x i8] c"size"
@__str$5f2 = private global [5 x i8] c"align"
@__str$5f3 = private global [3 x i8] c"Any"
@__str$5f4 = private global [4 x i8] c"size"
@__str$5f5 = private global [5 x i8] c"align"
@__str$5f6 = private global [7 x i8] c"Pointer"
@__str$5f7 = private global [4 x i8] c"size"
@__str$5f8 = private global [5 x i8] c"align"
@__str$5f9 = private global [4 x i8] c"elem"
@__str$5fa = private global [6 x i8] c"Atomic"
@__str$5fb = private global [4 x i8] c"size"
@__str$5fc = private global [5 x i8] c"align"
@__str$5fd = private global [4 x i8] c"elem"
@__str$5fe = private global [9 x i8] c"Procedure"
@__str$5ff = private global [4 x i8] c"size"
@__str$600 = private global [5 x i8] c"align"
@__str$601 = private global [6 x i8] c"params"
@__str$602 = private global [7 x i8] c"results"
@__str$603 = private global [8 x i8] c"variadic"
@__str$604 = private global [10 x i8] c"convention"
@__str$605 = private global [18 x i8] c"Calling_Convention"
@__str$606 = private global [4 x i8] c"ODIN"
@__str$607 = private global [1 x i8] c"C"
@__str$608 = private global [3 x i8] c"STD"
@__str$609 = private global [4 x i8] c"FAST"
@__str$60a = private global [5 x i8] c"Array"
@__str$60b = private global [4 x i8] c"size"
@__str$60c = private global [5 x i8] c"align"
@__str$60d = private global [4 x i8] c"elem"
@__str$60e = private global [9 x i8] c"elem_size"
@__str$60f = private global [5 x i8] c"count"
@__str$610 = private global [13 x i8] c"Dynamic_Array"
@__str$611 = private global [4 x i8] c"size"
@__str$612 = private global [5 x i8] c"align"
@__str$613 = private global [4 x i8] c"elem"
@__str$614 = private global [9 x i8] c"elem_size"
@__str$615 = private global [5 x i8] c"Slice"
@__str$616 = private global [4 x i8] c"size"
@__str$617 = private global [5 x i8] c"align"
@__str$618 = private global [4 x i8] c"elem"
@__str$619 = private global [9 x i8] c"elem_size"
@__str$61a = private global [6 x i8] c"Vector"
@__str$61b = private global [4 x i8] c"size"
@__str$61c = private global [5 x i8] c"align"
@__str$61d = private global [4 x i8] c"elem"
@__str$61e = private global [9 x i8] c"elem_size"
@__str$61f = private global [5 x i8] c"count"
@__str$620 = private global [5 x i8] c"Tuple"
@__str$621 = private global [4 x i8] c"size"
@__str$622 = private global [5 x i8] c"align"
@__str$623 = private global [6 x i8] c"record"
@__str$624 = private global [16 x i8] c"Type_Info_Record"
@__str$625 = private global [5 x i8] c"types"
@__str$626 = private global [5 x i8] c"names"
@__str$627 = private global [7 x i8] c"offsets"
@__str$628 = private global [6 x i8] c"usings"
@__str$629 = private global [6 x i8] c"packed"
@__str$62a = private global [7 x i8] c"ordered"
@__str$62b = private global [12 x i8] c"custom_align"
@__str$62c = private global [6 x i8] c"Struct"
@__str$62d = private global [4 x i8] c"size"
@__str$62e = private global [5 x i8] c"align"
@__str$62f = private global [6 x i8] c"record"
@__str$630 = private global [9 x i8] c"Raw_Union"
@__str$631 = private global [4 x i8] c"size"
@__str$632 = private global [5 x i8] c"align"
@__str$633 = private global [6 x i8] c"record"
@__str$634 = private global [5 x i8] c"Union"
@__str$635 = private global [4 x i8] c"size"
@__str$636 = private global [5 x i8] c"align"
@__str$637 = private global [13 x i8] c"common_fields"
@__str$638 = private global [13 x i8] c"variant_names"
@__str$639 = private global [13 x i8] c"variant_types"
@__str$63a = private global [5 x i8] c"types"
@__str$63b = private global [5 x i8] c"names"
@__str$63c = private global [7 x i8] c"offsets"
@__str$63d = private global [4 x i8] c"Enum"
@__str$63e = private global [4 x i8] c"size"
@__str$63f = private global [5 x i8] c"align"
@__str$640 = private global [4 x i8] c"base"
@__str$641 = private global [5 x i8] c"names"
@__str$642 = private global [6 x i8] c"values"
@__str$643 = private global [20 x i8] c"Type_Info_Enum_Value"
@__str$644 = private global [1 x i8] c"f"
@__str$645 = private global [1 x i8] c"i"
@__str$646 = private global [3 x i8] c"Map"
@__str$647 = private global [4 x i8] c"size"
@__str$648 = private global [5 x i8] c"align"
@__str$649 = private global [3 x i8] c"key"
@__str$64a = private global [5 x i8] c"value"
@__str$64b = private global [16 x i8] c"generated_struct"
@__str$64c = private global [5 x i8] c"count"
@__str$64d = private global [11 x i8] c"DebugSource"
@__str$64e = private global [3 x i8] c"Api"
@__str$64f = private global [12 x i8] c"WindowSystem"
@__str$650 = private global [14 x i8] c"ShaderCompiler"
@__str$651 = private global [10 x i8] c"ThirdParty"
@__str$652 = private global [11 x i8] c"Application"
@__str$653 = private global [5 x i8] c"Other"
@__str$654 = private global [8 x i8] c"DontCare"
@__str$655 = private global [9 x i8] c"DebugType"
@__str$656 = private global [5 x i8] c"Error"
@__str$657 = private global [18 x i8] c"DeprecatedBehavior"
@__str$658 = private global [17 x i8] c"UndefinedBehavior"
@__str$659 = private global [11 x i8] c"Portability"
@__str$65a = private global [11 x i8] c"Performance"
@__str$65b = private global [6 x i8] c"Marker"
@__str$65c = private global [9 x i8] c"PushGroup"
@__str$65d = private global [8 x i8] c"PopGroup"
@__str$65e = private global [5 x i8] c"Other"
@__str$65f = private global [8 x i8] c"DontCare"
@__str$660 = private global [13 x i8] c"DebugSeverity"
@__str$661 = private global [4 x i8] c"High"
@__str$662 = private global [6 x i8] c"Medium"
@__str$663 = private global [3 x i8] c"Low"
@__str$664 = private global [12 x i8] c"Notification"
@__str$665 = private global [8 x i8] c"DontCare"
@__str$666 = private global [4 x i8] c"mode"
@__str$667 = private global [5 x i8] c"count"
@__str$668 = private global [5 x i8] c"type_"
@__str$669 = private global [7 x i8] c"indices"
@__str$66a = private global [4 x i8] c"mode"
@__str$66b = private global [5 x i8] c"first"
@__str$66c = private global [5 x i8] c"count"
@__str$66d = private global [6 x i8] c"buffer"
@__str$66e = private global [5 x i8] c"index"
@__str$66f = private global [4 x i8] c"size"
@__str$670 = private global [4 x i8] c"type"
@__str$671 = private global [10 x i8] c"normalized"
@__str$672 = private global [6 x i8] c"stride"
@__str$673 = private global [7 x i8] c"pointer"
@__str$674 = private global [5 x i8] c"index"
@__str$675 = private global [5 x i8] c"count"
@__str$676 = private global [7 x i8] c"buffers"
@__str$677 = private global [6 x i8] c"target"
@__str$678 = private global [4 x i8] c"size"
@__str$679 = private global [4 x i8] c"data"
@__str$67a = private global [5 x i8] c"usage"
@__str$67b = private global [6 x i8] c"target"
@__str$67c = private global [6 x i8] c"buffer"
@__str$67d = private global [1 x i8] c"n"
@__str$67e = private global [6 x i8] c"buffer"
@__str$67f = private global [6 x i8] c"source"
@__str$680 = private global [4 x i8] c"type"
@__str$681 = private global [8 x i8] c"severity"
@__str$682 = private global [5 x i8] c"count"
@__str$683 = private global [3 x i8] c"ids"
@__str$684 = private global [7 x i8] c"enabled"
@__str$685 = private global [8 x i8] c"callback"
@__str$686 = private global [9 x i8] c"userParam"
@__str$687 = private global [24 x i8] c"DebugMessageCallbackProc"
@__str$688 = private global [6 x i8] c"source"
@__str$689 = private global [4 x i8] c"type"
@__str$68a = private global [2 x i8] c"id"
@__str$68b = private global [8 x i8] c"severity"
@__str$68c = private global [6 x i8] c"length"
@__str$68d = private global [7 x i8] c"message"
@__str$68e = private global [9 x i8] c"userParam"
@__str$68f = private global [6 x i8] c"shader"
@__str$690 = private global [5 x i8] c"pname"
@__str$691 = private global [6 x i8] c"params"
@__str$692 = private global [6 x i8] c"shader"
@__str$693 = private global [9 x i8] c"maxLength"
@__str$694 = private global [6 x i8] c"length"
@__str$695 = private global [7 x i8] c"infoLog"
@__str$696 = private global [4 x i8] c"name"
@__str$697 = private global [5 x i8] c"index"
@__str$698 = private global [4 x i8] c"mode"
@__str$699 = private global [7 x i8] c"modeRGB"
@__str$69a = private global [9 x i8] c"modeAlpha"
@__str$69b = private global [6 x i8] c"shader"
@__str$69c = private global [11 x i8] c"shader_type"
@__str$69d = private global [6 x i8] c"shader"
@__str$69e = private global [5 x i8] c"count"
@__str$69f = private global [3 x i8] c"str"
@__str$6a0 = private global [6 x i8] c"length"
@__str$6a1 = private global [7 x i8] c"program"
@__str$6a2 = private global [6 x i8] c"shader"
@__str$6a3 = private global [7 x i8] c"program"
@__str$6a4 = private global [7 x i8] c"program"
@__str$6a5 = private global [7 x i8] c"texture"
@__str$6a6 = private global [3 x i8] c"loc"
@__str$6a7 = private global [2 x i8] c"v0"
@__str$6a8 = private global [3 x i8] c"loc"
@__str$6a9 = private global [2 x i8] c"v0"
@__str$6aa = private global [2 x i8] c"v1"
@__str$6ab = private global [3 x i8] c"loc"
@__str$6ac = private global [2 x i8] c"v0"
@__str$6ad = private global [2 x i8] c"v1"
@__str$6ae = private global [2 x i8] c"v2"
@__str$6af = private global [3 x i8] c"loc"
@__str$6b0 = private global [2 x i8] c"v0"
@__str$6b1 = private global [2 x i8] c"v1"
@__str$6b2 = private global [2 x i8] c"v2"
@__str$6b3 = private global [2 x i8] c"v3"
@__str$6b4 = private global [3 x i8] c"loc"
@__str$6b5 = private global [2 x i8] c"v0"
@__str$6b6 = private global [3 x i8] c"loc"
@__str$6b7 = private global [2 x i8] c"v0"
@__str$6b8 = private global [2 x i8] c"v1"
@__str$6b9 = private global [3 x i8] c"loc"
@__str$6ba = private global [2 x i8] c"v0"
@__str$6bb = private global [2 x i8] c"v1"
@__str$6bc = private global [2 x i8] c"v2"
@__str$6bd = private global [3 x i8] c"loc"
@__str$6be = private global [2 x i8] c"v0"
@__str$6bf = private global [2 x i8] c"v1"
@__str$6c0 = private global [2 x i8] c"v2"
@__str$6c1 = private global [2 x i8] c"v3"
@__str$6c2 = private global [3 x i8] c"loc"
@__str$6c3 = private global [5 x i8] c"count"
@__str$6c4 = private global [9 x i8] c"transpose"
@__str$6c5 = private global [5 x i8] c"value"
@__str$6c6 = private global [7 x i8] c"program"
@__str$6c7 = private global [4 x i8] c"name"
@__str$6c8 = private global [7 x i8] c"program"
@__str$6c9 = private global [4 x i8] c"name"
@__str$6ca = private global [4 x i8] c"face"
@__str$6cb = private global [4 x i8] c"mode"
@__str$6cc = private global [6 x i8] c"target"
@__str$6cd = private global [3 x i8] c"cap"
@__str$6ce = private global [4 x i8] c"func"
@__str$6cf = private global [7 x i8] c"program"
@__str$6d0 = private global [11 x i8] c"colorNumber"
@__str$6d1 = private global [4 x i8] c"name"
@__str$6d2 = private global [4 x i8] c"name"
@__str$6d3 = private global [6 x i8] c"target"
@__str$6d4 = private global [5 x i8] c"level"
@__str$6d5 = private global [15 x i8] c"internal_format"
@__str$6d6 = private global [5 x i8] c"width"
@__str$6d7 = private global [6 x i8] c"height"
@__str$6d8 = private global [6 x i8] c"border"
@__str$6d9 = private global [6 x i8] c"format"
@__str$6da = private global [5 x i8] c"_type"
@__str$6db = private global [4 x i8] c"data"
@__str$6dc = private global [6 x i8] c"target"
@__str$6dd = private global [5 x i8] c"pname"
@__str$6de = private global [5 x i8] c"param"
@__str$6df = private global [6 x i8] c"target"
@__str$6e0 = private global [7 x i8] c"texture"
@__str$6e1 = private global [5 x i8] c"count"
@__str$6e2 = private global [6 x i8] c"result"
@__str$6e3 = private global [7 x i8] c"sfactor"
@__str$6e4 = private global [7 x i8] c"dfactor"
@__str$6e5 = private global [4 x i8] c"name"
@__str$6e6 = private global [1 x i8] c"v"
@__str$6e7 = private global [3 x i8] c"cap"
@__str$6e8 = private global [4 x i8] c"mask"
@__str$6e9 = private global [6 x i8] c"Data_t"
@__str$6ea = private global [9 x i8] c"AppHandle"
@__str$6eb = private global [12 x i8] c"WindowHandle"
@__str$6ec = private global [9 x i8] c"DeviceCtx"
@__str$6ed = private global [3 x i8] c"Ogl"
@__str$6ee = private global [15 x i8] c"WindowPlacement"
@__str$6ef = private global [12 x i8] c"OpenGLVars_t"
@__str$6f0 = private global [3 x i8] c"Ctx"
@__str$6f1 = private global [15 x i8] c"VersionMajorMax"
@__str$6f2 = private global [15 x i8] c"VersionMajorCur"
@__str$6f3 = private global [15 x i8] c"VersionMinorMax"
@__str$6f4 = private global [15 x i8] c"VersionMinorCur"
@__str$6f5 = private global [13 x i8] c"VersionString"
@__str$6f6 = private global [17 x i8] c"GLSLVersionString"
@__str$6f7 = private global [12 x i8] c"VendorString"
@__str$6f8 = private global [14 x i8] c"RendererString"
@__str$6f9 = private global [12 x i8] c"ContextFlags"
@__str$6fa = private global [13 x i8] c"NumExtensions"
@__str$6fb = private global [10 x i8] c"Extensions"
@__str$6fc = private global [16 x i8] c"NumWglExtensions"
@__str$6fd = private global [13 x i8] c"WglExtensions"
@__str$6fe = private global [9 x i8] c"Allocator"
@__str$6ff = private global [9 x i8] c"procedure"
@__str$700 = private global [4 x i8] c"data"
@__str$701 = private global [14 x i8] c"Allocator_Proc"
@__str$702 = private global [14 x i8] c"allocator_data"
@__str$703 = private global [4 x i8] c"mode"
@__str$704 = private global [4 x i8] c"size"
@__str$705 = private global [9 x i8] c"alignment"
@__str$706 = private global [10 x i8] c"old_memory"
@__str$707 = private global [8 x i8] c"old_size"
@__str$708 = private global [5 x i8] c"flags"
@__str$709 = private global [14 x i8] c"Allocator_Mode"
@__str$70a = private global [5 x i8] c"ALLOC"
@__str$70b = private global [4 x i8] c"FREE"
@__str$70c = private global [8 x i8] c"FREE_ALL"
@__str$70d = private global [6 x i8] c"RESIZE"
@__str$70e = private global [5 x i8] c"Hglrc"
@__str$70f = private global [9 x i8] c"AppHandle"
@__str$710 = private global [9 x i8] c"WndHandle"
@__str$711 = private global [3 x i8] c"Hdc"
@__str$712 = private global [16 x i8] c"Window_Placement"
@__str$713 = private global [6 x i8] c"length"
@__str$714 = private global [5 x i8] c"flags"
@__str$715 = private global [8 x i8] c"show_cmd"
@__str$716 = private global [7 x i8] c"min_pos"
@__str$717 = private global [7 x i8] c"max_pos"
@__str$718 = private global [10 x i8] c"normal_pos"
@__str$719 = private global [5 x i8] c"Point"
@__str$71a = private global [1 x i8] c"x"
@__str$71b = private global [1 x i8] c"y"
@__str$71c = private global [4 x i8] c"Rect"
@__str$71d = private global [4 x i8] c"left"
@__str$71e = private global [3 x i8] c"top"
@__str$71f = private global [5 x i8] c"right"
@__str$720 = private global [6 x i8] c"bottom"
@__str$721 = private global [9 x i8] c"Context_t"
@__str$722 = private global [10 x i8] c"EntityList"
@__str$723 = private global [3 x i8] c"Map"
@__str$724 = private global [10 x i8] c"GameCamera"
@__str$725 = private global [4 x i8] c"List"
@__str$726 = private global [5 x i8] c"Front"
@__str$727 = private global [3 x i8] c"End"
@__str$728 = private global [5 x i8] c"Count"
@__str$729 = private global [8 x i8] c"ListItem"
@__str$72a = private global [6 x i8] c"Entity"
@__str$72b = private global [4 x i8] c"Next"
@__str$72c = private global [6 x i8] c"Entity"
@__str$72d = private global [4 x i8] c"GUID"
@__str$72e = private global [4 x i8] c"Name"
@__str$72f = private global [5 x i8] c"Tower"
@__str$730 = private global [5 x i8] c"Enemy"
@__str$731 = private global [5 x i8] c"Tower"
@__str$732 = private global [4 x i8] c"GUID"
@__str$733 = private global [4 x i8] c"Name"
@__str$734 = private global [1 x i8] c"T"
@__str$735 = private global [5 x i8] c"Tower"
@__str$736 = private global [9 x i8] c"Transform"
@__str$737 = private global [6 x i8] c"Damage"
@__str$738 = private global [11 x i8] c"AttackSpeed"
@__str$739 = private global [7 x i8] c"Texture"
@__str$73a = private global [5 x i8] c"Basic"
@__str$73b = private global [4 x i8] c"Slow"
@__str$73c = private global [5 x i8] c"Basic"
@__str$73d = private global [9 x i8] c"Transform"
@__str$73e = private global [6 x i8] c"Damage"
@__str$73f = private global [11 x i8] c"AttackSpeed"
@__str$740 = private global [7 x i8] c"Texture"
@__str$741 = private global [11 x i8] c"Transform_t"
@__str$742 = private global [8 x i8] c"Position"
@__str$743 = private global [5 x i8] c"Scale"
@__str$744 = private global [8 x i8] c"Rotation"
@__str$745 = private global [12 x i8] c"RenderOffset"
@__str$746 = private global [4 x i8] c"Vec3"
@__str$747 = private global [7 x i8] c"Texture"
@__str$748 = private global [8 x i8] c"FileInfo"
@__str$749 = private global [14 x i8] c"LoadedFromDisk"
@__str$74a = private global [4 x i8] c"GLID"
@__str$74b = private global [5 x i8] c"Width"
@__str$74c = private global [6 x i8] c"Height"
@__str$74d = private global [4 x i8] c"Comp"
@__str$74e = private global [4 x i8] c"Data"
@__str$74f = private global [10 x i8] c"FileInfo_t"
@__str$750 = private global [4 x i8] c"Name"
@__str$751 = private global [3 x i8] c"Ext"
@__str$752 = private global [4 x i8] c"Path"
@__str$753 = private global [4 x i8] c"Size"
@__str$754 = private global [7 x i8] c"Texture"
@__str$755 = private global [4 x i8] c"Slow"
@__str$756 = private global [9 x i8] c"Transform"
@__str$757 = private global [6 x i8] c"Damage"
@__str$758 = private global [11 x i8] c"AttackSpeed"
@__str$759 = private global [7 x i8] c"Texture"
@__str$75a = private global [10 x i8] c"SlowFactor"
@__str$75b = private global [5 x i8] c"Enemy"
@__str$75c = private global [4 x i8] c"GUID"
@__str$75d = private global [4 x i8] c"Name"
@__str$75e = private global [9 x i8] c"Transform"
@__str$75f = private global [6 x i8] c"Data_t"
@__str$760 = private global [5 x i8] c"Width"
@__str$761 = private global [6 x i8] c"Height"
@__str$762 = private global [5 x i8] c"Tiles"
@__str$763 = private global [11 x i8] c"WalkTexture"
@__str$764 = private global [12 x i8] c"BuildTexture"
@__str$765 = private global [4 x i8] c"Tile"
@__str$766 = private global [3 x i8] c"Pos"
@__str$767 = private global [5 x i8] c"Build"
@__str$768 = private global [4 x i8] c"Walk"
@__str$769 = private global [5 x i8] c"Build"
@__str$76a = private global [3 x i8] c"Pos"
@__str$76b = private global [4 x i8] c"Walk"
@__str$76c = private global [3 x i8] c"Pos"
@__str$76d = private global [8 x i8] c"Camera_t"
@__str$76e = private global [3 x i8] c"Pos"
@__str$76f = private global [3 x i8] c"Rot"
@__str$770 = private global [4 x i8] c"Zoom"
@__str$771 = private global [4 x i8] c"Near"
@__str$772 = private global [3 x i8] c"Far"
@__str$773 = private global [6 x i8] c"Data_t"
@__str$774 = private global [9 x i8] c"TimeScale"
@__str$775 = private global [9 x i8] c"DeltaTime"
@__str$776 = private global [17 x i8] c"UnscaledDeltaTime"
@__str$777 = private global [14 x i8] c"TimeSinceStart"
@__str$778 = private global [20 x i8] c"FrameCountSinceStart"
@__str$779 = private global [6 x i8] c"pfFreq"
@__str$77a = private global [5 x i8] c"pfOld"
@__str$77b = private global [9 x i8] c"Context_t"
@__str$77c = private global [8 x i8] c"Settings"
@__str$77d = private global [5 x i8] c"Input"
@__str$77e = private global [13 x i8] c"VirtualScreen"
@__str$77f = private global [5 x i8] c"Win32"
@__str$780 = private global [10 x i8] c"ImguiState"
@__str$781 = private global [4 x i8] c"Time"
@__str$782 = private global [11 x i8] c"RenderState"
@__str$783 = private global [13 x i8] c"AdaptiveVSync"
@__str$784 = private global [11 x i8] c"ScaleFactor"
@__str$785 = private global [14 x i8] c"GameDrawRegion"
@__str$786 = private global [10 x i8] c"WindowSize"
@__str$787 = private global [9 x i8] c"Setting_t"
@__str$788 = private global [10 x i8] c"ShowCursor"
@__str$789 = private global [13 x i8] c"ShowDebugMenu"
@__str$78a = private global [14 x i8] c"ProgramRunning"
@__str$78b = private global [7 x i8] c"Input_t"
@__str$78c = private global [13 x i8] c"AnyKeyPressed"
@__str$78d = private global [8 x i8] c"MousePos"
@__str$78e = private global [8 x i8] c"Bindings"
@__str$78f = private global [9 x i8] c"KeyStates"
@__str$790 = private global [13 x i8] c"_OldKeyStates"
@__str$791 = private global [6 x i8] c"XState"
@__str$792 = private global [10 x i8] c"_OldXState"
@__str$793 = private global [12 x i8] c"ButtonStates"
@__str$794 = private global [2 x i8] c"Up"
@__str$795 = private global [4 x i8] c"Held"
@__str$796 = private global [4 x i8] c"Down"
@__str$797 = private global [7 x i8] c"Neutral"
@__str$798 = private global [7 x i8] c"Binding"
@__str$799 = private global [2 x i8] c"ID"
@__str$79a = private global [3 x i8] c"Key"
@__str$79b = private global [4 x i8] c"XKey"
@__str$79c = private global [8 x i8] c"Key_Code"
@__str$79d = private global [7 x i8] c"LBUTTON"
@__str$79e = private global [7 x i8] c"RBUTTON"
@__str$79f = private global [6 x i8] c"CANCEL"
@__str$7a0 = private global [7 x i8] c"MBUTTON"
@__str$7a1 = private global [4 x i8] c"BACK"
@__str$7a2 = private global [3 x i8] c"TAB"
@__str$7a3 = private global [5 x i8] c"CLEAR"
@__str$7a4 = private global [6 x i8] c"RETURN"
@__str$7a5 = private global [5 x i8] c"SHIFT"
@__str$7a6 = private global [7 x i8] c"CONTROL"
@__str$7a7 = private global [4 x i8] c"MENU"
@__str$7a8 = private global [5 x i8] c"PAUSE"
@__str$7a9 = private global [7 x i8] c"CAPITAL"
@__str$7aa = private global [4 x i8] c"KANA"
@__str$7ab = private global [7 x i8] c"HANGEUL"
@__str$7ac = private global [6 x i8] c"HANGUL"
@__str$7ad = private global [5 x i8] c"JUNJA"
@__str$7ae = private global [5 x i8] c"FINAL"
@__str$7af = private global [5 x i8] c"HANJA"
@__str$7b0 = private global [5 x i8] c"KANJI"
@__str$7b1 = private global [6 x i8] c"ESCAPE"
@__str$7b2 = private global [7 x i8] c"CONVERT"
@__str$7b3 = private global [10 x i8] c"NONCONVERT"
@__str$7b4 = private global [6 x i8] c"ACCEPT"
@__str$7b5 = private global [10 x i8] c"MODECHANGE"
@__str$7b6 = private global [5 x i8] c"SPACE"
@__str$7b7 = private global [5 x i8] c"PRIOR"
@__str$7b8 = private global [4 x i8] c"NEXT"
@__str$7b9 = private global [3 x i8] c"END"
@__str$7ba = private global [4 x i8] c"HOME"
@__str$7bb = private global [4 x i8] c"LEFT"
@__str$7bc = private global [2 x i8] c"UP"
@__str$7bd = private global [5 x i8] c"RIGHT"
@__str$7be = private global [4 x i8] c"DOWN"
@__str$7bf = private global [6 x i8] c"SELECT"
@__str$7c0 = private global [5 x i8] c"PRINT"
@__str$7c1 = private global [7 x i8] c"EXECUTE"
@__str$7c2 = private global [8 x i8] c"SNAPSHOT"
@__str$7c3 = private global [6 x i8] c"INSERT"
@__str$7c4 = private global [6 x i8] c"DELETE"
@__str$7c5 = private global [4 x i8] c"HELP"
@__str$7c6 = private global [4 x i8] c"NUM0"
@__str$7c7 = private global [4 x i8] c"NUM1"
@__str$7c8 = private global [4 x i8] c"NUM2"
@__str$7c9 = private global [4 x i8] c"NUM3"
@__str$7ca = private global [4 x i8] c"NUM4"
@__str$7cb = private global [4 x i8] c"NUM5"
@__str$7cc = private global [4 x i8] c"NUM6"
@__str$7cd = private global [4 x i8] c"NUM7"
@__str$7ce = private global [4 x i8] c"NUM8"
@__str$7cf = private global [4 x i8] c"NUM9"
@__str$7d0 = private global [1 x i8] c"A"
@__str$7d1 = private global [1 x i8] c"B"
@__str$7d2 = private global [1 x i8] c"C"
@__str$7d3 = private global [1 x i8] c"D"
@__str$7d4 = private global [1 x i8] c"E"
@__str$7d5 = private global [1 x i8] c"F"
@__str$7d6 = private global [1 x i8] c"G"
@__str$7d7 = private global [1 x i8] c"H"
@__str$7d8 = private global [1 x i8] c"I"
@__str$7d9 = private global [1 x i8] c"J"
@__str$7da = private global [1 x i8] c"K"
@__str$7db = private global [1 x i8] c"L"
@__str$7dc = private global [1 x i8] c"M"
@__str$7dd = private global [1 x i8] c"N"
@__str$7de = private global [1 x i8] c"O"
@__str$7df = private global [1 x i8] c"P"
@__str$7e0 = private global [1 x i8] c"Q"
@__str$7e1 = private global [1 x i8] c"R"
@__str$7e2 = private global [1 x i8] c"S"
@__str$7e3 = private global [1 x i8] c"T"
@__str$7e4 = private global [1 x i8] c"U"
@__str$7e5 = private global [1 x i8] c"V"
@__str$7e6 = private global [1 x i8] c"W"
@__str$7e7 = private global [1 x i8] c"X"
@__str$7e8 = private global [1 x i8] c"Y"
@__str$7e9 = private global [1 x i8] c"Z"
@__str$7ea = private global [4 x i8] c"LWIN"
@__str$7eb = private global [4 x i8] c"RWIN"
@__str$7ec = private global [4 x i8] c"APPS"
@__str$7ed = private global [7 x i8] c"NUMPAD0"
@__str$7ee = private global [7 x i8] c"NUMPAD1"
@__str$7ef = private global [7 x i8] c"NUMPAD2"
@__str$7f0 = private global [7 x i8] c"NUMPAD3"
@__str$7f1 = private global [7 x i8] c"NUMPAD4"
@__str$7f2 = private global [7 x i8] c"NUMPAD5"
@__str$7f3 = private global [7 x i8] c"NUMPAD6"
@__str$7f4 = private global [7 x i8] c"NUMPAD7"
@__str$7f5 = private global [7 x i8] c"NUMPAD8"
@__str$7f6 = private global [7 x i8] c"NUMPAD9"
@__str$7f7 = private global [8 x i8] c"MULTIPLY"
@__str$7f8 = private global [3 x i8] c"ADD"
@__str$7f9 = private global [9 x i8] c"SEPARATOR"
@__str$7fa = private global [8 x i8] c"SUBTRACT"
@__str$7fb = private global [7 x i8] c"DECIMAL"
@__str$7fc = private global [6 x i8] c"DIVIDE"
@__str$7fd = private global [2 x i8] c"F1"
@__str$7fe = private global [2 x i8] c"F2"
@__str$7ff = private global [2 x i8] c"F3"
@__str$800 = private global [2 x i8] c"F4"
@__str$801 = private global [2 x i8] c"F5"
@__str$802 = private global [2 x i8] c"F6"
@__str$803 = private global [2 x i8] c"F7"
@__str$804 = private global [2 x i8] c"F8"
@__str$805 = private global [2 x i8] c"F9"
@__str$806 = private global [3 x i8] c"F10"
@__str$807 = private global [3 x i8] c"F11"
@__str$808 = private global [3 x i8] c"F12"
@__str$809 = private global [3 x i8] c"F13"
@__str$80a = private global [3 x i8] c"F14"
@__str$80b = private global [3 x i8] c"F15"
@__str$80c = private global [3 x i8] c"F16"
@__str$80d = private global [3 x i8] c"F17"
@__str$80e = private global [3 x i8] c"F18"
@__str$80f = private global [3 x i8] c"F19"
@__str$810 = private global [3 x i8] c"F20"
@__str$811 = private global [3 x i8] c"F21"
@__str$812 = private global [3 x i8] c"F22"
@__str$813 = private global [3 x i8] c"F23"
@__str$814 = private global [3 x i8] c"F24"
@__str$815 = private global [7 x i8] c"NUMLOCK"
@__str$816 = private global [6 x i8] c"SCROLL"
@__str$817 = private global [6 x i8] c"LSHIFT"
@__str$818 = private global [6 x i8] c"RSHIFT"
@__str$819 = private global [8 x i8] c"LCONTROL"
@__str$81a = private global [8 x i8] c"RCONTROL"
@__str$81b = private global [5 x i8] c"LMENU"
@__str$81c = private global [5 x i8] c"RMENU"
@__str$81d = private global [10 x i8] c"ProcESSKEY"
@__str$81e = private global [4 x i8] c"ATTN"
@__str$81f = private global [5 x i8] c"CRSEL"
@__str$820 = private global [5 x i8] c"EXSEL"
@__str$821 = private global [5 x i8] c"EREOF"
@__str$822 = private global [4 x i8] c"PLAY"
@__str$823 = private global [4 x i8] c"ZOOM"
@__str$824 = private global [6 x i8] c"NONAME"
@__str$825 = private global [3 x i8] c"PA1"
@__str$826 = private global [9 x i8] c"OEM_CLEAR"
@__str$827 = private global [7 x i8] c"Buttons"
@__str$828 = private global [6 x i8] c"DpadUp"
@__str$829 = private global [8 x i8] c"DpadDown"
@__str$82a = private global [8 x i8] c"DpadLeft"
@__str$82b = private global [9 x i8] c"DpadRight"
@__str$82c = private global [5 x i8] c"Start"
@__str$82d = private global [4 x i8] c"Back"
@__str$82e = private global [9 x i8] c"LeftThumb"
@__str$82f = private global [10 x i8] c"RightThumb"
@__str$830 = private global [12 x i8] c"LeftShoulder"
@__str$831 = private global [13 x i8] c"RightShoulder"
@__str$832 = private global [1 x i8] c"A"
@__str$833 = private global [1 x i8] c"B"
@__str$834 = private global [1 x i8] c"X"
@__str$835 = private global [1 x i8] c"Y"
@__str$836 = private global [7 x i8] c"Invalid"
@__str$837 = private global [6 x i8] c"hashes"
@__str$838 = private global [7 x i8] c"entries"
@__str$839 = private global [3 x i8] c"key"
@__str$83a = private global [4 x i8] c"next"
@__str$83b = private global [5 x i8] c"value"
@__str$83c = private global [9 x i8] c"__Map_Key"
@__str$83d = private global [4 x i8] c"hash"
@__str$83e = private global [3 x i8] c"str"
@__str$83f = private global [4 x i8] c"Vec2"
@__str$840 = private global [12 x i8] c"GamepadState"
@__str$841 = private global [7 x i8] c"Buttons"
@__str$842 = private global [11 x i8] c"LeftTrigger"
@__str$843 = private global [12 x i8] c"RightTrigger"
@__str$844 = private global [2 x i8] c"LX"
@__str$845 = private global [2 x i8] c"LY"
@__str$846 = private global [2 x i8] c"RX"
@__str$847 = private global [2 x i8] c"RY"
@__str$848 = private global [15 x i8] c"VirtualScreen_t"
@__str$849 = private global [9 x i8] c"Dimension"
@__str$84a = private global [11 x i8] c"AspectRatio"
@__str$84b = private global [7 x i8] c"State_t"
@__str$84c = private global [15 x i8] c"MouseWheelDelta"
@__str$84d = private global [11 x i8] c"MainProgram"
@__str$84e = private global [9 x i8] c"VBOHandle"
@__str$84f = private global [9 x i8] c"EBOHandle"
@__str$850 = private global [9 x i8] c"VAOHandle"
@__str$851 = private global [11 x i8] c"FontTexture"
@__str$852 = private global [7 x i8] c"Program"
@__str$853 = private global [2 x i8] c"ID"
@__str$854 = private global [6 x i8] c"Vertex"
@__str$855 = private global [8 x i8] c"Fragment"
@__str$856 = private global [8 x i8] c"Uniforms"
@__str$857 = private global [10 x i8] c"Attributes"
@__str$858 = private global [6 x i8] c"hashes"
@__str$859 = private global [7 x i8] c"entries"
@__str$85a = private global [3 x i8] c"key"
@__str$85b = private global [4 x i8] c"next"
@__str$85c = private global [5 x i8] c"value"
@__str$85d = private global [6 x i8] c"hashes"
@__str$85e = private global [7 x i8] c"entries"
@__str$85f = private global [3 x i8] c"key"
@__str$860 = private global [4 x i8] c"next"
@__str$861 = private global [5 x i8] c"value"
@__str$862 = private global [6 x i8] c"Shader"
@__str$863 = private global [3 x i8] c"VBO"
@__str$864 = private global [3 x i8] c"EBO"
@__str$865 = private global [3 x i8] c"VAO"
@__str$866 = private global [7 x i8] c"State_t"
@__str$867 = private global [13 x i8] c"BitmapProgram"
@__str$868 = private global [12 x i8] c"SolidProgram"
@__str$869 = private global [3 x i8] c"VAO"
@__str$86a = private global [3 x i8] c"VBO"
@__str$86b = private global [3 x i8] c"EBO"
@__str$86c = private global [10 x i8] c"DrawRegion"
@__str$86d = private global [1 x i8] c"X"
@__str$86e = private global [1 x i8] c"Y"
@__str$86f = private global [5 x i8] c"Width"
@__str$870 = private global [6 x i8] c"Height"
@__str$871 = private global [5 x i8] c"Asset"
@__str$872 = private global [8 x i8] c"FileInfo"
@__str$873 = private global [14 x i8] c"LoadedFromDisk"
@__str$874 = private global [7 x i8] c"Texture"
@__str$875 = private global [6 x i8] c"Shader"
@__str$876 = private global [5 x i8] c"Sound"
@__str$877 = private global [13 x i8] c"ShaderProgram"
@__str$878 = private global [6 x i8] c"Shader"
@__str$879 = private global [8 x i8] c"FileInfo"
@__str$87a = private global [14 x i8] c"LoadedFromDisk"
@__str$87b = private global [4 x i8] c"GLID"
@__str$87c = private global [4 x i8] c"Type"
@__str$87d = private global [6 x i8] c"Source"
@__str$87e = private global [4 x i8] c"Data"
@__str$87f = private global [11 x i8] c"ShaderTypes"
@__str$880 = private global [7 x i8] c"Compute"
@__str$881 = private global [6 x i8] c"Vertex"
@__str$882 = private global [11 x i8] c"TessControl"
@__str$883 = private global [14 x i8] c"TessEvaluation"
@__str$884 = private global [8 x i8] c"Geometry"
@__str$885 = private global [8 x i8] c"Fragment"
@__str$886 = private global [5 x i8] c"Sound"
@__str$887 = private global [8 x i8] c"FileInfo"
@__str$888 = private global [14 x i8] c"LoadedFromDisk"
@__str$889 = private global [13 x i8] c"ShaderProgram"
@__str$88a = private global [8 x i8] c"FileInfo"
@__str$88b = private global [14 x i8] c"LoadedFromDisk"
@__str$88c = private global [4 x i8] c"GLID"
@__str$88d = private global [6 x i8] c"Vertex"
@__str$88e = private global [8 x i8] c"Fragment"
@__str$88f = private global [8 x i8] c"Uniforms"
@__str$890 = private global [10 x i8] c"Attributes"
@__str$891 = private global [6 x i8] c"hashes"
@__str$892 = private global [7 x i8] c"entries"
@__str$893 = private global [3 x i8] c"key"
@__str$894 = private global [4 x i8] c"next"
@__str$895 = private global [5 x i8] c"value"
@__str$896 = private global [6 x i8] c"hashes"
@__str$897 = private global [7 x i8] c"entries"
@__str$898 = private global [3 x i8] c"key"
@__str$899 = private global [4 x i8] c"next"
@__str$89a = private global [5 x i8] c"value"
@__str$89b = private global [4 x i8] c"Kind"
@__str$89c = private global [7 x i8] c"Texture"
@__str$89d = private global [6 x i8] c"Shader"
@__str$89e = private global [5 x i8] c"Sound"
@__str$89f = private global [6 x i8] c"Bitmap"
@__str$8a0 = private global [9 x i8] c"RenderPos"
@__str$8a1 = private global [8 x i8] c"Rotation"
@__str$8a2 = private global [5 x i8] c"Scale"
@__str$8a3 = private global [7 x i8] c"Texture"
@__str$8a4 = private global [13 x i8] c"XInputVersion"
@__str$8a5 = private global [9 x i8] c"NotLoaded"
@__str$8a6 = private global [10 x i8] c"Version1_4"
@__str$8a7 = private global [10 x i8] c"Version1_3"
@__str$8a8 = private global [12 x i8] c"Version9_1_0"
@__str$8a9 = private global [5 x i8] c"Error"
@__str$8aa = private global [4 x i8] c"User"
@__str$8ab = private global [7 x i8] c"Player1"
@__str$8ac = private global [7 x i8] c"Player2"
@__str$8ad = private global [7 x i8] c"Player3"
@__str$8ae = private global [7 x i8] c"Player4"
@__str$8af = private global [14 x i8] c"ControllerType"
@__str$8b0 = private global [7 x i8] c"Unknown"
@__str$8b1 = private global [7 x i8] c"Gamepad"
@__str$8b2 = private global [5 x i8] c"Wheel"
@__str$8b3 = private global [11 x i8] c"ArcadeStick"
@__str$8b4 = private global [11 x i8] c"FlightStick"
@__str$8b5 = private global [8 x i8] c"DancePad"
@__str$8b6 = private global [6 x i8] c"Guitar"
@__str$8b7 = private global [9 x i8] c"GuitarAlt"
@__str$8b8 = private global [4 x i8] c"Bass"
@__str$8b9 = private global [7 x i8] c"DrumKit"
@__str$8ba = private global [9 x i8] c"ArcadePad"
@__str$8bb = private global [17 x i8] c"0123456789abcdefx"
@__str$8bc = private global [17 x i8] c"0123456789ABCDEFX"
